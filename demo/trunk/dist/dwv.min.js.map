{"version":3,"file":"dwv.min.js","mappings":"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,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1skCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMrpCO,eAAgB,CACdT,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7ixmCQ,WAAY,CACVV,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpnCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,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","sources":["webpack://dwv/webpack/universalModuleDefinition","webpack://dwv/external umd \"JSZip\"","webpack://dwv/external umd \"Konva\"","webpack://dwv/external umd \"MagicWand\"","webpack://dwv/webpack/bootstrap","webpack://dwv/webpack/runtime/compat get default export","webpack://dwv/webpack/runtime/define property getters","webpack://dwv/webpack/runtime/hasOwnProperty shorthand","webpack://dwv/webpack/runtime/make namespace object","webpack://dwv/./src/dicom/dictionary.js","webpack://dwv/./src/dicom/dicomTag.js","webpack://dwv/./src/dicom/dataReader.js","webpack://dwv/./src/math/index.js","webpack://dwv/./src/image/size.js","webpack://dwv/./src/image/spacing.js","webpack://dwv/./src/utils/logger.js","webpack://dwv/./src/dicom/dicomElementsWrapper.js","webpack://dwv/./src/dicom/dicomParser.js","webpack://dwv/./src/dicom/dataWriter.js","webpack://dwv/./src/dicom/dicomWriter.js","webpack://dwv/./src/image/rescaleLut.js","webpack://dwv/./src/image/windowLut.js","webpack://dwv/./src/image/luts.js","webpack://dwv/./src/image/windowLevel.js","webpack://dwv/./src/utils/colour.js","webpack://dwv/./src/math/vector.js","webpack://dwv/./src/math/matrix.js","webpack://dwv/./src/math/point.js","webpack://dwv/./src/image/iterator.js","webpack://dwv/./src/utils/listen.js","webpack://dwv/./src/image/view.js","webpack://dwv/./src/image/viewMonochrome.js","webpack://dwv/./src/image/viewPaletteColor.js","webpack://dwv/./src/image/viewRgb.js","webpack://dwv/./src/image/viewYbrFull.js","webpack://dwv/./src/image/viewFactory.js","webpack://dwv/./src/image/rsi.js","webpack://dwv/./src/image/image.js","webpack://dwv/./src/image/geometry.js","webpack://dwv/./src/image/planeHelper.js","webpack://dwv/./src/gui/layerGroup.js","webpack://dwv/./src/image/maskSegmentHelper.js","webpack://dwv/./src/app/viewController.js","webpack://dwv/./src/gui/generic.js","webpack://dwv/./src/gui/viewLayer.js","webpack://dwv/./src/utils/string.js","webpack://dwv/./src/tools/drawCommands.js","webpack://dwv/./src/app/drawController.js","webpack://dwv/./src/gui/drawLayer.js","webpack://dwv/./src/gui/stage.js","webpack://dwv/./src/gui/style.js","webpack://dwv/./src/io/state.js","webpack://dwv/./src/tools/undo.js","webpack://dwv/./src/app/toolboxController.js","webpack://dwv/./src/utils/progress.js","webpack://dwv/./src/utils/uri.js","webpack://dwv/./src/io/urlsLoader.js","webpack://dwv/./src/image/imageFactory.js","webpack://dwv/./src/utils/array.js","webpack://dwv/./src/image/maskFactory.js","webpack://dwv/./src/utils/thread.js","webpack://dwv/./src/image/decoder.js","webpack://dwv/./src/image/dicomBufferToView.js","webpack://dwv/./src/io/dicomDataLoader.js","webpack://dwv/./src/io/jsonTextLoader.js","webpack://dwv/./src/io/memoryLoader.js","webpack://dwv/./src/io/multipartLoader.js","webpack://dwv/./src/image/domReader.js","webpack://dwv/./src/io/rawImageLoader.js","webpack://dwv/./src/io/rawVideoLoader.js","webpack://dwv/./src/io/zipLoader.js","webpack://dwv/./src/io/loaderList.js","webpack://dwv/./src/io/filesLoader.js","webpack://dwv/./src/app/loadController.js","webpack://dwv/./src/utils/operator.js","webpack://dwv/./src/app/dataController.js","webpack://dwv/./src/tools/scrollWheel.js","webpack://dwv/./src/tools/windowLevel.js","webpack://dwv/./src/tools/scroll.js","webpack://dwv/./src/utils/i18n.js","webpack://dwv/./src/math/line.js","webpack://dwv/./src/tools/zoomPan.js","webpack://dwv/./src/tools/opacity.js","webpack://dwv/./src/math/stats.js","webpack://dwv/./src/tools/editor.js","webpack://dwv/./src/tools/draw.js","webpack://dwv/./src/math/roi.js","webpack://dwv/./src/tools/roi.js","webpack://dwv/./src/tools/floodfill.js","webpack://dwv/./src/math/path.js","webpack://dwv/./src/math/bucketQueue.js","webpack://dwv/./src/math/scissors.js","webpack://dwv/./src/tools/livewire.js","webpack://dwv/./src/math/circle.js","webpack://dwv/./src/tools/circle.js","webpack://dwv/./src/math/ellipse.js","webpack://dwv/./src/tools/ellipse.js","webpack://dwv/./src/math/rectangle.js","webpack://dwv/./src/tools/rectangle.js","webpack://dwv/./src/image/filter.js","webpack://dwv/./src/tools/filter.js","webpack://dwv/./src/tools/index.js","webpack://dwv/./src/tools/arrow.js","webpack://dwv/./src/tools/freeHand.js","webpack://dwv/./src/tools/protractor.js","webpack://dwv/./src/tools/ruler.js","webpack://dwv/./src/app/application.js","webpack://dwv/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Konva\"), require(\"JSZip\"), require(\"MagicWand\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Konva\", \"JSZip\", \"MagicWand\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dwv\"] = factory(require(\"Konva\"), require(\"JSZip\"), require(\"MagicWand\"));\n\telse\n\t\troot[\"dwv\"] = factory(root[\"Konva\"], root[\"JSZip\"], root[\"MagicWand\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__196__, __WEBPACK_EXTERNAL_MODULE__290__, __WEBPACK_EXTERNAL_MODULE__680__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__290__;","module.exports = __WEBPACK_EXTERNAL_MODULE__196__;","module.exports = __WEBPACK_EXTERNAL_MODULE__680__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*eslint max-len:0*/\n\n/**\n * DICOM tag dictionary 2022a.\n * Generated using xml standard conversion from {@link https://github.com/ivmartel/dcmStdToJs} v0.1.0.\n * Conversion changes:\n * - (vr) 'See Note' -> 'NONE', 'OB or OW' -> 'ox', 'US or SS' -> 'xs'\n * - added 'GenericGroupLength' element to each group\n * Local changes:\n * - tag numbers with 'xx' were replaced with '00', 'xxx' with '001' and\n *  'xxxx' with '0004'\n */\nexport const dictionary = {\n  '0x0000': {\n    '0x0000': ['UL', '1', 'CommandGroupLength'],\n    '0x0001': ['UL', '1', 'CommandLengthToEnd'],\n    '0x0002': ['UI', '1', 'AffectedSOPClassUID'],\n    '0x0003': ['UI', '1', 'RequestedSOPClassUID'],\n    '0x0010': ['SH', '1', 'CommandRecognitionCode'],\n    '0x0100': ['US', '1', 'CommandField'],\n    '0x0110': ['US', '1', 'MessageID'],\n    '0x0120': ['US', '1', 'MessageIDBeingRespondedTo'],\n    '0x0200': ['AE', '1', 'Initiator'],\n    '0x0300': ['AE', '1', 'Receiver'],\n    '0x0400': ['AE', '1', 'FindLocation'],\n    '0x0600': ['AE', '1', 'MoveDestination'],\n    '0x0700': ['US', '1', 'Priority'],\n    '0x0800': ['US', '1', 'CommandDataSetType'],\n    '0x0850': ['US', '1', 'NumberOfMatches'],\n    '0x0860': ['US', '1', 'ResponseSequenceNumber'],\n    '0x0900': ['US', '1', 'Status'],\n    '0x0901': ['AT', '1-n', 'OffendingElement'],\n    '0x0902': ['LO', '1', 'ErrorComment'],\n    '0x0903': ['US', '1', 'ErrorID'],\n    '0x1000': ['UI', '1', 'AffectedSOPInstanceUID'],\n    '0x1001': ['UI', '1', 'RequestedSOPInstanceUID'],\n    '0x1002': ['US', '1', 'EventTypeID'],\n    '0x1005': ['AT', '1-n', 'AttributeIdentifierList'],\n    '0x1008': ['US', '1', 'ActionTypeID'],\n    '0x1020': ['US', '1', 'NumberOfRemainingSuboperations'],\n    '0x1021': ['US', '1', 'NumberOfCompletedSuboperations'],\n    '0x1022': ['US', '1', 'NumberOfFailedSuboperations'],\n    '0x1023': ['US', '1', 'NumberOfWarningSuboperations'],\n    '0x1030': ['AE', '1', 'MoveOriginatorApplicationEntityTitle'],\n    '0x1031': ['US', '1', 'MoveOriginatorMessageID'],\n    '0x4000': ['LT', '1', 'DialogReceiver'],\n    '0x4010': ['LT', '1', 'TerminalType'],\n    '0x5010': ['SH', '1', 'MessageSetID'],\n    '0x5020': ['SH', '1', 'EndMessageID'],\n    '0x5110': ['LT', '1', 'DisplayFormat'],\n    '0x5120': ['LT', '1', 'PagePositionID'],\n    '0x5130': ['CS', '1', 'TextFormatID'],\n    '0x5140': ['CS', '1', 'NormalReverse'],\n    '0x5150': ['CS', '1', 'AddGrayScale'],\n    '0x5160': ['CS', '1', 'Borders'],\n    '0x5170': ['IS', '1', 'Copies'],\n    '0x5180': ['CS', '1', 'CommandMagnificationType'],\n    '0x5190': ['CS', '1', 'Erase'],\n    '0x51A0': ['CS', '1', 'Print'],\n    '0x51B0': ['US', '1-n', 'Overlays']\n  },\n  '0x0002': {\n    '0x0000': ['UL', '1', 'FileMetaInformationGroupLength'],\n    '0x0001': ['OB', '1', 'FileMetaInformationVersion'],\n    '0x0002': ['UI', '1', 'MediaStorageSOPClassUID'],\n    '0x0003': ['UI', '1', 'MediaStorageSOPInstanceUID'],\n    '0x0010': ['UI', '1', 'TransferSyntaxUID'],\n    '0x0012': ['UI', '1', 'ImplementationClassUID'],\n    '0x0013': ['SH', '1', 'ImplementationVersionName'],\n    '0x0016': ['AE', '1', 'SourceApplicationEntityTitle'],\n    '0x0017': ['AE', '1', 'SendingApplicationEntityTitle'],\n    '0x0018': ['AE', '1', 'ReceivingApplicationEntityTitle'],\n    '0x0026': ['UR', '1', 'SourcePresentationAddress'],\n    '0x0027': ['UR', '1', 'SendingPresentationAddress'],\n    '0x0028': ['UR', '1', 'ReceivingPresentationAddress'],\n    '0x0031': ['OB', '1', 'RTVMetaInformationVersion'],\n    '0x0032': ['UI', '1', 'RTVCommunicationSOPClassUID'],\n    '0x0033': ['UI', '1', 'RTVCommunicationSOPInstanceUID'],\n    '0x0035': ['OB', '1', 'RTVSourceIdentifier'],\n    '0x0036': ['OB', '1', 'RTVFlowIdentifier'],\n    '0x0037': ['UL', '1', 'RTVFlowRTPSamplingRate'],\n    '0x0038': ['FD', '1', 'RTVFlowActualFrameDuration'],\n    '0x0100': ['UI', '1', 'PrivateInformationCreatorUID'],\n    '0x0102': ['OB', '1', 'PrivateInformation']\n  },\n  '0x0004': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x1130': ['CS', '1', 'FileSetID'],\n    '0x1141': ['CS', '1-8', 'FileSetDescriptorFileID'],\n    '0x1142': ['CS', '1', 'SpecificCharacterSetOfFileSetDescriptorFile'],\n    '0x1200': ['UL', '1', 'OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity'],\n    '0x1202': ['UL', '1', 'OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity'],\n    '0x1212': ['US', '1', 'FileSetConsistencyFlag'],\n    '0x1220': ['SQ', '1', 'DirectoryRecordSequence'],\n    '0x1400': ['UL', '1', 'OffsetOfTheNextDirectoryRecord'],\n    '0x1410': ['US', '1', 'RecordInUseFlag'],\n    '0x1420': ['UL', '1', 'OffsetOfReferencedLowerLevelDirectoryEntity'],\n    '0x1430': ['CS', '1', 'DirectoryRecordType'],\n    '0x1432': ['UI', '1', 'PrivateRecordUID'],\n    '0x1500': ['CS', '1-8', 'ReferencedFileID'],\n    '0x1504': ['UL', '1', 'MRDRDirectoryRecordOffset'],\n    '0x1510': ['UI', '1', 'ReferencedSOPClassUIDInFile'],\n    '0x1511': ['UI', '1', 'ReferencedSOPInstanceUIDInFile'],\n    '0x1512': ['UI', '1', 'ReferencedTransferSyntaxUIDInFile'],\n    '0x151A': ['UI', '1-n', 'ReferencedRelatedGeneralSOPClassUIDInFile'],\n    '0x1600': ['UL', '1', 'NumberOfReferences']\n  },\n  '0x0008': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['UL', '1', 'LengthToEnd'],\n    '0x0005': ['CS', '1-n', 'SpecificCharacterSet'],\n    '0x0006': ['SQ', '1', 'LanguageCodeSequence'],\n    '0x0008': ['CS', '2-n', 'ImageType'],\n    '0x0010': ['SH', '1', 'RecognitionCode'],\n    '0x0012': ['DA', '1', 'InstanceCreationDate'],\n    '0x0013': ['TM', '1', 'InstanceCreationTime'],\n    '0x0014': ['UI', '1', 'InstanceCreatorUID'],\n    '0x0015': ['DT', '1', 'InstanceCoercionDateTime'],\n    '0x0016': ['UI', '1', 'SOPClassUID'],\n    '0x0018': ['UI', '1', 'SOPInstanceUID'],\n    '0x001A': ['UI', '1-n', 'RelatedGeneralSOPClassUID'],\n    '0x001B': ['UI', '1', 'OriginalSpecializedSOPClassUID'],\n    '0x0020': ['DA', '1', 'StudyDate'],\n    '0x0021': ['DA', '1', 'SeriesDate'],\n    '0x0022': ['DA', '1', 'AcquisitionDate'],\n    '0x0023': ['DA', '1', 'ContentDate'],\n    '0x0024': ['DA', '1', 'OverlayDate'],\n    '0x0025': ['DA', '1', 'CurveDate'],\n    '0x002A': ['DT', '1', 'AcquisitionDateTime'],\n    '0x0030': ['TM', '1', 'StudyTime'],\n    '0x0031': ['TM', '1', 'SeriesTime'],\n    '0x0032': ['TM', '1', 'AcquisitionTime'],\n    '0x0033': ['TM', '1', 'ContentTime'],\n    '0x0034': ['TM', '1', 'OverlayTime'],\n    '0x0035': ['TM', '1', 'CurveTime'],\n    '0x0040': ['US', '1', 'DataSetType'],\n    '0x0041': ['LO', '1', 'DataSetSubtype'],\n    '0x0042': ['CS', '1', 'NuclearMedicineSeriesType'],\n    '0x0050': ['SH', '1', 'AccessionNumber'],\n    '0x0051': ['SQ', '1', 'IssuerOfAccessionNumberSequence'],\n    '0x0052': ['CS', '1', 'QueryRetrieveLevel'],\n    '0x0053': ['CS', '1', 'QueryRetrieveView'],\n    '0x0054': ['AE', '1-n', 'RetrieveAETitle'],\n    '0x0055': ['AE', '1', 'StationAETitle'],\n    '0x0056': ['CS', '1', 'InstanceAvailability'],\n    '0x0058': ['UI', '1-n', 'FailedSOPInstanceUIDList'],\n    '0x0060': ['CS', '1', 'Modality'],\n    '0x0061': ['CS', '1-n', 'ModalitiesInStudy'],\n    '0x0062': ['UI', '1-n', 'SOPClassesInStudy'],\n    '0x0063': ['SQ', '1', 'AnatomicRegionsInStudyCodeSequence'],\n    '0x0064': ['CS', '1', 'ConversionType'],\n    '0x0068': ['CS', '1', 'PresentationIntentType'],\n    '0x0070': ['LO', '1', 'Manufacturer'],\n    '0x0080': ['LO', '1', 'InstitutionName'],\n    '0x0081': ['ST', '1', 'InstitutionAddress'],\n    '0x0082': ['SQ', '1', 'InstitutionCodeSequence'],\n    '0x0090': ['PN', '1', 'ReferringPhysicianName'],\n    '0x0092': ['ST', '1', 'ReferringPhysicianAddress'],\n    '0x0094': ['SH', '1-n', 'ReferringPhysicianTelephoneNumbers'],\n    '0x0096': ['SQ', '1', 'ReferringPhysicianIdentificationSequence'],\n    '0x009C': ['PN', '1-n', 'ConsultingPhysicianName'],\n    '0x009D': ['SQ', '1', 'ConsultingPhysicianIdentificationSequence'],\n    '0x0100': ['SH', '1', 'CodeValue'],\n    '0x0101': ['LO', '1', 'ExtendedCodeValue'],\n    '0x0102': ['SH', '1', 'CodingSchemeDesignator'],\n    '0x0103': ['SH', '1', 'CodingSchemeVersion'],\n    '0x0104': ['LO', '1', 'CodeMeaning'],\n    '0x0105': ['CS', '1', 'MappingResource'],\n    '0x0106': ['DT', '1', 'ContextGroupVersion'],\n    '0x0107': ['DT', '1', 'ContextGroupLocalVersion'],\n    '0x0108': ['LT', '1', 'ExtendedCodeMeaning'],\n    '0x0109': ['SQ', '1', 'CodingSchemeResourcesSequence'],\n    '0x010A': ['CS', '1', 'CodingSchemeURLType'],\n    '0x010B': ['CS', '1', 'ContextGroupExtensionFlag'],\n    '0x010C': ['UI', '1', 'CodingSchemeUID'],\n    '0x010D': ['UI', '1', 'ContextGroupExtensionCreatorUID'],\n    '0x010E': ['UR', '1', 'CodingSchemeURL'],\n    '0x010F': ['CS', '1', 'ContextIdentifier'],\n    '0x0110': ['SQ', '1', 'CodingSchemeIdentificationSequence'],\n    '0x0112': ['LO', '1', 'CodingSchemeRegistry'],\n    '0x0114': ['ST', '1', 'CodingSchemeExternalID'],\n    '0x0115': ['ST', '1', 'CodingSchemeName'],\n    '0x0116': ['ST', '1', 'CodingSchemeResponsibleOrganization'],\n    '0x0117': ['UI', '1', 'ContextUID'],\n    '0x0118': ['UI', '1', 'MappingResourceUID'],\n    '0x0119': ['UC', '1', 'LongCodeValue'],\n    '0x0120': ['UR', '1', 'URNCodeValue'],\n    '0x0121': ['SQ', '1', 'EquivalentCodeSequence'],\n    '0x0122': ['LO', '1', 'MappingResourceName'],\n    '0x0123': ['SQ', '1', 'ContextGroupIdentificationSequence'],\n    '0x0124': ['SQ', '1', 'MappingResourceIdentificationSequence'],\n    '0x0201': ['SH', '1', 'TimezoneOffsetFromUTC'],\n    '0x0202': ['', '', ''],\n    '0x0220': ['SQ', '1', 'ResponsibleGroupCodeSequence'],\n    '0x0221': ['CS', '1', 'EquipmentModality'],\n    '0x0222': ['LO', '1', 'ManufacturerRelatedModelGroup'],\n    '0x0300': ['SQ', '1', 'PrivateDataElementCharacteristicsSequence'],\n    '0x0301': ['US', '1', 'PrivateGroupReference'],\n    '0x0302': ['LO', '1', 'PrivateCreatorReference'],\n    '0x0303': ['CS', '1', 'BlockIdentifyingInformationStatus'],\n    '0x0304': ['US', '1-n', 'NonidentifyingPrivateElements'],\n    '0x0305': ['SQ', '1', 'DeidentificationActionSequence'],\n    '0x0306': ['US', '1-n', 'IdentifyingPrivateElements'],\n    '0x0307': ['CS', '1', 'DeidentificationAction'],\n    '0x0308': ['US', '1', 'PrivateDataElement'],\n    '0x0309': ['UL', '1-3', 'PrivateDataElementValueMultiplicity'],\n    '0x030A': ['CS', '1', 'PrivateDataElementValueRepresentation'],\n    '0x030B': ['UL', '1-2', 'PrivateDataElementNumberOfItems'],\n    '0x030C': ['UC', '1', 'PrivateDataElementName'],\n    '0x030D': ['UC', '1', 'PrivateDataElementKeyword'],\n    '0x030E': ['UT', '1', 'PrivateDataElementDescription'],\n    '0x030F': ['UT', '1', 'PrivateDataElementEncoding'],\n    '0x0310': ['SQ', '1', 'PrivateDataElementDefinitionSequence'],\n    '0x1000': ['AE', '1', 'NetworkID'],\n    '0x1010': ['SH', '1', 'StationName'],\n    '0x1030': ['LO', '1', 'StudyDescription'],\n    '0x1032': ['SQ', '1', 'ProcedureCodeSequence'],\n    '0x103E': ['LO', '1', 'SeriesDescription'],\n    '0x103F': ['SQ', '1', 'SeriesDescriptionCodeSequence'],\n    '0x1040': ['LO', '1', 'InstitutionalDepartmentName'],\n    '0x1041': ['SQ', '1', 'InstitutionalDepartmentTypeCodeSequence'],\n    '0x1048': ['PN', '1-n', 'PhysiciansOfRecord'],\n    '0x1049': ['SQ', '1', 'PhysiciansOfRecordIdentificationSequence'],\n    '0x1050': ['PN', '1-n', 'PerformingPhysicianName'],\n    '0x1052': ['SQ', '1', 'PerformingPhysicianIdentificationSequence'],\n    '0x1060': ['PN', '1-n', 'NameOfPhysiciansReadingStudy'],\n    '0x1062': ['SQ', '1', 'PhysiciansReadingStudyIdentificationSequence'],\n    '0x1070': ['PN', '1-n', 'OperatorsName'],\n    '0x1072': ['SQ', '1', 'OperatorIdentificationSequence'],\n    '0x1080': ['LO', '1-n', 'AdmittingDiagnosesDescription'],\n    '0x1084': ['SQ', '1', 'AdmittingDiagnosesCodeSequence'],\n    '0x1090': ['LO', '1', 'ManufacturerModelName'],\n    '0x1100': ['SQ', '1', 'ReferencedResultsSequence'],\n    '0x1110': ['SQ', '1', 'ReferencedStudySequence'],\n    '0x1111': ['SQ', '1', 'ReferencedPerformedProcedureStepSequence'],\n    '0x1115': ['SQ', '1', 'ReferencedSeriesSequence'],\n    '0x1120': ['SQ', '1', 'ReferencedPatientSequence'],\n    '0x1125': ['SQ', '1', 'ReferencedVisitSequence'],\n    '0x1130': ['SQ', '1', 'ReferencedOverlaySequence'],\n    '0x1134': ['SQ', '1', 'ReferencedStereometricInstanceSequence'],\n    '0x113A': ['SQ', '1', 'ReferencedWaveformSequence'],\n    '0x1140': ['SQ', '1', 'ReferencedImageSequence'],\n    '0x1145': ['SQ', '1', 'ReferencedCurveSequence'],\n    '0x114A': ['SQ', '1', 'ReferencedInstanceSequence'],\n    '0x114B': ['SQ', '1', 'ReferencedRealWorldValueMappingInstanceSequence'],\n    '0x1150': ['UI', '1', 'ReferencedSOPClassUID'],\n    '0x1155': ['UI', '1', 'ReferencedSOPInstanceUID'],\n    '0x1156': ['SQ', '1', 'DefinitionSourceSequence'],\n    '0x115A': ['UI', '1-n', 'SOPClassesSupported'],\n    '0x1160': ['IS', '1-n', 'ReferencedFrameNumber'],\n    '0x1161': ['UL', '1-n', 'SimpleFrameList'],\n    '0x1162': ['UL', '3-3n', 'CalculatedFrameList'],\n    '0x1163': ['FD', '2', 'TimeRange'],\n    '0x1164': ['SQ', '1', 'FrameExtractionSequence'],\n    '0x1167': ['UI', '1', 'MultiFrameSourceSOPInstanceUID'],\n    '0x1190': ['UR', '1', 'RetrieveURL'],\n    '0x1195': ['UI', '1', 'TransactionUID'],\n    '0x1196': ['US', '1', 'WarningReason'],\n    '0x1197': ['US', '1', 'FailureReason'],\n    '0x1198': ['SQ', '1', 'FailedSOPSequence'],\n    '0x1199': ['SQ', '1', 'ReferencedSOPSequence'],\n    '0x119A': ['SQ', '1', 'OtherFailuresSequence'],\n    '0x1200': ['SQ', '1', 'StudiesContainingOtherReferencedInstancesSequence'],\n    '0x1250': ['SQ', '1', 'RelatedSeriesSequence'],\n    '0x2110': ['CS', '1', 'LossyImageCompressionRetired'],\n    '0x2111': ['ST', '1', 'DerivationDescription'],\n    '0x2112': ['SQ', '1', 'SourceImageSequence'],\n    '0x2120': ['SH', '1', 'StageName'],\n    '0x2122': ['IS', '1', 'StageNumber'],\n    '0x2124': ['IS', '1', 'NumberOfStages'],\n    '0x2127': ['SH', '1', 'ViewName'],\n    '0x2128': ['IS', '1', 'ViewNumber'],\n    '0x2129': ['IS', '1', 'NumberOfEventTimers'],\n    '0x212A': ['IS', '1', 'NumberOfViewsInStage'],\n    '0x2130': ['DS', '1-n', 'EventElapsedTimes'],\n    '0x2132': ['LO', '1-n', 'EventTimerNames'],\n    '0x2133': ['SQ', '1', 'EventTimerSequence'],\n    '0x2134': ['FD', '1', 'EventTimeOffset'],\n    '0x2135': ['SQ', '1', 'EventCodeSequence'],\n    '0x2142': ['IS', '1', 'StartTrim'],\n    '0x2143': ['IS', '1', 'StopTrim'],\n    '0x2144': ['IS', '1', 'RecommendedDisplayFrameRate'],\n    '0x2200': ['CS', '1', 'TransducerPosition'],\n    '0x2204': ['CS', '1', 'TransducerOrientation'],\n    '0x2208': ['CS', '1', 'AnatomicStructure'],\n    '0x2218': ['SQ', '1', 'AnatomicRegionSequence'],\n    '0x2220': ['SQ', '1', 'AnatomicRegionModifierSequence'],\n    '0x2228': ['SQ', '1', 'PrimaryAnatomicStructureSequence'],\n    '0x2229': ['SQ', '1', 'AnatomicStructureSpaceOrRegionSequence'],\n    '0x2230': ['SQ', '1', 'PrimaryAnatomicStructureModifierSequence'],\n    '0x2240': ['SQ', '1', 'TransducerPositionSequence'],\n    '0x2242': ['SQ', '1', 'TransducerPositionModifierSequence'],\n    '0x2244': ['SQ', '1', 'TransducerOrientationSequence'],\n    '0x2246': ['SQ', '1', 'TransducerOrientationModifierSequence'],\n    '0x2251': ['SQ', '1', 'AnatomicStructureSpaceOrRegionCodeSequenceTrial'],\n    '0x2253': ['SQ', '1', 'AnatomicPortalOfEntranceCodeSequenceTrial'],\n    '0x2255': ['SQ', '1', 'AnatomicApproachDirectionCodeSequenceTrial'],\n    '0x2256': ['ST', '1', 'AnatomicPerspectiveDescriptionTrial'],\n    '0x2257': ['SQ', '1', 'AnatomicPerspectiveCodeSequenceTrial'],\n    '0x2258': ['ST', '1', 'AnatomicLocationOfExaminingInstrumentDescriptionTrial'],\n    '0x2259': ['SQ', '1', 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial'],\n    '0x225A': ['SQ', '1', 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial'],\n    '0x225C': ['SQ', '1', 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial'],\n    '0x3001': ['SQ', '1', 'AlternateRepresentationSequence'],\n    '0x3002': ['UI', '1-n', 'AvailableTransferSyntaxUID'],\n    '0x3010': ['UI', '1-n', 'IrradiationEventUID'],\n    '0x3011': ['SQ', '1', 'SourceIrradiationEventSequence'],\n    '0x3012': ['UI', '1', 'RadiopharmaceuticalAdministrationEventUID'],\n    '0x4000': ['LT', '1', 'IdentifyingComments'],\n    '0x9007': ['CS', '4', 'FrameType'],\n    '0x9092': ['SQ', '1', 'ReferencedImageEvidenceSequence'],\n    '0x9121': ['SQ', '1', 'ReferencedRawDataSequence'],\n    '0x9123': ['UI', '1', 'CreatorVersionUID'],\n    '0x9124': ['SQ', '1', 'DerivationImageSequence'],\n    '0x9154': ['SQ', '1', 'SourceImageEvidenceSequence'],\n    '0x9205': ['CS', '1', 'PixelPresentation'],\n    '0x9206': ['CS', '1', 'VolumetricProperties'],\n    '0x9207': ['CS', '1', 'VolumeBasedCalculationTechnique'],\n    '0x9208': ['CS', '1', 'ComplexImageComponent'],\n    '0x9209': ['CS', '1', 'AcquisitionContrast'],\n    '0x9215': ['SQ', '1', 'DerivationCodeSequence'],\n    '0x9237': ['SQ', '1', 'ReferencedPresentationStateSequence'],\n    '0x9410': ['SQ', '1', 'ReferencedOtherPlaneSequence'],\n    '0x9458': ['SQ', '1', 'FrameDisplaySequence'],\n    '0x9459': ['FL', '1', 'RecommendedDisplayFrameRateInFloat'],\n    '0x9460': ['CS', '1', 'SkipFrameRangeFlag']\n  },\n  '0x0010': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['PN', '1', 'PatientName'],\n    '0x0020': ['LO', '1', 'PatientID'],\n    '0x0021': ['LO', '1', 'IssuerOfPatientID'],\n    '0x0022': ['CS', '1', 'TypeOfPatientID'],\n    '0x0024': ['SQ', '1', 'IssuerOfPatientIDQualifiersSequence'],\n    '0x0026': ['SQ', '1', 'SourcePatientGroupIdentificationSequence'],\n    '0x0027': ['SQ', '1', 'GroupOfPatientsIdentificationSequence'],\n    '0x0028': ['US', '3', 'SubjectRelativePositionInImage'],\n    '0x0030': ['DA', '1', 'PatientBirthDate'],\n    '0x0032': ['TM', '1', 'PatientBirthTime'],\n    '0x0033': ['LO', '1', 'PatientBirthDateInAlternativeCalendar'],\n    '0x0034': ['LO', '1', 'PatientDeathDateInAlternativeCalendar'],\n    '0x0035': ['CS', '1', 'PatientAlternativeCalendar'],\n    '0x0040': ['CS', '1', 'PatientSex'],\n    '0x0050': ['SQ', '1', 'PatientInsurancePlanCodeSequence'],\n    '0x0101': ['SQ', '1', 'PatientPrimaryLanguageCodeSequence'],\n    '0x0102': ['SQ', '1', 'PatientPrimaryLanguageModifierCodeSequence'],\n    '0x0200': ['CS', '1', 'QualityControlSubject'],\n    '0x0201': ['SQ', '1', 'QualityControlSubjectTypeCodeSequence'],\n    '0x0212': ['UC', '1', 'StrainDescription'],\n    '0x0213': ['LO', '1', 'StrainNomenclature'],\n    '0x0214': ['LO', '1', 'StrainStockNumber'],\n    '0x0215': ['SQ', '1', 'StrainSourceRegistryCodeSequence'],\n    '0x0216': ['SQ', '1', 'StrainStockSequence'],\n    '0x0217': ['LO', '1', 'StrainSource'],\n    '0x0218': ['UT', '1', 'StrainAdditionalInformation'],\n    '0x0219': ['SQ', '1', 'StrainCodeSequence'],\n    '0x0221': ['SQ', '1', 'GeneticModificationsSequence'],\n    '0x0222': ['UC', '1', 'GeneticModificationsDescription'],\n    '0x0223': ['LO', '1', 'GeneticModificationsNomenclature'],\n    '0x0229': ['SQ', '1', 'GeneticModificationsCodeSequence'],\n    '0x1000': ['LO', '1-n', 'OtherPatientIDs'],\n    '0x1001': ['PN', '1-n', 'OtherPatientNames'],\n    '0x1002': ['SQ', '1', 'OtherPatientIDsSequence'],\n    '0x1005': ['PN', '1', 'PatientBirthName'],\n    '0x1010': ['AS', '1', 'PatientAge'],\n    '0x1020': ['DS', '1', 'PatientSize'],\n    '0x1021': ['SQ', '1', 'PatientSizeCodeSequence'],\n    '0x1022': ['DS', '1', 'PatientBodyMassIndex'],\n    '0x1023': ['DS', '1', 'MeasuredAPDimension'],\n    '0x1024': ['DS', '1', 'MeasuredLateralDimension'],\n    '0x1030': ['DS', '1', 'PatientWeight'],\n    '0x1040': ['LO', '1', 'PatientAddress'],\n    '0x1050': ['LO', '1-n', 'InsurancePlanIdentification'],\n    '0x1060': ['PN', '1', 'PatientMotherBirthName'],\n    '0x1080': ['LO', '1', 'MilitaryRank'],\n    '0x1081': ['LO', '1', 'BranchOfService'],\n    '0x1090': ['LO', '1', 'MedicalRecordLocator'],\n    '0x1100': ['SQ', '1', 'ReferencedPatientPhotoSequence'],\n    '0x2000': ['LO', '1-n', 'MedicalAlerts'],\n    '0x2110': ['LO', '1-n', 'Allergies'],\n    '0x2150': ['LO', '1', 'CountryOfResidence'],\n    '0x2152': ['LO', '1', 'RegionOfResidence'],\n    '0x2154': ['SH', '1-n', 'PatientTelephoneNumbers'],\n    '0x2155': ['LT', '1', 'PatientTelecomInformation'],\n    '0x2160': ['SH', '1', 'EthnicGroup'],\n    '0x2180': ['SH', '1', 'Occupation'],\n    '0x21A0': ['CS', '1', 'SmokingStatus'],\n    '0x21B0': ['LT', '1', 'AdditionalPatientHistory'],\n    '0x21C0': ['US', '1', 'PregnancyStatus'],\n    '0x21D0': ['DA', '1', 'LastMenstrualDate'],\n    '0x21F0': ['LO', '1', 'PatientReligiousPreference'],\n    '0x2201': ['LO', '1', 'PatientSpeciesDescription'],\n    '0x2202': ['SQ', '1', 'PatientSpeciesCodeSequence'],\n    '0x2203': ['CS', '1', 'PatientSexNeutered'],\n    '0x2210': ['CS', '1', 'AnatomicalOrientationType'],\n    '0x2292': ['LO', '1', 'PatientBreedDescription'],\n    '0x2293': ['SQ', '1', 'PatientBreedCodeSequence'],\n    '0x2294': ['SQ', '1', 'BreedRegistrationSequence'],\n    '0x2295': ['LO', '1', 'BreedRegistrationNumber'],\n    '0x2296': ['SQ', '1', 'BreedRegistryCodeSequence'],\n    '0x2297': ['PN', '1', 'ResponsiblePerson'],\n    '0x2298': ['CS', '1', 'ResponsiblePersonRole'],\n    '0x2299': ['LO', '1', 'ResponsibleOrganization'],\n    '0x4000': ['LT', '1', 'PatientComments'],\n    '0x9431': ['FL', '1', 'ExaminedBodyThickness']\n  },\n  '0x0012': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['LO', '1', 'ClinicalTrialSponsorName'],\n    '0x0020': ['LO', '1', 'ClinicalTrialProtocolID'],\n    '0x0021': ['LO', '1', 'ClinicalTrialProtocolName'],\n    '0x0030': ['LO', '1', 'ClinicalTrialSiteID'],\n    '0x0031': ['LO', '1', 'ClinicalTrialSiteName'],\n    '0x0040': ['LO', '1', 'ClinicalTrialSubjectID'],\n    '0x0042': ['LO', '1', 'ClinicalTrialSubjectReadingID'],\n    '0x0050': ['LO', '1', 'ClinicalTrialTimePointID'],\n    '0x0051': ['ST', '1', 'ClinicalTrialTimePointDescription'],\n    '0x0052': ['FD', '1', 'LongitudinalTemporalOffsetFromEvent'],\n    '0x0053': ['CS', '1', 'LongitudinalTemporalEventType'],\n    '0x0060': ['LO', '1', 'ClinicalTrialCoordinatingCenterName'],\n    '0x0062': ['CS', '1', 'PatientIdentityRemoved'],\n    '0x0063': ['LO', '1-n', 'DeidentificationMethod'],\n    '0x0064': ['SQ', '1', 'DeidentificationMethodCodeSequence'],\n    '0x0071': ['LO', '1', 'ClinicalTrialSeriesID'],\n    '0x0072': ['LO', '1', 'ClinicalTrialSeriesDescription'],\n    '0x0081': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeName'],\n    '0x0082': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber'],\n    '0x0083': ['SQ', '1', 'ConsentForClinicalTrialUseSequence'],\n    '0x0084': ['CS', '1', 'DistributionType'],\n    '0x0085': ['CS', '1', 'ConsentForDistributionFlag'],\n    '0x0086': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessStartDate'],\n    '0x0087': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessEndDate']\n  },\n  '0x0014': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0023': ['ST', '1', 'CADFileFormat'],\n    '0x0024': ['ST', '1', 'ComponentReferenceSystem'],\n    '0x0025': ['ST', '1', 'ComponentManufacturingProcedure'],\n    '0x0028': ['ST', '1', 'ComponentManufacturer'],\n    '0x0030': ['DS', '1-n', 'MaterialThickness'],\n    '0x0032': ['DS', '1-n', 'MaterialPipeDiameter'],\n    '0x0034': ['DS', '1-n', 'MaterialIsolationDiameter'],\n    '0x0042': ['ST', '1', 'MaterialGrade'],\n    '0x0044': ['ST', '1', 'MaterialPropertiesDescription'],\n    '0x0045': ['ST', '1', 'MaterialPropertiesFileFormatRetired'],\n    '0x0046': ['LT', '1', 'MaterialNotes'],\n    '0x0050': ['CS', '1', 'ComponentShape'],\n    '0x0052': ['CS', '1', 'CurvatureType'],\n    '0x0054': ['DS', '1', 'OuterDiameter'],\n    '0x0056': ['DS', '1', 'InnerDiameter'],\n    '0x0100': ['LO', '1-n', 'ComponentWelderIDs'],\n    '0x0101': ['CS', '1', 'SecondaryApprovalStatus'],\n    '0x0102': ['DA', '1', 'SecondaryReviewDate'],\n    '0x0103': ['TM', '1', 'SecondaryReviewTime'],\n    '0x0104': ['PN', '1', 'SecondaryReviewerName'],\n    '0x0105': ['ST', '1', 'RepairID'],\n    '0x0106': ['SQ', '1', 'MultipleComponentApprovalSequence'],\n    '0x0107': ['CS', '1-n', 'OtherApprovalStatus'],\n    '0x0108': ['CS', '1-n', 'OtherSecondaryApprovalStatus'],\n    '0x1010': ['ST', '1', 'ActualEnvironmentalConditions'],\n    '0x1020': ['DA', '1', 'ExpiryDate'],\n    '0x1040': ['ST', '1', 'EnvironmentalConditions'],\n    '0x2002': ['SQ', '1', 'EvaluatorSequence'],\n    '0x2004': ['IS', '1', 'EvaluatorNumber'],\n    '0x2006': ['PN', '1', 'EvaluatorName'],\n    '0x2008': ['IS', '1', 'EvaluationAttempt'],\n    '0x2012': ['SQ', '1', 'IndicationSequence'],\n    '0x2014': ['IS', '1', 'IndicationNumber'],\n    '0x2016': ['SH', '1', 'IndicationLabel'],\n    '0x2018': ['ST', '1', 'IndicationDescription'],\n    '0x201A': ['CS', '1-n', 'IndicationType'],\n    '0x201C': ['CS', '1', 'IndicationDisposition'],\n    '0x201E': ['SQ', '1', 'IndicationROISequence'],\n    '0x2030': ['SQ', '1', 'IndicationPhysicalPropertySequence'],\n    '0x2032': ['SH', '1', 'PropertyLabel'],\n    '0x2202': ['IS', '1', 'CoordinateSystemNumberOfAxes'],\n    '0x2204': ['SQ', '1', 'CoordinateSystemAxesSequence'],\n    '0x2206': ['ST', '1', 'CoordinateSystemAxisDescription'],\n    '0x2208': ['CS', '1', 'CoordinateSystemDataSetMapping'],\n    '0x220A': ['IS', '1', 'CoordinateSystemAxisNumber'],\n    '0x220C': ['CS', '1', 'CoordinateSystemAxisType'],\n    '0x220E': ['CS', '1', 'CoordinateSystemAxisUnits'],\n    '0x2210': ['OB', '1', 'CoordinateSystemAxisValues'],\n    '0x2220': ['SQ', '1', 'CoordinateSystemTransformSequence'],\n    '0x2222': ['ST', '1', 'TransformDescription'],\n    '0x2224': ['IS', '1', 'TransformNumberOfAxes'],\n    '0x2226': ['IS', '1-n', 'TransformOrderOfAxes'],\n    '0x2228': ['CS', '1', 'TransformedAxisUnits'],\n    '0x222A': ['DS', '1-n', 'CoordinateSystemTransformRotationAndScaleMatrix'],\n    '0x222C': ['DS', '1-n', 'CoordinateSystemTransformTranslationMatrix'],\n    '0x3011': ['DS', '1', 'InternalDetectorFrameTime'],\n    '0x3012': ['DS', '1', 'NumberOfFramesIntegrated'],\n    '0x3020': ['SQ', '1', 'DetectorTemperatureSequence'],\n    '0x3022': ['ST', '1', 'SensorName'],\n    '0x3024': ['DS', '1', 'HorizontalOffsetOfSensor'],\n    '0x3026': ['DS', '1', 'VerticalOffsetOfSensor'],\n    '0x3028': ['DS', '1', 'SensorTemperature'],\n    '0x3040': ['SQ', '1', 'DarkCurrentSequence'],\n    '0x3050': ['ox', '1', 'DarkCurrentCounts'],\n    '0x3060': ['SQ', '1', 'GainCorrectionReferenceSequence'],\n    '0x3070': ['ox', '1', 'AirCounts'],\n    '0x3071': ['DS', '1', 'KVUsedInGainCalibration'],\n    '0x3072': ['DS', '1', 'MAUsedInGainCalibration'],\n    '0x3073': ['DS', '1', 'NumberOfFramesUsedForIntegration'],\n    '0x3074': ['LO', '1', 'FilterMaterialUsedInGainCalibration'],\n    '0x3075': ['DS', '1', 'FilterThicknessUsedInGainCalibration'],\n    '0x3076': ['DA', '1', 'DateOfGainCalibration'],\n    '0x3077': ['TM', '1', 'TimeOfGainCalibration'],\n    '0x3080': ['OB', '1', 'BadPixelImage'],\n    '0x3099': ['LT', '1', 'CalibrationNotes'],\n    '0x3100': ['LT', '1', 'LinearityCorrectionTechnique'],\n    '0x3101': ['LT', '1', 'BeamHardeningCorrectionTechnique'],\n    '0x4002': ['SQ', '1', 'PulserEquipmentSequence'],\n    '0x4004': ['CS', '1', 'PulserType'],\n    '0x4006': ['LT', '1', 'PulserNotes'],\n    '0x4008': ['SQ', '1', 'ReceiverEquipmentSequence'],\n    '0x400A': ['CS', '1', 'AmplifierType'],\n    '0x400C': ['LT', '1', 'ReceiverNotes'],\n    '0x400E': ['SQ', '1', 'PreAmplifierEquipmentSequence'],\n    '0x400F': ['LT', '1', 'PreAmplifierNotes'],\n    '0x4010': ['SQ', '1', 'TransmitTransducerSequence'],\n    '0x4011': ['SQ', '1', 'ReceiveTransducerSequence'],\n    '0x4012': ['US', '1', 'NumberOfElements'],\n    '0x4013': ['CS', '1', 'ElementShape'],\n    '0x4014': ['DS', '1', 'ElementDimensionA'],\n    '0x4015': ['DS', '1', 'ElementDimensionB'],\n    '0x4016': ['DS', '1', 'ElementPitchA'],\n    '0x4017': ['DS', '1', 'MeasuredBeamDimensionA'],\n    '0x4018': ['DS', '1', 'MeasuredBeamDimensionB'],\n    '0x4019': ['DS', '1', 'LocationOfMeasuredBeamDiameter'],\n    '0x401A': ['DS', '1', 'NominalFrequency'],\n    '0x401B': ['DS', '1', 'MeasuredCenterFrequency'],\n    '0x401C': ['DS', '1', 'MeasuredBandwidth'],\n    '0x401D': ['DS', '1', 'ElementPitchB'],\n    '0x4020': ['SQ', '1', 'PulserSettingsSequence'],\n    '0x4022': ['DS', '1', 'PulseWidth'],\n    '0x4024': ['DS', '1', 'ExcitationFrequency'],\n    '0x4026': ['CS', '1', 'ModulationType'],\n    '0x4028': ['DS', '1', 'Damping'],\n    '0x4030': ['SQ', '1', 'ReceiverSettingsSequence'],\n    '0x4031': ['DS', '1', 'AcquiredSoundpathLength'],\n    '0x4032': ['CS', '1', 'AcquisitionCompressionType'],\n    '0x4033': ['IS', '1', 'AcquisitionSampleSize'],\n    '0x4034': ['DS', '1', 'RectifierSmoothing'],\n    '0x4035': ['SQ', '1', 'DACSequence'],\n    '0x4036': ['CS', '1', 'DACType'],\n    '0x4038': ['DS', '1-n', 'DACGainPoints'],\n    '0x403A': ['DS', '1-n', 'DACTimePoints'],\n    '0x403C': ['DS', '1-n', 'DACAmplitude'],\n    '0x4040': ['SQ', '1', 'PreAmplifierSettingsSequence'],\n    '0x4050': ['SQ', '1', 'TransmitTransducerSettingsSequence'],\n    '0x4051': ['SQ', '1', 'ReceiveTransducerSettingsSequence'],\n    '0x4052': ['DS', '1', 'IncidentAngle'],\n    '0x4054': ['ST', '1', 'CouplingTechnique'],\n    '0x4056': ['ST', '1', 'CouplingMedium'],\n    '0x4057': ['DS', '1', 'CouplingVelocity'],\n    '0x4058': ['DS', '1', 'ProbeCenterLocationX'],\n    '0x4059': ['DS', '1', 'ProbeCenterLocationZ'],\n    '0x405A': ['DS', '1', 'SoundPathLength'],\n    '0x405C': ['ST', '1', 'DelayLawIdentifier'],\n    '0x4060': ['SQ', '1', 'GateSettingsSequence'],\n    '0x4062': ['DS', '1', 'GateThreshold'],\n    '0x4064': ['DS', '1', 'VelocityOfSound'],\n    '0x4070': ['SQ', '1', 'CalibrationSettingsSequence'],\n    '0x4072': ['ST', '1', 'CalibrationProcedure'],\n    '0x4074': ['SH', '1', 'ProcedureVersion'],\n    '0x4076': ['DA', '1', 'ProcedureCreationDate'],\n    '0x4078': ['DA', '1', 'ProcedureExpirationDate'],\n    '0x407A': ['DA', '1', 'ProcedureLastModifiedDate'],\n    '0x407C': ['TM', '1-n', 'CalibrationTime'],\n    '0x407E': ['DA', '1-n', 'CalibrationDate'],\n    '0x4080': ['SQ', '1', 'ProbeDriveEquipmentSequence'],\n    '0x4081': ['CS', '1', 'DriveType'],\n    '0x4082': ['LT', '1', 'ProbeDriveNotes'],\n    '0x4083': ['SQ', '1', 'DriveProbeSequence'],\n    '0x4084': ['DS', '1', 'ProbeInductance'],\n    '0x4085': ['DS', '1', 'ProbeResistance'],\n    '0x4086': ['SQ', '1', 'ReceiveProbeSequence'],\n    '0x4087': ['SQ', '1', 'ProbeDriveSettingsSequence'],\n    '0x4088': ['DS', '1', 'BridgeResistors'],\n    '0x4089': ['DS', '1', 'ProbeOrientationAngle'],\n    '0x408B': ['DS', '1', 'UserSelectedGainY'],\n    '0x408C': ['DS', '1', 'UserSelectedPhase'],\n    '0x408D': ['DS', '1', 'UserSelectedOffsetX'],\n    '0x408E': ['DS', '1', 'UserSelectedOffsetY'],\n    '0x4091': ['SQ', '1', 'ChannelSettingsSequence'],\n    '0x4092': ['DS', '1', 'ChannelThreshold'],\n    '0x409A': ['SQ', '1', 'ScannerSettingsSequence'],\n    '0x409B': ['ST', '1', 'ScanProcedure'],\n    '0x409C': ['DS', '1', 'TranslationRateX'],\n    '0x409D': ['DS', '1', 'TranslationRateY'],\n    '0x409F': ['DS', '1', 'ChannelOverlap'],\n    '0x40A0': ['LO', '1-n', 'ImageQualityIndicatorType'],\n    '0x40A1': ['LO', '1-n', 'ImageQualityIndicatorMaterial'],\n    '0x40A2': ['LO', '1-n', 'ImageQualityIndicatorSize'],\n    '0x5002': ['IS', '1', 'LINACEnergy'],\n    '0x5004': ['IS', '1', 'LINACOutput'],\n    '0x5100': ['US', '1', 'ActiveAperture'],\n    '0x5101': ['DS', '1', 'TotalAperture'],\n    '0x5102': ['DS', '1', 'ApertureElevation'],\n    '0x5103': ['DS', '1', 'MainLobeAngle'],\n    '0x5104': ['DS', '1', 'MainRoofAngle'],\n    '0x5105': ['CS', '1', 'ConnectorType'],\n    '0x5106': ['SH', '1', 'WedgeModelNumber'],\n    '0x5107': ['DS', '1', 'WedgeAngleFloat'],\n    '0x5108': ['DS', '1', 'WedgeRoofAngle'],\n    '0x5109': ['CS', '1', 'WedgeElement1Position'],\n    '0x510A': ['DS', '1', 'WedgeMaterialVelocity'],\n    '0x510B': ['SH', '1', 'WedgeMaterial'],\n    '0x510C': ['DS', '1', 'WedgeOffsetZ'],\n    '0x510D': ['DS', '1', 'WedgeOriginOffsetX'],\n    '0x510E': ['DS', '1', 'WedgeTimeDelay'],\n    '0x510F': ['SH', '1', 'WedgeName'],\n    '0x5110': ['SH', '1', 'WedgeManufacturerName'],\n    '0x5111': ['LO', '1', 'WedgeDescription'],\n    '0x5112': ['DS', '1', 'NominalBeamAngle'],\n    '0x5113': ['DS', '1', 'WedgeOffsetX'],\n    '0x5114': ['DS', '1', 'WedgeOffsetY'],\n    '0x5115': ['DS', '1', 'WedgeTotalLength'],\n    '0x5116': ['DS', '1', 'WedgeInContactLength'],\n    '0x5117': ['DS', '1', 'WedgeFrontGap'],\n    '0x5118': ['DS', '1', 'WedgeTotalHeight'],\n    '0x5119': ['DS', '1', 'WedgeFrontHeight'],\n    '0x511A': ['DS', '1', 'WedgeRearHeight'],\n    '0x511B': ['DS', '1', 'WedgeTotalWidth'],\n    '0x511C': ['DS', '1', 'WedgeInContactWidth'],\n    '0x511D': ['DS', '1', 'WedgeChamferHeight'],\n    '0x511E': ['CS', '1', 'WedgeCurve'],\n    '0x511F': ['DS', '1', 'RadiusAlongWedge']\n  },\n  '0x0016': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['DS', '1', 'WhitePoint'],\n    '0x0002': ['DS', '3', 'PrimaryChromaticities'],\n    '0x0003': ['UT', '1', 'BatteryLevel'],\n    '0x0004': ['DS', '1', 'ExposureTimeInSeconds'],\n    '0x0005': ['DS', '1', 'FNumber'],\n    '0x0006': ['IS', '1', 'OECFRows'],\n    '0x0007': ['IS', '1', 'OECFColumns'],\n    '0x0008': ['UC', '1-n', 'OECFColumnNames'],\n    '0x0009': ['DS', '1-n', 'OECFValues'],\n    '0x000A': ['IS', '1', 'SpatialFrequencyResponseRows'],\n    '0x000B': ['IS', '1', 'SpatialFrequencyResponseColumns'],\n    '0x000C': ['UC', '1-n', 'SpatialFrequencyResponseColumnNames'],\n    '0x000D': ['DS', '1-n', 'SpatialFrequencyResponseValues'],\n    '0x000E': ['IS', '1', 'ColorFilterArrayPatternRows'],\n    '0x000F': ['IS', '1', 'ColorFilterArrayPatternColumns'],\n    '0x0010': ['DS', '1-n', 'ColorFilterArrayPatternValues'],\n    '0x0011': ['US', '1', 'FlashFiringStatus'],\n    '0x0012': ['US', '1', 'FlashReturnStatus'],\n    '0x0013': ['US', '1', 'FlashMode'],\n    '0x0014': ['US', '1', 'FlashFunctionPresent'],\n    '0x0015': ['US', '1', 'FlashRedEyeMode'],\n    '0x0016': ['US', '1', 'ExposureProgram'],\n    '0x0017': ['UT', '1', 'SpectralSensitivity'],\n    '0x0018': ['IS', '1', 'PhotographicSensitivity'],\n    '0x0019': ['IS', '1', 'SelfTimerMode'],\n    '0x001A': ['US', '1', 'SensitivityType'],\n    '0x001B': ['IS', '1', 'StandardOutputSensitivity'],\n    '0x001C': ['IS', '1', 'RecommendedExposureIndex'],\n    '0x001D': ['IS', '1', 'ISOSpeed'],\n    '0x001E': ['IS', '1', 'ISOSpeedLatitudeyyy'],\n    '0x001F': ['IS', '1', 'ISOSpeedLatitudezzz'],\n    '0x0020': ['UT', '1', 'EXIFVersion'],\n    '0x0021': ['DS', '1', 'ShutterSpeedValue'],\n    '0x0022': ['DS', '1', 'ApertureValue'],\n    '0x0023': ['DS', '1', 'BrightnessValue'],\n    '0x0024': ['DS', '1', 'ExposureBiasValue'],\n    '0x0025': ['DS', '1', 'MaxApertureValue'],\n    '0x0026': ['DS', '1', 'SubjectDistance'],\n    '0x0027': ['US', '1', 'MeteringMode'],\n    '0x0028': ['US', '1', 'LightSource'],\n    '0x0029': ['DS', '1', 'FocalLength'],\n    '0x002A': ['IS', '2-4', 'SubjectArea'],\n    '0x002B': ['OB', '1', 'MakerNote'],\n    '0x0030': ['DS', '1', 'Temperature'],\n    '0x0031': ['DS', '1', 'Humidity'],\n    '0x0032': ['DS', '1', 'Pressure'],\n    '0x0033': ['DS', '1', 'WaterDepth'],\n    '0x0034': ['DS', '1', 'Acceleration'],\n    '0x0035': ['DS', '1', 'CameraElevationAngle'],\n    '0x0036': ['DS', '1-2', 'FlashEnergy'],\n    '0x0037': ['IS', '2', 'SubjectLocation'],\n    '0x0038': ['DS', '1', 'PhotographicExposureIndex'],\n    '0x0039': ['US', '1', 'SensingMethod'],\n    '0x003A': ['US', '1', 'FileSource'],\n    '0x003B': ['US', '1', 'SceneType'],\n    '0x0041': ['US', '1', 'CustomRendered'],\n    '0x0042': ['US', '1', 'ExposureMode'],\n    '0x0043': ['US', '1', 'WhiteBalance'],\n    '0x0044': ['DS', '1', 'DigitalZoomRatio'],\n    '0x0045': ['IS', '1', 'FocalLengthIn35mmFilm'],\n    '0x0046': ['US', '1', 'SceneCaptureType'],\n    '0x0047': ['US', '1', 'GainControl'],\n    '0x0048': ['US', '1', 'Contrast'],\n    '0x0049': ['US', '1', 'Saturation'],\n    '0x004A': ['US', '1', 'Sharpness'],\n    '0x004B': ['OB', '1', 'DeviceSettingDescription'],\n    '0x004C': ['US', '1', 'SubjectDistanceRange'],\n    '0x004D': ['UT', '1', 'CameraOwnerName'],\n    '0x004E': ['DS', '4', 'LensSpecification'],\n    '0x004F': ['UT', '1', 'LensMake'],\n    '0x0050': ['UT', '1', 'LensModel'],\n    '0x0051': ['UT', '1', 'LensSerialNumber'],\n    '0x0061': ['CS', '1', 'InteroperabilityIndex'],\n    '0x0062': ['OB', '1', 'InteroperabilityVersion'],\n    '0x0070': ['OB', '1', 'GPSVersionID'],\n    '0x0071': ['CS', '1', 'GPSLatitudeRef'],\n    '0x0072': ['DS', '3', 'GPSLatitude'],\n    '0x0073': ['CS', '1', 'GPSLongitudeRef'],\n    '0x0074': ['DS', '3', 'GPSLongitude'],\n    '0x0075': ['US', '1', 'GPSAltitudeRef'],\n    '0x0076': ['DS', '1', 'GPSAltitude'],\n    '0x0077': ['DT', '1', 'GPSTimeStamp'],\n    '0x0078': ['UT', '1', 'GPSSatellites'],\n    '0x0079': ['CS', '1', 'GPSStatus'],\n    '0x007A': ['CS', '1', 'GPSMeasureMode'],\n    '0x007B': ['DS', '1', 'GPSDOP'],\n    '0x007C': ['CS', '1', 'GPSSpeedRef'],\n    '0x007D': ['DS', '1', 'GPSSpeed'],\n    '0x007E': ['CS', '1', 'GPSTrackRef'],\n    '0x007F': ['DS', '1', 'GPSTrack'],\n    '0x0080': ['CS', '1', 'GPSImgDirectionRef'],\n    '0x0081': ['DS', '1', 'GPSImgDirection'],\n    '0x0082': ['UT', '1', 'GPSMapDatum'],\n    '0x0083': ['CS', '1', 'GPSDestLatitudeRef'],\n    '0x0084': ['DS', '3', 'GPSDestLatitude'],\n    '0x0085': ['CS', '1', 'GPSDestLongitudeRef'],\n    '0x0086': ['DS', '3', 'GPSDestLongitude'],\n    '0x0087': ['CS', '1', 'GPSDestBearingRef'],\n    '0x0088': ['DS', '1', 'GPSDestBearing'],\n    '0x0089': ['CS', '1', 'GPSDestDistanceRef'],\n    '0x008A': ['DS', '1', 'GPSDestDistance'],\n    '0x008B': ['OB', '1', 'GPSProcessingMethod'],\n    '0x008C': ['OB', '1', 'GPSAreaInformation'],\n    '0x008D': ['DT', '1', 'GPSDateStamp'],\n    '0x008E': ['IS', '1', 'GPSDifferential'],\n    '0x1001': ['CS', '1', 'LightSourcePolarization'],\n    '0x1002': ['DS', '1', 'EmitterColorTemperature'],\n    '0x1003': ['CS', '1', 'ContactMethod'],\n    '0x1004': ['CS', '1-n', 'ImmersionMedia'],\n    '0x1005': ['DS', '1', 'OpticalMagnificationFactor']\n  },\n  '0x0018': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['LO', '1', 'ContrastBolusAgent'],\n    '0x0012': ['SQ', '1', 'ContrastBolusAgentSequence'],\n    '0x0013': ['FL', '1', 'ContrastBolusT1Relaxivity'],\n    '0x0014': ['SQ', '1', 'ContrastBolusAdministrationRouteSequence'],\n    '0x0015': ['CS', '1', 'BodyPartExamined'],\n    '0x0020': ['CS', '1-n', 'ScanningSequence'],\n    '0x0021': ['CS', '1-n', 'SequenceVariant'],\n    '0x0022': ['CS', '1-n', 'ScanOptions'],\n    '0x0023': ['CS', '1', 'MRAcquisitionType'],\n    '0x0024': ['SH', '1', 'SequenceName'],\n    '0x0025': ['CS', '1', 'AngioFlag'],\n    '0x0026': ['SQ', '1', 'InterventionDrugInformationSequence'],\n    '0x0027': ['TM', '1', 'InterventionDrugStopTime'],\n    '0x0028': ['DS', '1', 'InterventionDrugDose'],\n    '0x0029': ['SQ', '1', 'InterventionDrugCodeSequence'],\n    '0x002A': ['SQ', '1', 'AdditionalDrugSequence'],\n    '0x0030': ['LO', '1-n', 'Radionuclide'],\n    '0x0031': ['LO', '1', 'Radiopharmaceutical'],\n    '0x0032': ['DS', '1', 'EnergyWindowCenterline'],\n    '0x0033': ['DS', '1-n', 'EnergyWindowTotalWidth'],\n    '0x0034': ['LO', '1', 'InterventionDrugName'],\n    '0x0035': ['TM', '1', 'InterventionDrugStartTime'],\n    '0x0036': ['SQ', '1', 'InterventionSequence'],\n    '0x0037': ['CS', '1', 'TherapyType'],\n    '0x0038': ['CS', '1', 'InterventionStatus'],\n    '0x0039': ['CS', '1', 'TherapyDescription'],\n    '0x003A': ['ST', '1', 'InterventionDescription'],\n    '0x0040': ['IS', '1', 'CineRate'],\n    '0x0042': ['CS', '1', 'InitialCineRunState'],\n    '0x0050': ['DS', '1', 'SliceThickness'],\n    '0x0060': ['DS', '1', 'KVP'],\n    '0x0061': ['DS', '1', ''],\n    '0x0070': ['IS', '1', 'CountsAccumulated'],\n    '0x0071': ['CS', '1', 'AcquisitionTerminationCondition'],\n    '0x0072': ['DS', '1', 'EffectiveDuration'],\n    '0x0073': ['CS', '1', 'AcquisitionStartCondition'],\n    '0x0074': ['IS', '1', 'AcquisitionStartConditionData'],\n    '0x0075': ['IS', '1', 'AcquisitionTerminationConditionData'],\n    '0x0080': ['DS', '1', 'RepetitionTime'],\n    '0x0081': ['DS', '1', 'EchoTime'],\n    '0x0082': ['DS', '1', 'InversionTime'],\n    '0x0083': ['DS', '1', 'NumberOfAverages'],\n    '0x0084': ['DS', '1', 'ImagingFrequency'],\n    '0x0085': ['SH', '1', 'ImagedNucleus'],\n    '0x0086': ['IS', '1-n', 'EchoNumbers'],\n    '0x0087': ['DS', '1', 'MagneticFieldStrength'],\n    '0x0088': ['DS', '1', 'SpacingBetweenSlices'],\n    '0x0089': ['IS', '1', 'NumberOfPhaseEncodingSteps'],\n    '0x0090': ['DS', '1', 'DataCollectionDiameter'],\n    '0x0091': ['IS', '1', 'EchoTrainLength'],\n    '0x0093': ['DS', '1', 'PercentSampling'],\n    '0x0094': ['DS', '1', 'PercentPhaseFieldOfView'],\n    '0x0095': ['DS', '1', 'PixelBandwidth'],\n    '0x1000': ['LO', '1', 'DeviceSerialNumber'],\n    '0x1002': ['UI', '1', 'DeviceUID'],\n    '0x1003': ['LO', '1', 'DeviceID'],\n    '0x1004': ['LO', '1', 'PlateID'],\n    '0x1005': ['LO', '1', 'GeneratorID'],\n    '0x1006': ['LO', '1', 'GridID'],\n    '0x1007': ['LO', '1', 'CassetteID'],\n    '0x1008': ['LO', '1', 'GantryID'],\n    '0x1009': ['UT', '1', 'UniqueDeviceIdentifier'],\n    '0x100A': ['SQ', '1', 'UDISequence'],\n    '0x100B': ['UI', '1-n', 'ManufacturerDeviceClassUID'],\n    '0x1010': ['LO', '1', 'SecondaryCaptureDeviceID'],\n    '0x1011': ['LO', '1', 'HardcopyCreationDeviceID'],\n    '0x1012': ['DA', '1', 'DateOfSecondaryCapture'],\n    '0x1014': ['TM', '1', 'TimeOfSecondaryCapture'],\n    '0x1016': ['LO', '1', 'SecondaryCaptureDeviceManufacturer'],\n    '0x1017': ['LO', '1', 'HardcopyDeviceManufacturer'],\n    '0x1018': ['LO', '1', 'SecondaryCaptureDeviceManufacturerModelName'],\n    '0x1019': ['LO', '1-n', 'SecondaryCaptureDeviceSoftwareVersions'],\n    '0x101A': ['LO', '1-n', 'HardcopyDeviceSoftwareVersion'],\n    '0x101B': ['LO', '1', 'HardcopyDeviceManufacturerModelName'],\n    '0x1020': ['LO', '1-n', 'SoftwareVersions'],\n    '0x1022': ['SH', '1', 'VideoImageFormatAcquired'],\n    '0x1023': ['LO', '1', 'DigitalImageFormatAcquired'],\n    '0x1030': ['LO', '1', 'ProtocolName'],\n    '0x1040': ['LO', '1', 'ContrastBolusRoute'],\n    '0x1041': ['DS', '1', 'ContrastBolusVolume'],\n    '0x1042': ['TM', '1', 'ContrastBolusStartTime'],\n    '0x1043': ['TM', '1', 'ContrastBolusStopTime'],\n    '0x1044': ['DS', '1', 'ContrastBolusTotalDose'],\n    '0x1045': ['IS', '1', 'SyringeCounts'],\n    '0x1046': ['DS', '1-n', 'ContrastFlowRate'],\n    '0x1047': ['DS', '1-n', 'ContrastFlowDuration'],\n    '0x1048': ['CS', '1', 'ContrastBolusIngredient'],\n    '0x1049': ['DS', '1', 'ContrastBolusIngredientConcentration'],\n    '0x1050': ['DS', '1', 'SpatialResolution'],\n    '0x1060': ['DS', '1', 'TriggerTime'],\n    '0x1061': ['LO', '1', 'TriggerSourceOrType'],\n    '0x1062': ['IS', '1', 'NominalInterval'],\n    '0x1063': ['DS', '1', 'FrameTime'],\n    '0x1064': ['LO', '1', 'CardiacFramingType'],\n    '0x1065': ['DS', '1-n', 'FrameTimeVector'],\n    '0x1066': ['DS', '1', 'FrameDelay'],\n    '0x1067': ['DS', '1', 'ImageTriggerDelay'],\n    '0x1068': ['DS', '1', 'MultiplexGroupTimeOffset'],\n    '0x1069': ['DS', '1', 'TriggerTimeOffset'],\n    '0x106A': ['CS', '1', 'SynchronizationTrigger'],\n    '0x106C': ['US', '2', 'SynchronizationChannel'],\n    '0x106E': ['UL', '1', 'TriggerSamplePosition'],\n    '0x1070': ['LO', '1', 'RadiopharmaceuticalRoute'],\n    '0x1071': ['DS', '1', 'RadiopharmaceuticalVolume'],\n    '0x1072': ['TM', '1', 'RadiopharmaceuticalStartTime'],\n    '0x1073': ['TM', '1', 'RadiopharmaceuticalStopTime'],\n    '0x1074': ['DS', '1', 'RadionuclideTotalDose'],\n    '0x1075': ['DS', '1', 'RadionuclideHalfLife'],\n    '0x1076': ['DS', '1', 'RadionuclidePositronFraction'],\n    '0x1077': ['DS', '1', 'RadiopharmaceuticalSpecificActivity'],\n    '0x1078': ['DT', '1', 'RadiopharmaceuticalStartDateTime'],\n    '0x1079': ['DT', '1', 'RadiopharmaceuticalStopDateTime'],\n    '0x1080': ['CS', '1', 'BeatRejectionFlag'],\n    '0x1081': ['IS', '1', 'LowRRValue'],\n    '0x1082': ['IS', '1', 'HighRRValue'],\n    '0x1083': ['IS', '1', 'IntervalsAcquired'],\n    '0x1084': ['IS', '1', 'IntervalsRejected'],\n    '0x1085': ['LO', '1', 'PVCRejection'],\n    '0x1086': ['IS', '1', 'SkipBeats'],\n    '0x1088': ['IS', '1', 'HeartRate'],\n    '0x1090': ['IS', '1', 'CardiacNumberOfImages'],\n    '0x1094': ['IS', '1', 'TriggerWindow'],\n    '0x1100': ['DS', '1', 'ReconstructionDiameter'],\n    '0x1110': ['DS', '1', 'DistanceSourceToDetector'],\n    '0x1111': ['DS', '1', 'DistanceSourceToPatient'],\n    '0x1114': ['DS', '1', 'EstimatedRadiographicMagnificationFactor'],\n    '0x1120': ['DS', '1', 'GantryDetectorTilt'],\n    '0x1121': ['DS', '1', 'GantryDetectorSlew'],\n    '0x1130': ['DS', '1', 'TableHeight'],\n    '0x1131': ['DS', '1', 'TableTraverse'],\n    '0x1134': ['CS', '1', 'TableMotion'],\n    '0x1135': ['DS', '1-n', 'TableVerticalIncrement'],\n    '0x1136': ['DS', '1-n', 'TableLateralIncrement'],\n    '0x1137': ['DS', '1-n', 'TableLongitudinalIncrement'],\n    '0x1138': ['DS', '1', 'TableAngle'],\n    '0x113A': ['CS', '1', 'TableType'],\n    '0x1140': ['CS', '1', 'RotationDirection'],\n    '0x1141': ['DS', '1', 'AngularPosition'],\n    '0x1142': ['DS', '1-n', 'RadialPosition'],\n    '0x1143': ['DS', '1', 'ScanArc'],\n    '0x1144': ['DS', '1', 'AngularStep'],\n    '0x1145': ['DS', '1', 'CenterOfRotationOffset'],\n    '0x1146': ['DS', '1-n', 'RotationOffset'],\n    '0x1147': ['CS', '1', 'FieldOfViewShape'],\n    '0x1149': ['IS', '1-2', 'FieldOfViewDimensions'],\n    '0x1150': ['IS', '1', 'ExposureTime'],\n    '0x1151': ['IS', '1', 'XRayTubeCurrent'],\n    '0x1152': ['IS', '1', 'Exposure'],\n    '0x1153': ['IS', '1', 'ExposureInuAs'],\n    '0x1154': ['DS', '1', 'AveragePulseWidth'],\n    '0x1155': ['CS', '1', 'RadiationSetting'],\n    '0x1156': ['CS', '1', 'RectificationType'],\n    '0x115A': ['CS', '1', 'RadiationMode'],\n    '0x115E': ['DS', '1', 'ImageAndFluoroscopyAreaDoseProduct'],\n    '0x1160': ['SH', '1', 'FilterType'],\n    '0x1161': ['LO', '1-n', 'TypeOfFilters'],\n    '0x1162': ['DS', '1', 'IntensifierSize'],\n    '0x1164': ['DS', '2', 'ImagerPixelSpacing'],\n    '0x1166': ['CS', '1-n', 'Grid'],\n    '0x1170': ['IS', '1', 'GeneratorPower'],\n    '0x1180': ['SH', '1', 'CollimatorGridName'],\n    '0x1181': ['CS', '1', 'CollimatorType'],\n    '0x1182': ['IS', '1-2', 'FocalDistance'],\n    '0x1183': ['DS', '1-2', 'XFocusCenter'],\n    '0x1184': ['DS', '1-2', 'YFocusCenter'],\n    '0x1190': ['DS', '1-n', 'FocalSpots'],\n    '0x1191': ['CS', '1', 'AnodeTargetMaterial'],\n    '0x11A0': ['DS', '1', 'BodyPartThickness'],\n    '0x11A2': ['DS', '1', 'CompressionForce'],\n    '0x11A3': ['DS', '1', 'CompressionPressure'],\n    '0x11A4': ['LO', '1', 'PaddleDescription'],\n    '0x11A5': ['DS', '1', 'CompressionContactArea'],\n    '0x11B0': ['LO', '1', 'AcquisitionMode'],\n    '0x11B1': ['LO', '1', 'DoseModeName'],\n    '0x11B2': ['CS', '1', 'AcquiredSubtractionMaskFlag'],\n    '0x11B3': ['CS', '1', 'FluoroscopyPersistenceFlag'],\n    '0x11B4': ['CS', '1', 'FluoroscopyLastImageHoldPersistenceFlag'],\n    '0x11B5': ['IS', '1', 'UpperLimitNumberOfPersistentFluoroscopyFrames'],\n    '0x11B6': ['CS', '1', 'ContrastBolusAutoInjectionTriggerFlag'],\n    '0x11B7': ['FD', '1', 'ContrastBolusInjectionDelay'],\n    '0x11B8': ['SQ', '1', 'XAAcquisitionPhaseDetailsSequence'],\n    '0x11B9': ['FD', '1', 'XAAcquisitionFrameRate'],\n    '0x11BA': ['SQ', '1', 'XAPlaneDetailsSequence'],\n    '0x11BB': ['LO', '1', 'AcquisitionFieldOfViewLabel'],\n    '0x11BC': ['SQ', '1', 'XRayFilterDetailsSequence'],\n    '0x11BD': ['FD', '1', 'XAAcquisitionDuration'],\n    '0x11BE': ['CS', '1', 'ReconstructionPipelineType'],\n    '0x11BF': ['SQ', '1', 'ImageFilterDetailsSequence'],\n    '0x11C0': ['CS', '1', 'AppliedMaskSubtractionFlag'],\n    '0x11C1': ['SQ', '1', 'RequestedSeriesDescriptionCodeSequence'],\n    '0x1200': ['DA', '1-n', 'DateOfLastCalibration'],\n    '0x1201': ['TM', '1-n', 'TimeOfLastCalibration'],\n    '0x1202': ['DT', '1', 'DateTimeOfLastCalibration'],\n    '0x1203': ['DT', '1', 'CalibrationDateTime'],\n    '0x1210': ['SH', '1-n', 'ConvolutionKernel'],\n    '0x1240': ['IS', '1-n', 'UpperLowerPixelValues'],\n    '0x1242': ['IS', '1', 'ActualFrameDuration'],\n    '0x1243': ['IS', '1', 'CountRate'],\n    '0x1244': ['US', '1', 'PreferredPlaybackSequencing'],\n    '0x1250': ['SH', '1', 'ReceiveCoilName'],\n    '0x1251': ['SH', '1', 'TransmitCoilName'],\n    '0x1260': ['SH', '1', 'PlateType'],\n    '0x1261': ['LO', '1', 'PhosphorType'],\n    '0x1271': ['FD', '1', 'WaterEquivalentDiameter'],\n    '0x1272': ['SQ', '1', 'WaterEquivalentDiameterCalculationMethodCodeSequence'],\n    '0x1300': ['DS', '1', 'ScanVelocity'],\n    '0x1301': ['CS', '1-n', 'WholeBodyTechnique'],\n    '0x1302': ['IS', '1', 'ScanLength'],\n    '0x1310': ['US', '4', 'AcquisitionMatrix'],\n    '0x1312': ['CS', '1', 'InPlanePhaseEncodingDirection'],\n    '0x1314': ['DS', '1', 'FlipAngle'],\n    '0x1315': ['CS', '1', 'VariableFlipAngleFlag'],\n    '0x1316': ['DS', '1', 'SAR'],\n    '0x1318': ['DS', '1', 'dBdt'],\n    '0x1320': ['FL', '1', 'B1rms'],\n    '0x1400': ['LO', '1', 'AcquisitionDeviceProcessingDescription'],\n    '0x1401': ['LO', '1', 'AcquisitionDeviceProcessingCode'],\n    '0x1402': ['CS', '1', 'CassetteOrientation'],\n    '0x1403': ['CS', '1', 'CassetteSize'],\n    '0x1404': ['US', '1', 'ExposuresOnPlate'],\n    '0x1405': ['IS', '1', 'RelativeXRayExposure'],\n    '0x1411': ['DS', '1', 'ExposureIndex'],\n    '0x1412': ['DS', '1', 'TargetExposureIndex'],\n    '0x1413': ['DS', '1', 'DeviationIndex'],\n    '0x1450': ['DS', '1', 'ColumnAngulation'],\n    '0x1460': ['DS', '1', 'TomoLayerHeight'],\n    '0x1470': ['DS', '1', 'TomoAngle'],\n    '0x1480': ['DS', '1', 'TomoTime'],\n    '0x1490': ['CS', '1', 'TomoType'],\n    '0x1491': ['CS', '1', 'TomoClass'],\n    '0x1495': ['IS', '1', 'NumberOfTomosynthesisSourceImages'],\n    '0x1500': ['CS', '1', 'PositionerMotion'],\n    '0x1508': ['CS', '1', 'PositionerType'],\n    '0x1510': ['DS', '1', 'PositionerPrimaryAngle'],\n    '0x1511': ['DS', '1', 'PositionerSecondaryAngle'],\n    '0x1520': ['DS', '1-n', 'PositionerPrimaryAngleIncrement'],\n    '0x1521': ['DS', '1-n', 'PositionerSecondaryAngleIncrement'],\n    '0x1530': ['DS', '1', 'DetectorPrimaryAngle'],\n    '0x1531': ['DS', '1', 'DetectorSecondaryAngle'],\n    '0x1600': ['CS', '1-3', 'ShutterShape'],\n    '0x1602': ['IS', '1', 'ShutterLeftVerticalEdge'],\n    '0x1604': ['IS', '1', 'ShutterRightVerticalEdge'],\n    '0x1606': ['IS', '1', 'ShutterUpperHorizontalEdge'],\n    '0x1608': ['IS', '1', 'ShutterLowerHorizontalEdge'],\n    '0x1610': ['IS', '2', 'CenterOfCircularShutter'],\n    '0x1612': ['IS', '1', 'RadiusOfCircularShutter'],\n    '0x1620': ['IS', '2-2n', 'VerticesOfThePolygonalShutter'],\n    '0x1622': ['US', '1', 'ShutterPresentationValue'],\n    '0x1623': ['US', '1', 'ShutterOverlayGroup'],\n    '0x1624': ['US', '3', 'ShutterPresentationColorCIELabValue'],\n    '0x1630': ['CS', '1', 'OutlineShapeType'],\n    '0x1631': ['FD', '1', 'OutlineLeftVerticalEdge'],\n    '0x1632': ['FD', '1', 'OutlineRightVerticalEdge'],\n    '0x1633': ['FD', '1', 'OutlineUpperHorizontalEdge'],\n    '0x1634': ['FD', '1', 'OutlineLowerHorizontalEdge'],\n    '0x1635': ['FD', '2', 'CenterOfCircularOutline'],\n    '0x1636': ['FD', '1', 'DiameterOfCircularOutline'],\n    '0x1637': ['UL', '1', 'NumberOfPolygonalVertices'],\n    '0x1638': ['OF', '1', 'VerticesOfThePolygonalOutline'],\n    '0x1700': ['CS', '1-3', 'CollimatorShape'],\n    '0x1702': ['IS', '1', 'CollimatorLeftVerticalEdge'],\n    '0x1704': ['IS', '1', 'CollimatorRightVerticalEdge'],\n    '0x1706': ['IS', '1', 'CollimatorUpperHorizontalEdge'],\n    '0x1708': ['IS', '1', 'CollimatorLowerHorizontalEdge'],\n    '0x1710': ['IS', '2', 'CenterOfCircularCollimator'],\n    '0x1712': ['IS', '1', 'RadiusOfCircularCollimator'],\n    '0x1720': ['IS', '2-2n', 'VerticesOfThePolygonalCollimator'],\n    '0x1800': ['CS', '1', 'AcquisitionTimeSynchronized'],\n    '0x1801': ['SH', '1', 'TimeSource'],\n    '0x1802': ['CS', '1', 'TimeDistributionProtocol'],\n    '0x1803': ['LO', '1', 'NTPSourceAddress'],\n    '0x2001': ['IS', '1-n', 'PageNumberVector'],\n    '0x2002': ['SH', '1-n', 'FrameLabelVector'],\n    '0x2003': ['DS', '1-n', 'FramePrimaryAngleVector'],\n    '0x2004': ['DS', '1-n', 'FrameSecondaryAngleVector'],\n    '0x2005': ['DS', '1-n', 'SliceLocationVector'],\n    '0x2006': ['SH', '1-n', 'DisplayWindowLabelVector'],\n    '0x2010': ['DS', '2', 'NominalScannedPixelSpacing'],\n    '0x2020': ['CS', '1', 'DigitizingDeviceTransportDirection'],\n    '0x2030': ['DS', '1', 'RotationOfScannedFilm'],\n    '0x2041': ['SQ', '1', 'BiopsyTargetSequence'],\n    '0x2042': ['UI', '1', 'TargetUID'],\n    '0x2043': ['FL', '2', 'LocalizingCursorPosition'],\n    '0x2044': ['FL', '3', 'CalculatedTargetPosition'],\n    '0x2045': ['SH', '1', 'TargetLabel'],\n    '0x2046': ['FL', '1', 'DisplayedZValue'],\n    '0x3100': ['CS', '1', 'IVUSAcquisition'],\n    '0x3101': ['DS', '1', 'IVUSPullbackRate'],\n    '0x3102': ['DS', '1', 'IVUSGatedRate'],\n    '0x3103': ['IS', '1', 'IVUSPullbackStartFrameNumber'],\n    '0x3104': ['IS', '1', 'IVUSPullbackStopFrameNumber'],\n    '0x3105': ['IS', '1-n', 'LesionNumber'],\n    '0x4000': ['LT', '1', 'AcquisitionComments'],\n    '0x5000': ['SH', '1-n', 'OutputPower'],\n    '0x5010': ['LO', '1-n', 'TransducerData'],\n    '0x5011': ['SQ', '1', 'TransducerIdentificationSequence'],\n    '0x5012': ['DS', '1', 'FocusDepth'],\n    '0x5020': ['LO', '1', 'ProcessingFunction'],\n    '0x5021': ['LO', '1', 'PostprocessingFunction'],\n    '0x5022': ['DS', '1', 'MechanicalIndex'],\n    '0x5024': ['DS', '1', 'BoneThermalIndex'],\n    '0x5026': ['DS', '1', 'CranialThermalIndex'],\n    '0x5027': ['DS', '1', 'SoftTissueThermalIndex'],\n    '0x5028': ['DS', '1', 'SoftTissueFocusThermalIndex'],\n    '0x5029': ['DS', '1', 'SoftTissueSurfaceThermalIndex'],\n    '0x5030': ['DS', '1', 'DynamicRange'],\n    '0x5040': ['DS', '1', 'TotalGain'],\n    '0x5050': ['IS', '1', 'DepthOfScanField'],\n    '0x5100': ['CS', '1', 'PatientPosition'],\n    '0x5101': ['CS', '1', 'ViewPosition'],\n    '0x5104': ['SQ', '1', 'ProjectionEponymousNameCodeSequence'],\n    '0x5210': ['DS', '6', 'ImageTransformationMatrix'],\n    '0x5212': ['DS', '3', 'ImageTranslationVector'],\n    '0x6000': ['DS', '1', 'Sensitivity'],\n    '0x6011': ['SQ', '1', 'SequenceOfUltrasoundRegions'],\n    '0x6012': ['US', '1', 'RegionSpatialFormat'],\n    '0x6014': ['US', '1', 'RegionDataType'],\n    '0x6016': ['UL', '1', 'RegionFlags'],\n    '0x6018': ['UL', '1', 'RegionLocationMinX0'],\n    '0x601A': ['UL', '1', 'RegionLocationMinY0'],\n    '0x601C': ['UL', '1', 'RegionLocationMaxX1'],\n    '0x601E': ['UL', '1', 'RegionLocationMaxY1'],\n    '0x6020': ['SL', '1', 'ReferencePixelX0'],\n    '0x6022': ['SL', '1', 'ReferencePixelY0'],\n    '0x6024': ['US', '1', 'PhysicalUnitsXDirection'],\n    '0x6026': ['US', '1', 'PhysicalUnitsYDirection'],\n    '0x6028': ['FD', '1', 'ReferencePixelPhysicalValueX'],\n    '0x602A': ['FD', '1', 'ReferencePixelPhysicalValueY'],\n    '0x602C': ['FD', '1', 'PhysicalDeltaX'],\n    '0x602E': ['FD', '1', 'PhysicalDeltaY'],\n    '0x6030': ['UL', '1', 'TransducerFrequency'],\n    '0x6031': ['CS', '1', 'TransducerType'],\n    '0x6032': ['UL', '1', 'PulseRepetitionFrequency'],\n    '0x6034': ['FD', '1', 'DopplerCorrectionAngle'],\n    '0x6036': ['FD', '1', 'SteeringAngle'],\n    '0x6038': ['UL', '1', 'DopplerSampleVolumeXPositionRetired'],\n    '0x6039': ['SL', '1', 'DopplerSampleVolumeXPosition'],\n    '0x603A': ['UL', '1', 'DopplerSampleVolumeYPositionRetired'],\n    '0x603B': ['SL', '1', 'DopplerSampleVolumeYPosition'],\n    '0x603C': ['UL', '1', 'TMLinePositionX0Retired'],\n    '0x603D': ['SL', '1', 'TMLinePositionX0'],\n    '0x603E': ['UL', '1', 'TMLinePositionY0Retired'],\n    '0x603F': ['SL', '1', 'TMLinePositionY0'],\n    '0x6040': ['UL', '1', 'TMLinePositionX1Retired'],\n    '0x6041': ['SL', '1', 'TMLinePositionX1'],\n    '0x6042': ['UL', '1', 'TMLinePositionY1Retired'],\n    '0x6043': ['SL', '1', 'TMLinePositionY1'],\n    '0x6044': ['US', '1', 'PixelComponentOrganization'],\n    '0x6046': ['UL', '1', 'PixelComponentMask'],\n    '0x6048': ['UL', '1', 'PixelComponentRangeStart'],\n    '0x604A': ['UL', '1', 'PixelComponentRangeStop'],\n    '0x604C': ['US', '1', 'PixelComponentPhysicalUnits'],\n    '0x604E': ['US', '1', 'PixelComponentDataType'],\n    '0x6050': ['UL', '1', 'NumberOfTableBreakPoints'],\n    '0x6052': ['UL', '1-n', 'TableOfXBreakPoints'],\n    '0x6054': ['FD', '1-n', 'TableOfYBreakPoints'],\n    '0x6056': ['UL', '1', 'NumberOfTableEntries'],\n    '0x6058': ['UL', '1-n', 'TableOfPixelValues'],\n    '0x605A': ['FL', '1-n', 'TableOfParameterValues'],\n    '0x6060': ['FL', '1-n', 'RWaveTimeVector'],\n    '0x6070': ['US', '1', 'ActiveImageAreaOverlayGroup'],\n    '0x7000': ['CS', '1', 'DetectorConditionsNominalFlag'],\n    '0x7001': ['DS', '1', 'DetectorTemperature'],\n    '0x7004': ['CS', '1', 'DetectorType'],\n    '0x7005': ['CS', '1', 'DetectorConfiguration'],\n    '0x7006': ['LT', '1', 'DetectorDescription'],\n    '0x7008': ['LT', '1', 'DetectorMode'],\n    '0x700A': ['SH', '1', 'DetectorID'],\n    '0x700C': ['DA', '1', 'DateOfLastDetectorCalibration'],\n    '0x700E': ['TM', '1', 'TimeOfLastDetectorCalibration'],\n    '0x7010': ['IS', '1', 'ExposuresOnDetectorSinceLastCalibration'],\n    '0x7011': ['IS', '1', 'ExposuresOnDetectorSinceManufactured'],\n    '0x7012': ['DS', '1', 'DetectorTimeSinceLastExposure'],\n    '0x7014': ['DS', '1', 'DetectorActiveTime'],\n    '0x7016': ['DS', '1', 'DetectorActivationOffsetFromExposure'],\n    '0x701A': ['DS', '2', 'DetectorBinning'],\n    '0x7020': ['DS', '2', 'DetectorElementPhysicalSize'],\n    '0x7022': ['DS', '2', 'DetectorElementSpacing'],\n    '0x7024': ['CS', '1', 'DetectorActiveShape'],\n    '0x7026': ['DS', '1-2', 'DetectorActiveDimensions'],\n    '0x7028': ['DS', '2', 'DetectorActiveOrigin'],\n    '0x702A': ['LO', '1', 'DetectorManufacturerName'],\n    '0x702B': ['LO', '1', 'DetectorManufacturerModelName'],\n    '0x7030': ['DS', '2', 'FieldOfViewOrigin'],\n    '0x7032': ['DS', '1', 'FieldOfViewRotation'],\n    '0x7034': ['CS', '1', 'FieldOfViewHorizontalFlip'],\n    '0x7036': ['FL', '2', 'PixelDataAreaOriginRelativeToFOV'],\n    '0x7038': ['FL', '1', 'PixelDataAreaRotationAngleRelativeToFOV'],\n    '0x7040': ['LT', '1', 'GridAbsorbingMaterial'],\n    '0x7041': ['LT', '1', 'GridSpacingMaterial'],\n    '0x7042': ['DS', '1', 'GridThickness'],\n    '0x7044': ['DS', '1', 'GridPitch'],\n    '0x7046': ['IS', '2', 'GridAspectRatio'],\n    '0x7048': ['DS', '1', 'GridPeriod'],\n    '0x704C': ['DS', '1', 'GridFocalDistance'],\n    '0x7050': ['CS', '1-n', 'FilterMaterial'],\n    '0x7052': ['DS', '1-n', 'FilterThicknessMinimum'],\n    '0x7054': ['DS', '1-n', 'FilterThicknessMaximum'],\n    '0x7056': ['FL', '1-n', 'FilterBeamPathLengthMinimum'],\n    '0x7058': ['FL', '1-n', 'FilterBeamPathLengthMaximum'],\n    '0x7060': ['CS', '1', 'ExposureControlMode'],\n    '0x7062': ['LT', '1', 'ExposureControlModeDescription'],\n    '0x7064': ['CS', '1', 'ExposureStatus'],\n    '0x7065': ['DS', '1', 'PhototimerSetting'],\n    '0x8150': ['DS', '1', 'ExposureTimeInuS'],\n    '0x8151': ['DS', '1', 'XRayTubeCurrentInuA'],\n    '0x9004': ['CS', '1', 'ContentQualification'],\n    '0x9005': ['SH', '1', 'PulseSequenceName'],\n    '0x9006': ['SQ', '1', 'MRImagingModifierSequence'],\n    '0x9008': ['CS', '1', 'EchoPulseSequence'],\n    '0x9009': ['CS', '1', 'InversionRecovery'],\n    '0x9010': ['CS', '1', 'FlowCompensation'],\n    '0x9011': ['CS', '1', 'MultipleSpinEcho'],\n    '0x9012': ['CS', '1', 'MultiPlanarExcitation'],\n    '0x9014': ['CS', '1', 'PhaseContrast'],\n    '0x9015': ['CS', '1', 'TimeOfFlightContrast'],\n    '0x9016': ['CS', '1', 'Spoiling'],\n    '0x9017': ['CS', '1', 'SteadyStatePulseSequence'],\n    '0x9018': ['CS', '1', 'EchoPlanarPulseSequence'],\n    '0x9019': ['FD', '1', 'TagAngleFirstAxis'],\n    '0x9020': ['CS', '1', 'MagnetizationTransfer'],\n    '0x9021': ['CS', '1', 'T2Preparation'],\n    '0x9022': ['CS', '1', 'BloodSignalNulling'],\n    '0x9024': ['CS', '1', 'SaturationRecovery'],\n    '0x9025': ['CS', '1', 'SpectrallySelectedSuppression'],\n    '0x9026': ['CS', '1', 'SpectrallySelectedExcitation'],\n    '0x9027': ['CS', '1', 'SpatialPresaturation'],\n    '0x9028': ['CS', '1', 'Tagging'],\n    '0x9029': ['CS', '1', 'OversamplingPhase'],\n    '0x9030': ['FD', '1', 'TagSpacingFirstDimension'],\n    '0x9032': ['CS', '1', 'GeometryOfKSpaceTraversal'],\n    '0x9033': ['CS', '1', 'SegmentedKSpaceTraversal'],\n    '0x9034': ['CS', '1', 'RectilinearPhaseEncodeReordering'],\n    '0x9035': ['FD', '1', 'TagThickness'],\n    '0x9036': ['CS', '1', 'PartialFourierDirection'],\n    '0x9037': ['CS', '1', 'CardiacSynchronizationTechnique'],\n    '0x9041': ['LO', '1', 'ReceiveCoilManufacturerName'],\n    '0x9042': ['SQ', '1', 'MRReceiveCoilSequence'],\n    '0x9043': ['CS', '1', 'ReceiveCoilType'],\n    '0x9044': ['CS', '1', 'QuadratureReceiveCoil'],\n    '0x9045': ['SQ', '1', 'MultiCoilDefinitionSequence'],\n    '0x9046': ['LO', '1', 'MultiCoilConfiguration'],\n    '0x9047': ['SH', '1', 'MultiCoilElementName'],\n    '0x9048': ['CS', '1', 'MultiCoilElementUsed'],\n    '0x9049': ['SQ', '1', 'MRTransmitCoilSequence'],\n    '0x9050': ['LO', '1', 'TransmitCoilManufacturerName'],\n    '0x9051': ['CS', '1', 'TransmitCoilType'],\n    '0x9052': ['FD', '1-2', 'SpectralWidth'],\n    '0x9053': ['FD', '1-2', 'ChemicalShiftReference'],\n    '0x9054': ['CS', '1', 'VolumeLocalizationTechnique'],\n    '0x9058': ['US', '1', 'MRAcquisitionFrequencyEncodingSteps'],\n    '0x9059': ['CS', '1', 'Decoupling'],\n    '0x9060': ['CS', '1-2', 'DecoupledNucleus'],\n    '0x9061': ['FD', '1-2', 'DecouplingFrequency'],\n    '0x9062': ['CS', '1', 'DecouplingMethod'],\n    '0x9063': ['FD', '1-2', 'DecouplingChemicalShiftReference'],\n    '0x9064': ['CS', '1', 'KSpaceFiltering'],\n    '0x9065': ['CS', '1-2', 'TimeDomainFiltering'],\n    '0x9066': ['US', '1-2', 'NumberOfZeroFills'],\n    '0x9067': ['CS', '1', 'BaselineCorrection'],\n    '0x9069': ['FD', '1', 'ParallelReductionFactorInPlane'],\n    '0x9070': ['FD', '1', 'CardiacRRIntervalSpecified'],\n    '0x9073': ['FD', '1', 'AcquisitionDuration'],\n    '0x9074': ['DT', '1', 'FrameAcquisitionDateTime'],\n    '0x9075': ['CS', '1', 'DiffusionDirectionality'],\n    '0x9076': ['SQ', '1', 'DiffusionGradientDirectionSequence'],\n    '0x9077': ['CS', '1', 'ParallelAcquisition'],\n    '0x9078': ['CS', '1', 'ParallelAcquisitionTechnique'],\n    '0x9079': ['FD', '1-n', 'InversionTimes'],\n    '0x9080': ['ST', '1', 'MetaboliteMapDescription'],\n    '0x9081': ['CS', '1', 'PartialFourier'],\n    '0x9082': ['FD', '1', 'EffectiveEchoTime'],\n    '0x9083': ['SQ', '1', 'MetaboliteMapCodeSequence'],\n    '0x9084': ['SQ', '1', 'ChemicalShiftSequence'],\n    '0x9085': ['CS', '1', 'CardiacSignalSource'],\n    '0x9087': ['FD', '1', 'DiffusionBValue'],\n    '0x9089': ['FD', '3', 'DiffusionGradientOrientation'],\n    '0x9090': ['FD', '3', 'VelocityEncodingDirection'],\n    '0x9091': ['FD', '1', 'VelocityEncodingMinimumValue'],\n    '0x9092': ['SQ', '1', 'VelocityEncodingAcquisitionSequence'],\n    '0x9093': ['US', '1', 'NumberOfKSpaceTrajectories'],\n    '0x9094': ['CS', '1', 'CoverageOfKSpace'],\n    '0x9095': ['UL', '1', 'SpectroscopyAcquisitionPhaseRows'],\n    '0x9096': ['FD', '1', 'ParallelReductionFactorInPlaneRetired'],\n    '0x9098': ['FD', '1-2', 'TransmitterFrequency'],\n    '0x9100': ['CS', '1-2', 'ResonantNucleus'],\n    '0x9101': ['CS', '1', 'FrequencyCorrection'],\n    '0x9103': ['SQ', '1', 'MRSpectroscopyFOVGeometrySequence'],\n    '0x9104': ['FD', '1', 'SlabThickness'],\n    '0x9105': ['FD', '3', 'SlabOrientation'],\n    '0x9106': ['FD', '3', 'MidSlabPosition'],\n    '0x9107': ['SQ', '1', 'MRSpatialSaturationSequence'],\n    '0x9112': ['SQ', '1', 'MRTimingAndRelatedParametersSequence'],\n    '0x9114': ['SQ', '1', 'MREchoSequence'],\n    '0x9115': ['SQ', '1', 'MRModifierSequence'],\n    '0x9117': ['SQ', '1', 'MRDiffusionSequence'],\n    '0x9118': ['SQ', '1', 'CardiacSynchronizationSequence'],\n    '0x9119': ['SQ', '1', 'MRAveragesSequence'],\n    '0x9125': ['SQ', '1', 'MRFOVGeometrySequence'],\n    '0x9126': ['SQ', '1', 'VolumeLocalizationSequence'],\n    '0x9127': ['UL', '1', 'SpectroscopyAcquisitionDataColumns'],\n    '0x9147': ['CS', '1', 'DiffusionAnisotropyType'],\n    '0x9151': ['DT', '1', 'FrameReferenceDateTime'],\n    '0x9152': ['SQ', '1', 'MRMetaboliteMapSequence'],\n    '0x9155': ['FD', '1', 'ParallelReductionFactorOutOfPlane'],\n    '0x9159': ['UL', '1', 'SpectroscopyAcquisitionOutOfPlanePhaseSteps'],\n    '0x9166': ['CS', '1', 'BulkMotionStatus'],\n    '0x9168': ['FD', '1', 'ParallelReductionFactorSecondInPlane'],\n    '0x9169': ['CS', '1', 'CardiacBeatRejectionTechnique'],\n    '0x9170': ['CS', '1', 'RespiratoryMotionCompensationTechnique'],\n    '0x9171': ['CS', '1', 'RespiratorySignalSource'],\n    '0x9172': ['CS', '1', 'BulkMotionCompensationTechnique'],\n    '0x9173': ['CS', '1', 'BulkMotionSignalSource'],\n    '0x9174': ['CS', '1', 'ApplicableSafetyStandardAgency'],\n    '0x9175': ['LO', '1', 'ApplicableSafetyStandardDescription'],\n    '0x9176': ['SQ', '1', 'OperatingModeSequence'],\n    '0x9177': ['CS', '1', 'OperatingModeType'],\n    '0x9178': ['CS', '1', 'OperatingMode'],\n    '0x9179': ['CS', '1', 'SpecificAbsorptionRateDefinition'],\n    '0x9180': ['CS', '1', 'GradientOutputType'],\n    '0x9181': ['FD', '1', 'SpecificAbsorptionRateValue'],\n    '0x9182': ['FD', '1', 'GradientOutput'],\n    '0x9183': ['CS', '1', 'FlowCompensationDirection'],\n    '0x9184': ['FD', '1', 'TaggingDelay'],\n    '0x9185': ['ST', '1', 'RespiratoryMotionCompensationTechniqueDescription'],\n    '0x9186': ['SH', '1', 'RespiratorySignalSourceID'],\n    '0x9195': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInHz'],\n    '0x9196': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInHz'],\n    '0x9197': ['SQ', '1', 'MRVelocityEncodingSequence'],\n    '0x9198': ['CS', '1', 'FirstOrderPhaseCorrection'],\n    '0x9199': ['CS', '1', 'WaterReferencedPhaseCorrection'],\n    '0x9200': ['CS', '1', 'MRSpectroscopyAcquisitionType'],\n    '0x9214': ['CS', '1', 'RespiratoryCyclePosition'],\n    '0x9217': ['FD', '1', 'VelocityEncodingMaximumValue'],\n    '0x9218': ['FD', '1', 'TagSpacingSecondDimension'],\n    '0x9219': ['SS', '1', 'TagAngleSecondAxis'],\n    '0x9220': ['FD', '1', 'FrameAcquisitionDuration'],\n    '0x9226': ['SQ', '1', 'MRImageFrameTypeSequence'],\n    '0x9227': ['SQ', '1', 'MRSpectroscopyFrameTypeSequence'],\n    '0x9231': ['US', '1', 'MRAcquisitionPhaseEncodingStepsInPlane'],\n    '0x9232': ['US', '1', 'MRAcquisitionPhaseEncodingStepsOutOfPlane'],\n    '0x9234': ['UL', '1', 'SpectroscopyAcquisitionPhaseColumns'],\n    '0x9236': ['CS', '1', 'CardiacCyclePosition'],\n    '0x9239': ['SQ', '1', 'SpecificAbsorptionRateSequence'],\n    '0x9240': ['US', '1', 'RFEchoTrainLength'],\n    '0x9241': ['US', '1', 'GradientEchoTrainLength'],\n    '0x9250': ['CS', '1', 'ArterialSpinLabelingContrast'],\n    '0x9251': ['SQ', '1', 'MRArterialSpinLabelingSequence'],\n    '0x9252': ['LO', '1', 'ASLTechniqueDescription'],\n    '0x9253': ['US', '1', 'ASLSlabNumber'],\n    '0x9254': ['FD', '1', 'ASLSlabThickness'],\n    '0x9255': ['FD', '3', 'ASLSlabOrientation'],\n    '0x9256': ['FD', '3', 'ASLMidSlabPosition'],\n    '0x9257': ['CS', '1', 'ASLContext'],\n    '0x9258': ['UL', '1', 'ASLPulseTrainDuration'],\n    '0x9259': ['CS', '1', 'ASLCrusherFlag'],\n    '0x925A': ['FD', '1', 'ASLCrusherFlowLimit'],\n    '0x925B': ['LO', '1', 'ASLCrusherDescription'],\n    '0x925C': ['CS', '1', 'ASLBolusCutoffFlag'],\n    '0x925D': ['SQ', '1', 'ASLBolusCutoffTimingSequence'],\n    '0x925E': ['LO', '1', 'ASLBolusCutoffTechnique'],\n    '0x925F': ['UL', '1', 'ASLBolusCutoffDelayTime'],\n    '0x9260': ['SQ', '1', 'ASLSlabSequence'],\n    '0x9295': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInppm'],\n    '0x9296': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInppm'],\n    '0x9297': ['CS', '1', 'WaterReferenceAcquisition'],\n    '0x9298': ['IS', '1', 'EchoPeakPosition'],\n    '0x9301': ['SQ', '1', 'CTAcquisitionTypeSequence'],\n    '0x9302': ['CS', '1', 'AcquisitionType'],\n    '0x9303': ['FD', '1', 'TubeAngle'],\n    '0x9304': ['SQ', '1', 'CTAcquisitionDetailsSequence'],\n    '0x9305': ['FD', '1', 'RevolutionTime'],\n    '0x9306': ['FD', '1', 'SingleCollimationWidth'],\n    '0x9307': ['FD', '1', 'TotalCollimationWidth'],\n    '0x9308': ['SQ', '1', 'CTTableDynamicsSequence'],\n    '0x9309': ['FD', '1', 'TableSpeed'],\n    '0x9310': ['FD', '1', 'TableFeedPerRotation'],\n    '0x9311': ['FD', '1', 'SpiralPitchFactor'],\n    '0x9312': ['SQ', '1', 'CTGeometrySequence'],\n    '0x9313': ['FD', '3', 'DataCollectionCenterPatient'],\n    '0x9314': ['SQ', '1', 'CTReconstructionSequence'],\n    '0x9315': ['CS', '1', 'ReconstructionAlgorithm'],\n    '0x9316': ['CS', '1', 'ConvolutionKernelGroup'],\n    '0x9317': ['FD', '2', 'ReconstructionFieldOfView'],\n    '0x9318': ['FD', '3', 'ReconstructionTargetCenterPatient'],\n    '0x9319': ['FD', '1', 'ReconstructionAngle'],\n    '0x9320': ['SH', '1', 'ImageFilter'],\n    '0x9321': ['SQ', '1', 'CTExposureSequence'],\n    '0x9322': ['FD', '2', 'ReconstructionPixelSpacing'],\n    '0x9323': ['CS', '1-n', 'ExposureModulationType'],\n    '0x9324': ['FD', '1', 'EstimatedDoseSaving'],\n    '0x9325': ['SQ', '1', 'CTXRayDetailsSequence'],\n    '0x9326': ['SQ', '1', 'CTPositionSequence'],\n    '0x9327': ['FD', '1', 'TablePosition'],\n    '0x9328': ['FD', '1', 'ExposureTimeInms'],\n    '0x9329': ['SQ', '1', 'CTImageFrameTypeSequence'],\n    '0x9330': ['FD', '1', 'XRayTubeCurrentInmA'],\n    '0x9332': ['FD', '1', 'ExposureInmAs'],\n    '0x9333': ['CS', '1', 'ConstantVolumeFlag'],\n    '0x9334': ['CS', '1', 'FluoroscopyFlag'],\n    '0x9335': ['FD', '1', 'DistanceSourceToDataCollectionCenter'],\n    '0x9337': ['US', '1', 'ContrastBolusAgentNumber'],\n    '0x9338': ['SQ', '1', 'ContrastBolusIngredientCodeSequence'],\n    '0x9340': ['SQ', '1', 'ContrastAdministrationProfileSequence'],\n    '0x9341': ['SQ', '1', 'ContrastBolusUsageSequence'],\n    '0x9342': ['CS', '1', 'ContrastBolusAgentAdministered'],\n    '0x9343': ['CS', '1', 'ContrastBolusAgentDetected'],\n    '0x9344': ['CS', '1', 'ContrastBolusAgentPhase'],\n    '0x9345': ['FD', '1', 'CTDIvol'],\n    '0x9346': ['SQ', '1', 'CTDIPhantomTypeCodeSequence'],\n    '0x9351': ['FL', '1', 'CalciumScoringMassFactorPatient'],\n    '0x9352': ['FL', '3', 'CalciumScoringMassFactorDevice'],\n    '0x9353': ['FL', '1', 'EnergyWeightingFactor'],\n    '0x9360': ['SQ', '1', 'CTAdditionalXRaySourceSequence'],\n    '0x9361': ['CS', '1', 'MultienergyCTAcquisition'],\n    '0x9362': ['SQ', '1', 'MultienergyCTAcquisitionSequence'],\n    '0x9363': ['SQ', '1', 'MultienergyCTProcessingSequence'],\n    '0x9364': ['SQ', '1', 'MultienergyCTCharacteristicsSequence'],\n    '0x9365': ['SQ', '1', 'MultienergyCTXRaySourceSequence'],\n    '0x9366': ['US', '1', 'XRaySourceIndex'],\n    '0x9367': ['UC', '1', 'XRaySourceID'],\n    '0x9368': ['CS', '1', 'MultienergySourceTechnique'],\n    '0x9369': ['DT', '1', 'SourceStartDateTime'],\n    '0x936A': ['DT', '1', 'SourceEndDateTime'],\n    '0x936B': ['US', '1', 'SwitchingPhaseNumber'],\n    '0x936C': ['DS', '1', 'SwitchingPhaseNominalDuration'],\n    '0x936D': ['DS', '1', 'SwitchingPhaseTransitionDuration'],\n    '0x936E': ['DS', '1', 'EffectiveBinEnergy'],\n    '0x936F': ['SQ', '1', 'MultienergyCTXRayDetectorSequence'],\n    '0x9370': ['US', '1', 'XRayDetectorIndex'],\n    '0x9371': ['UC', '1', 'XRayDetectorID'],\n    '0x9372': ['CS', '1', 'MultienergyDetectorType'],\n    '0x9373': ['ST', '1', 'XRayDetectorLabel'],\n    '0x9374': ['DS', '1', 'NominalMaxEnergy'],\n    '0x9375': ['DS', '1', 'NominalMinEnergy'],\n    '0x9376': ['US', '1-n', 'ReferencedXRayDetectorIndex'],\n    '0x9377': ['US', '1-n', 'ReferencedXRaySourceIndex'],\n    '0x9378': ['US', '1-n', 'ReferencedPathIndex'],\n    '0x9379': ['SQ', '1', 'MultienergyCTPathSequence'],\n    '0x937A': ['US', '1', 'MultienergyCTPathIndex'],\n    '0x937B': ['UT', '1', 'MultienergyAcquisitionDescription'],\n    '0x937C': ['FD', '1', 'MonoenergeticEnergyEquivalent'],\n    '0x937D': ['SQ', '1', 'MaterialCodeSequence'],\n    '0x937E': ['CS', '1', 'DecompositionMethod'],\n    '0x937F': ['UT', '1', 'DecompositionDescription'],\n    '0x9380': ['SQ', '1', 'DecompositionAlgorithmIdentificationSequence'],\n    '0x9381': ['SQ', '1', 'DecompositionMaterialSequence'],\n    '0x9382': ['SQ', '1', 'MaterialAttenuationSequence'],\n    '0x9383': ['DS', '1', 'PhotonEnergy'],\n    '0x9384': ['DS', '1', 'XRayMassAttenuationCoefficient'],\n    '0x9401': ['SQ', '1', 'ProjectionPixelCalibrationSequence'],\n    '0x9402': ['FL', '1', 'DistanceSourceToIsocenter'],\n    '0x9403': ['FL', '1', 'DistanceObjectToTableTop'],\n    '0x9404': ['FL', '2', 'ObjectPixelSpacingInCenterOfBeam'],\n    '0x9405': ['SQ', '1', 'PositionerPositionSequence'],\n    '0x9406': ['SQ', '1', 'TablePositionSequence'],\n    '0x9407': ['SQ', '1', 'CollimatorShapeSequence'],\n    '0x9410': ['CS', '1', 'PlanesInAcquisition'],\n    '0x9412': ['SQ', '1', 'XAXRFFrameCharacteristicsSequence'],\n    '0x9417': ['SQ', '1', 'FrameAcquisitionSequence'],\n    '0x9420': ['CS', '1', 'XRayReceptorType'],\n    '0x9423': ['LO', '1', 'AcquisitionProtocolName'],\n    '0x9424': ['LT', '1', 'AcquisitionProtocolDescription'],\n    '0x9425': ['CS', '1', 'ContrastBolusIngredientOpaque'],\n    '0x9426': ['FL', '1', 'DistanceReceptorPlaneToDetectorHousing'],\n    '0x9427': ['CS', '1', 'IntensifierActiveShape'],\n    '0x9428': ['FL', '1-2', 'IntensifierActiveDimensions'],\n    '0x9429': ['FL', '2', 'PhysicalDetectorSize'],\n    '0x9430': ['FL', '2', 'PositionOfIsocenterProjection'],\n    '0x9432': ['SQ', '1', 'FieldOfViewSequence'],\n    '0x9433': ['LO', '1', 'FieldOfViewDescription'],\n    '0x9434': ['SQ', '1', 'ExposureControlSensingRegionsSequence'],\n    '0x9435': ['CS', '1', 'ExposureControlSensingRegionShape'],\n    '0x9436': ['SS', '1', 'ExposureControlSensingRegionLeftVerticalEdge'],\n    '0x9437': ['SS', '1', 'ExposureControlSensingRegionRightVerticalEdge'],\n    '0x9438': ['SS', '1', 'ExposureControlSensingRegionUpperHorizontalEdge'],\n    '0x9439': ['SS', '1', 'ExposureControlSensingRegionLowerHorizontalEdge'],\n    '0x9440': ['SS', '2', 'CenterOfCircularExposureControlSensingRegion'],\n    '0x9441': ['US', '1', 'RadiusOfCircularExposureControlSensingRegion'],\n    '0x9442': ['SS', '2-n', 'VerticesOfThePolygonalExposureControlSensingRegion'],\n    '0x9445': ['', '', ''],\n    '0x9447': ['FL', '1', 'ColumnAngulationPatient'],\n    '0x9449': ['FL', '1', 'BeamAngle'],\n    '0x9451': ['SQ', '1', 'FrameDetectorParametersSequence'],\n    '0x9452': ['FL', '1', 'CalculatedAnatomyThickness'],\n    '0x9455': ['SQ', '1', 'CalibrationSequence'],\n    '0x9456': ['SQ', '1', 'ObjectThicknessSequence'],\n    '0x9457': ['CS', '1', 'PlaneIdentification'],\n    '0x9461': ['FL', '1-2', 'FieldOfViewDimensionsInFloat'],\n    '0x9462': ['SQ', '1', 'IsocenterReferenceSystemSequence'],\n    '0x9463': ['FL', '1', 'PositionerIsocenterPrimaryAngle'],\n    '0x9464': ['FL', '1', 'PositionerIsocenterSecondaryAngle'],\n    '0x9465': ['FL', '1', 'PositionerIsocenterDetectorRotationAngle'],\n    '0x9466': ['FL', '1', 'TableXPositionToIsocenter'],\n    '0x9467': ['FL', '1', 'TableYPositionToIsocenter'],\n    '0x9468': ['FL', '1', 'TableZPositionToIsocenter'],\n    '0x9469': ['FL', '1', 'TableHorizontalRotationAngle'],\n    '0x9470': ['FL', '1', 'TableHeadTiltAngle'],\n    '0x9471': ['FL', '1', 'TableCradleTiltAngle'],\n    '0x9472': ['SQ', '1', 'FrameDisplayShutterSequence'],\n    '0x9473': ['FL', '1', 'AcquiredImageAreaDoseProduct'],\n    '0x9474': ['CS', '1', 'CArmPositionerTabletopRelationship'],\n    '0x9476': ['SQ', '1', 'XRayGeometrySequence'],\n    '0x9477': ['SQ', '1', 'IrradiationEventIdentificationSequence'],\n    '0x9504': ['SQ', '1', 'XRay3DFrameTypeSequence'],\n    '0x9506': ['SQ', '1', 'ContributingSourcesSequence'],\n    '0x9507': ['SQ', '1', 'XRay3DAcquisitionSequence'],\n    '0x9508': ['FL', '1', 'PrimaryPositionerScanArc'],\n    '0x9509': ['FL', '1', 'SecondaryPositionerScanArc'],\n    '0x9510': ['FL', '1', 'PrimaryPositionerScanStartAngle'],\n    '0x9511': ['FL', '1', 'SecondaryPositionerScanStartAngle'],\n    '0x9514': ['FL', '1', 'PrimaryPositionerIncrement'],\n    '0x9515': ['FL', '1', 'SecondaryPositionerIncrement'],\n    '0x9516': ['DT', '1', 'StartAcquisitionDateTime'],\n    '0x9517': ['DT', '1', 'EndAcquisitionDateTime'],\n    '0x9518': ['SS', '1', 'PrimaryPositionerIncrementSign'],\n    '0x9519': ['SS', '1', 'SecondaryPositionerIncrementSign'],\n    '0x9524': ['LO', '1', 'ApplicationName'],\n    '0x9525': ['LO', '1', 'ApplicationVersion'],\n    '0x9526': ['LO', '1', 'ApplicationManufacturer'],\n    '0x9527': ['CS', '1', 'AlgorithmType'],\n    '0x9528': ['LO', '1', 'AlgorithmDescription'],\n    '0x9530': ['SQ', '1', 'XRay3DReconstructionSequence'],\n    '0x9531': ['LO', '1', 'ReconstructionDescription'],\n    '0x9538': ['SQ', '1', 'PerProjectionAcquisitionSequence'],\n    '0x9541': ['SQ', '1', 'DetectorPositionSequence'],\n    '0x9542': ['SQ', '1', 'XRayAcquisitionDoseSequence'],\n    '0x9543': ['FD', '1', 'XRaySourceIsocenterPrimaryAngle'],\n    '0x9544': ['FD', '1', 'XRaySourceIsocenterSecondaryAngle'],\n    '0x9545': ['FD', '1', 'BreastSupportIsocenterPrimaryAngle'],\n    '0x9546': ['FD', '1', 'BreastSupportIsocenterSecondaryAngle'],\n    '0x9547': ['FD', '1', 'BreastSupportXPositionToIsocenter'],\n    '0x9548': ['FD', '1', 'BreastSupportYPositionToIsocenter'],\n    '0x9549': ['FD', '1', 'BreastSupportZPositionToIsocenter'],\n    '0x9550': ['FD', '1', 'DetectorIsocenterPrimaryAngle'],\n    '0x9551': ['FD', '1', 'DetectorIsocenterSecondaryAngle'],\n    '0x9552': ['FD', '1', 'DetectorXPositionToIsocenter'],\n    '0x9553': ['FD', '1', 'DetectorYPositionToIsocenter'],\n    '0x9554': ['FD', '1', 'DetectorZPositionToIsocenter'],\n    '0x9555': ['SQ', '1', 'XRayGridSequence'],\n    '0x9556': ['SQ', '1', 'XRayFilterSequence'],\n    '0x9557': ['FD', '3', 'DetectorActiveAreaTLHCPosition'],\n    '0x9558': ['FD', '6', 'DetectorActiveAreaOrientation'],\n    '0x9559': ['CS', '1', 'PositionerPrimaryAngleDirection'],\n    '0x9601': ['SQ', '1', 'DiffusionBMatrixSequence'],\n    '0x9602': ['FD', '1', 'DiffusionBValueXX'],\n    '0x9603': ['FD', '1', 'DiffusionBValueXY'],\n    '0x9604': ['FD', '1', 'DiffusionBValueXZ'],\n    '0x9605': ['FD', '1', 'DiffusionBValueYY'],\n    '0x9606': ['FD', '1', 'DiffusionBValueYZ'],\n    '0x9607': ['FD', '1', 'DiffusionBValueZZ'],\n    '0x9621': ['SQ', '1', 'FunctionalMRSequence'],\n    '0x9622': ['CS', '1', 'FunctionalSettlingPhaseFramesPresent'],\n    '0x9623': ['DT', '1', 'FunctionalSyncPulse'],\n    '0x9624': ['CS', '1', 'SettlingPhaseFrame'],\n    '0x9701': ['DT', '1', 'DecayCorrectionDateTime'],\n    '0x9715': ['FD', '1', 'StartDensityThreshold'],\n    '0x9716': ['FD', '1', 'StartRelativeDensityDifferenceThreshold'],\n    '0x9717': ['FD', '1', 'StartCardiacTriggerCountThreshold'],\n    '0x9718': ['FD', '1', 'StartRespiratoryTriggerCountThreshold'],\n    '0x9719': ['FD', '1', 'TerminationCountsThreshold'],\n    '0x9720': ['FD', '1', 'TerminationDensityThreshold'],\n    '0x9721': ['FD', '1', 'TerminationRelativeDensityThreshold'],\n    '0x9722': ['FD', '1', 'TerminationTimeThreshold'],\n    '0x9723': ['FD', '1', 'TerminationCardiacTriggerCountThreshold'],\n    '0x9724': ['FD', '1', 'TerminationRespiratoryTriggerCountThreshold'],\n    '0x9725': ['CS', '1', 'DetectorGeometry'],\n    '0x9726': ['FD', '1', 'TransverseDetectorSeparation'],\n    '0x9727': ['FD', '1', 'AxialDetectorDimension'],\n    '0x9729': ['US', '1', 'RadiopharmaceuticalAgentNumber'],\n    '0x9732': ['SQ', '1', 'PETFrameAcquisitionSequence'],\n    '0x9733': ['SQ', '1', 'PETDetectorMotionDetailsSequence'],\n    '0x9734': ['SQ', '1', 'PETTableDynamicsSequence'],\n    '0x9735': ['SQ', '1', 'PETPositionSequence'],\n    '0x9736': ['SQ', '1', 'PETFrameCorrectionFactorsSequence'],\n    '0x9737': ['SQ', '1', 'RadiopharmaceuticalUsageSequence'],\n    '0x9738': ['CS', '1', 'AttenuationCorrectionSource'],\n    '0x9739': ['US', '1', 'NumberOfIterations'],\n    '0x9740': ['US', '1', 'NumberOfSubsets'],\n    '0x9749': ['SQ', '1', 'PETReconstructionSequence'],\n    '0x9751': ['SQ', '1', 'PETFrameTypeSequence'],\n    '0x9755': ['CS', '1', 'TimeOfFlightInformationUsed'],\n    '0x9756': ['CS', '1', 'ReconstructionType'],\n    '0x9758': ['CS', '1', 'DecayCorrected'],\n    '0x9759': ['CS', '1', 'AttenuationCorrected'],\n    '0x9760': ['CS', '1', 'ScatterCorrected'],\n    '0x9761': ['CS', '1', 'DeadTimeCorrected'],\n    '0x9762': ['CS', '1', 'GantryMotionCorrected'],\n    '0x9763': ['CS', '1', 'PatientMotionCorrected'],\n    '0x9764': ['CS', '1', 'CountLossNormalizationCorrected'],\n    '0x9765': ['CS', '1', 'RandomsCorrected'],\n    '0x9766': ['CS', '1', 'NonUniformRadialSamplingCorrected'],\n    '0x9767': ['CS', '1', 'SensitivityCalibrated'],\n    '0x9768': ['CS', '1', 'DetectorNormalizationCorrection'],\n    '0x9769': ['CS', '1', 'IterativeReconstructionMethod'],\n    '0x9770': ['CS', '1', 'AttenuationCorrectionTemporalRelationship'],\n    '0x9771': ['SQ', '1', 'PatientPhysiologicalStateSequence'],\n    '0x9772': ['SQ', '1', 'PatientPhysiologicalStateCodeSequence'],\n    '0x9801': ['FD', '1-n', 'DepthsOfFocus'],\n    '0x9803': ['SQ', '1', 'ExcludedIntervalsSequence'],\n    '0x9804': ['DT', '1', 'ExclusionStartDateTime'],\n    '0x9805': ['FD', '1', 'ExclusionDuration'],\n    '0x9806': ['SQ', '1', 'USImageDescriptionSequence'],\n    '0x9807': ['SQ', '1', 'ImageDataTypeSequence'],\n    '0x9808': ['CS', '1', 'DataType'],\n    '0x9809': ['SQ', '1', 'TransducerScanPatternCodeSequence'],\n    '0x980B': ['CS', '1', 'AliasedDataType'],\n    '0x980C': ['CS', '1', 'PositionMeasuringDeviceUsed'],\n    '0x980D': ['SQ', '1', 'TransducerGeometryCodeSequence'],\n    '0x980E': ['SQ', '1', 'TransducerBeamSteeringCodeSequence'],\n    '0x980F': ['SQ', '1', 'TransducerApplicationCodeSequence'],\n    '0x9810': ['xs', '1', 'ZeroVelocityPixelValue'],\n    '0x9900': ['LO', '1', 'ReferenceLocationLabel'],\n    '0x9901': ['UT', '1', 'ReferenceLocationDescription'],\n    '0x9902': ['SQ', '1', 'ReferenceBasisCodeSequence'],\n    '0x9903': ['SQ', '1', 'ReferenceGeometryCodeSequence'],\n    '0x9904': ['DS', '1', 'OffsetDistance'],\n    '0x9905': ['CS', '1', 'OffsetDirection'],\n    '0x9906': ['SQ', '1', 'PotentialScheduledProtocolCodeSequence'],\n    '0x9907': ['SQ', '1', 'PotentialRequestedProcedureCodeSequence'],\n    '0x9908': ['UC', '1-n', 'PotentialReasonsForProcedure'],\n    '0x9909': ['SQ', '1', 'PotentialReasonsForProcedureCodeSequence'],\n    '0x990A': ['UC', '1-n', 'PotentialDiagnosticTasks'],\n    '0x990B': ['SQ', '1', 'ContraindicationsCodeSequence'],\n    '0x990C': ['SQ', '1', 'ReferencedDefinedProtocolSequence'],\n    '0x990D': ['SQ', '1', 'ReferencedPerformedProtocolSequence'],\n    '0x990E': ['SQ', '1', 'PredecessorProtocolSequence'],\n    '0x990F': ['UT', '1', 'ProtocolPlanningInformation'],\n    '0x9910': ['UT', '1', 'ProtocolDesignRationale'],\n    '0x9911': ['SQ', '1', 'PatientSpecificationSequence'],\n    '0x9912': ['SQ', '1', 'ModelSpecificationSequence'],\n    '0x9913': ['SQ', '1', 'ParametersSpecificationSequence'],\n    '0x9914': ['SQ', '1', 'InstructionSequence'],\n    '0x9915': ['US', '1', 'InstructionIndex'],\n    '0x9916': ['LO', '1', 'InstructionText'],\n    '0x9917': ['UT', '1', 'InstructionDescription'],\n    '0x9918': ['CS', '1', 'InstructionPerformedFlag'],\n    '0x9919': ['DT', '1', 'InstructionPerformedDateTime'],\n    '0x991A': ['UT', '1', 'InstructionPerformanceComment'],\n    '0x991B': ['SQ', '1', 'PatientPositioningInstructionSequence'],\n    '0x991C': ['SQ', '1', 'PositioningMethodCodeSequence'],\n    '0x991D': ['SQ', '1', 'PositioningLandmarkSequence'],\n    '0x991E': ['UI', '1', 'TargetFrameOfReferenceUID'],\n    '0x991F': ['SQ', '1', 'AcquisitionProtocolElementSpecificationSequence'],\n    '0x9920': ['SQ', '1', 'AcquisitionProtocolElementSequence'],\n    '0x9921': ['US', '1', 'ProtocolElementNumber'],\n    '0x9922': ['LO', '1', 'ProtocolElementName'],\n    '0x9923': ['UT', '1', 'ProtocolElementCharacteristicsSummary'],\n    '0x9924': ['UT', '1', 'ProtocolElementPurpose'],\n    '0x9930': ['CS', '1', 'AcquisitionMotion'],\n    '0x9931': ['SQ', '1', 'AcquisitionStartLocationSequence'],\n    '0x9932': ['SQ', '1', 'AcquisitionEndLocationSequence'],\n    '0x9933': ['SQ', '1', 'ReconstructionProtocolElementSpecificationSequence'],\n    '0x9934': ['SQ', '1', 'ReconstructionProtocolElementSequence'],\n    '0x9935': ['SQ', '1', 'StorageProtocolElementSpecificationSequence'],\n    '0x9936': ['SQ', '1', 'StorageProtocolElementSequence'],\n    '0x9937': ['LO', '1', 'RequestedSeriesDescription'],\n    '0x9938': ['US', '1-n', 'SourceAcquisitionProtocolElementNumber'],\n    '0x9939': ['US', '1-n', 'SourceAcquisitionBeamNumber'],\n    '0x993A': ['US', '1-n', 'SourceReconstructionProtocolElementNumber'],\n    '0x993B': ['SQ', '1', 'ReconstructionStartLocationSequence'],\n    '0x993C': ['SQ', '1', 'ReconstructionEndLocationSequence'],\n    '0x993D': ['SQ', '1', 'ReconstructionAlgorithmSequence'],\n    '0x993E': ['SQ', '1', 'ReconstructionTargetCenterLocationSequence'],\n    '0x9941': ['UT', '1', 'ImageFilterDescription'],\n    '0x9942': ['FD', '1', 'CTDIvolNotificationTrigger'],\n    '0x9943': ['FD', '1', 'DLPNotificationTrigger'],\n    '0x9944': ['CS', '1', 'AutoKVPSelectionType'],\n    '0x9945': ['FD', '1', 'AutoKVPUpperBound'],\n    '0x9946': ['FD', '1', 'AutoKVPLowerBound'],\n    '0x9947': ['CS', '1', 'ProtocolDefinedPatientPosition'],\n    '0xA001': ['SQ', '1', 'ContributingEquipmentSequence'],\n    '0xA002': ['DT', '1', 'ContributionDateTime'],\n    '0xA003': ['ST', '1', 'ContributionDescription']\n  },\n  '0x0020': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x000D': ['UI', '1', 'StudyInstanceUID'],\n    '0x000E': ['UI', '1', 'SeriesInstanceUID'],\n    '0x0010': ['SH', '1', 'StudyID'],\n    '0x0011': ['IS', '1', 'SeriesNumber'],\n    '0x0012': ['IS', '1', 'AcquisitionNumber'],\n    '0x0013': ['IS', '1', 'InstanceNumber'],\n    '0x0014': ['IS', '1', 'IsotopeNumber'],\n    '0x0015': ['IS', '1', 'PhaseNumber'],\n    '0x0016': ['IS', '1', 'IntervalNumber'],\n    '0x0017': ['IS', '1', 'TimeSlotNumber'],\n    '0x0018': ['IS', '1', 'AngleNumber'],\n    '0x0019': ['IS', '1', 'ItemNumber'],\n    '0x0020': ['CS', '2', 'PatientOrientation'],\n    '0x0022': ['IS', '1', 'OverlayNumber'],\n    '0x0024': ['IS', '1', 'CurveNumber'],\n    '0x0026': ['IS', '1', 'LUTNumber'],\n    '0x0030': ['DS', '3', 'ImagePosition'],\n    '0x0032': ['DS', '3', 'ImagePositionPatient'],\n    '0x0035': ['DS', '6', 'ImageOrientation'],\n    '0x0037': ['DS', '6', 'ImageOrientationPatient'],\n    '0x0050': ['DS', '1', 'Location'],\n    '0x0052': ['UI', '1', 'FrameOfReferenceUID'],\n    '0x0060': ['CS', '1', 'Laterality'],\n    '0x0062': ['CS', '1', 'ImageLaterality'],\n    '0x0070': ['LO', '1', 'ImageGeometryType'],\n    '0x0080': ['CS', '1-n', 'MaskingImage'],\n    '0x00AA': ['IS', '1', 'ReportNumber'],\n    '0x0100': ['IS', '1', 'TemporalPositionIdentifier'],\n    '0x0105': ['IS', '1', 'NumberOfTemporalPositions'],\n    '0x0110': ['DS', '1', 'TemporalResolution'],\n    '0x0200': ['UI', '1', 'SynchronizationFrameOfReferenceUID'],\n    '0x0242': ['UI', '1', 'SOPInstanceUIDOfConcatenationSource'],\n    '0x1000': ['IS', '1', 'SeriesInStudy'],\n    '0x1001': ['IS', '1', 'AcquisitionsInSeries'],\n    '0x1002': ['IS', '1', 'ImagesInAcquisition'],\n    '0x1003': ['IS', '1', 'ImagesInSeries'],\n    '0x1004': ['IS', '1', 'AcquisitionsInStudy'],\n    '0x1005': ['IS', '1', 'ImagesInStudy'],\n    '0x1020': ['LO', '1-n', 'Reference'],\n    '0x103F': ['LO', '1', 'TargetPositionReferenceIndicator'],\n    '0x1040': ['LO', '1', 'PositionReferenceIndicator'],\n    '0x1041': ['DS', '1', 'SliceLocation'],\n    '0x1070': ['IS', '1-n', 'OtherStudyNumbers'],\n    '0x1200': ['IS', '1', 'NumberOfPatientRelatedStudies'],\n    '0x1202': ['IS', '1', 'NumberOfPatientRelatedSeries'],\n    '0x1204': ['IS', '1', 'NumberOfPatientRelatedInstances'],\n    '0x1206': ['IS', '1', 'NumberOfStudyRelatedSeries'],\n    '0x1208': ['IS', '1', 'NumberOfStudyRelatedInstances'],\n    '0x1209': ['IS', '1', 'NumberOfSeriesRelatedInstances'],\n    '0x3100': ['CS', '1-n', 'SourceImageIDs'],\n    '0x3401': ['CS', '1', 'ModifyingDeviceID'],\n    '0x3402': ['CS', '1', 'ModifiedImageID'],\n    '0x3403': ['DA', '1', 'ModifiedImageDate'],\n    '0x3404': ['LO', '1', 'ModifyingDeviceManufacturer'],\n    '0x3405': ['TM', '1', 'ModifiedImageTime'],\n    '0x3406': ['LO', '1', 'ModifiedImageDescription'],\n    '0x4000': ['LT', '1', 'ImageComments'],\n    '0x5000': ['AT', '1-n', 'OriginalImageIdentification'],\n    '0x5002': ['LO', '1-n', 'OriginalImageIdentificationNomenclature'],\n    '0x9056': ['SH', '1', 'StackID'],\n    '0x9057': ['UL', '1', 'InStackPositionNumber'],\n    '0x9071': ['SQ', '1', 'FrameAnatomySequence'],\n    '0x9072': ['CS', '1', 'FrameLaterality'],\n    '0x9111': ['SQ', '1', 'FrameContentSequence'],\n    '0x9113': ['SQ', '1', 'PlanePositionSequence'],\n    '0x9116': ['SQ', '1', 'PlaneOrientationSequence'],\n    '0x9128': ['UL', '1', 'TemporalPositionIndex'],\n    '0x9153': ['FD', '1', 'NominalCardiacTriggerDelayTime'],\n    '0x9154': ['FL', '1', 'NominalCardiacTriggerTimePriorToRPeak'],\n    '0x9155': ['FL', '1', 'ActualCardiacTriggerTimePriorToRPeak'],\n    '0x9156': ['US', '1', 'FrameAcquisitionNumber'],\n    '0x9157': ['UL', '1-n', 'DimensionIndexValues'],\n    '0x9158': ['LT', '1', 'FrameComments'],\n    '0x9161': ['UI', '1', 'ConcatenationUID'],\n    '0x9162': ['US', '1', 'InConcatenationNumber'],\n    '0x9163': ['US', '1', 'InConcatenationTotalNumber'],\n    '0x9164': ['UI', '1', 'DimensionOrganizationUID'],\n    '0x9165': ['AT', '1', 'DimensionIndexPointer'],\n    '0x9167': ['AT', '1', 'FunctionalGroupPointer'],\n    '0x9170': ['SQ', '1', 'UnassignedSharedConvertedAttributesSequence'],\n    '0x9171': ['SQ', '1', 'UnassignedPerFrameConvertedAttributesSequence'],\n    '0x9172': ['SQ', '1', 'ConversionSourceAttributesSequence'],\n    '0x9213': ['LO', '1', 'DimensionIndexPrivateCreator'],\n    '0x9221': ['SQ', '1', 'DimensionOrganizationSequence'],\n    '0x9222': ['SQ', '1', 'DimensionIndexSequence'],\n    '0x9228': ['UL', '1', 'ConcatenationFrameOffsetNumber'],\n    '0x9238': ['LO', '1', 'FunctionalGroupPrivateCreator'],\n    '0x9241': ['FL', '1', 'NominalPercentageOfCardiacPhase'],\n    '0x9245': ['FL', '1', 'NominalPercentageOfRespiratoryPhase'],\n    '0x9246': ['FL', '1', 'StartingRespiratoryAmplitude'],\n    '0x9247': ['CS', '1', 'StartingRespiratoryPhase'],\n    '0x9248': ['FL', '1', 'EndingRespiratoryAmplitude'],\n    '0x9249': ['CS', '1', 'EndingRespiratoryPhase'],\n    '0x9250': ['CS', '1', 'RespiratoryTriggerType'],\n    '0x9251': ['FD', '1', 'RRIntervalTimeNominal'],\n    '0x9252': ['FD', '1', 'ActualCardiacTriggerDelayTime'],\n    '0x9253': ['SQ', '1', 'RespiratorySynchronizationSequence'],\n    '0x9254': ['FD', '1', 'RespiratoryIntervalTime'],\n    '0x9255': ['FD', '1', 'NominalRespiratoryTriggerDelayTime'],\n    '0x9256': ['FD', '1', 'RespiratoryTriggerDelayThreshold'],\n    '0x9257': ['FD', '1', 'ActualRespiratoryTriggerDelayTime'],\n    '0x9301': ['FD', '3', 'ImagePositionVolume'],\n    '0x9302': ['FD', '6', 'ImageOrientationVolume'],\n    '0x9307': ['CS', '1', 'UltrasoundAcquisitionGeometry'],\n    '0x9308': ['FD', '3', 'ApexPosition'],\n    '0x9309': ['FD', '16', 'VolumeToTransducerMappingMatrix'],\n    '0x930A': ['FD', '16', 'VolumeToTableMappingMatrix'],\n    '0x930B': ['CS', '1', 'VolumeToTransducerRelationship'],\n    '0x930C': ['CS', '1', 'PatientFrameOfReferenceSource'],\n    '0x930D': ['FD', '1', 'TemporalPositionTimeOffset'],\n    '0x930E': ['SQ', '1', 'PlanePositionVolumeSequence'],\n    '0x930F': ['SQ', '1', 'PlaneOrientationVolumeSequence'],\n    '0x9310': ['SQ', '1', 'TemporalPositionSequence'],\n    '0x9311': ['CS', '1', 'DimensionOrganizationType'],\n    '0x9312': ['UI', '1', 'VolumeFrameOfReferenceUID'],\n    '0x9313': ['UI', '1', 'TableFrameOfReferenceUID'],\n    '0x9421': ['LO', '1', 'DimensionDescriptionLabel'],\n    '0x9450': ['SQ', '1', 'PatientOrientationInFrameSequence'],\n    '0x9453': ['LO', '1', 'FrameLabel'],\n    '0x9518': ['US', '1-n', 'AcquisitionIndex'],\n    '0x9529': ['SQ', '1', 'ContributingSOPInstancesReferenceSequence'],\n    '0x9536': ['US', '1', 'ReconstructionIndex']\n  },\n  '0x0022': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['US', '1', 'LightPathFilterPassThroughWavelength'],\n    '0x0002': ['US', '2', 'LightPathFilterPassBand'],\n    '0x0003': ['US', '1', 'ImagePathFilterPassThroughWavelength'],\n    '0x0004': ['US', '2', 'ImagePathFilterPassBand'],\n    '0x0005': ['CS', '1', 'PatientEyeMovementCommanded'],\n    '0x0006': ['SQ', '1', 'PatientEyeMovementCommandCodeSequence'],\n    '0x0007': ['FL', '1', 'SphericalLensPower'],\n    '0x0008': ['FL', '1', 'CylinderLensPower'],\n    '0x0009': ['FL', '1', 'CylinderAxis'],\n    '0x000A': ['FL', '1', 'EmmetropicMagnification'],\n    '0x000B': ['FL', '1', 'IntraOcularPressure'],\n    '0x000C': ['FL', '1', 'HorizontalFieldOfView'],\n    '0x000D': ['CS', '1', 'PupilDilated'],\n    '0x000E': ['FL', '1', 'DegreeOfDilation'],\n    '0x0010': ['FL', '1', 'StereoBaselineAngle'],\n    '0x0011': ['FL', '1', 'StereoBaselineDisplacement'],\n    '0x0012': ['FL', '1', 'StereoHorizontalPixelOffset'],\n    '0x0013': ['FL', '1', 'StereoVerticalPixelOffset'],\n    '0x0014': ['FL', '1', 'StereoRotation'],\n    '0x0015': ['SQ', '1', 'AcquisitionDeviceTypeCodeSequence'],\n    '0x0016': ['SQ', '1', 'IlluminationTypeCodeSequence'],\n    '0x0017': ['SQ', '1', 'LightPathFilterTypeStackCodeSequence'],\n    '0x0018': ['SQ', '1', 'ImagePathFilterTypeStackCodeSequence'],\n    '0x0019': ['SQ', '1', 'LensesCodeSequence'],\n    '0x001A': ['SQ', '1', 'ChannelDescriptionCodeSequence'],\n    '0x001B': ['SQ', '1', 'RefractiveStateSequence'],\n    '0x001C': ['SQ', '1', 'MydriaticAgentCodeSequence'],\n    '0x001D': ['SQ', '1', 'RelativeImagePositionCodeSequence'],\n    '0x001E': ['FL', '1', 'CameraAngleOfView'],\n    '0x0020': ['SQ', '1', 'StereoPairsSequence'],\n    '0x0021': ['SQ', '1', 'LeftImageSequence'],\n    '0x0022': ['SQ', '1', 'RightImageSequence'],\n    '0x0028': ['CS', '1', 'StereoPairsPresent'],\n    '0x0030': ['FL', '1', 'AxialLengthOfTheEye'],\n    '0x0031': ['SQ', '1', 'OphthalmicFrameLocationSequence'],\n    '0x0032': ['FL', '2-2n', 'ReferenceCoordinates'],\n    '0x0035': ['FL', '1', 'DepthSpatialResolution'],\n    '0x0036': ['FL', '1', 'MaximumDepthDistortion'],\n    '0x0037': ['FL', '1', 'AlongScanSpatialResolution'],\n    '0x0038': ['FL', '1', 'MaximumAlongScanDistortion'],\n    '0x0039': ['CS', '1', 'OphthalmicImageOrientation'],\n    '0x0041': ['FL', '1', 'DepthOfTransverseImage'],\n    '0x0042': ['SQ', '1', 'MydriaticAgentConcentrationUnitsSequence'],\n    '0x0048': ['FL', '1', 'AcrossScanSpatialResolution'],\n    '0x0049': ['FL', '1', 'MaximumAcrossScanDistortion'],\n    '0x004E': ['DS', '1', 'MydriaticAgentConcentration'],\n    '0x0055': ['FL', '1', 'IlluminationWaveLength'],\n    '0x0056': ['FL', '1', 'IlluminationPower'],\n    '0x0057': ['FL', '1', 'IlluminationBandwidth'],\n    '0x0058': ['SQ', '1', 'MydriaticAgentSequence'],\n    '0x1007': ['SQ', '1', 'OphthalmicAxialMeasurementsRightEyeSequence'],\n    '0x1008': ['SQ', '1', 'OphthalmicAxialMeasurementsLeftEyeSequence'],\n    '0x1009': ['CS', '1', 'OphthalmicAxialMeasurementsDeviceType'],\n    '0x1010': ['CS', '1', 'OphthalmicAxialLengthMeasurementsType'],\n    '0x1012': ['SQ', '1', 'OphthalmicAxialLengthSequence'],\n    '0x1019': ['FL', '1', 'OphthalmicAxialLength'],\n    '0x1024': ['SQ', '1', 'LensStatusCodeSequence'],\n    '0x1025': ['SQ', '1', 'VitreousStatusCodeSequence'],\n    '0x1028': ['SQ', '1', 'IOLFormulaCodeSequence'],\n    '0x1029': ['LO', '1', 'IOLFormulaDetail'],\n    '0x1033': ['FL', '1', 'KeratometerIndex'],\n    '0x1035': ['SQ', '1', 'SourceOfOphthalmicAxialLengthCodeSequence'],\n    '0x1036': ['SQ', '1', 'SourceOfCornealSizeDataCodeSequence'],\n    '0x1037': ['FL', '1', 'TargetRefraction'],\n    '0x1039': ['CS', '1', 'RefractiveProcedureOccurred'],\n    '0x1040': ['SQ', '1', 'RefractiveSurgeryTypeCodeSequence'],\n    '0x1044': ['SQ', '1', 'OphthalmicUltrasoundMethodCodeSequence'],\n    '0x1045': ['SQ', '1', 'SurgicallyInducedAstigmatismSequence'],\n    '0x1046': ['CS', '1', 'TypeOfOpticalCorrection'],\n    '0x1047': ['SQ', '1', 'ToricIOLPowerSequence'],\n    '0x1048': ['SQ', '1', 'PredictedToricErrorSequence'],\n    '0x1049': ['CS', '1', 'PreSelectedForImplantation'],\n    '0x104A': ['SQ', '1', 'ToricIOLPowerForExactEmmetropiaSequence'],\n    '0x104B': ['SQ', '1', 'ToricIOLPowerForExactTargetRefractionSequence'],\n    '0x1050': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSequence'],\n    '0x1053': ['FL', '1', 'IOLPower'],\n    '0x1054': ['FL', '1', 'PredictedRefractiveError'],\n    '0x1059': ['FL', '1', 'OphthalmicAxialLengthVelocity'],\n    '0x1065': ['LO', '1', 'LensStatusDescription'],\n    '0x1066': ['LO', '1', 'VitreousStatusDescription'],\n    '0x1090': ['SQ', '1', 'IOLPowerSequence'],\n    '0x1092': ['SQ', '1', 'LensConstantSequence'],\n    '0x1093': ['LO', '1', 'IOLManufacturer'],\n    '0x1094': ['LO', '1', 'LensConstantDescription'],\n    '0x1095': ['LO', '1', 'ImplantName'],\n    '0x1096': ['SQ', '1', 'KeratometryMeasurementTypeCodeSequence'],\n    '0x1097': ['LO', '1', 'ImplantPartNumber'],\n    '0x1100': ['SQ', '1', 'ReferencedOphthalmicAxialMeasurementsSequence'],\n    '0x1101': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence'],\n    '0x1103': ['SQ', '1', 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence'],\n    '0x1121': ['FL', '1', 'IOLPowerForExactEmmetropia'],\n    '0x1122': ['FL', '1', 'IOLPowerForExactTargetRefraction'],\n    '0x1125': ['SQ', '1', 'AnteriorChamberDepthDefinitionCodeSequence'],\n    '0x1127': ['SQ', '1', 'LensThicknessSequence'],\n    '0x1128': ['SQ', '1', 'AnteriorChamberDepthSequence'],\n    '0x112A': ['SQ', '1', 'CalculationCommentSequence'],\n    '0x112B': ['CS', '1', 'CalculationCommentType'],\n    '0x112C': ['LT', '1', 'CalculationComment'],\n    '0x1130': ['FL', '1', 'LensThickness'],\n    '0x1131': ['FL', '1', 'AnteriorChamberDepth'],\n    '0x1132': ['SQ', '1', 'SourceOfLensThicknessDataCodeSequence'],\n    '0x1133': ['SQ', '1', 'SourceOfAnteriorChamberDepthDataCodeSequence'],\n    '0x1134': ['SQ', '1', 'SourceOfRefractiveMeasurementsSequence'],\n    '0x1135': ['SQ', '1', 'SourceOfRefractiveMeasurementsCodeSequence'],\n    '0x1140': ['CS', '1', 'OphthalmicAxialLengthMeasurementModified'],\n    '0x1150': ['SQ', '1', 'OphthalmicAxialLengthDataSourceCodeSequence'],\n    '0x1153': ['SQ', '1', 'OphthalmicAxialLengthAcquisitionMethodCodeSequence'],\n    '0x1155': ['FL', '1', 'SignalToNoiseRatio'],\n    '0x1159': ['LO', '1', 'OphthalmicAxialLengthDataSourceDescription'],\n    '0x1210': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsTotalLengthSequence'],\n    '0x1211': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence'],\n    '0x1212': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsLengthSummationSequence'],\n    '0x1220': ['SQ', '1', 'UltrasoundOphthalmicAxialLengthMeasurementsSequence'],\n    '0x1225': ['SQ', '1', 'OpticalOphthalmicAxialLengthMeasurementsSequence'],\n    '0x1230': ['SQ', '1', 'UltrasoundSelectedOphthalmicAxialLengthSequence'],\n    '0x1250': ['SQ', '1', 'OphthalmicAxialLengthSelectionMethodCodeSequence'],\n    '0x1255': ['SQ', '1', 'OpticalSelectedOphthalmicAxialLengthSequence'],\n    '0x1257': ['SQ', '1', 'SelectedSegmentalOphthalmicAxialLengthSequence'],\n    '0x1260': ['SQ', '1', 'SelectedTotalOphthalmicAxialLengthSequence'],\n    '0x1262': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricSequence'],\n    '0x1265': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricTypeCodeSequence'],\n    '0x1273': ['LO', '1', 'OphthalmicAxialLengthQualityMetricTypeDescription'],\n    '0x1300': ['SQ', '1', 'IntraocularLensCalculationsRightEyeSequence'],\n    '0x1310': ['SQ', '1', 'IntraocularLensCalculationsLeftEyeSequence'],\n    '0x1330': ['SQ', '1', 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence'],\n    '0x1415': ['CS', '1', 'OphthalmicMappingDeviceType'],\n    '0x1420': ['SQ', '1', 'AcquisitionMethodCodeSequence'],\n    '0x1423': ['SQ', '1', 'AcquisitionMethodAlgorithmSequence'],\n    '0x1436': ['SQ', '1', 'OphthalmicThicknessMapTypeCodeSequence'],\n    '0x1443': ['SQ', '1', 'OphthalmicThicknessMappingNormalsSequence'],\n    '0x1445': ['SQ', '1', 'RetinalThicknessDefinitionCodeSequence'],\n    '0x1450': ['SQ', '1', 'PixelValueMappingToCodedConceptSequence'],\n    '0x1452': ['xs', '1', 'MappedPixelValue'],\n    '0x1454': ['LO', '1', 'PixelValueMappingExplanation'],\n    '0x1458': ['SQ', '1', 'OphthalmicThicknessMapQualityThresholdSequence'],\n    '0x1460': ['FL', '1', 'OphthalmicThicknessMapThresholdQualityRating'],\n    '0x1463': ['FL', '2', 'AnatomicStructureReferencePoint'],\n    '0x1465': ['SQ', '1', 'RegistrationToLocalizerSequence'],\n    '0x1466': ['CS', '1', 'RegisteredLocalizerUnits'],\n    '0x1467': ['FL', '2', 'RegisteredLocalizerTopLeftHandCorner'],\n    '0x1468': ['FL', '2', 'RegisteredLocalizerBottomRightHandCorner'],\n    '0x1470': ['SQ', '1', 'OphthalmicThicknessMapQualityRatingSequence'],\n    '0x1472': ['SQ', '1', 'RelevantOPTAttributesSequence'],\n    '0x1512': ['SQ', '1', 'TransformationMethodCodeSequence'],\n    '0x1513': ['SQ', '1', 'TransformationAlgorithmSequence'],\n    '0x1515': ['CS', '1', 'OphthalmicAxialLengthMethod'],\n    '0x1517': ['FL', '1', 'OphthalmicFOV'],\n    '0x1518': ['SQ', '1', 'TwoDimensionalToThreeDimensionalMapSequence'],\n    '0x1525': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityRatingSequence'],\n    '0x1526': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityThresholdSequence'],\n    '0x1527': ['FL', '1', 'WideFieldOphthalmicPhotographyThresholdQualityRating'],\n    '0x1528': ['FL', '1', 'XCoordinatesCenterPixelViewAngle'],\n    '0x1529': ['FL', '1', 'YCoordinatesCenterPixelViewAngle'],\n    '0x1530': ['UL', '1', 'NumberOfMapPoints'],\n    '0x1531': ['OF', '1', 'TwoDimensionalToThreeDimensionalMapData'],\n    '0x1612': ['SQ', '1', 'DerivationAlgorithmSequence'],\n    '0x1615': ['SQ', '1', 'OphthalmicImageTypeCodeSequence'],\n    '0x1616': ['LO', '1', 'OphthalmicImageTypeDescription'],\n    '0x1618': ['SQ', '1', 'ScanPatternTypeCodeSequence'],\n    '0x1620': ['SQ', '1', 'ReferencedSurfaceMeshIdentificationSequence'],\n    '0x1622': ['CS', '1', 'OphthalmicVolumetricPropertiesFlag'],\n    '0x1624': ['FL', '1', 'OphthalmicAnatomicReferencePointXCoordinate'],\n    '0x1626': ['FL', '1', 'OphthalmicAnatomicReferencePointYCoordinate'],\n    '0x1628': ['SQ', '1', 'OphthalmicEnFaceImageQualityRatingSequence'],\n    '0x1630': ['DS', '1', 'QualityThreshold'],\n    '0x1640': ['SQ', '1', 'OCTBscanAnalysisAcquisitionParametersSequence'],\n    '0x1642': ['UL', '1', 'NumberOfBscansPerFrame'],\n    '0x1643': ['FL', '1', 'BscanSlabThickness'],\n    '0x1644': ['FL', '1', 'DistanceBetweenBscanSlabs'],\n    '0x1645': ['FL', '1', 'BscanCycleTime'],\n    '0x1646': ['FL', '1-n', 'BscanCycleTimeVector'],\n    '0x1649': ['FL', '1', 'AscanRate'],\n    '0x1650': ['FL', '1', 'BscanRate'],\n    '0x1658': ['UL', '1', 'SurfaceMeshZPixelOffset']\n  },\n  '0x0024': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['FL', '1', 'VisualFieldHorizontalExtent'],\n    '0x0011': ['FL', '1', 'VisualFieldVerticalExtent'],\n    '0x0012': ['CS', '1', 'VisualFieldShape'],\n    '0x0016': ['SQ', '1', 'ScreeningTestModeCodeSequence'],\n    '0x0018': ['FL', '1', 'MaximumStimulusLuminance'],\n    '0x0020': ['FL', '1', 'BackgroundLuminance'],\n    '0x0021': ['SQ', '1', 'StimulusColorCodeSequence'],\n    '0x0024': ['SQ', '1', 'BackgroundIlluminationColorCodeSequence'],\n    '0x0025': ['FL', '1', 'StimulusArea'],\n    '0x0028': ['FL', '1', 'StimulusPresentationTime'],\n    '0x0032': ['SQ', '1', 'FixationSequence'],\n    '0x0033': ['SQ', '1', 'FixationMonitoringCodeSequence'],\n    '0x0034': ['SQ', '1', 'VisualFieldCatchTrialSequence'],\n    '0x0035': ['US', '1', 'FixationCheckedQuantity'],\n    '0x0036': ['US', '1', 'PatientNotProperlyFixatedQuantity'],\n    '0x0037': ['CS', '1', 'PresentedVisualStimuliDataFlag'],\n    '0x0038': ['US', '1', 'NumberOfVisualStimuli'],\n    '0x0039': ['CS', '1', 'ExcessiveFixationLossesDataFlag'],\n    '0x0040': ['CS', '1', 'ExcessiveFixationLosses'],\n    '0x0042': ['US', '1', 'StimuliRetestingQuantity'],\n    '0x0044': ['LT', '1', 'CommentsOnPatientPerformanceOfVisualField'],\n    '0x0045': ['CS', '1', 'FalseNegativesEstimateFlag'],\n    '0x0046': ['FL', '1', 'FalseNegativesEstimate'],\n    '0x0048': ['US', '1', 'NegativeCatchTrialsQuantity'],\n    '0x0050': ['US', '1', 'FalseNegativesQuantity'],\n    '0x0051': ['CS', '1', 'ExcessiveFalseNegativesDataFlag'],\n    '0x0052': ['CS', '1', 'ExcessiveFalseNegatives'],\n    '0x0053': ['CS', '1', 'FalsePositivesEstimateFlag'],\n    '0x0054': ['FL', '1', 'FalsePositivesEstimate'],\n    '0x0055': ['CS', '1', 'CatchTrialsDataFlag'],\n    '0x0056': ['US', '1', 'PositiveCatchTrialsQuantity'],\n    '0x0057': ['CS', '1', 'TestPointNormalsDataFlag'],\n    '0x0058': ['SQ', '1', 'TestPointNormalsSequence'],\n    '0x0059': ['CS', '1', 'GlobalDeviationProbabilityNormalsFlag'],\n    '0x0060': ['US', '1', 'FalsePositivesQuantity'],\n    '0x0061': ['CS', '1', 'ExcessiveFalsePositivesDataFlag'],\n    '0x0062': ['CS', '1', 'ExcessiveFalsePositives'],\n    '0x0063': ['CS', '1', 'VisualFieldTestNormalsFlag'],\n    '0x0064': ['SQ', '1', 'ResultsNormalsSequence'],\n    '0x0065': ['SQ', '1', 'AgeCorrectedSensitivityDeviationAlgorithmSequence'],\n    '0x0066': ['FL', '1', 'GlobalDeviationFromNormal'],\n    '0x0067': ['SQ', '1', 'GeneralizedDefectSensitivityDeviationAlgorithmSequence'],\n    '0x0068': ['FL', '1', 'LocalizedDeviationFromNormal'],\n    '0x0069': ['LO', '1', 'PatientReliabilityIndicator'],\n    '0x0070': ['FL', '1', 'VisualFieldMeanSensitivity'],\n    '0x0071': ['FL', '1', 'GlobalDeviationProbability'],\n    '0x0072': ['CS', '1', 'LocalDeviationProbabilityNormalsFlag'],\n    '0x0073': ['FL', '1', 'LocalizedDeviationProbability'],\n    '0x0074': ['CS', '1', 'ShortTermFluctuationCalculated'],\n    '0x0075': ['FL', '1', 'ShortTermFluctuation'],\n    '0x0076': ['CS', '1', 'ShortTermFluctuationProbabilityCalculated'],\n    '0x0077': ['FL', '1', 'ShortTermFluctuationProbability'],\n    '0x0078': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalCalculated'],\n    '0x0079': ['FL', '1', 'CorrectedLocalizedDeviationFromNormal'],\n    '0x0080': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated'],\n    '0x0081': ['FL', '1', 'CorrectedLocalizedDeviationFromNormalProbability'],\n    '0x0083': ['SQ', '1', 'GlobalDeviationProbabilitySequence'],\n    '0x0085': ['SQ', '1', 'LocalizedDeviationProbabilitySequence'],\n    '0x0086': ['CS', '1', 'FovealSensitivityMeasured'],\n    '0x0087': ['FL', '1', 'FovealSensitivity'],\n    '0x0088': ['FL', '1', 'VisualFieldTestDuration'],\n    '0x0089': ['SQ', '1', 'VisualFieldTestPointSequence'],\n    '0x0090': ['FL', '1', 'VisualFieldTestPointXCoordinate'],\n    '0x0091': ['FL', '1', 'VisualFieldTestPointYCoordinate'],\n    '0x0092': ['FL', '1', 'AgeCorrectedSensitivityDeviationValue'],\n    '0x0093': ['CS', '1', 'StimulusResults'],\n    '0x0094': ['FL', '1', 'SensitivityValue'],\n    '0x0095': ['CS', '1', 'RetestStimulusSeen'],\n    '0x0096': ['FL', '1', 'RetestSensitivityValue'],\n    '0x0097': ['SQ', '1', 'VisualFieldTestPointNormalsSequence'],\n    '0x0098': ['FL', '1', 'QuantifiedDefect'],\n    '0x0100': ['FL', '1', 'AgeCorrectedSensitivityDeviationProbabilityValue'],\n    '0x0102': ['CS', '1', 'GeneralizedDefectCorrectedSensitivityDeviationFlag'],\n    '0x0103': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationValue'],\n    '0x0104': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue'],\n    '0x0105': ['FL', '1', 'MinimumSensitivityValue'],\n    '0x0106': ['CS', '1', 'BlindSpotLocalized'],\n    '0x0107': ['FL', '1', 'BlindSpotXCoordinate'],\n    '0x0108': ['FL', '1', 'BlindSpotYCoordinate'],\n    '0x0110': ['SQ', '1', 'VisualAcuityMeasurementSequence'],\n    '0x0112': ['SQ', '1', 'RefractiveParametersUsedOnPatientSequence'],\n    '0x0113': ['CS', '1', 'MeasurementLaterality'],\n    '0x0114': ['SQ', '1', 'OphthalmicPatientClinicalInformationLeftEyeSequence'],\n    '0x0115': ['SQ', '1', 'OphthalmicPatientClinicalInformationRightEyeSequence'],\n    '0x0117': ['CS', '1', 'FovealPointNormativeDataFlag'],\n    '0x0118': ['FL', '1', 'FovealPointProbabilityValue'],\n    '0x0120': ['CS', '1', 'ScreeningBaselineMeasured'],\n    '0x0122': ['SQ', '1', 'ScreeningBaselineMeasuredSequence'],\n    '0x0124': ['CS', '1', 'ScreeningBaselineType'],\n    '0x0126': ['FL', '1', 'ScreeningBaselineValue'],\n    '0x0202': ['LO', '1', 'AlgorithmSource'],\n    '0x0306': ['LO', '1', 'DataSetName'],\n    '0x0307': ['LO', '1', 'DataSetVersion'],\n    '0x0308': ['LO', '1', 'DataSetSource'],\n    '0x0309': ['LO', '1', 'DataSetDescription'],\n    '0x0317': ['SQ', '1', 'VisualFieldTestReliabilityGlobalIndexSequence'],\n    '0x0320': ['SQ', '1', 'VisualFieldGlobalResultsIndexSequence'],\n    '0x0325': ['SQ', '1', 'DataObservationSequence'],\n    '0x0338': ['CS', '1', 'IndexNormalsFlag'],\n    '0x0341': ['FL', '1', 'IndexProbability'],\n    '0x0344': ['SQ', '1', 'IndexProbabilitySequence']\n  },\n  '0x0028': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0002': ['US', '1', 'SamplesPerPixel'],\n    '0x0003': ['US', '1', 'SamplesPerPixelUsed'],\n    '0x0004': ['CS', '1', 'PhotometricInterpretation'],\n    '0x0005': ['US', '1', 'ImageDimensions'],\n    '0x0006': ['US', '1', 'PlanarConfiguration'],\n    '0x0008': ['IS', '1', 'NumberOfFrames'],\n    '0x0009': ['AT', '1-n', 'FrameIncrementPointer'],\n    '0x000A': ['AT', '1-n', 'FrameDimensionPointer'],\n    '0x0010': ['US', '1', 'Rows'],\n    '0x0011': ['US', '1', 'Columns'],\n    '0x0012': ['US', '1', 'Planes'],\n    '0x0014': ['US', '1', 'UltrasoundColorDataPresent'],\n    '0x0020': ['', '', ''],\n    '0x0030': ['DS', '2', 'PixelSpacing'],\n    '0x0031': ['DS', '2', 'ZoomFactor'],\n    '0x0032': ['DS', '2', 'ZoomCenter'],\n    '0x0034': ['IS', '2', 'PixelAspectRatio'],\n    '0x0040': ['CS', '1', 'ImageFormat'],\n    '0x0050': ['LO', '1-n', 'ManipulatedImage'],\n    '0x0051': ['CS', '1-n', 'CorrectedImage'],\n    '0x005F': ['LO', '1', 'CompressionRecognitionCode'],\n    '0x0060': ['CS', '1', 'CompressionCode'],\n    '0x0061': ['SH', '1', 'CompressionOriginator'],\n    '0x0062': ['LO', '1', 'CompressionLabel'],\n    '0x0063': ['SH', '1', 'CompressionDescription'],\n    '0x0065': ['CS', '1-n', 'CompressionSequence'],\n    '0x0066': ['AT', '1-n', 'CompressionStepPointers'],\n    '0x0068': ['US', '1', 'RepeatInterval'],\n    '0x0069': ['US', '1', 'BitsGrouped'],\n    '0x0070': ['US', '1-n', 'PerimeterTable'],\n    '0x0071': ['xs', '1', 'PerimeterValue'],\n    '0x0080': ['US', '1', 'PredictorRows'],\n    '0x0081': ['US', '1', 'PredictorColumns'],\n    '0x0082': ['US', '1-n', 'PredictorConstants'],\n    '0x0090': ['CS', '1', 'BlockedPixels'],\n    '0x0091': ['US', '1', 'BlockRows'],\n    '0x0092': ['US', '1', 'BlockColumns'],\n    '0x0093': ['US', '1', 'RowOverlap'],\n    '0x0094': ['US', '1', 'ColumnOverlap'],\n    '0x0100': ['US', '1', 'BitsAllocated'],\n    '0x0101': ['US', '1', 'BitsStored'],\n    '0x0102': ['US', '1', 'HighBit'],\n    '0x0103': ['US', '1', 'PixelRepresentation'],\n    '0x0104': ['xs', '1', 'SmallestValidPixelValue'],\n    '0x0105': ['xs', '1', 'LargestValidPixelValue'],\n    '0x0106': ['xs', '1', 'SmallestImagePixelValue'],\n    '0x0107': ['xs', '1', 'LargestImagePixelValue'],\n    '0x0108': ['xs', '1', 'SmallestPixelValueInSeries'],\n    '0x0109': ['xs', '1', 'LargestPixelValueInSeries'],\n    '0x0110': ['xs', '1', 'SmallestImagePixelValueInPlane'],\n    '0x0111': ['xs', '1', 'LargestImagePixelValueInPlane'],\n    '0x0120': ['xs', '1', 'PixelPaddingValue'],\n    '0x0121': ['xs', '1', 'PixelPaddingRangeLimit'],\n    '0x0122': ['FL', '1', 'FloatPixelPaddingValue'],\n    '0x0123': ['FD', '1', 'DoubleFloatPixelPaddingValue'],\n    '0x0124': ['FL', '1', 'FloatPixelPaddingRangeLimit'],\n    '0x0125': ['FD', '1', 'DoubleFloatPixelPaddingRangeLimit'],\n    '0x0200': ['US', '1', 'ImageLocation'],\n    '0x0300': ['CS', '1', 'QualityControlImage'],\n    '0x0301': ['CS', '1', 'BurnedInAnnotation'],\n    '0x0302': ['CS', '1', 'RecognizableVisualFeatures'],\n    '0x0303': ['CS', '1', 'LongitudinalTemporalInformationModified'],\n    '0x0304': ['UI', '1', 'ReferencedColorPaletteInstanceUID'],\n    '0x0400': ['LO', '1', 'TransformLabel'],\n    '0x0401': ['LO', '1', 'TransformVersionNumber'],\n    '0x0402': ['US', '1', 'NumberOfTransformSteps'],\n    '0x0403': ['LO', '1-n', 'SequenceOfCompressedData'],\n    '0x0404': ['AT', '1-n', 'DetailsOfCoefficients'],\n    '0x04x0': ['US', '1', 'RowsForNthOrderCoefficients'],\n    '0x04x1': ['US', '1', 'ColumnsForNthOrderCoefficients'],\n    '0x04x2': ['LO', '1-n', 'CoefficientCoding'],\n    '0x04x3': ['AT', '1-n', 'CoefficientCodingPointers'],\n    '0x0700': ['LO', '1', 'DCTLabel'],\n    '0x0701': ['CS', '1-n', 'DataBlockDescription'],\n    '0x0702': ['AT', '1-n', 'DataBlock'],\n    '0x0710': ['US', '1', 'NormalizationFactorFormat'],\n    '0x0720': ['US', '1', 'ZonalMapNumberFormat'],\n    '0x0721': ['AT', '1-n', 'ZonalMapLocation'],\n    '0x0722': ['US', '1', 'ZonalMapFormat'],\n    '0x0730': ['US', '1', 'AdaptiveMapFormat'],\n    '0x0740': ['US', '1', 'CodeNumberFormat'],\n    '0x08x0': ['CS', '1-n', 'CodeLabel'],\n    '0x08x2': ['US', '1', 'NumberOfTables'],\n    '0x08x3': ['AT', '1-n', 'CodeTableLocation'],\n    '0x08x4': ['US', '1', 'BitsForCodeWord'],\n    '0x08x8': ['AT', '1-n', 'ImageDataLocation'],\n    '0x0A02': ['CS', '1', 'PixelSpacingCalibrationType'],\n    '0x0A04': ['LO', '1', 'PixelSpacingCalibrationDescription'],\n    '0x1040': ['CS', '1', 'PixelIntensityRelationship'],\n    '0x1041': ['SS', '1', 'PixelIntensityRelationshipSign'],\n    '0x1050': ['DS', '1-n', 'WindowCenter'],\n    '0x1051': ['DS', '1-n', 'WindowWidth'],\n    '0x1052': ['DS', '1', 'RescaleIntercept'],\n    '0x1053': ['DS', '1', 'RescaleSlope'],\n    '0x1054': ['LO', '1', 'RescaleType'],\n    '0x1055': ['LO', '1-n', 'WindowCenterWidthExplanation'],\n    '0x1056': ['CS', '1', 'VOILUTFunction'],\n    '0x1080': ['CS', '1', 'GrayScale'],\n    '0x1090': ['CS', '1', 'RecommendedViewingMode'],\n    '0x1100': ['xs', '3', 'GrayLookupTableDescriptor'],\n    '0x1101': ['xs', '3', 'RedPaletteColorLookupTableDescriptor'],\n    '0x1102': ['xs', '3', 'GreenPaletteColorLookupTableDescriptor'],\n    '0x1103': ['xs', '3', 'BluePaletteColorLookupTableDescriptor'],\n    '0x1104': ['US', '3', 'AlphaPaletteColorLookupTableDescriptor'],\n    '0x1111': ['xs', '4', 'LargeRedPaletteColorLookupTableDescriptor'],\n    '0x1112': ['xs', '4', 'LargeGreenPaletteColorLookupTableDescriptor'],\n    '0x1113': ['xs', '4', 'LargeBluePaletteColorLookupTableDescriptor'],\n    '0x1199': ['UI', '1', 'PaletteColorLookupTableUID'],\n    '0x1200': ['US or SS or OW', '1-n or 1', 'GrayLookupTableData'],\n    '0x1201': ['OW', '1', 'RedPaletteColorLookupTableData'],\n    '0x1202': ['OW', '1', 'GreenPaletteColorLookupTableData'],\n    '0x1203': ['OW', '1', 'BluePaletteColorLookupTableData'],\n    '0x1204': ['OW', '1', 'AlphaPaletteColorLookupTableData'],\n    '0x1211': ['OW', '1', 'LargeRedPaletteColorLookupTableData'],\n    '0x1212': ['OW', '1', 'LargeGreenPaletteColorLookupTableData'],\n    '0x1213': ['OW', '1', 'LargeBluePaletteColorLookupTableData'],\n    '0x1214': ['UI', '1', 'LargePaletteColorLookupTableUID'],\n    '0x1221': ['OW', '1', 'SegmentedRedPaletteColorLookupTableData'],\n    '0x1222': ['OW', '1', 'SegmentedGreenPaletteColorLookupTableData'],\n    '0x1223': ['OW', '1', 'SegmentedBluePaletteColorLookupTableData'],\n    '0x1224': ['OW', '1', 'SegmentedAlphaPaletteColorLookupTableData'],\n    '0x1230': ['SQ', '1', 'StoredValueColorRangeSequence'],\n    '0x1231': ['FD', '1', 'MinimumStoredValueMapped'],\n    '0x1232': ['FD', '1', 'MaximumStoredValueMapped'],\n    '0x1300': ['CS', '1', 'BreastImplantPresent'],\n    '0x1350': ['CS', '1', 'PartialView'],\n    '0x1351': ['ST', '1', 'PartialViewDescription'],\n    '0x1352': ['SQ', '1', 'PartialViewCodeSequence'],\n    '0x135A': ['CS', '1', 'SpatialLocationsPreserved'],\n    '0x1401': ['SQ', '1', 'DataFrameAssignmentSequence'],\n    '0x1402': ['CS', '1', 'DataPathAssignment'],\n    '0x1403': ['US', '1', 'BitsMappedToColorLookupTable'],\n    '0x1404': ['SQ', '1', 'BlendingLUT1Sequence'],\n    '0x1405': ['CS', '1', 'BlendingLUT1TransferFunction'],\n    '0x1406': ['FD', '1', 'BlendingWeightConstant'],\n    '0x1407': ['US', '3', 'BlendingLookupTableDescriptor'],\n    '0x1408': ['OW', '1', 'BlendingLookupTableData'],\n    '0x140B': ['SQ', '1', 'EnhancedPaletteColorLookupTableSequence'],\n    '0x140C': ['SQ', '1', 'BlendingLUT2Sequence'],\n    '0x140D': ['CS', '1', 'BlendingLUT2TransferFunction'],\n    '0x140E': ['CS', '1', 'DataPathID'],\n    '0x140F': ['CS', '1', 'RGBLUTTransferFunction'],\n    '0x1410': ['CS', '1', 'AlphaLUTTransferFunction'],\n    '0x2000': ['OB', '1', 'ICCProfile'],\n    '0x2002': ['CS', '1', 'ColorSpace'],\n    '0x2110': ['CS', '1', 'LossyImageCompression'],\n    '0x2112': ['DS', '1-n', 'LossyImageCompressionRatio'],\n    '0x2114': ['CS', '1-n', 'LossyImageCompressionMethod'],\n    '0x3000': ['SQ', '1', 'ModalityLUTSequence'],\n    '0x3002': ['xs', '3', 'LUTDescriptor'],\n    '0x3003': ['LO', '1', 'LUTExplanation'],\n    '0x3004': ['LO', '1', 'ModalityLUTType'],\n    '0x3006': ['US or OW', '1-n or 1', 'LUTData'],\n    '0x3010': ['SQ', '1', 'VOILUTSequence'],\n    '0x3110': ['SQ', '1', 'SoftcopyVOILUTSequence'],\n    '0x4000': ['LT', '1', 'ImagePresentationComments'],\n    '0x5000': ['SQ', '1', 'BiPlaneAcquisitionSequence'],\n    '0x6010': ['US', '1', 'RepresentativeFrameNumber'],\n    '0x6020': ['US', '1-n', 'FrameNumbersOfInterest'],\n    '0x6022': ['LO', '1-n', 'FrameOfInterestDescription'],\n    '0x6023': ['CS', '1-n', 'FrameOfInterestType'],\n    '0x6030': ['US', '1-n', 'MaskPointers'],\n    '0x6040': ['US', '1-n', 'RWavePointer'],\n    '0x6100': ['SQ', '1', 'MaskSubtractionSequence'],\n    '0x6101': ['CS', '1', 'MaskOperation'],\n    '0x6102': ['US', '2-2n', 'ApplicableFrameRange'],\n    '0x6110': ['US', '1-n', 'MaskFrameNumbers'],\n    '0x6112': ['US', '1', 'ContrastFrameAveraging'],\n    '0x6114': ['FL', '2', 'MaskSubPixelShift'],\n    '0x6120': ['SS', '1', 'TIDOffset'],\n    '0x6190': ['ST', '1', 'MaskOperationExplanation'],\n    '0x7000': ['SQ', '1', 'EquipmentAdministratorSequence'],\n    '0x7001': ['US', '1', 'NumberOfDisplaySubsystems'],\n    '0x7002': ['US', '1', 'CurrentConfigurationID'],\n    '0x7003': ['US', '1', 'DisplaySubsystemID'],\n    '0x7004': ['SH', '1', 'DisplaySubsystemName'],\n    '0x7005': ['LO', '1', 'DisplaySubsystemDescription'],\n    '0x7006': ['CS', '1', 'SystemStatus'],\n    '0x7007': ['LO', '1', 'SystemStatusComment'],\n    '0x7008': ['SQ', '1', 'TargetLuminanceCharacteristicsSequence'],\n    '0x7009': ['US', '1', 'LuminanceCharacteristicsID'],\n    '0x700A': ['SQ', '1', 'DisplaySubsystemConfigurationSequence'],\n    '0x700B': ['US', '1', 'ConfigurationID'],\n    '0x700C': ['SH', '1', 'ConfigurationName'],\n    '0x700D': ['LO', '1', 'ConfigurationDescription'],\n    '0x700E': ['US', '1', 'ReferencedTargetLuminanceCharacteristicsID'],\n    '0x700F': ['SQ', '1', 'QAResultsSequence'],\n    '0x7010': ['SQ', '1', 'DisplaySubsystemQAResultsSequence'],\n    '0x7011': ['SQ', '1', 'ConfigurationQAResultsSequence'],\n    '0x7012': ['SQ', '1', 'MeasurementEquipmentSequence'],\n    '0x7013': ['CS', '1-n', 'MeasurementFunctions'],\n    '0x7014': ['CS', '1', 'MeasurementEquipmentType'],\n    '0x7015': ['SQ', '1', 'VisualEvaluationResultSequence'],\n    '0x7016': ['SQ', '1', 'DisplayCalibrationResultSequence'],\n    '0x7017': ['US', '1', 'DDLValue'],\n    '0x7018': ['FL', '2', 'CIExyWhitePoint'],\n    '0x7019': ['CS', '1', 'DisplayFunctionType'],\n    '0x701A': ['FL', '1', 'GammaValue'],\n    '0x701B': ['US', '1', 'NumberOfLuminancePoints'],\n    '0x701C': ['SQ', '1', 'LuminanceResponseSequence'],\n    '0x701D': ['FL', '1', 'TargetMinimumLuminance'],\n    '0x701E': ['FL', '1', 'TargetMaximumLuminance'],\n    '0x701F': ['FL', '1', 'LuminanceValue'],\n    '0x7020': ['LO', '1', 'LuminanceResponseDescription'],\n    '0x7021': ['CS', '1', 'WhitePointFlag'],\n    '0x7022': ['SQ', '1', 'DisplayDeviceTypeCodeSequence'],\n    '0x7023': ['SQ', '1', 'DisplaySubsystemSequence'],\n    '0x7024': ['SQ', '1', 'LuminanceResultSequence'],\n    '0x7025': ['CS', '1', 'AmbientLightValueSource'],\n    '0x7026': ['CS', '1-n', 'MeasuredCharacteristics'],\n    '0x7027': ['SQ', '1', 'LuminanceUniformityResultSequence'],\n    '0x7028': ['SQ', '1', 'VisualEvaluationTestSequence'],\n    '0x7029': ['CS', '1', 'TestResult'],\n    '0x702A': ['LO', '1', 'TestResultComment'],\n    '0x702B': ['CS', '1', 'TestImageValidation'],\n    '0x702C': ['SQ', '1', 'TestPatternCodeSequence'],\n    '0x702D': ['SQ', '1', 'MeasurementPatternCodeSequence'],\n    '0x702E': ['SQ', '1', 'VisualEvaluationMethodCodeSequence'],\n    '0x7FE0': ['UR', '1', 'PixelDataProviderURL'],\n    '0x9001': ['UL', '1', 'DataPointRows'],\n    '0x9002': ['UL', '1', 'DataPointColumns'],\n    '0x9003': ['CS', '1', 'SignalDomainColumns'],\n    '0x9099': ['US', '1', 'LargestMonochromePixelValue'],\n    '0x9108': ['CS', '1', 'DataRepresentation'],\n    '0x9110': ['SQ', '1', 'PixelMeasuresSequence'],\n    '0x9132': ['SQ', '1', 'FrameVOILUTSequence'],\n    '0x9145': ['SQ', '1', 'PixelValueTransformationSequence'],\n    '0x9235': ['CS', '1', 'SignalDomainRows'],\n    '0x9411': ['FL', '1', 'DisplayFilterPercentage'],\n    '0x9415': ['SQ', '1', 'FramePixelShiftSequence'],\n    '0x9416': ['US', '1', 'SubtractionItemID'],\n    '0x9422': ['SQ', '1', 'PixelIntensityRelationshipLUTSequence'],\n    '0x9443': ['SQ', '1', 'FramePixelDataPropertiesSequence'],\n    '0x9444': ['CS', '1', 'GeometricalProperties'],\n    '0x9445': ['FL', '1', 'GeometricMaximumDistortion'],\n    '0x9446': ['CS', '1-n', 'ImageProcessingApplied'],\n    '0x9454': ['CS', '1', 'MaskSelectionMode'],\n    '0x9474': ['CS', '1', 'LUTFunction'],\n    '0x9478': ['FL', '1', 'MaskVisibilityPercentage'],\n    '0x9501': ['SQ', '1', 'PixelShiftSequence'],\n    '0x9502': ['SQ', '1', 'RegionPixelShiftSequence'],\n    '0x9503': ['SS', '2-2n', 'VerticesOfTheRegion'],\n    '0x9505': ['SQ', '1', 'MultiFramePresentationSequence'],\n    '0x9506': ['US', '2-2n', 'PixelShiftFrameRange'],\n    '0x9507': ['US', '2-2n', 'LUTFrameRange'],\n    '0x9520': ['DS', '16', 'ImageToEquipmentMappingMatrix'],\n    '0x9537': ['CS', '1', 'EquipmentCoordinateSystemIdentification']\n  },\n  '0x0032': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x000A': ['CS', '1', 'StudyStatusID'],\n    '0x000C': ['CS', '1', 'StudyPriorityID'],\n    '0x0012': ['LO', '1', 'StudyIDIssuer'],\n    '0x0032': ['DA', '1', 'StudyVerifiedDate'],\n    '0x0033': ['TM', '1', 'StudyVerifiedTime'],\n    '0x0034': ['DA', '1', 'StudyReadDate'],\n    '0x0035': ['TM', '1', 'StudyReadTime'],\n    '0x1000': ['DA', '1', 'ScheduledStudyStartDate'],\n    '0x1001': ['TM', '1', 'ScheduledStudyStartTime'],\n    '0x1010': ['DA', '1', 'ScheduledStudyStopDate'],\n    '0x1011': ['TM', '1', 'ScheduledStudyStopTime'],\n    '0x1020': ['LO', '1', 'ScheduledStudyLocation'],\n    '0x1021': ['AE', '1-n', 'ScheduledStudyLocationAETitle'],\n    '0x1030': ['LO', '1', 'ReasonForStudy'],\n    '0x1031': ['SQ', '1', 'RequestingPhysicianIdentificationSequence'],\n    '0x1032': ['PN', '1', 'RequestingPhysician'],\n    '0x1033': ['LO', '1', 'RequestingService'],\n    '0x1034': ['SQ', '1', 'RequestingServiceCodeSequence'],\n    '0x1040': ['DA', '1', 'StudyArrivalDate'],\n    '0x1041': ['TM', '1', 'StudyArrivalTime'],\n    '0x1050': ['DA', '1', 'StudyCompletionDate'],\n    '0x1051': ['TM', '1', 'StudyCompletionTime'],\n    '0x1055': ['CS', '1', 'StudyComponentStatusID'],\n    '0x1060': ['LO', '1', 'RequestedProcedureDescription'],\n    '0x1064': ['SQ', '1', 'RequestedProcedureCodeSequence'],\n    '0x1065': ['SQ', '1', 'RequestedLateralityCodeSequence'],\n    '0x1066': ['UT', '1', 'ReasonForVisit'],\n    '0x1067': ['SQ', '1', 'ReasonForVisitCodeSequence'],\n    '0x1070': ['LO', '1', 'RequestedContrastAgent'],\n    '0x4000': ['LT', '1', 'StudyComments']\n  },\n  '0x0034': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['SQ', '1', 'FlowIdentifierSequence'],\n    '0x0002': ['OB', '1', 'FlowIdentifier'],\n    '0x0003': ['UI', '1', 'FlowTransferSyntaxUID'],\n    '0x0004': ['UL', '1', 'FlowRTPSamplingRate'],\n    '0x0005': ['OB', '1', 'SourceIdentifier'],\n    '0x0007': ['OB', '1', 'FrameOriginTimestamp'],\n    '0x0008': ['CS', '1', 'IncludesImagingSubject'],\n    '0x0009': ['SQ', '1', 'FrameUsefulnessGroupSequence'],\n    '0x000A': ['SQ', '1', 'RealTimeBulkDataFlowSequence'],\n    '0x000B': ['SQ', '1', 'CameraPositionGroupSequence'],\n    '0x000C': ['CS', '1', 'IncludesInformation'],\n    '0x000D': ['SQ', '1', 'TimeOfFrameGroupSequence']\n  },\n  '0x0038': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0004': ['SQ', '1', 'ReferencedPatientAliasSequence'],\n    '0x0008': ['CS', '1', 'VisitStatusID'],\n    '0x0010': ['LO', '1', 'AdmissionID'],\n    '0x0011': ['LO', '1', 'IssuerOfAdmissionID'],\n    '0x0014': ['SQ', '1', 'IssuerOfAdmissionIDSequence'],\n    '0x0016': ['LO', '1', 'RouteOfAdmissions'],\n    '0x001A': ['DA', '1', 'ScheduledAdmissionDate'],\n    '0x001B': ['TM', '1', 'ScheduledAdmissionTime'],\n    '0x001C': ['DA', '1', 'ScheduledDischargeDate'],\n    '0x001D': ['TM', '1', 'ScheduledDischargeTime'],\n    '0x001E': ['LO', '1', 'ScheduledPatientInstitutionResidence'],\n    '0x0020': ['DA', '1', 'AdmittingDate'],\n    '0x0021': ['TM', '1', 'AdmittingTime'],\n    '0x0030': ['DA', '1', 'DischargeDate'],\n    '0x0032': ['TM', '1', 'DischargeTime'],\n    '0x0040': ['LO', '1', 'DischargeDiagnosisDescription'],\n    '0x0044': ['SQ', '1', 'DischargeDiagnosisCodeSequence'],\n    '0x0050': ['LO', '1', 'SpecialNeeds'],\n    '0x0060': ['LO', '1', 'ServiceEpisodeID'],\n    '0x0061': ['LO', '1', 'IssuerOfServiceEpisodeID'],\n    '0x0062': ['LO', '1', 'ServiceEpisodeDescription'],\n    '0x0064': ['SQ', '1', 'IssuerOfServiceEpisodeIDSequence'],\n    '0x0100': ['SQ', '1', 'PertinentDocumentsSequence'],\n    '0x0101': ['SQ', '1', 'PertinentResourcesSequence'],\n    '0x0102': ['LO', '1', 'ResourceDescription'],\n    '0x0300': ['LO', '1', 'CurrentPatientLocation'],\n    '0x0400': ['LO', '1', 'PatientInstitutionResidence'],\n    '0x0500': ['LO', '1', 'PatientState'],\n    '0x0502': ['SQ', '1', 'PatientClinicalTrialParticipationSequence'],\n    '0x4000': ['LT', '1', 'VisitComments']\n  },\n  '0x003A': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0004': ['CS', '1', 'WaveformOriginality'],\n    '0x0005': ['US', '1', 'NumberOfWaveformChannels'],\n    '0x0010': ['UL', '1', 'NumberOfWaveformSamples'],\n    '0x001A': ['DS', '1', 'SamplingFrequency'],\n    '0x0020': ['SH', '1', 'MultiplexGroupLabel'],\n    '0x0200': ['SQ', '1', 'ChannelDefinitionSequence'],\n    '0x0202': ['IS', '1', 'WaveformChannelNumber'],\n    '0x0203': ['SH', '1', 'ChannelLabel'],\n    '0x0205': ['CS', '1-n', 'ChannelStatus'],\n    '0x0208': ['SQ', '1', 'ChannelSourceSequence'],\n    '0x0209': ['SQ', '1', 'ChannelSourceModifiersSequence'],\n    '0x020A': ['SQ', '1', 'SourceWaveformSequence'],\n    '0x020C': ['LO', '1', 'ChannelDerivationDescription'],\n    '0x0210': ['DS', '1', 'ChannelSensitivity'],\n    '0x0211': ['SQ', '1', 'ChannelSensitivityUnitsSequence'],\n    '0x0212': ['DS', '1', 'ChannelSensitivityCorrectionFactor'],\n    '0x0213': ['DS', '1', 'ChannelBaseline'],\n    '0x0214': ['DS', '1', 'ChannelTimeSkew'],\n    '0x0215': ['DS', '1', 'ChannelSampleSkew'],\n    '0x0218': ['DS', '1', 'ChannelOffset'],\n    '0x021A': ['US', '1', 'WaveformBitsStored'],\n    '0x0220': ['DS', '1', 'FilterLowFrequency'],\n    '0x0221': ['DS', '1', 'FilterHighFrequency'],\n    '0x0222': ['DS', '1', 'NotchFilterFrequency'],\n    '0x0223': ['DS', '1', 'NotchFilterBandwidth'],\n    '0x0230': ['FL', '1', 'WaveformDataDisplayScale'],\n    '0x0231': ['US', '3', 'WaveformDisplayBackgroundCIELabValue'],\n    '0x0240': ['SQ', '1', 'WaveformPresentationGroupSequence'],\n    '0x0241': ['US', '1', 'PresentationGroupNumber'],\n    '0x0242': ['SQ', '1', 'ChannelDisplaySequence'],\n    '0x0244': ['US', '3', 'ChannelRecommendedDisplayCIELabValue'],\n    '0x0245': ['FL', '1', 'ChannelPosition'],\n    '0x0246': ['CS', '1', 'DisplayShadingFlag'],\n    '0x0247': ['FL', '1', 'FractionalChannelDisplayScale'],\n    '0x0248': ['FL', '1', 'AbsoluteChannelDisplayScale'],\n    '0x0300': ['SQ', '1', 'MultiplexedAudioChannelsDescriptionCodeSequence'],\n    '0x0301': ['IS', '1', 'ChannelIdentificationCode'],\n    '0x0302': ['CS', '1', 'ChannelMode'],\n    '0x0310': ['UI', '1', 'MultiplexGroupUID'],\n    '0x0311': ['DS', '1', 'PowerlineFrequency'],\n    '0x0312': ['SQ', '1', 'ChannelImpedanceSequence'],\n    '0x0313': ['DS', '1', 'ImpedanceValue'],\n    '0x0314': ['DT', '1', 'ImpedanceMeasurementDateTime'],\n    '0x0315': ['DS', '1', 'ImpedanceMeasurementFrequency'],\n    '0x0316': ['CS', '1', 'ImpedanceMeasurementCurrentType']\n  },\n  '0x0040': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['AE', '1-n', 'ScheduledStationAETitle'],\n    '0x0002': ['DA', '1', 'ScheduledProcedureStepStartDate'],\n    '0x0003': ['TM', '1', 'ScheduledProcedureStepStartTime'],\n    '0x0004': ['DA', '1', 'ScheduledProcedureStepEndDate'],\n    '0x0005': ['TM', '1', 'ScheduledProcedureStepEndTime'],\n    '0x0006': ['PN', '1', 'ScheduledPerformingPhysicianName'],\n    '0x0007': ['LO', '1', 'ScheduledProcedureStepDescription'],\n    '0x0008': ['SQ', '1', 'ScheduledProtocolCodeSequence'],\n    '0x0009': ['SH', '1', 'ScheduledProcedureStepID'],\n    '0x000A': ['SQ', '1', 'StageCodeSequence'],\n    '0x000B': ['SQ', '1', 'ScheduledPerformingPhysicianIdentificationSequence'],\n    '0x0010': ['SH', '1-n', 'ScheduledStationName'],\n    '0x0011': ['SH', '1', 'ScheduledProcedureStepLocation'],\n    '0x0012': ['LO', '1', 'PreMedication'],\n    '0x0020': ['CS', '1', 'ScheduledProcedureStepStatus'],\n    '0x0026': ['SQ', '1', 'OrderPlacerIdentifierSequence'],\n    '0x0027': ['SQ', '1', 'OrderFillerIdentifierSequence'],\n    '0x0031': ['UT', '1', 'LocalNamespaceEntityID'],\n    '0x0032': ['UT', '1', 'UniversalEntityID'],\n    '0x0033': ['CS', '1', 'UniversalEntityIDType'],\n    '0x0035': ['CS', '1', 'IdentifierTypeCode'],\n    '0x0036': ['SQ', '1', 'AssigningFacilitySequence'],\n    '0x0039': ['SQ', '1', 'AssigningJurisdictionCodeSequence'],\n    '0x003A': ['SQ', '1', 'AssigningAgencyOrDepartmentCodeSequence'],\n    '0x0100': ['SQ', '1', 'ScheduledProcedureStepSequence'],\n    '0x0220': ['SQ', '1', 'ReferencedNonImageCompositeSOPInstanceSequence'],\n    '0x0241': ['AE', '1', 'PerformedStationAETitle'],\n    '0x0242': ['SH', '1', 'PerformedStationName'],\n    '0x0243': ['SH', '1', 'PerformedLocation'],\n    '0x0244': ['DA', '1', 'PerformedProcedureStepStartDate'],\n    '0x0245': ['TM', '1', 'PerformedProcedureStepStartTime'],\n    '0x0250': ['DA', '1', 'PerformedProcedureStepEndDate'],\n    '0x0251': ['TM', '1', 'PerformedProcedureStepEndTime'],\n    '0x0252': ['CS', '1', 'PerformedProcedureStepStatus'],\n    '0x0253': ['SH', '1', 'PerformedProcedureStepID'],\n    '0x0254': ['LO', '1', 'PerformedProcedureStepDescription'],\n    '0x0255': ['LO', '1', 'PerformedProcedureTypeDescription'],\n    '0x0260': ['SQ', '1', 'PerformedProtocolCodeSequence'],\n    '0x0261': ['CS', '1', 'PerformedProtocolType'],\n    '0x0270': ['SQ', '1', 'ScheduledStepAttributesSequence'],\n    '0x0275': ['SQ', '1', 'RequestAttributesSequence'],\n    '0x0280': ['ST', '1', 'CommentsOnThePerformedProcedureStep'],\n    '0x0281': ['SQ', '1', 'PerformedProcedureStepDiscontinuationReasonCodeSequence'],\n    '0x0293': ['SQ', '1', 'QuantitySequence'],\n    '0x0294': ['DS', '1', 'Quantity'],\n    '0x0295': ['SQ', '1', 'MeasuringUnitsSequence'],\n    '0x0296': ['SQ', '1', 'BillingItemSequence'],\n    '0x0300': ['US', '1', 'TotalTimeOfFluoroscopy'],\n    '0x0301': ['US', '1', 'TotalNumberOfExposures'],\n    '0x0302': ['US', '1', 'EntranceDose'],\n    '0x0303': ['US', '1-2', 'ExposedArea'],\n    '0x0306': ['DS', '1', 'DistanceSourceToEntrance'],\n    '0x0307': ['DS', '1', 'DistanceSourceToSupport'],\n    '0x030E': ['SQ', '1', 'ExposureDoseSequence'],\n    '0x0310': ['ST', '1', 'CommentsOnRadiationDose'],\n    '0x0312': ['DS', '1', 'XRayOutput'],\n    '0x0314': ['DS', '1', 'HalfValueLayer'],\n    '0x0316': ['DS', '1', 'OrganDose'],\n    '0x0318': ['CS', '1', 'OrganExposed'],\n    '0x0320': ['SQ', '1', 'BillingProcedureStepSequence'],\n    '0x0321': ['SQ', '1', 'FilmConsumptionSequence'],\n    '0x0324': ['SQ', '1', 'BillingSuppliesAndDevicesSequence'],\n    '0x0330': ['SQ', '1', 'ReferencedProcedureStepSequence'],\n    '0x0340': ['SQ', '1', 'PerformedSeriesSequence'],\n    '0x0400': ['LT', '1', 'CommentsOnTheScheduledProcedureStep'],\n    '0x0440': ['SQ', '1', 'ProtocolContextSequence'],\n    '0x0441': ['SQ', '1', 'ContentItemModifierSequence'],\n    '0x0500': ['SQ', '1', 'ScheduledSpecimenSequence'],\n    '0x050A': ['LO', '1', 'SpecimenAccessionNumber'],\n    '0x0512': ['LO', '1', 'ContainerIdentifier'],\n    '0x0513': ['SQ', '1', 'IssuerOfTheContainerIdentifierSequence'],\n    '0x0515': ['SQ', '1', 'AlternateContainerIdentifierSequence'],\n    '0x0518': ['SQ', '1', 'ContainerTypeCodeSequence'],\n    '0x051A': ['LO', '1', 'ContainerDescription'],\n    '0x0520': ['SQ', '1', 'ContainerComponentSequence'],\n    '0x0550': ['SQ', '1', 'SpecimenSequence'],\n    '0x0551': ['LO', '1', 'SpecimenIdentifier'],\n    '0x0552': ['SQ', '1', 'SpecimenDescriptionSequenceTrial'],\n    '0x0553': ['ST', '1', 'SpecimenDescriptionTrial'],\n    '0x0554': ['UI', '1', 'SpecimenUID'],\n    '0x0555': ['SQ', '1', 'AcquisitionContextSequence'],\n    '0x0556': ['ST', '1', 'AcquisitionContextDescription'],\n    '0x0560': ['SQ', '1', 'SpecimenDescriptionSequence'],\n    '0x0562': ['SQ', '1', 'IssuerOfTheSpecimenIdentifierSequence'],\n    '0x059A': ['SQ', '1', 'SpecimenTypeCodeSequence'],\n    '0x0600': ['LO', '1', 'SpecimenShortDescription'],\n    '0x0602': ['UT', '1', 'SpecimenDetailedDescription'],\n    '0x0610': ['SQ', '1', 'SpecimenPreparationSequence'],\n    '0x0612': ['SQ', '1', 'SpecimenPreparationStepContentItemSequence'],\n    '0x0620': ['SQ', '1', 'SpecimenLocalizationContentItemSequence'],\n    '0x06FA': ['LO', '1', 'SlideIdentifier'],\n    '0x0710': ['SQ', '1', 'WholeSlideMicroscopyImageFrameTypeSequence'],\n    '0x071A': ['SQ', '1', 'ImageCenterPointCoordinatesSequence'],\n    '0x072A': ['DS', '1', 'XOffsetInSlideCoordinateSystem'],\n    '0x073A': ['DS', '1', 'YOffsetInSlideCoordinateSystem'],\n    '0x074A': ['DS', '1', 'ZOffsetInSlideCoordinateSystem'],\n    '0x08D8': ['SQ', '1', 'PixelSpacingSequence'],\n    '0x08DA': ['SQ', '1', 'CoordinateSystemAxisCodeSequence'],\n    '0x08EA': ['SQ', '1', 'MeasurementUnitsCodeSequence'],\n    '0x09F8': ['SQ', '1', 'VitalStainCodeSequenceTrial'],\n    '0x1001': ['SH', '1', 'RequestedProcedureID'],\n    '0x1002': ['LO', '1', 'ReasonForTheRequestedProcedure'],\n    '0x1003': ['SH', '1', 'RequestedProcedurePriority'],\n    '0x1004': ['LO', '1', 'PatientTransportArrangements'],\n    '0x1005': ['LO', '1', 'RequestedProcedureLocation'],\n    '0x1006': ['SH', '1', 'PlacerOrderNumberProcedure'],\n    '0x1007': ['SH', '1', 'FillerOrderNumberProcedure'],\n    '0x1008': ['LO', '1', 'ConfidentialityCode'],\n    '0x1009': ['SH', '1', 'ReportingPriority'],\n    '0x100A': ['SQ', '1', 'ReasonForRequestedProcedureCodeSequence'],\n    '0x1010': ['PN', '1-n', 'NamesOfIntendedRecipientsOfResults'],\n    '0x1011': ['SQ', '1', 'IntendedRecipientsOfResultsIdentificationSequence'],\n    '0x1012': ['SQ', '1', 'ReasonForPerformedProcedureCodeSequence'],\n    '0x1060': ['LO', '1', 'RequestedProcedureDescriptionTrial'],\n    '0x1101': ['SQ', '1', 'PersonIdentificationCodeSequence'],\n    '0x1102': ['ST', '1', 'PersonAddress'],\n    '0x1103': ['LO', '1-n', 'PersonTelephoneNumbers'],\n    '0x1104': ['LT', '1', 'PersonTelecomInformation'],\n    '0x1400': ['LT', '1', 'RequestedProcedureComments'],\n    '0x2001': ['LO', '1', 'ReasonForTheImagingServiceRequest'],\n    '0x2004': ['DA', '1', 'IssueDateOfImagingServiceRequest'],\n    '0x2005': ['TM', '1', 'IssueTimeOfImagingServiceRequest'],\n    '0x2006': ['SH', '1', 'PlacerOrderNumberImagingServiceRequestRetired'],\n    '0x2007': ['SH', '1', 'FillerOrderNumberImagingServiceRequestRetired'],\n    '0x2008': ['PN', '1', 'OrderEnteredBy'],\n    '0x2009': ['SH', '1', 'OrderEntererLocation'],\n    '0x2010': ['SH', '1', 'OrderCallbackPhoneNumber'],\n    '0x2011': ['LT', '1', 'OrderCallbackTelecomInformation'],\n    '0x2016': ['LO', '1', 'PlacerOrderNumberImagingServiceRequest'],\n    '0x2017': ['LO', '1', 'FillerOrderNumberImagingServiceRequest'],\n    '0x2400': ['LT', '1', 'ImagingServiceRequestComments'],\n    '0x3001': ['LO', '1', 'ConfidentialityConstraintOnPatientDataDescription'],\n    '0x4001': ['CS', '1', 'GeneralPurposeScheduledProcedureStepStatus'],\n    '0x4002': ['CS', '1', 'GeneralPurposePerformedProcedureStepStatus'],\n    '0x4003': ['CS', '1', 'GeneralPurposeScheduledProcedureStepPriority'],\n    '0x4004': ['SQ', '1', 'ScheduledProcessingApplicationsCodeSequence'],\n    '0x4005': ['DT', '1', 'ScheduledProcedureStepStartDateTime'],\n    '0x4006': ['CS', '1', 'MultipleCopiesFlag'],\n    '0x4007': ['SQ', '1', 'PerformedProcessingApplicationsCodeSequence'],\n    '0x4008': ['DT', '1', 'ScheduledProcedureStepExpirationDateTime'],\n    '0x4009': ['SQ', '1', 'HumanPerformerCodeSequence'],\n    '0x4010': ['DT', '1', 'ScheduledProcedureStepModificationDateTime'],\n    '0x4011': ['DT', '1', 'ExpectedCompletionDateTime'],\n    '0x4015': ['SQ', '1', 'ResultingGeneralPurposePerformedProcedureStepsSequence'],\n    '0x4016': ['SQ', '1', 'ReferencedGeneralPurposeScheduledProcedureStepSequence'],\n    '0x4018': ['SQ', '1', 'ScheduledWorkitemCodeSequence'],\n    '0x4019': ['SQ', '1', 'PerformedWorkitemCodeSequence'],\n    '0x4020': ['CS', '1', 'InputAvailabilityFlag'],\n    '0x4021': ['SQ', '1', 'InputInformationSequence'],\n    '0x4022': ['SQ', '1', 'RelevantInformationSequence'],\n    '0x4023': ['UI', '1', 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID'],\n    '0x4025': ['SQ', '1', 'ScheduledStationNameCodeSequence'],\n    '0x4026': ['SQ', '1', 'ScheduledStationClassCodeSequence'],\n    '0x4027': ['SQ', '1', 'ScheduledStationGeographicLocationCodeSequence'],\n    '0x4028': ['SQ', '1', 'PerformedStationNameCodeSequence'],\n    '0x4029': ['SQ', '1', 'PerformedStationClassCodeSequence'],\n    '0x4030': ['SQ', '1', 'PerformedStationGeographicLocationCodeSequence'],\n    '0x4031': ['SQ', '1', 'RequestedSubsequentWorkitemCodeSequence'],\n    '0x4032': ['SQ', '1', 'NonDICOMOutputCodeSequence'],\n    '0x4033': ['SQ', '1', 'OutputInformationSequence'],\n    '0x4034': ['SQ', '1', 'ScheduledHumanPerformersSequence'],\n    '0x4035': ['SQ', '1', 'ActualHumanPerformersSequence'],\n    '0x4036': ['LO', '1', 'HumanPerformerOrganization'],\n    '0x4037': ['PN', '1', 'HumanPerformerName'],\n    '0x4040': ['CS', '1', 'RawDataHandling'],\n    '0x4041': ['CS', '1', 'InputReadinessState'],\n    '0x4050': ['DT', '1', 'PerformedProcedureStepStartDateTime'],\n    '0x4051': ['DT', '1', 'PerformedProcedureStepEndDateTime'],\n    '0x4052': ['DT', '1', 'ProcedureStepCancellationDateTime'],\n    '0x4070': ['SQ', '1', 'OutputDestinationSequence'],\n    '0x4071': ['SQ', '1', 'DICOMStorageSequence'],\n    '0x4072': ['SQ', '1', 'STOWRSStorageSequence'],\n    '0x4073': ['UR', '1', 'StorageURL'],\n    '0x4074': ['SQ', '1', 'XDSStorageSequence'],\n    '0x8302': ['DS', '1', 'EntranceDoseInmGy'],\n    '0x8303': ['CS', '1', 'EntranceDoseDerivation'],\n    '0x9092': ['SQ', '1', 'ParametricMapFrameTypeSequence'],\n    '0x9094': ['SQ', '1', 'ReferencedImageRealWorldValueMappingSequence'],\n    '0x9096': ['SQ', '1', 'RealWorldValueMappingSequence'],\n    '0x9098': ['SQ', '1', 'PixelValueMappingCodeSequence'],\n    '0x9210': ['SH', '1', 'LUTLabel'],\n    '0x9211': ['xs', '1', 'RealWorldValueLastValueMapped'],\n    '0x9212': ['FD', '1-n', 'RealWorldValueLUTData'],\n    '0x9213': ['FD', '1', 'DoubleFloatRealWorldValueLastValueMapped'],\n    '0x9214': ['FD', '1', 'DoubleFloatRealWorldValueFirstValueMapped'],\n    '0x9216': ['xs', '1', 'RealWorldValueFirstValueMapped'],\n    '0x9220': ['SQ', '1', 'QuantityDefinitionSequence'],\n    '0x9224': ['FD', '1', 'RealWorldValueIntercept'],\n    '0x9225': ['FD', '1', 'RealWorldValueSlope'],\n    '0xA007': ['CS', '1', 'FindingsFlagTrial'],\n    '0xA010': ['CS', '1', 'RelationshipType'],\n    '0xA020': ['SQ', '1', 'FindingsSequenceTrial'],\n    '0xA021': ['UI', '1', 'FindingsGroupUIDTrial'],\n    '0xA022': ['UI', '1', 'ReferencedFindingsGroupUIDTrial'],\n    '0xA023': ['DA', '1', 'FindingsGroupRecordingDateTrial'],\n    '0xA024': ['TM', '1', 'FindingsGroupRecordingTimeTrial'],\n    '0xA026': ['SQ', '1', 'FindingsSourceCategoryCodeSequenceTrial'],\n    '0xA027': ['LO', '1', 'VerifyingOrganization'],\n    '0xA028': ['SQ', '1', 'DocumentingOrganizationIdentifierCodeSequenceTrial'],\n    '0xA030': ['DT', '1', 'VerificationDateTime'],\n    '0xA032': ['DT', '1', 'ObservationDateTime'],\n    '0xA033': ['DT', '1', 'ObservationStartDateTime'],\n    '0xA040': ['CS', '1', 'ValueType'],\n    '0xA043': ['SQ', '1', 'ConceptNameCodeSequence'],\n    '0xA047': ['LO', '1', 'MeasurementPrecisionDescriptionTrial'],\n    '0xA050': ['CS', '1', 'ContinuityOfContent'],\n    '0xA057': ['CS', '1-n', 'UrgencyOrPriorityAlertsTrial'],\n    '0xA060': ['LO', '1', 'SequencingIndicatorTrial'],\n    '0xA066': ['SQ', '1', 'DocumentIdentifierCodeSequenceTrial'],\n    '0xA067': ['PN', '1', 'DocumentAuthorTrial'],\n    '0xA068': ['SQ', '1', 'DocumentAuthorIdentifierCodeSequenceTrial'],\n    '0xA070': ['SQ', '1', 'IdentifierCodeSequenceTrial'],\n    '0xA073': ['SQ', '1', 'VerifyingObserverSequence'],\n    '0xA074': ['OB', '1', 'ObjectBinaryIdentifierTrial'],\n    '0xA075': ['PN', '1', 'VerifyingObserverName'],\n    '0xA076': ['SQ', '1', 'DocumentingObserverIdentifierCodeSequenceTrial'],\n    '0xA078': ['SQ', '1', 'AuthorObserverSequence'],\n    '0xA07A': ['SQ', '1', 'ParticipantSequence'],\n    '0xA07C': ['SQ', '1', 'CustodialOrganizationSequence'],\n    '0xA080': ['CS', '1', 'ParticipationType'],\n    '0xA082': ['DT', '1', 'ParticipationDateTime'],\n    '0xA084': ['CS', '1', 'ObserverType'],\n    '0xA085': ['SQ', '1', 'ProcedureIdentifierCodeSequenceTrial'],\n    '0xA088': ['SQ', '1', 'VerifyingObserverIdentificationCodeSequence'],\n    '0xA089': ['OB', '1', 'ObjectDirectoryBinaryIdentifierTrial'],\n    '0xA090': ['SQ', '1', 'EquivalentCDADocumentSequence'],\n    '0xA0B0': ['US', '2-2n', 'ReferencedWaveformChannels'],\n    '0xA110': ['DA', '1', 'DateOfDocumentOrVerbalTransactionTrial'],\n    '0xA112': ['TM', '1', 'TimeOfDocumentCreationOrVerbalTransactionTrial'],\n    '0xA120': ['DT', '1', 'DateTime'],\n    '0xA121': ['DA', '1', 'Date'],\n    '0xA122': ['TM', '1', 'Time'],\n    '0xA123': ['PN', '1', 'PersonName'],\n    '0xA124': ['UI', '1', 'UID'],\n    '0xA125': ['CS', '2', 'ReportStatusIDTrial'],\n    '0xA130': ['CS', '1', 'TemporalRangeType'],\n    '0xA132': ['UL', '1-n', 'ReferencedSamplePositions'],\n    '0xA136': ['US', '1-n', 'ReferencedFrameNumbers'],\n    '0xA138': ['DS', '1-n', 'ReferencedTimeOffsets'],\n    '0xA13A': ['DT', '1-n', 'ReferencedDateTime'],\n    '0xA160': ['UT', '1', 'TextValue'],\n    '0xA161': ['FD', '1-n', 'FloatingPointValue'],\n    '0xA162': ['SL', '1-n', 'RationalNumeratorValue'],\n    '0xA163': ['UL', '1-n', 'RationalDenominatorValue'],\n    '0xA167': ['SQ', '1', 'ObservationCategoryCodeSequenceTrial'],\n    '0xA168': ['SQ', '1', 'ConceptCodeSequence'],\n    '0xA16A': ['ST', '1', 'BibliographicCitationTrial'],\n    '0xA170': ['SQ', '1', 'PurposeOfReferenceCodeSequence'],\n    '0xA171': ['UI', '1', 'ObservationUID'],\n    '0xA172': ['UI', '1', 'ReferencedObservationUIDTrial'],\n    '0xA173': ['CS', '1', 'ReferencedObservationClassTrial'],\n    '0xA174': ['CS', '1', 'ReferencedObjectObservationClassTrial'],\n    '0xA180': ['US', '1', 'AnnotationGroupNumber'],\n    '0xA192': ['DA', '1', 'ObservationDateTrial'],\n    '0xA193': ['TM', '1', 'ObservationTimeTrial'],\n    '0xA194': ['CS', '1', 'MeasurementAutomationTrial'],\n    '0xA195': ['SQ', '1', 'ModifierCodeSequence'],\n    '0xA224': ['ST', '1', 'IdentificationDescriptionTrial'],\n    '0xA290': ['CS', '1', 'CoordinatesSetGeometricTypeTrial'],\n    '0xA296': ['SQ', '1', 'AlgorithmCodeSequenceTrial'],\n    '0xA297': ['ST', '1', 'AlgorithmDescriptionTrial'],\n    '0xA29A': ['SL', '2-2n', 'PixelCoordinatesSetTrial'],\n    '0xA300': ['SQ', '1', 'MeasuredValueSequence'],\n    '0xA301': ['SQ', '1', 'NumericValueQualifierCodeSequence'],\n    '0xA307': ['PN', '1', 'CurrentObserverTrial'],\n    '0xA30A': ['DS', '1-n', 'NumericValue'],\n    '0xA313': ['SQ', '1', 'ReferencedAccessionSequenceTrial'],\n    '0xA33A': ['ST', '1', 'ReportStatusCommentTrial'],\n    '0xA340': ['SQ', '1', 'ProcedureContextSequenceTrial'],\n    '0xA352': ['PN', '1', 'VerbalSourceTrial'],\n    '0xA353': ['ST', '1', 'AddressTrial'],\n    '0xA354': ['LO', '1', 'TelephoneNumberTrial'],\n    '0xA358': ['SQ', '1', 'VerbalSourceIdentifierCodeSequenceTrial'],\n    '0xA360': ['SQ', '1', 'PredecessorDocumentsSequence'],\n    '0xA370': ['SQ', '1', 'ReferencedRequestSequence'],\n    '0xA372': ['SQ', '1', 'PerformedProcedureCodeSequence'],\n    '0xA375': ['SQ', '1', 'CurrentRequestedProcedureEvidenceSequence'],\n    '0xA380': ['SQ', '1', 'ReportDetailSequenceTrial'],\n    '0xA385': ['SQ', '1', 'PertinentOtherEvidenceSequence'],\n    '0xA390': ['SQ', '1', 'HL7StructuredDocumentReferenceSequence'],\n    '0xA402': ['UI', '1', 'ObservationSubjectUIDTrial'],\n    '0xA403': ['CS', '1', 'ObservationSubjectClassTrial'],\n    '0xA404': ['SQ', '1', 'ObservationSubjectTypeCodeSequenceTrial'],\n    '0xA491': ['CS', '1', 'CompletionFlag'],\n    '0xA492': ['LO', '1', 'CompletionFlagDescription'],\n    '0xA493': ['CS', '1', 'VerificationFlag'],\n    '0xA494': ['CS', '1', 'ArchiveRequested'],\n    '0xA496': ['CS', '1', 'PreliminaryFlag'],\n    '0xA504': ['SQ', '1', 'ContentTemplateSequence'],\n    '0xA525': ['SQ', '1', 'IdenticalDocumentsSequence'],\n    '0xA600': ['CS', '1', 'ObservationSubjectContextFlagTrial'],\n    '0xA601': ['CS', '1', 'ObserverContextFlagTrial'],\n    '0xA603': ['CS', '1', 'ProcedureContextFlagTrial'],\n    '0xA730': ['SQ', '1', 'ContentSequence'],\n    '0xA731': ['SQ', '1', 'RelationshipSequenceTrial'],\n    '0xA732': ['SQ', '1', 'RelationshipTypeCodeSequenceTrial'],\n    '0xA744': ['SQ', '1', 'LanguageCodeSequenceTrial'],\n    '0xA801': ['SQ', '1', 'TabulatedValuesSequence'],\n    '0xA802': ['UL', '1', 'NumberOfTableRows'],\n    '0xA803': ['UL', '1', 'NumberOfTableColumns'],\n    '0xA804': ['UL', '1', 'TableRowNumber'],\n    '0xA805': ['UL', '1', 'TableColumnNumber'],\n    '0xA806': ['SQ', '1', 'TableRowDefinitionSequence'],\n    '0xA807': ['SQ', '1', 'TableColumnDefinitionSequence'],\n    '0xA808': ['SQ', '1', 'CellValuesSequence'],\n    '0xA992': ['ST', '1', 'UniformResourceLocatorTrial'],\n    '0xB020': ['SQ', '1', 'WaveformAnnotationSequence'],\n    '0xDB00': ['CS', '1', 'TemplateIdentifier'],\n    '0xDB06': ['DT', '1', 'TemplateVersion'],\n    '0xDB07': ['DT', '1', 'TemplateLocalVersion'],\n    '0xDB0B': ['CS', '1', 'TemplateExtensionFlag'],\n    '0xDB0C': ['UI', '1', 'TemplateExtensionOrganizationUID'],\n    '0xDB0D': ['UI', '1', 'TemplateExtensionCreatorUID'],\n    '0xDB73': ['UL', '1-n', 'ReferencedContentItemIdentifier'],\n    '0xE001': ['ST', '1', 'HL7InstanceIdentifier'],\n    '0xE004': ['DT', '1', 'HL7DocumentEffectiveTime'],\n    '0xE006': ['SQ', '1', 'HL7DocumentTypeCodeSequence'],\n    '0xE008': ['SQ', '1', 'DocumentClassCodeSequence'],\n    '0xE010': ['UR', '1', 'RetrieveURI'],\n    '0xE011': ['UI', '1', 'RetrieveLocationUID'],\n    '0xE020': ['CS', '1', 'TypeOfInstances'],\n    '0xE021': ['SQ', '1', 'DICOMRetrievalSequence'],\n    '0xE022': ['SQ', '1', 'DICOMMediaRetrievalSequence'],\n    '0xE023': ['SQ', '1', 'WADORetrievalSequence'],\n    '0xE024': ['SQ', '1', 'XDSRetrievalSequence'],\n    '0xE025': ['SQ', '1', 'WADORSRetrievalSequence'],\n    '0xE030': ['UI', '1', 'RepositoryUniqueID'],\n    '0xE031': ['UI', '1', 'HomeCommunityID']\n  },\n  '0x0042': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['ST', '1', 'DocumentTitle'],\n    '0x0011': ['OB', '1', 'EncapsulatedDocument'],\n    '0x0012': ['LO', '1', 'MIMETypeOfEncapsulatedDocument'],\n    '0x0013': ['SQ', '1', 'SourceInstanceSequence'],\n    '0x0014': ['LO', '1-n', 'ListOfMIMETypes'],\n    '0x0015': ['UL', '1', 'EncapsulatedDocumentLength']\n  },\n  '0x0044': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['ST', '1', 'ProductPackageIdentifier'],\n    '0x0002': ['CS', '1', 'SubstanceAdministrationApproval'],\n    '0x0003': ['LT', '1', 'ApprovalStatusFurtherDescription'],\n    '0x0004': ['DT', '1', 'ApprovalStatusDateTime'],\n    '0x0007': ['SQ', '1', 'ProductTypeCodeSequence'],\n    '0x0008': ['LO', '1-n', 'ProductName'],\n    '0x0009': ['LT', '1', 'ProductDescription'],\n    '0x000A': ['LO', '1', 'ProductLotIdentifier'],\n    '0x000B': ['DT', '1', 'ProductExpirationDateTime'],\n    '0x0010': ['DT', '1', 'SubstanceAdministrationDateTime'],\n    '0x0011': ['LO', '1', 'SubstanceAdministrationNotes'],\n    '0x0012': ['LO', '1', 'SubstanceAdministrationDeviceID'],\n    '0x0013': ['SQ', '1', 'ProductParameterSequence'],\n    '0x0019': ['SQ', '1', 'SubstanceAdministrationParameterSequence'],\n    '0x0100': ['SQ', '1', 'ApprovalSequence'],\n    '0x0101': ['SQ', '1', 'AssertionCodeSequence'],\n    '0x0102': ['UI', '1', 'AssertionUID'],\n    '0x0103': ['SQ', '1', 'AsserterIdentificationSequence'],\n    '0x0104': ['DT', '1', 'AssertionDateTime'],\n    '0x0105': ['DT', '1', 'AssertionExpirationDateTime'],\n    '0x0106': ['UT', '1', 'AssertionComments'],\n    '0x0107': ['SQ', '1', 'RelatedAssertionSequence'],\n    '0x0108': ['UI', '1', 'ReferencedAssertionUID'],\n    '0x0109': ['SQ', '1', 'ApprovalSubjectSequence'],\n    '0x010A': ['SQ', '1', 'OrganizationalRoleCodeSequence']\n  },\n  '0x0046': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0012': ['LO', '1', 'LensDescription'],\n    '0x0014': ['SQ', '1', 'RightLensSequence'],\n    '0x0015': ['SQ', '1', 'LeftLensSequence'],\n    '0x0016': ['SQ', '1', 'UnspecifiedLateralityLensSequence'],\n    '0x0018': ['SQ', '1', 'CylinderSequence'],\n    '0x0028': ['SQ', '1', 'PrismSequence'],\n    '0x0030': ['FD', '1', 'HorizontalPrismPower'],\n    '0x0032': ['CS', '1', 'HorizontalPrismBase'],\n    '0x0034': ['FD', '1', 'VerticalPrismPower'],\n    '0x0036': ['CS', '1', 'VerticalPrismBase'],\n    '0x0038': ['CS', '1', 'LensSegmentType'],\n    '0x0040': ['FD', '1', 'OpticalTransmittance'],\n    '0x0042': ['FD', '1', 'ChannelWidth'],\n    '0x0044': ['FD', '1', 'PupilSize'],\n    '0x0046': ['FD', '1', 'CornealSize'],\n    '0x0047': ['SQ', '1', 'CornealSizeSequence'],\n    '0x0050': ['SQ', '1', 'AutorefractionRightEyeSequence'],\n    '0x0052': ['SQ', '1', 'AutorefractionLeftEyeSequence'],\n    '0x0060': ['FD', '1', 'DistancePupillaryDistance'],\n    '0x0062': ['FD', '1', 'NearPupillaryDistance'],\n    '0x0063': ['FD', '1', 'IntermediatePupillaryDistance'],\n    '0x0064': ['FD', '1', 'OtherPupillaryDistance'],\n    '0x0070': ['SQ', '1', 'KeratometryRightEyeSequence'],\n    '0x0071': ['SQ', '1', 'KeratometryLeftEyeSequence'],\n    '0x0074': ['SQ', '1', 'SteepKeratometricAxisSequence'],\n    '0x0075': ['FD', '1', 'RadiusOfCurvature'],\n    '0x0076': ['FD', '1', 'KeratometricPower'],\n    '0x0077': ['FD', '1', 'KeratometricAxis'],\n    '0x0080': ['SQ', '1', 'FlatKeratometricAxisSequence'],\n    '0x0092': ['CS', '1', 'BackgroundColor'],\n    '0x0094': ['CS', '1', 'Optotype'],\n    '0x0095': ['CS', '1', 'OptotypePresentation'],\n    '0x0097': ['SQ', '1', 'SubjectiveRefractionRightEyeSequence'],\n    '0x0098': ['SQ', '1', 'SubjectiveRefractionLeftEyeSequence'],\n    '0x0100': ['SQ', '1', 'AddNearSequence'],\n    '0x0101': ['SQ', '1', 'AddIntermediateSequence'],\n    '0x0102': ['SQ', '1', 'AddOtherSequence'],\n    '0x0104': ['FD', '1', 'AddPower'],\n    '0x0106': ['FD', '1', 'ViewingDistance'],\n    '0x0110': ['SQ', '1', 'CorneaMeasurementsSequence'],\n    '0x0111': ['SQ', '1', 'SourceOfCorneaMeasurementDataCodeSequence'],\n    '0x0112': ['SQ', '1', 'SteepCornealAxisSequence'],\n    '0x0113': ['SQ', '1', 'FlatCornealAxisSequence'],\n    '0x0114': ['FD', '1', 'CornealPower'],\n    '0x0115': ['FD', '1', 'CornealAxis'],\n    '0x0116': ['SQ', '1', 'CorneaMeasurementMethodCodeSequence'],\n    '0x0117': ['FL', '1', 'RefractiveIndexOfCornea'],\n    '0x0118': ['FL', '1', 'RefractiveIndexOfAqueousHumor'],\n    '0x0121': ['SQ', '1', 'VisualAcuityTypeCodeSequence'],\n    '0x0122': ['SQ', '1', 'VisualAcuityRightEyeSequence'],\n    '0x0123': ['SQ', '1', 'VisualAcuityLeftEyeSequence'],\n    '0x0124': ['SQ', '1', 'VisualAcuityBothEyesOpenSequence'],\n    '0x0125': ['CS', '1', 'ViewingDistanceType'],\n    '0x0135': ['SS', '2', 'VisualAcuityModifiers'],\n    '0x0137': ['FD', '1', 'DecimalVisualAcuity'],\n    '0x0139': ['LO', '1', 'OptotypeDetailedDefinition'],\n    '0x0145': ['SQ', '1', 'ReferencedRefractiveMeasurementsSequence'],\n    '0x0146': ['FD', '1', 'SpherePower'],\n    '0x0147': ['FD', '1', 'CylinderPower'],\n    '0x0201': ['CS', '1', 'CornealTopographySurface'],\n    '0x0202': ['FL', '2', 'CornealVertexLocation'],\n    '0x0203': ['FL', '1', 'PupilCentroidXCoordinate'],\n    '0x0204': ['FL', '1', 'PupilCentroidYCoordinate'],\n    '0x0205': ['FL', '1', 'EquivalentPupilRadius'],\n    '0x0207': ['SQ', '1', 'CornealTopographyMapTypeCodeSequence'],\n    '0x0208': ['IS', '2-2n', 'VerticesOfTheOutlineOfPupil'],\n    '0x0210': ['SQ', '1', 'CornealTopographyMappingNormalsSequence'],\n    '0x0211': ['SQ', '1', 'MaximumCornealCurvatureSequence'],\n    '0x0212': ['FL', '1', 'MaximumCornealCurvature'],\n    '0x0213': ['FL', '2', 'MaximumCornealCurvatureLocation'],\n    '0x0215': ['SQ', '1', 'MinimumKeratometricSequence'],\n    '0x0218': ['SQ', '1', 'SimulatedKeratometricCylinderSequence'],\n    '0x0220': ['FL', '1', 'AverageCornealPower'],\n    '0x0224': ['FL', '1', 'CornealISValue'],\n    '0x0227': ['FL', '1', 'AnalyzedArea'],\n    '0x0230': ['FL', '1', 'SurfaceRegularityIndex'],\n    '0x0232': ['FL', '1', 'SurfaceAsymmetryIndex'],\n    '0x0234': ['FL', '1', 'CornealEccentricityIndex'],\n    '0x0236': ['FL', '1', 'KeratoconusPredictionIndex'],\n    '0x0238': ['FL', '1', 'DecimalPotentialVisualAcuity'],\n    '0x0242': ['CS', '1', 'CornealTopographyMapQualityEvaluation'],\n    '0x0244': ['SQ', '1', 'SourceImageCornealProcessedDataSequence'],\n    '0x0247': ['FL', '3', 'CornealPointLocation'],\n    '0x0248': ['CS', '1', 'CornealPointEstimated'],\n    '0x0249': ['FL', '1', 'AxialPower'],\n    '0x0250': ['FL', '1', 'TangentialPower'],\n    '0x0251': ['FL', '1', 'RefractivePower'],\n    '0x0252': ['FL', '1', 'RelativeElevation'],\n    '0x0253': ['FL', '1', 'CornealWavefront']\n  },\n  '0x0048': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['FL', '1', 'ImagedVolumeWidth'],\n    '0x0002': ['FL', '1', 'ImagedVolumeHeight'],\n    '0x0003': ['FL', '1', 'ImagedVolumeDepth'],\n    '0x0006': ['UL', '1', 'TotalPixelMatrixColumns'],\n    '0x0007': ['UL', '1', 'TotalPixelMatrixRows'],\n    '0x0008': ['SQ', '1', 'TotalPixelMatrixOriginSequence'],\n    '0x0010': ['CS', '1', 'SpecimenLabelInImage'],\n    '0x0011': ['CS', '1', 'FocusMethod'],\n    '0x0012': ['CS', '1', 'ExtendedDepthOfField'],\n    '0x0013': ['US', '1', 'NumberOfFocalPlanes'],\n    '0x0014': ['FL', '1', 'DistanceBetweenFocalPlanes'],\n    '0x0015': ['US', '3', 'RecommendedAbsentPixelCIELabValue'],\n    '0x0100': ['SQ', '1', 'IlluminatorTypeCodeSequence'],\n    '0x0102': ['DS', '6', 'ImageOrientationSlide'],\n    '0x0105': ['SQ', '1', 'OpticalPathSequence'],\n    '0x0106': ['SH', '1', 'OpticalPathIdentifier'],\n    '0x0107': ['ST', '1', 'OpticalPathDescription'],\n    '0x0108': ['SQ', '1', 'IlluminationColorCodeSequence'],\n    '0x0110': ['SQ', '1', 'SpecimenReferenceSequence'],\n    '0x0111': ['DS', '1', 'CondenserLensPower'],\n    '0x0112': ['DS', '1', 'ObjectiveLensPower'],\n    '0x0113': ['DS', '1', 'ObjectiveLensNumericalAperture'],\n    '0x0120': ['SQ', '1', 'PaletteColorLookupTableSequence'],\n    '0x0200': ['SQ', '1', 'ReferencedImageNavigationSequence'],\n    '0x0201': ['US', '2', 'TopLeftHandCornerOfLocalizerArea'],\n    '0x0202': ['US', '2', 'BottomRightHandCornerOfLocalizerArea'],\n    '0x0207': ['SQ', '1', 'OpticalPathIdentificationSequence'],\n    '0x021A': ['SQ', '1', 'PlanePositionSlideSequence'],\n    '0x021E': ['SL', '1', 'ColumnPositionInTotalImagePixelMatrix'],\n    '0x021F': ['SL', '1', 'RowPositionInTotalImagePixelMatrix'],\n    '0x0301': ['CS', '1', 'PixelOriginInterpretation'],\n    '0x0302': ['UL', '1', 'NumberOfOpticalPaths'],\n    '0x0303': ['UL', '1', 'TotalPixelMatrixFocalPlanes']\n  },\n  '0x0050': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0004': ['CS', '1', 'CalibrationImage'],\n    '0x0010': ['SQ', '1', 'DeviceSequence'],\n    '0x0012': ['SQ', '1', 'ContainerComponentTypeCodeSequence'],\n    '0x0013': ['FD', '1', 'ContainerComponentThickness'],\n    '0x0014': ['DS', '1', 'DeviceLength'],\n    '0x0015': ['FD', '1', 'ContainerComponentWidth'],\n    '0x0016': ['DS', '1', 'DeviceDiameter'],\n    '0x0017': ['CS', '1', 'DeviceDiameterUnits'],\n    '0x0018': ['DS', '1', 'DeviceVolume'],\n    '0x0019': ['DS', '1', 'InterMarkerDistance'],\n    '0x001A': ['CS', '1', 'ContainerComponentMaterial'],\n    '0x001B': ['LO', '1', 'ContainerComponentID'],\n    '0x001C': ['FD', '1', 'ContainerComponentLength'],\n    '0x001D': ['FD', '1', 'ContainerComponentDiameter'],\n    '0x001E': ['LO', '1', 'ContainerComponentDescription'],\n    '0x0020': ['LO', '1', 'DeviceDescription'],\n    '0x0021': ['ST', '1', 'LongDeviceDescription']\n  },\n  '0x0052': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['FL', '1', 'ContrastBolusIngredientPercentByVolume'],\n    '0x0002': ['FD', '1', 'OCTFocalDistance'],\n    '0x0003': ['FD', '1', 'BeamSpotSize'],\n    '0x0004': ['FD', '1', 'EffectiveRefractiveIndex'],\n    '0x0006': ['CS', '1', 'OCTAcquisitionDomain'],\n    '0x0007': ['FD', '1', 'OCTOpticalCenterWavelength'],\n    '0x0008': ['FD', '1', 'AxialResolution'],\n    '0x0009': ['FD', '1', 'RangingDepth'],\n    '0x0011': ['FD', '1', 'ALineRate'],\n    '0x0012': ['US', '1', 'ALinesPerFrame'],\n    '0x0013': ['FD', '1', 'CatheterRotationalRate'],\n    '0x0014': ['FD', '1', 'ALinePixelSpacing'],\n    '0x0016': ['SQ', '1', 'ModeOfPercutaneousAccessSequence'],\n    '0x0025': ['SQ', '1', 'IntravascularOCTFrameTypeSequence'],\n    '0x0026': ['CS', '1', 'OCTZOffsetApplied'],\n    '0x0027': ['SQ', '1', 'IntravascularFrameContentSequence'],\n    '0x0028': ['FD', '1', 'IntravascularLongitudinalDistance'],\n    '0x0029': ['SQ', '1', 'IntravascularOCTFrameContentSequence'],\n    '0x0030': ['SS', '1', 'OCTZOffsetCorrection'],\n    '0x0031': ['CS', '1', 'CatheterDirectionOfRotation'],\n    '0x0033': ['FD', '1', 'SeamLineLocation'],\n    '0x0034': ['FD', '1', 'FirstALineLocation'],\n    '0x0036': ['US', '1', 'SeamLineIndex'],\n    '0x0038': ['US', '1', 'NumberOfPaddedALines'],\n    '0x0039': ['CS', '1', 'InterpolationType'],\n    '0x003A': ['CS', '1', 'RefractiveIndexApplied']\n  },\n  '0x0054': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['US', '1-n', 'EnergyWindowVector'],\n    '0x0011': ['US', '1', 'NumberOfEnergyWindows'],\n    '0x0012': ['SQ', '1', 'EnergyWindowInformationSequence'],\n    '0x0013': ['SQ', '1', 'EnergyWindowRangeSequence'],\n    '0x0014': ['DS', '1', 'EnergyWindowLowerLimit'],\n    '0x0015': ['DS', '1', 'EnergyWindowUpperLimit'],\n    '0x0016': ['SQ', '1', 'RadiopharmaceuticalInformationSequence'],\n    '0x0017': ['IS', '1', 'ResidualSyringeCounts'],\n    '0x0018': ['SH', '1', 'EnergyWindowName'],\n    '0x0020': ['US', '1-n', 'DetectorVector'],\n    '0x0021': ['US', '1', 'NumberOfDetectors'],\n    '0x0022': ['SQ', '1', 'DetectorInformationSequence'],\n    '0x0030': ['US', '1-n', 'PhaseVector'],\n    '0x0031': ['US', '1', 'NumberOfPhases'],\n    '0x0032': ['SQ', '1', 'PhaseInformationSequence'],\n    '0x0033': ['US', '1', 'NumberOfFramesInPhase'],\n    '0x0036': ['IS', '1', 'PhaseDelay'],\n    '0x0038': ['IS', '1', 'PauseBetweenFrames'],\n    '0x0039': ['CS', '1', 'PhaseDescription'],\n    '0x0050': ['US', '1-n', 'RotationVector'],\n    '0x0051': ['US', '1', 'NumberOfRotations'],\n    '0x0052': ['SQ', '1', 'RotationInformationSequence'],\n    '0x0053': ['US', '1', 'NumberOfFramesInRotation'],\n    '0x0060': ['US', '1-n', 'RRIntervalVector'],\n    '0x0061': ['US', '1', 'NumberOfRRIntervals'],\n    '0x0062': ['SQ', '1', 'GatedInformationSequence'],\n    '0x0063': ['SQ', '1', 'DataInformationSequence'],\n    '0x0070': ['US', '1-n', 'TimeSlotVector'],\n    '0x0071': ['US', '1', 'NumberOfTimeSlots'],\n    '0x0072': ['SQ', '1', 'TimeSlotInformationSequence'],\n    '0x0073': ['DS', '1', 'TimeSlotTime'],\n    '0x0080': ['US', '1-n', 'SliceVector'],\n    '0x0081': ['US', '1', 'NumberOfSlices'],\n    '0x0090': ['US', '1-n', 'AngularViewVector'],\n    '0x0100': ['US', '1-n', 'TimeSliceVector'],\n    '0x0101': ['US', '1', 'NumberOfTimeSlices'],\n    '0x0200': ['DS', '1', 'StartAngle'],\n    '0x0202': ['CS', '1', 'TypeOfDetectorMotion'],\n    '0x0210': ['IS', '1-n', 'TriggerVector'],\n    '0x0211': ['US', '1', 'NumberOfTriggersInPhase'],\n    '0x0220': ['SQ', '1', 'ViewCodeSequence'],\n    '0x0222': ['SQ', '1', 'ViewModifierCodeSequence'],\n    '0x0300': ['SQ', '1', 'RadionuclideCodeSequence'],\n    '0x0302': ['SQ', '1', 'AdministrationRouteCodeSequence'],\n    '0x0304': ['SQ', '1', 'RadiopharmaceuticalCodeSequence'],\n    '0x0306': ['SQ', '1', 'CalibrationDataSequence'],\n    '0x0308': ['US', '1', 'EnergyWindowNumber'],\n    '0x0400': ['SH', '1', 'ImageID'],\n    '0x0410': ['SQ', '1', 'PatientOrientationCodeSequence'],\n    '0x0412': ['SQ', '1', 'PatientOrientationModifierCodeSequence'],\n    '0x0414': ['SQ', '1', 'PatientGantryRelationshipCodeSequence'],\n    '0x0500': ['CS', '1', 'SliceProgressionDirection'],\n    '0x0501': ['CS', '1', 'ScanProgressionDirection'],\n    '0x1000': ['CS', '2', 'SeriesType'],\n    '0x1001': ['CS', '1', 'Units'],\n    '0x1002': ['CS', '1', 'CountsSource'],\n    '0x1004': ['CS', '1', 'ReprojectionMethod'],\n    '0x1006': ['CS', '1', 'SUVType'],\n    '0x1100': ['CS', '1', 'RandomsCorrectionMethod'],\n    '0x1101': ['LO', '1', 'AttenuationCorrectionMethod'],\n    '0x1102': ['CS', '1', 'DecayCorrection'],\n    '0x1103': ['LO', '1', 'ReconstructionMethod'],\n    '0x1104': ['LO', '1', 'DetectorLinesOfResponseUsed'],\n    '0x1105': ['LO', '1', 'ScatterCorrectionMethod'],\n    '0x1200': ['DS', '1', 'AxialAcceptance'],\n    '0x1201': ['IS', '2', 'AxialMash'],\n    '0x1202': ['IS', '1', 'TransverseMash'],\n    '0x1203': ['DS', '2', 'DetectorElementSize'],\n    '0x1210': ['DS', '1', 'CoincidenceWindowWidth'],\n    '0x1220': ['CS', '1-n', 'SecondaryCountsType'],\n    '0x1300': ['DS', '1', 'FrameReferenceTime'],\n    '0x1310': ['IS', '1', 'PrimaryPromptsCountsAccumulated'],\n    '0x1311': ['IS', '1-n', 'SecondaryCountsAccumulated'],\n    '0x1320': ['DS', '1', 'SliceSensitivityFactor'],\n    '0x1321': ['DS', '1', 'DecayFactor'],\n    '0x1322': ['DS', '1', 'DoseCalibrationFactor'],\n    '0x1323': ['DS', '1', 'ScatterFractionFactor'],\n    '0x1324': ['DS', '1', 'DeadTimeFactor'],\n    '0x1330': ['US', '1', 'ImageIndex'],\n    '0x1400': ['CS', '1-n', 'CountsIncluded'],\n    '0x1401': ['CS', '1', 'DeadTimeCorrectionFlag']\n  },\n  '0x0060': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x3000': ['SQ', '1', 'HistogramSequence'],\n    '0x3002': ['US', '1', 'HistogramNumberOfBins'],\n    '0x3004': ['xs', '1', 'HistogramFirstBinValue'],\n    '0x3006': ['xs', '1', 'HistogramLastBinValue'],\n    '0x3008': ['US', '1', 'HistogramBinWidth'],\n    '0x3010': ['LO', '1', 'HistogramExplanation'],\n    '0x3020': ['UL', '1-n', 'HistogramData']\n  },\n  '0x0062': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['CS', '1', 'SegmentationType'],\n    '0x0002': ['SQ', '1', 'SegmentSequence'],\n    '0x0003': ['SQ', '1', 'SegmentedPropertyCategoryCodeSequence'],\n    '0x0004': ['US', '1', 'SegmentNumber'],\n    '0x0005': ['LO', '1', 'SegmentLabel'],\n    '0x0006': ['ST', '1', 'SegmentDescription'],\n    '0x0007': ['SQ', '1', 'SegmentationAlgorithmIdentificationSequence'],\n    '0x0008': ['CS', '1', 'SegmentAlgorithmType'],\n    '0x0009': ['LO', '1-n', 'SegmentAlgorithmName'],\n    '0x000A': ['SQ', '1', 'SegmentIdentificationSequence'],\n    '0x000B': ['US', '1-n', 'ReferencedSegmentNumber'],\n    '0x000C': ['US', '1', 'RecommendedDisplayGrayscaleValue'],\n    '0x000D': ['US', '3', 'RecommendedDisplayCIELabValue'],\n    '0x000E': ['US', '1', 'MaximumFractionalValue'],\n    '0x000F': ['SQ', '1', 'SegmentedPropertyTypeCodeSequence'],\n    '0x0010': ['CS', '1', 'SegmentationFractionalType'],\n    '0x0011': ['SQ', '1', 'SegmentedPropertyTypeModifierCodeSequence'],\n    '0x0012': ['SQ', '1', 'UsedSegmentsSequence'],\n    '0x0013': ['CS', '1', 'SegmentsOverlap'],\n    '0x0020': ['UT', '1', 'TrackingID'],\n    '0x0021': ['UI', '1', 'TrackingUID']\n  },\n  '0x0064': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0002': ['SQ', '1', 'DeformableRegistrationSequence'],\n    '0x0003': ['UI', '1', 'SourceFrameOfReferenceUID'],\n    '0x0005': ['SQ', '1', 'DeformableRegistrationGridSequence'],\n    '0x0007': ['UL', '3', 'GridDimensions'],\n    '0x0008': ['FD', '3', 'GridResolution'],\n    '0x0009': ['OF', '1', 'VectorGridData'],\n    '0x000F': ['SQ', '1', 'PreDeformationMatrixRegistrationSequence'],\n    '0x0010': ['SQ', '1', 'PostDeformationMatrixRegistrationSequence']\n  },\n  '0x0066': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['UL', '1', 'NumberOfSurfaces'],\n    '0x0002': ['SQ', '1', 'SurfaceSequence'],\n    '0x0003': ['UL', '1', 'SurfaceNumber'],\n    '0x0004': ['LT', '1', 'SurfaceComments'],\n    '0x0009': ['CS', '1', 'SurfaceProcessing'],\n    '0x000A': ['FL', '1', 'SurfaceProcessingRatio'],\n    '0x000B': ['LO', '1', 'SurfaceProcessingDescription'],\n    '0x000C': ['FL', '1', 'RecommendedPresentationOpacity'],\n    '0x000D': ['CS', '1', 'RecommendedPresentationType'],\n    '0x000E': ['CS', '1', 'FiniteVolume'],\n    '0x0010': ['CS', '1', 'Manifold'],\n    '0x0011': ['SQ', '1', 'SurfacePointsSequence'],\n    '0x0012': ['SQ', '1', 'SurfacePointsNormalsSequence'],\n    '0x0013': ['SQ', '1', 'SurfaceMeshPrimitivesSequence'],\n    '0x0015': ['UL', '1', 'NumberOfSurfacePoints'],\n    '0x0016': ['OF', '1', 'PointCoordinatesData'],\n    '0x0017': ['FL', '3', 'PointPositionAccuracy'],\n    '0x0018': ['FL', '1', 'MeanPointDistance'],\n    '0x0019': ['FL', '1', 'MaximumPointDistance'],\n    '0x001A': ['FL', '6', 'PointsBoundingBoxCoordinates'],\n    '0x001B': ['FL', '3', 'AxisOfRotation'],\n    '0x001C': ['FL', '3', 'CenterOfRotation'],\n    '0x001E': ['UL', '1', 'NumberOfVectors'],\n    '0x001F': ['US', '1', 'VectorDimensionality'],\n    '0x0020': ['FL', '1-n', 'VectorAccuracy'],\n    '0x0021': ['OF', '1', 'VectorCoordinateData'],\n    '0x0022': ['OD', '1', 'DoublePointCoordinatesData'],\n    '0x0023': ['OW', '1', 'TrianglePointIndexList'],\n    '0x0024': ['OW', '1', 'EdgePointIndexList'],\n    '0x0025': ['OW', '1', 'VertexPointIndexList'],\n    '0x0026': ['SQ', '1', 'TriangleStripSequence'],\n    '0x0027': ['SQ', '1', 'TriangleFanSequence'],\n    '0x0028': ['SQ', '1', 'LineSequence'],\n    '0x0029': ['OW', '1', 'PrimitivePointIndexList'],\n    '0x002A': ['UL', '1', 'SurfaceCount'],\n    '0x002B': ['SQ', '1', 'ReferencedSurfaceSequence'],\n    '0x002C': ['UL', '1', 'ReferencedSurfaceNumber'],\n    '0x002D': ['SQ', '1', 'SegmentSurfaceGenerationAlgorithmIdentificationSequence'],\n    '0x002E': ['SQ', '1', 'SegmentSurfaceSourceInstanceSequence'],\n    '0x002F': ['SQ', '1', 'AlgorithmFamilyCodeSequence'],\n    '0x0030': ['SQ', '1', 'AlgorithmNameCodeSequence'],\n    '0x0031': ['LO', '1', 'AlgorithmVersion'],\n    '0x0032': ['LT', '1', 'AlgorithmParameters'],\n    '0x0034': ['SQ', '1', 'FacetSequence'],\n    '0x0035': ['SQ', '1', 'SurfaceProcessingAlgorithmIdentificationSequence'],\n    '0x0036': ['LO', '1', 'AlgorithmName'],\n    '0x0037': ['FL', '1', 'RecommendedPointRadius'],\n    '0x0038': ['FL', '1', 'RecommendedLineThickness'],\n    '0x0040': ['OL', '1', 'LongPrimitivePointIndexList'],\n    '0x0041': ['OL', '1', 'LongTrianglePointIndexList'],\n    '0x0042': ['OL', '1', 'LongEdgePointIndexList'],\n    '0x0043': ['OL', '1', 'LongVertexPointIndexList'],\n    '0x0101': ['SQ', '1', 'TrackSetSequence'],\n    '0x0102': ['SQ', '1', 'TrackSequence'],\n    '0x0103': ['OW', '1', 'RecommendedDisplayCIELabValueList'],\n    '0x0104': ['SQ', '1', 'TrackingAlgorithmIdentificationSequence'],\n    '0x0105': ['UL', '1', 'TrackSetNumber'],\n    '0x0106': ['LO', '1', 'TrackSetLabel'],\n    '0x0107': ['UT', '1', 'TrackSetDescription'],\n    '0x0108': ['SQ', '1', 'TrackSetAnatomicalTypeCodeSequence'],\n    '0x0121': ['SQ', '1', 'MeasurementsSequence'],\n    '0x0124': ['SQ', '1', 'TrackSetStatisticsSequence'],\n    '0x0125': ['OF', '1', 'FloatingPointValues'],\n    '0x0129': ['OL', '1', 'TrackPointIndexList'],\n    '0x0130': ['SQ', '1', 'TrackStatisticsSequence'],\n    '0x0132': ['SQ', '1', 'MeasurementValuesSequence'],\n    '0x0133': ['SQ', '1', 'DiffusionAcquisitionCodeSequence'],\n    '0x0134': ['SQ', '1', 'DiffusionModelCodeSequence']\n  },\n  '0x0068': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x6210': ['LO', '1', 'ImplantSize'],\n    '0x6221': ['LO', '1', 'ImplantTemplateVersion'],\n    '0x6222': ['SQ', '1', 'ReplacedImplantTemplateSequence'],\n    '0x6223': ['CS', '1', 'ImplantType'],\n    '0x6224': ['SQ', '1', 'DerivationImplantTemplateSequence'],\n    '0x6225': ['SQ', '1', 'OriginalImplantTemplateSequence'],\n    '0x6226': ['DT', '1', 'EffectiveDateTime'],\n    '0x6230': ['SQ', '1', 'ImplantTargetAnatomySequence'],\n    '0x6260': ['SQ', '1', 'InformationFromManufacturerSequence'],\n    '0x6265': ['SQ', '1', 'NotificationFromManufacturerSequence'],\n    '0x6270': ['DT', '1', 'InformationIssueDateTime'],\n    '0x6280': ['ST', '1', 'InformationSummary'],\n    '0x62A0': ['SQ', '1', 'ImplantRegulatoryDisapprovalCodeSequence'],\n    '0x62A5': ['FD', '1', 'OverallTemplateSpatialTolerance'],\n    '0x62C0': ['SQ', '1', 'HPGLDocumentSequence'],\n    '0x62D0': ['US', '1', 'HPGLDocumentID'],\n    '0x62D5': ['LO', '1', 'HPGLDocumentLabel'],\n    '0x62E0': ['SQ', '1', 'ViewOrientationCodeSequence'],\n    '0x62F0': ['SQ', '1', 'ViewOrientationModifierCodeSequence'],\n    '0x62F2': ['FD', '1', 'HPGLDocumentScaling'],\n    '0x6300': ['OB', '1', 'HPGLDocument'],\n    '0x6310': ['US', '1', 'HPGLContourPenNumber'],\n    '0x6320': ['SQ', '1', 'HPGLPenSequence'],\n    '0x6330': ['US', '1', 'HPGLPenNumber'],\n    '0x6340': ['LO', '1', 'HPGLPenLabel'],\n    '0x6345': ['ST', '1', 'HPGLPenDescription'],\n    '0x6346': ['FD', '2', 'RecommendedRotationPoint'],\n    '0x6347': ['FD', '4', 'BoundingRectangle'],\n    '0x6350': ['US', '1-n', 'ImplantTemplate3DModelSurfaceNumber'],\n    '0x6360': ['SQ', '1', 'SurfaceModelDescriptionSequence'],\n    '0x6380': ['LO', '1', 'SurfaceModelLabel'],\n    '0x6390': ['FD', '1', 'SurfaceModelScalingFactor'],\n    '0x63A0': ['SQ', '1', 'MaterialsCodeSequence'],\n    '0x63A4': ['SQ', '1', 'CoatingMaterialsCodeSequence'],\n    '0x63A8': ['SQ', '1', 'ImplantTypeCodeSequence'],\n    '0x63AC': ['SQ', '1', 'FixationMethodCodeSequence'],\n    '0x63B0': ['SQ', '1', 'MatingFeatureSetsSequence'],\n    '0x63C0': ['US', '1', 'MatingFeatureSetID'],\n    '0x63D0': ['LO', '1', 'MatingFeatureSetLabel'],\n    '0x63E0': ['SQ', '1', 'MatingFeatureSequence'],\n    '0x63F0': ['US', '1', 'MatingFeatureID'],\n    '0x6400': ['SQ', '1', 'MatingFeatureDegreeOfFreedomSequence'],\n    '0x6410': ['US', '1', 'DegreeOfFreedomID'],\n    '0x6420': ['CS', '1', 'DegreeOfFreedomType'],\n    '0x6430': ['SQ', '1', 'TwoDMatingFeatureCoordinatesSequence'],\n    '0x6440': ['US', '1', 'ReferencedHPGLDocumentID'],\n    '0x6450': ['FD', '2', 'TwoDMatingPoint'],\n    '0x6460': ['FD', '4', 'TwoDMatingAxes'],\n    '0x6470': ['SQ', '1', 'TwoDDegreeOfFreedomSequence'],\n    '0x6490': ['FD', '3', 'ThreeDDegreeOfFreedomAxis'],\n    '0x64A0': ['FD', '2', 'RangeOfFreedom'],\n    '0x64C0': ['FD', '3', 'ThreeDMatingPoint'],\n    '0x64D0': ['FD', '9', 'ThreeDMatingAxes'],\n    '0x64F0': ['FD', '3', 'TwoDDegreeOfFreedomAxis'],\n    '0x6500': ['SQ', '1', 'PlanningLandmarkPointSequence'],\n    '0x6510': ['SQ', '1', 'PlanningLandmarkLineSequence'],\n    '0x6520': ['SQ', '1', 'PlanningLandmarkPlaneSequence'],\n    '0x6530': ['US', '1', 'PlanningLandmarkID'],\n    '0x6540': ['LO', '1', 'PlanningLandmarkDescription'],\n    '0x6545': ['SQ', '1', 'PlanningLandmarkIdentificationCodeSequence'],\n    '0x6550': ['SQ', '1', 'TwoDPointCoordinatesSequence'],\n    '0x6560': ['FD', '2', 'TwoDPointCoordinates'],\n    '0x6590': ['FD', '3', 'ThreeDPointCoordinates'],\n    '0x65A0': ['SQ', '1', 'TwoDLineCoordinatesSequence'],\n    '0x65B0': ['FD', '4', 'TwoDLineCoordinates'],\n    '0x65D0': ['FD', '6', 'ThreeDLineCoordinates'],\n    '0x65E0': ['SQ', '1', 'TwoDPlaneCoordinatesSequence'],\n    '0x65F0': ['FD', '4', 'TwoDPlaneIntersection'],\n    '0x6610': ['FD', '3', 'ThreeDPlaneOrigin'],\n    '0x6620': ['FD', '3', 'ThreeDPlaneNormal'],\n    '0x7001': ['CS', '1', 'ModelModification'],\n    '0x7002': ['CS', '1', 'ModelMirroring'],\n    '0x7003': ['SQ', '1', 'ModelUsageCodeSequence'],\n    '0x7004': ['UI', '1', 'ModelGroupUID'],\n    '0x7005': ['UR', '1', 'RelativeURIReferenceWithinEncapsulatedDocument']\n  },\n  '0x006A': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['CS', '1', 'AnnotationCoordinateType'],\n    '0x0002': ['SQ', '1', 'AnnotationGroupSequence'],\n    '0x0003': ['UI', '1', 'AnnotationGroupUID'],\n    '0x0005': ['LO', '1', 'AnnotationGroupLabel'],\n    '0x0006': ['UT', '1', 'AnnotationGroupDescription'],\n    '0x0007': ['CS', '1', 'AnnotationGroupGenerationType'],\n    '0x0008': ['SQ', '1', 'AnnotationGroupAlgorithmIdentificationSequence'],\n    '0x0009': ['SQ', '1', 'AnnotationPropertyCategoryCodeSequence'],\n    '0x000A': ['SQ', '1', 'AnnotationPropertyTypeCodeSequence'],\n    '0x000B': ['SQ', '1', 'AnnotationPropertyTypeModifierCodeSequence'],\n    '0x000C': ['UL', '1', 'NumberOfAnnotations'],\n    '0x000D': ['CS', '1', 'AnnotationAppliesToAllOpticalPaths'],\n    '0x000E': ['SH', '1-n', 'ReferencedOpticalPathIdentifier'],\n    '0x000F': ['CS', '1', 'AnnotationAppliesToAllZPlanes'],\n    '0x0010': ['FD', '1-n', 'CommonZCoordinateValue'],\n    '0x0011': ['OL', '1', 'AnnotationIndexList']\n  },\n  '0x0070': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['SQ', '1', 'GraphicAnnotationSequence'],\n    '0x0002': ['CS', '1', 'GraphicLayer'],\n    '0x0003': ['CS', '1', 'BoundingBoxAnnotationUnits'],\n    '0x0004': ['CS', '1', 'AnchorPointAnnotationUnits'],\n    '0x0005': ['CS', '1', 'GraphicAnnotationUnits'],\n    '0x0006': ['ST', '1', 'UnformattedTextValue'],\n    '0x0008': ['SQ', '1', 'TextObjectSequence'],\n    '0x0009': ['SQ', '1', 'GraphicObjectSequence'],\n    '0x0010': ['FL', '2', 'BoundingBoxTopLeftHandCorner'],\n    '0x0011': ['FL', '2', 'BoundingBoxBottomRightHandCorner'],\n    '0x0012': ['CS', '1', 'BoundingBoxTextHorizontalJustification'],\n    '0x0014': ['FL', '2', 'AnchorPoint'],\n    '0x0015': ['CS', '1', 'AnchorPointVisibility'],\n    '0x0020': ['US', '1', 'GraphicDimensions'],\n    '0x0021': ['US', '1', 'NumberOfGraphicPoints'],\n    '0x0022': ['FL', '2-n', 'GraphicData'],\n    '0x0023': ['CS', '1', 'GraphicType'],\n    '0x0024': ['CS', '1', 'GraphicFilled'],\n    '0x0040': ['IS', '1', 'ImageRotationRetired'],\n    '0x0041': ['CS', '1', 'ImageHorizontalFlip'],\n    '0x0042': ['US', '1', 'ImageRotation'],\n    '0x0050': ['US', '2', 'DisplayedAreaTopLeftHandCornerTrial'],\n    '0x0051': ['US', '2', 'DisplayedAreaBottomRightHandCornerTrial'],\n    '0x0052': ['SL', '2', 'DisplayedAreaTopLeftHandCorner'],\n    '0x0053': ['SL', '2', 'DisplayedAreaBottomRightHandCorner'],\n    '0x005A': ['SQ', '1', 'DisplayedAreaSelectionSequence'],\n    '0x0060': ['SQ', '1', 'GraphicLayerSequence'],\n    '0x0062': ['IS', '1', 'GraphicLayerOrder'],\n    '0x0066': ['US', '1', 'GraphicLayerRecommendedDisplayGrayscaleValue'],\n    '0x0067': ['US', '3', 'GraphicLayerRecommendedDisplayRGBValue'],\n    '0x0068': ['LO', '1', 'GraphicLayerDescription'],\n    '0x0080': ['CS', '1', 'ContentLabel'],\n    '0x0081': ['LO', '1', 'ContentDescription'],\n    '0x0082': ['DA', '1', 'PresentationCreationDate'],\n    '0x0083': ['TM', '1', 'PresentationCreationTime'],\n    '0x0084': ['PN', '1', 'ContentCreatorName'],\n    '0x0086': ['SQ', '1', 'ContentCreatorIdentificationCodeSequence'],\n    '0x0087': ['SQ', '1', 'AlternateContentDescriptionSequence'],\n    '0x0100': ['CS', '1', 'PresentationSizeMode'],\n    '0x0101': ['DS', '2', 'PresentationPixelSpacing'],\n    '0x0102': ['IS', '2', 'PresentationPixelAspectRatio'],\n    '0x0103': ['FL', '1', 'PresentationPixelMagnificationRatio'],\n    '0x0207': ['LO', '1', 'GraphicGroupLabel'],\n    '0x0208': ['ST', '1', 'GraphicGroupDescription'],\n    '0x0209': ['SQ', '1', 'CompoundGraphicSequence'],\n    '0x0226': ['UL', '1', 'CompoundGraphicInstanceID'],\n    '0x0227': ['LO', '1', 'FontName'],\n    '0x0228': ['CS', '1', 'FontNameType'],\n    '0x0229': ['LO', '1', 'CSSFontName'],\n    '0x0230': ['FD', '1', 'RotationAngle'],\n    '0x0231': ['SQ', '1', 'TextStyleSequence'],\n    '0x0232': ['SQ', '1', 'LineStyleSequence'],\n    '0x0233': ['SQ', '1', 'FillStyleSequence'],\n    '0x0234': ['SQ', '1', 'GraphicGroupSequence'],\n    '0x0241': ['US', '3', 'TextColorCIELabValue'],\n    '0x0242': ['CS', '1', 'HorizontalAlignment'],\n    '0x0243': ['CS', '1', 'VerticalAlignment'],\n    '0x0244': ['CS', '1', 'ShadowStyle'],\n    '0x0245': ['FL', '1', 'ShadowOffsetX'],\n    '0x0246': ['FL', '1', 'ShadowOffsetY'],\n    '0x0247': ['US', '3', 'ShadowColorCIELabValue'],\n    '0x0248': ['CS', '1', 'Underlined'],\n    '0x0249': ['CS', '1', 'Bold'],\n    '0x0250': ['CS', '1', 'Italic'],\n    '0x0251': ['US', '3', 'PatternOnColorCIELabValue'],\n    '0x0252': ['US', '3', 'PatternOffColorCIELabValue'],\n    '0x0253': ['FL', '1', 'LineThickness'],\n    '0x0254': ['CS', '1', 'LineDashingStyle'],\n    '0x0255': ['UL', '1', 'LinePattern'],\n    '0x0256': ['OB', '1', 'FillPattern'],\n    '0x0257': ['CS', '1', 'FillMode'],\n    '0x0258': ['FL', '1', 'ShadowOpacity'],\n    '0x0261': ['FL', '1', 'GapLength'],\n    '0x0262': ['FL', '1', 'DiameterOfVisibility'],\n    '0x0273': ['FL', '2', 'RotationPoint'],\n    '0x0274': ['CS', '1', 'TickAlignment'],\n    '0x0278': ['CS', '1', 'ShowTickLabel'],\n    '0x0279': ['CS', '1', 'TickLabelAlignment'],\n    '0x0282': ['CS', '1', 'CompoundGraphicUnits'],\n    '0x0284': ['FL', '1', 'PatternOnOpacity'],\n    '0x0285': ['FL', '1', 'PatternOffOpacity'],\n    '0x0287': ['SQ', '1', 'MajorTicksSequence'],\n    '0x0288': ['FL', '1', 'TickPosition'],\n    '0x0289': ['SH', '1', 'TickLabel'],\n    '0x0294': ['CS', '1', 'CompoundGraphicType'],\n    '0x0295': ['UL', '1', 'GraphicGroupID'],\n    '0x0306': ['CS', '1', 'ShapeType'],\n    '0x0308': ['SQ', '1', 'RegistrationSequence'],\n    '0x0309': ['SQ', '1', 'MatrixRegistrationSequence'],\n    '0x030A': ['SQ', '1', 'MatrixSequence'],\n    '0x030B': ['FD', '16', 'FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix'],\n    '0x030C': ['CS', '1', 'FrameOfReferenceTransformationMatrixType'],\n    '0x030D': ['SQ', '1', 'RegistrationTypeCodeSequence'],\n    '0x030F': ['ST', '1', 'FiducialDescription'],\n    '0x0310': ['SH', '1', 'FiducialIdentifier'],\n    '0x0311': ['SQ', '1', 'FiducialIdentifierCodeSequence'],\n    '0x0312': ['FD', '1', 'ContourUncertaintyRadius'],\n    '0x0314': ['SQ', '1', 'UsedFiducialsSequence'],\n    '0x0318': ['SQ', '1', 'GraphicCoordinatesDataSequence'],\n    '0x031A': ['UI', '1', 'FiducialUID'],\n    '0x031B': ['UI', '1', 'ReferencedFiducialUID'],\n    '0x031C': ['SQ', '1', 'FiducialSetSequence'],\n    '0x031E': ['SQ', '1', 'FiducialSequence'],\n    '0x031F': ['SQ', '1', 'FiducialsPropertyCategoryCodeSequence'],\n    '0x0401': ['US', '3', 'GraphicLayerRecommendedDisplayCIELabValue'],\n    '0x0402': ['SQ', '1', 'BlendingSequence'],\n    '0x0403': ['FL', '1', 'RelativeOpacity'],\n    '0x0404': ['SQ', '1', 'ReferencedSpatialRegistrationSequence'],\n    '0x0405': ['CS', '1', 'BlendingPosition'],\n    '0x1101': ['UI', '1', 'PresentationDisplayCollectionUID'],\n    '0x1102': ['UI', '1', 'PresentationSequenceCollectionUID'],\n    '0x1103': ['US', '1', 'PresentationSequencePositionIndex'],\n    '0x1104': ['SQ', '1', 'RenderedImageReferenceSequence'],\n    '0x1201': ['SQ', '1', 'VolumetricPresentationStateInputSequence'],\n    '0x1202': ['CS', '1', 'PresentationInputType'],\n    '0x1203': ['US', '1', 'InputSequencePositionIndex'],\n    '0x1204': ['CS', '1', 'Crop'],\n    '0x1205': ['US', '1-n', 'CroppingSpecificationIndex'],\n    '0x1206': ['CS', '1', 'CompositingMethod'],\n    '0x1207': ['US', '1', 'VolumetricPresentationInputNumber'],\n    '0x1208': ['CS', '1', 'ImageVolumeGeometry'],\n    '0x1209': ['UI', '1', 'VolumetricPresentationInputSetUID'],\n    '0x120A': ['SQ', '1', 'VolumetricPresentationInputSetSequence'],\n    '0x120B': ['CS', '1', 'GlobalCrop'],\n    '0x120C': ['US', '1-n', 'GlobalCroppingSpecificationIndex'],\n    '0x120D': ['CS', '1', 'RenderingMethod'],\n    '0x1301': ['SQ', '1', 'VolumeCroppingSequence'],\n    '0x1302': ['CS', '1', 'VolumeCroppingMethod'],\n    '0x1303': ['FD', '6', 'BoundingBoxCrop'],\n    '0x1304': ['SQ', '1', 'ObliqueCroppingPlaneSequence'],\n    '0x1305': ['FD', '4', 'Plane'],\n    '0x1306': ['FD', '3', 'PlaneNormal'],\n    '0x1309': ['US', '1', 'CroppingSpecificationNumber'],\n    '0x1501': ['CS', '1', 'MultiPlanarReconstructionStyle'],\n    '0x1502': ['CS', '1', 'MPRThicknessType'],\n    '0x1503': ['FD', '1', 'MPRSlabThickness'],\n    '0x1505': ['FD', '3', 'MPRTopLeftHandCorner'],\n    '0x1507': ['FD', '3', 'MPRViewWidthDirection'],\n    '0x1508': ['FD', '1', 'MPRViewWidth'],\n    '0x150C': ['UL', '1', 'NumberOfVolumetricCurvePoints'],\n    '0x150D': ['OD', '1', 'VolumetricCurvePoints'],\n    '0x1511': ['FD', '3', 'MPRViewHeightDirection'],\n    '0x1512': ['FD', '1', 'MPRViewHeight'],\n    '0x1602': ['CS', '1', 'RenderProjection'],\n    '0x1603': ['FD', '3', 'ViewpointPosition'],\n    '0x1604': ['FD', '3', 'ViewpointLookAtPoint'],\n    '0x1605': ['FD', '3', 'ViewpointUpDirection'],\n    '0x1606': ['FD', '6', 'RenderFieldOfView'],\n    '0x1607': ['FD', '1', 'SamplingStepSize'],\n    '0x1701': ['CS', '1', 'ShadingStyle'],\n    '0x1702': ['FD', '1', 'AmbientReflectionIntensity'],\n    '0x1703': ['FD', '3', 'LightDirection'],\n    '0x1704': ['FD', '1', 'DiffuseReflectionIntensity'],\n    '0x1705': ['FD', '1', 'SpecularReflectionIntensity'],\n    '0x1706': ['FD', '1', 'Shininess'],\n    '0x1801': ['SQ', '1', 'PresentationStateClassificationComponentSequence'],\n    '0x1802': ['CS', '1', 'ComponentType'],\n    '0x1803': ['SQ', '1', 'ComponentInputSequence'],\n    '0x1804': ['US', '1', 'VolumetricPresentationInputIndex'],\n    '0x1805': ['SQ', '1', 'PresentationStateCompositorComponentSequence'],\n    '0x1806': ['SQ', '1', 'WeightingTransferFunctionSequence'],\n    '0x1807': ['US', '3', 'WeightingLookupTableDescriptor'],\n    '0x1808': ['OB', '1', 'WeightingLookupTableData'],\n    '0x1901': ['SQ', '1', 'VolumetricAnnotationSequence'],\n    '0x1903': ['SQ', '1', 'ReferencedStructuredContextSequence'],\n    '0x1904': ['UI', '1', 'ReferencedContentItem'],\n    '0x1905': ['SQ', '1', 'VolumetricPresentationInputAnnotationSequence'],\n    '0x1907': ['CS', '1', 'AnnotationClipping'],\n    '0x1A01': ['CS', '1', 'PresentationAnimationStyle'],\n    '0x1A03': ['FD', '1', 'RecommendedAnimationRate'],\n    '0x1A04': ['SQ', '1', 'AnimationCurveSequence'],\n    '0x1A05': ['FD', '1', 'AnimationStepSize'],\n    '0x1A06': ['FD', '1', 'SwivelRange'],\n    '0x1A07': ['OD', '1', 'VolumetricCurveUpDirections'],\n    '0x1A08': ['SQ', '1', 'VolumeStreamSequence'],\n    '0x1A09': ['LO', '1', 'RGBATransferFunctionDescription'],\n    '0x1B01': ['SQ', '1', 'AdvancedBlendingSequence'],\n    '0x1B02': ['US', '1', 'BlendingInputNumber'],\n    '0x1B03': ['SQ', '1', 'BlendingDisplayInputSequence'],\n    '0x1B04': ['SQ', '1', 'BlendingDisplaySequence'],\n    '0x1B06': ['CS', '1', 'BlendingMode'],\n    '0x1B07': ['CS', '1', 'TimeSeriesBlending'],\n    '0x1B08': ['CS', '1', 'GeometryForDisplay'],\n    '0x1B11': ['SQ', '1', 'ThresholdSequence'],\n    '0x1B12': ['SQ', '1', 'ThresholdValueSequence'],\n    '0x1B13': ['CS', '1', 'ThresholdType'],\n    '0x1B14': ['FD', '1', 'ThresholdValue']\n  },\n  '0x0072': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0002': ['SH', '1', 'HangingProtocolName'],\n    '0x0004': ['LO', '1', 'HangingProtocolDescription'],\n    '0x0006': ['CS', '1', 'HangingProtocolLevel'],\n    '0x0008': ['LO', '1', 'HangingProtocolCreator'],\n    '0x000A': ['DT', '1', 'HangingProtocolCreationDateTime'],\n    '0x000C': ['SQ', '1', 'HangingProtocolDefinitionSequence'],\n    '0x000E': ['SQ', '1', 'HangingProtocolUserIdentificationCodeSequence'],\n    '0x0010': ['LO', '1', 'HangingProtocolUserGroupName'],\n    '0x0012': ['SQ', '1', 'SourceHangingProtocolSequence'],\n    '0x0014': ['US', '1', 'NumberOfPriorsReferenced'],\n    '0x0020': ['SQ', '1', 'ImageSetsSequence'],\n    '0x0022': ['SQ', '1', 'ImageSetSelectorSequence'],\n    '0x0024': ['CS', '1', 'ImageSetSelectorUsageFlag'],\n    '0x0026': ['AT', '1', 'SelectorAttribute'],\n    '0x0028': ['US', '1', 'SelectorValueNumber'],\n    '0x0030': ['SQ', '1', 'TimeBasedImageSetsSequence'],\n    '0x0032': ['US', '1', 'ImageSetNumber'],\n    '0x0034': ['CS', '1', 'ImageSetSelectorCategory'],\n    '0x0038': ['US', '2', 'RelativeTime'],\n    '0x003A': ['CS', '1', 'RelativeTimeUnits'],\n    '0x003C': ['SS', '2', 'AbstractPriorValue'],\n    '0x003E': ['SQ', '1', 'AbstractPriorCodeSequence'],\n    '0x0040': ['LO', '1', 'ImageSetLabel'],\n    '0x0050': ['CS', '1', 'SelectorAttributeVR'],\n    '0x0052': ['AT', '1-n', 'SelectorSequencePointer'],\n    '0x0054': ['LO', '1-n', 'SelectorSequencePointerPrivateCreator'],\n    '0x0056': ['LO', '1', 'SelectorAttributePrivateCreator'],\n    '0x005E': ['AE', '1-n', 'SelectorAEValue'],\n    '0x005F': ['AS', '1-n', 'SelectorASValue'],\n    '0x0060': ['AT', '1-n', 'SelectorATValue'],\n    '0x0061': ['DA', '1-n', 'SelectorDAValue'],\n    '0x0062': ['CS', '1-n', 'SelectorCSValue'],\n    '0x0063': ['DT', '1-n', 'SelectorDTValue'],\n    '0x0064': ['IS', '1-n', 'SelectorISValue'],\n    '0x0065': ['OB', '1', 'SelectorOBValue'],\n    '0x0066': ['LO', '1-n', 'SelectorLOValue'],\n    '0x0067': ['OF', '1', 'SelectorOFValue'],\n    '0x0068': ['LT', '1', 'SelectorLTValue'],\n    '0x0069': ['OW', '1', 'SelectorOWValue'],\n    '0x006A': ['PN', '1-n', 'SelectorPNValue'],\n    '0x006B': ['TM', '1-n', 'SelectorTMValue'],\n    '0x006C': ['SH', '1-n', 'SelectorSHValue'],\n    '0x006D': ['UN', '1', 'SelectorUNValue'],\n    '0x006E': ['ST', '1', 'SelectorSTValue'],\n    '0x006F': ['UC', '1-n', 'SelectorUCValue'],\n    '0x0070': ['UT', '1', 'SelectorUTValue'],\n    '0x0071': ['UR', '1', 'SelectorURValue'],\n    '0x0072': ['DS', '1-n', 'SelectorDSValue'],\n    '0x0073': ['OD', '1', 'SelectorODValue'],\n    '0x0074': ['FD', '1-n', 'SelectorFDValue'],\n    '0x0075': ['OL', '1', 'SelectorOLValue'],\n    '0x0076': ['FL', '1-n', 'SelectorFLValue'],\n    '0x0078': ['UL', '1-n', 'SelectorULValue'],\n    '0x007A': ['US', '1-n', 'SelectorUSValue'],\n    '0x007C': ['SL', '1-n', 'SelectorSLValue'],\n    '0x007E': ['SS', '1-n', 'SelectorSSValue'],\n    '0x007F': ['UI', '1-n', 'SelectorUIValue'],\n    '0x0080': ['SQ', '1', 'SelectorCodeSequenceValue'],\n    '0x0081': ['OV', '1', 'SelectorOVValue'],\n    '0x0082': ['SV', '1-n', 'SelectorSVValue'],\n    '0x0083': ['UV', '1-n', 'SelectorUVValue'],\n    '0x0100': ['US', '1', 'NumberOfScreens'],\n    '0x0102': ['SQ', '1', 'NominalScreenDefinitionSequence'],\n    '0x0104': ['US', '1', 'NumberOfVerticalPixels'],\n    '0x0106': ['US', '1', 'NumberOfHorizontalPixels'],\n    '0x0108': ['FD', '4', 'DisplayEnvironmentSpatialPosition'],\n    '0x010A': ['US', '1', 'ScreenMinimumGrayscaleBitDepth'],\n    '0x010C': ['US', '1', 'ScreenMinimumColorBitDepth'],\n    '0x010E': ['US', '1', 'ApplicationMaximumRepaintTime'],\n    '0x0200': ['SQ', '1', 'DisplaySetsSequence'],\n    '0x0202': ['US', '1', 'DisplaySetNumber'],\n    '0x0203': ['LO', '1', 'DisplaySetLabel'],\n    '0x0204': ['US', '1', 'DisplaySetPresentationGroup'],\n    '0x0206': ['LO', '1', 'DisplaySetPresentationGroupDescription'],\n    '0x0208': ['CS', '1', 'PartialDataDisplayHandling'],\n    '0x0210': ['SQ', '1', 'SynchronizedScrollingSequence'],\n    '0x0212': ['US', '2-n', 'DisplaySetScrollingGroup'],\n    '0x0214': ['SQ', '1', 'NavigationIndicatorSequence'],\n    '0x0216': ['US', '1', 'NavigationDisplaySet'],\n    '0x0218': ['US', '1-n', 'ReferenceDisplaySets'],\n    '0x0300': ['SQ', '1', 'ImageBoxesSequence'],\n    '0x0302': ['US', '1', 'ImageBoxNumber'],\n    '0x0304': ['CS', '1', 'ImageBoxLayoutType'],\n    '0x0306': ['US', '1', 'ImageBoxTileHorizontalDimension'],\n    '0x0308': ['US', '1', 'ImageBoxTileVerticalDimension'],\n    '0x0310': ['CS', '1', 'ImageBoxScrollDirection'],\n    '0x0312': ['CS', '1', 'ImageBoxSmallScrollType'],\n    '0x0314': ['US', '1', 'ImageBoxSmallScrollAmount'],\n    '0x0316': ['CS', '1', 'ImageBoxLargeScrollType'],\n    '0x0318': ['US', '1', 'ImageBoxLargeScrollAmount'],\n    '0x0320': ['US', '1', 'ImageBoxOverlapPriority'],\n    '0x0330': ['FD', '1', 'CineRelativeToRealTime'],\n    '0x0400': ['SQ', '1', 'FilterOperationsSequence'],\n    '0x0402': ['CS', '1', 'FilterByCategory'],\n    '0x0404': ['CS', '1', 'FilterByAttributePresence'],\n    '0x0406': ['CS', '1', 'FilterByOperator'],\n    '0x0420': ['US', '3', 'StructuredDisplayBackgroundCIELabValue'],\n    '0x0421': ['US', '3', 'EmptyImageBoxCIELabValue'],\n    '0x0422': ['SQ', '1', 'StructuredDisplayImageBoxSequence'],\n    '0x0424': ['SQ', '1', 'StructuredDisplayTextBoxSequence'],\n    '0x0427': ['SQ', '1', 'ReferencedFirstFrameSequence'],\n    '0x0430': ['SQ', '1', 'ImageBoxSynchronizationSequence'],\n    '0x0432': ['US', '2-n', 'SynchronizedImageBoxList'],\n    '0x0434': ['CS', '1', 'TypeOfSynchronization'],\n    '0x0500': ['CS', '1', 'BlendingOperationType'],\n    '0x0510': ['CS', '1', 'ReformattingOperationType'],\n    '0x0512': ['FD', '1', 'ReformattingThickness'],\n    '0x0514': ['FD', '1', 'ReformattingInterval'],\n    '0x0516': ['CS', '1', 'ReformattingOperationInitialViewDirection'],\n    '0x0520': ['CS', '1-n', 'ThreeDRenderingType'],\n    '0x0600': ['SQ', '1', 'SortingOperationsSequence'],\n    '0x0602': ['CS', '1', 'SortByCategory'],\n    '0x0604': ['CS', '1', 'SortingDirection'],\n    '0x0700': ['CS', '2', 'DisplaySetPatientOrientation'],\n    '0x0702': ['CS', '1', 'VOIType'],\n    '0x0704': ['CS', '1', 'PseudoColorType'],\n    '0x0705': ['SQ', '1', 'PseudoColorPaletteInstanceReferenceSequence'],\n    '0x0706': ['CS', '1', 'ShowGrayscaleInverted'],\n    '0x0710': ['CS', '1', 'ShowImageTrueSizeFlag'],\n    '0x0712': ['CS', '1', 'ShowGraphicAnnotationFlag'],\n    '0x0714': ['CS', '1', 'ShowPatientDemographicsFlag'],\n    '0x0716': ['CS', '1', 'ShowAcquisitionTechniquesFlag'],\n    '0x0717': ['CS', '1', 'DisplaySetHorizontalJustification'],\n    '0x0718': ['CS', '1', 'DisplaySetVerticalJustification']\n  },\n  '0x0074': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0120': ['FD', '1', 'ContinuationStartMeterset'],\n    '0x0121': ['FD', '1', 'ContinuationEndMeterset'],\n    '0x1000': ['CS', '1', 'ProcedureStepState'],\n    '0x1002': ['SQ', '1', 'ProcedureStepProgressInformationSequence'],\n    '0x1004': ['DS', '1', 'ProcedureStepProgress'],\n    '0x1006': ['ST', '1', 'ProcedureStepProgressDescription'],\n    '0x1007': ['SQ', '1', 'ProcedureStepProgressParametersSequence'],\n    '0x1008': ['SQ', '1', 'ProcedureStepCommunicationsURISequence'],\n    '0x100A': ['UR', '1', 'ContactURI'],\n    '0x100C': ['LO', '1', 'ContactDisplayName'],\n    '0x100E': ['SQ', '1', 'ProcedureStepDiscontinuationReasonCodeSequence'],\n    '0x1020': ['SQ', '1', 'BeamTaskSequence'],\n    '0x1022': ['CS', '1', 'BeamTaskType'],\n    '0x1024': ['IS', '1', 'BeamOrderIndexTrial'],\n    '0x1025': ['CS', '1', 'AutosequenceFlag'],\n    '0x1026': ['FD', '1', 'TableTopVerticalAdjustedPosition'],\n    '0x1027': ['FD', '1', 'TableTopLongitudinalAdjustedPosition'],\n    '0x1028': ['FD', '1', 'TableTopLateralAdjustedPosition'],\n    '0x102A': ['FD', '1', 'PatientSupportAdjustedAngle'],\n    '0x102B': ['FD', '1', 'TableTopEccentricAdjustedAngle'],\n    '0x102C': ['FD', '1', 'TableTopPitchAdjustedAngle'],\n    '0x102D': ['FD', '1', 'TableTopRollAdjustedAngle'],\n    '0x1030': ['SQ', '1', 'DeliveryVerificationImageSequence'],\n    '0x1032': ['CS', '1', 'VerificationImageTiming'],\n    '0x1034': ['CS', '1', 'DoubleExposureFlag'],\n    '0x1036': ['CS', '1', 'DoubleExposureOrdering'],\n    '0x1038': ['DS', '1', 'DoubleExposureMetersetTrial'],\n    '0x103A': ['DS', '4', 'DoubleExposureFieldDeltaTrial'],\n    '0x1040': ['SQ', '1', 'RelatedReferenceRTImageSequence'],\n    '0x1042': ['SQ', '1', 'GeneralMachineVerificationSequence'],\n    '0x1044': ['SQ', '1', 'ConventionalMachineVerificationSequence'],\n    '0x1046': ['SQ', '1', 'IonMachineVerificationSequence'],\n    '0x1048': ['SQ', '1', 'FailedAttributesSequence'],\n    '0x104A': ['SQ', '1', 'OverriddenAttributesSequence'],\n    '0x104C': ['SQ', '1', 'ConventionalControlPointVerificationSequence'],\n    '0x104E': ['SQ', '1', 'IonControlPointVerificationSequence'],\n    '0x1050': ['SQ', '1', 'AttributeOccurrenceSequence'],\n    '0x1052': ['AT', '1', 'AttributeOccurrencePointer'],\n    '0x1054': ['UL', '1', 'AttributeItemSelector'],\n    '0x1056': ['LO', '1', 'AttributeOccurrencePrivateCreator'],\n    '0x1057': ['IS', '1-n', 'SelectorSequencePointerItems'],\n    '0x1200': ['CS', '1', 'ScheduledProcedureStepPriority'],\n    '0x1202': ['LO', '1', 'WorklistLabel'],\n    '0x1204': ['LO', '1', 'ProcedureStepLabel'],\n    '0x1210': ['SQ', '1', 'ScheduledProcessingParametersSequence'],\n    '0x1212': ['SQ', '1', 'PerformedProcessingParametersSequence'],\n    '0x1216': ['SQ', '1', 'UnifiedProcedureStepPerformedProcedureSequence'],\n    '0x1220': ['SQ', '1', 'RelatedProcedureStepSequence'],\n    '0x1222': ['LO', '1', 'ProcedureStepRelationshipType'],\n    '0x1224': ['SQ', '1', 'ReplacedProcedureStepSequence'],\n    '0x1230': ['LO', '1', 'DeletionLock'],\n    '0x1234': ['AE', '1', 'ReceivingAE'],\n    '0x1236': ['AE', '1', 'RequestingAE'],\n    '0x1238': ['LT', '1', 'ReasonForCancellation'],\n    '0x1242': ['CS', '1', 'SCPStatus'],\n    '0x1244': ['CS', '1', 'SubscriptionListStatus'],\n    '0x1246': ['CS', '1', 'UnifiedProcedureStepListStatus'],\n    '0x1324': ['UL', '1', 'BeamOrderIndex'],\n    '0x1338': ['FD', '1', 'DoubleExposureMeterset'],\n    '0x133A': ['FD', '4', 'DoubleExposureFieldDelta'],\n    '0x1401': ['SQ', '1', 'BrachyTaskSequence'],\n    '0x1402': ['DS', '1', 'ContinuationStartTotalReferenceAirKerma'],\n    '0x1403': ['DS', '1', 'ContinuationEndTotalReferenceAirKerma'],\n    '0x1404': ['IS', '1', 'ContinuationPulseNumber'],\n    '0x1405': ['SQ', '1', 'ChannelDeliveryOrderSequence'],\n    '0x1406': ['IS', '1', 'ReferencedChannelNumber'],\n    '0x1407': ['DS', '1', 'StartCumulativeTimeWeight'],\n    '0x1408': ['DS', '1', 'EndCumulativeTimeWeight'],\n    '0x1409': ['SQ', '1', 'OmittedChannelSequence'],\n    '0x140A': ['CS', '1', 'ReasonForChannelOmission'],\n    '0x140B': ['LO', '1', 'ReasonForChannelOmissionDescription'],\n    '0x140C': ['IS', '1', 'ChannelDeliveryOrderIndex'],\n    '0x140D': ['SQ', '1', 'ChannelDeliveryContinuationSequence'],\n    '0x140E': ['SQ', '1', 'OmittedApplicationSetupSequence']\n  },\n  '0x0076': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['LO', '1', 'ImplantAssemblyTemplateName'],\n    '0x0003': ['LO', '1', 'ImplantAssemblyTemplateIssuer'],\n    '0x0006': ['LO', '1', 'ImplantAssemblyTemplateVersion'],\n    '0x0008': ['SQ', '1', 'ReplacedImplantAssemblyTemplateSequence'],\n    '0x000A': ['CS', '1', 'ImplantAssemblyTemplateType'],\n    '0x000C': ['SQ', '1', 'OriginalImplantAssemblyTemplateSequence'],\n    '0x000E': ['SQ', '1', 'DerivationImplantAssemblyTemplateSequence'],\n    '0x0010': ['SQ', '1', 'ImplantAssemblyTemplateTargetAnatomySequence'],\n    '0x0020': ['SQ', '1', 'ProcedureTypeCodeSequence'],\n    '0x0030': ['LO', '1', 'SurgicalTechnique'],\n    '0x0032': ['SQ', '1', 'ComponentTypesSequence'],\n    '0x0034': ['SQ', '1', 'ComponentTypeCodeSequence'],\n    '0x0036': ['CS', '1', 'ExclusiveComponentType'],\n    '0x0038': ['CS', '1', 'MandatoryComponentType'],\n    '0x0040': ['SQ', '1', 'ComponentSequence'],\n    '0x0055': ['US', '1', 'ComponentID'],\n    '0x0060': ['SQ', '1', 'ComponentAssemblySequence'],\n    '0x0070': ['US', '1', 'Component1ReferencedID'],\n    '0x0080': ['US', '1', 'Component1ReferencedMatingFeatureSetID'],\n    '0x0090': ['US', '1', 'Component1ReferencedMatingFeatureID'],\n    '0x00A0': ['US', '1', 'Component2ReferencedID'],\n    '0x00B0': ['US', '1', 'Component2ReferencedMatingFeatureSetID'],\n    '0x00C0': ['US', '1', 'Component2ReferencedMatingFeatureID']\n  },\n  '0x0078': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['LO', '1', 'ImplantTemplateGroupName'],\n    '0x0010': ['ST', '1', 'ImplantTemplateGroupDescription'],\n    '0x0020': ['LO', '1', 'ImplantTemplateGroupIssuer'],\n    '0x0024': ['LO', '1', 'ImplantTemplateGroupVersion'],\n    '0x0026': ['SQ', '1', 'ReplacedImplantTemplateGroupSequence'],\n    '0x0028': ['SQ', '1', 'ImplantTemplateGroupTargetAnatomySequence'],\n    '0x002A': ['SQ', '1', 'ImplantTemplateGroupMembersSequence'],\n    '0x002E': ['US', '1', 'ImplantTemplateGroupMemberID'],\n    '0x0050': ['FD', '3', 'ThreeDImplantTemplateGroupMemberMatchingPoint'],\n    '0x0060': ['FD', '9', 'ThreeDImplantTemplateGroupMemberMatchingAxes'],\n    '0x0070': ['SQ', '1', 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence'],\n    '0x0090': ['FD', '2', 'TwoDImplantTemplateGroupMemberMatchingPoint'],\n    '0x00A0': ['FD', '4', 'TwoDImplantTemplateGroupMemberMatchingAxes'],\n    '0x00B0': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionSequence'],\n    '0x00B2': ['LO', '1', 'ImplantTemplateGroupVariationDimensionName'],\n    '0x00B4': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionRankSequence'],\n    '0x00B6': ['US', '1', 'ReferencedImplantTemplateGroupMemberID'],\n    '0x00B8': ['US', '1', 'ImplantTemplateGroupVariationDimensionRank']\n  },\n  '0x0080': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['SQ', '1', 'SurfaceScanAcquisitionTypeCodeSequence'],\n    '0x0002': ['SQ', '1', 'SurfaceScanModeCodeSequence'],\n    '0x0003': ['SQ', '1', 'RegistrationMethodCodeSequence'],\n    '0x0004': ['FD', '1', 'ShotDurationTime'],\n    '0x0005': ['FD', '1', 'ShotOffsetTime'],\n    '0x0006': ['US', '1-n', 'SurfacePointPresentationValueData'],\n    '0x0007': ['US', '3-3n', 'SurfacePointColorCIELabValueData'],\n    '0x0008': ['SQ', '1', 'UVMappingSequence'],\n    '0x0009': ['SH', '1', 'TextureLabel'],\n    '0x0010': ['OF', '1', 'UValueData'],\n    '0x0011': ['OF', '1', 'VValueData'],\n    '0x0012': ['SQ', '1', 'ReferencedTextureSequence'],\n    '0x0013': ['SQ', '1', 'ReferencedSurfaceDataSequence']\n  },\n  '0x0082': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['CS', '1', 'AssessmentSummary'],\n    '0x0003': ['UT', '1', 'AssessmentSummaryDescription'],\n    '0x0004': ['SQ', '1', 'AssessedSOPInstanceSequence'],\n    '0x0005': ['SQ', '1', 'ReferencedComparisonSOPInstanceSequence'],\n    '0x0006': ['UL', '1', 'NumberOfAssessmentObservations'],\n    '0x0007': ['SQ', '1', 'AssessmentObservationsSequence'],\n    '0x0008': ['CS', '1', 'ObservationSignificance'],\n    '0x000A': ['UT', '1', 'ObservationDescription'],\n    '0x000C': ['SQ', '1', 'StructuredConstraintObservationSequence'],\n    '0x0010': ['SQ', '1', 'AssessedAttributeValueSequence'],\n    '0x0016': ['LO', '1', 'AssessmentSetID'],\n    '0x0017': ['SQ', '1', 'AssessmentRequesterSequence'],\n    '0x0018': ['LO', '1', 'SelectorAttributeName'],\n    '0x0019': ['LO', '1', 'SelectorAttributeKeyword'],\n    '0x0021': ['SQ', '1', 'AssessmentTypeCodeSequence'],\n    '0x0022': ['SQ', '1', 'ObservationBasisCodeSequence'],\n    '0x0023': ['LO', '1', 'AssessmentLabel'],\n    '0x0032': ['CS', '1', 'ConstraintType'],\n    '0x0033': ['UT', '1', 'SpecificationSelectionGuidance'],\n    '0x0034': ['SQ', '1', 'ConstraintValueSequence'],\n    '0x0035': ['SQ', '1', 'RecommendedDefaultValueSequence'],\n    '0x0036': ['CS', '1', 'ConstraintViolationSignificance'],\n    '0x0037': ['UT', '1', 'ConstraintViolationCondition'],\n    '0x0038': ['CS', '1', 'ModifiableConstraintFlag']\n  },\n  '0x0088': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0130': ['SH', '1', 'StorageMediaFileSetID'],\n    '0x0140': ['UI', '1', 'StorageMediaFileSetUID'],\n    '0x0200': ['SQ', '1', 'IconImageSequence'],\n    '0x0904': ['LO', '1', 'TopicTitle'],\n    '0x0906': ['ST', '1', 'TopicSubject'],\n    '0x0910': ['LO', '1', 'TopicAuthor'],\n    '0x0912': ['LO', '1-32', 'TopicKeywords']\n  },\n  '0x0100': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0410': ['CS', '1', 'SOPInstanceStatus'],\n    '0x0420': ['DT', '1', 'SOPAuthorizationDateTime'],\n    '0x0424': ['LT', '1', 'SOPAuthorizationComment'],\n    '0x0426': ['LO', '1', 'AuthorizationEquipmentCertificationNumber']\n  },\n  '0x0400': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0005': ['US', '1', 'MACIDNumber'],\n    '0x0010': ['UI', '1', 'MACCalculationTransferSyntaxUID'],\n    '0x0015': ['CS', '1', 'MACAlgorithm'],\n    '0x0020': ['AT', '1-n', 'DataElementsSigned'],\n    '0x0100': ['UI', '1', 'DigitalSignatureUID'],\n    '0x0105': ['DT', '1', 'DigitalSignatureDateTime'],\n    '0x0110': ['CS', '1', 'CertificateType'],\n    '0x0115': ['OB', '1', 'CertificateOfSigner'],\n    '0x0120': ['OB', '1', 'Signature'],\n    '0x0305': ['CS', '1', 'CertifiedTimestampType'],\n    '0x0310': ['OB', '1', 'CertifiedTimestamp'],\n    '0x0315': ['FL', '1', ''],\n    '0x0401': ['SQ', '1', 'DigitalSignaturePurposeCodeSequence'],\n    '0x0402': ['SQ', '1', 'ReferencedDigitalSignatureSequence'],\n    '0x0403': ['SQ', '1', 'ReferencedSOPInstanceMACSequence'],\n    '0x0404': ['OB', '1', 'MAC'],\n    '0x0500': ['SQ', '1', 'EncryptedAttributesSequence'],\n    '0x0510': ['UI', '1', 'EncryptedContentTransferSyntaxUID'],\n    '0x0520': ['OB', '1', 'EncryptedContent'],\n    '0x0550': ['SQ', '1', 'ModifiedAttributesSequence'],\n    '0x0551': ['SQ', '1', 'NonconformingModifiedAttributesSequence'],\n    '0x0552': ['OB', '1', 'NonconformingDataElementValue'],\n    '0x0561': ['SQ', '1', 'OriginalAttributesSequence'],\n    '0x0562': ['DT', '1', 'AttributeModificationDateTime'],\n    '0x0563': ['LO', '1', 'ModifyingSystem'],\n    '0x0564': ['LO', '1', 'SourceOfPreviousValues'],\n    '0x0565': ['CS', '1', 'ReasonForTheAttributeModification'],\n    '0x0600': ['CS', '1', 'InstanceOriginStatus']\n  },\n  '0x1000': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['US', '3', 'EscapeTriplet'],\n    '0x0011': ['US', '3', 'RunLengthTriplet'],\n    '0x0012': ['US', '1', 'HuffmanTableSize'],\n    '0x0013': ['US', '3', 'HuffmanTableTriplet'],\n    '0x0014': ['US', '1', 'ShiftTableSize'],\n    '0x0015': ['US', '3', 'ShiftTableTriplet']\n  },\n  '0x1010': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0004': ['US', '1-n', 'ZonalMap']\n  },\n  '0x2000': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['IS', '1', 'NumberOfCopies'],\n    '0x001E': ['SQ', '1', 'PrinterConfigurationSequence'],\n    '0x0020': ['CS', '1', 'PrintPriority'],\n    '0x0030': ['CS', '1', 'MediumType'],\n    '0x0040': ['CS', '1', 'FilmDestination'],\n    '0x0050': ['LO', '1', 'FilmSessionLabel'],\n    '0x0060': ['IS', '1', 'MemoryAllocation'],\n    '0x0061': ['IS', '1', 'MaximumMemoryAllocation'],\n    '0x0062': ['CS', '1', 'ColorImagePrintingFlag'],\n    '0x0063': ['CS', '1', 'CollationFlag'],\n    '0x0065': ['CS', '1', 'AnnotationFlag'],\n    '0x0067': ['CS', '1', 'ImageOverlayFlag'],\n    '0x0069': ['CS', '1', 'PresentationLUTFlag'],\n    '0x006A': ['CS', '1', 'ImageBoxPresentationLUTFlag'],\n    '0x00A0': ['US', '1', 'MemoryBitDepth'],\n    '0x00A1': ['US', '1', 'PrintingBitDepth'],\n    '0x00A2': ['SQ', '1', 'MediaInstalledSequence'],\n    '0x00A4': ['SQ', '1', 'OtherMediaAvailableSequence'],\n    '0x00A8': ['SQ', '1', 'SupportedImageDisplayFormatsSequence'],\n    '0x0500': ['SQ', '1', 'ReferencedFilmBoxSequence'],\n    '0x0510': ['SQ', '1', 'ReferencedStoredPrintSequence']\n  },\n  '0x2010': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['ST', '1', 'ImageDisplayFormat'],\n    '0x0030': ['CS', '1', 'AnnotationDisplayFormatID'],\n    '0x0040': ['CS', '1', 'FilmOrientation'],\n    '0x0050': ['CS', '1', 'FilmSizeID'],\n    '0x0052': ['CS', '1', 'PrinterResolutionID'],\n    '0x0054': ['CS', '1', 'DefaultPrinterResolutionID'],\n    '0x0060': ['CS', '1', 'MagnificationType'],\n    '0x0080': ['CS', '1', 'SmoothingType'],\n    '0x00A6': ['CS', '1', 'DefaultMagnificationType'],\n    '0x00A7': ['CS', '1-n', 'OtherMagnificationTypesAvailable'],\n    '0x00A8': ['CS', '1', 'DefaultSmoothingType'],\n    '0x00A9': ['CS', '1-n', 'OtherSmoothingTypesAvailable'],\n    '0x0100': ['CS', '1', 'BorderDensity'],\n    '0x0110': ['CS', '1', 'EmptyImageDensity'],\n    '0x0120': ['US', '1', 'MinDensity'],\n    '0x0130': ['US', '1', 'MaxDensity'],\n    '0x0140': ['CS', '1', 'Trim'],\n    '0x0150': ['ST', '1', 'ConfigurationInformation'],\n    '0x0152': ['LT', '1', 'ConfigurationInformationDescription'],\n    '0x0154': ['IS', '1', 'MaximumCollatedFilms'],\n    '0x015E': ['US', '1', 'Illumination'],\n    '0x0160': ['US', '1', 'ReflectedAmbientLight'],\n    '0x0376': ['DS', '2', 'PrinterPixelSpacing'],\n    '0x0500': ['SQ', '1', 'ReferencedFilmSessionSequence'],\n    '0x0510': ['SQ', '1', 'ReferencedImageBoxSequence'],\n    '0x0520': ['SQ', '1', 'ReferencedBasicAnnotationBoxSequence']\n  },\n  '0x2020': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['US', '1', 'ImageBoxPosition'],\n    '0x0020': ['CS', '1', 'Polarity'],\n    '0x0030': ['DS', '1', 'RequestedImageSize'],\n    '0x0040': ['CS', '1', 'RequestedDecimateCropBehavior'],\n    '0x0050': ['CS', '1', 'RequestedResolutionID'],\n    '0x00A0': ['CS', '1', 'RequestedImageSizeFlag'],\n    '0x00A2': ['CS', '1', 'DecimateCropResult'],\n    '0x0110': ['SQ', '1', 'BasicGrayscaleImageSequence'],\n    '0x0111': ['SQ', '1', 'BasicColorImageSequence'],\n    '0x0130': ['SQ', '1', 'ReferencedImageOverlayBoxSequence'],\n    '0x0140': ['SQ', '1', 'ReferencedVOILUTBoxSequence']\n  },\n  '0x2030': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['US', '1', 'AnnotationPosition'],\n    '0x0020': ['LO', '1', 'TextString']\n  },\n  '0x2040': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['SQ', '1', 'ReferencedOverlayPlaneSequence'],\n    '0x0011': ['US', '1-99', 'ReferencedOverlayPlaneGroups'],\n    '0x0020': ['SQ', '1', 'OverlayPixelDataSequence'],\n    '0x0060': ['CS', '1', 'OverlayMagnificationType'],\n    '0x0070': ['CS', '1', 'OverlaySmoothingType'],\n    '0x0072': ['CS', '1', 'OverlayOrImageMagnification'],\n    '0x0074': ['US', '1', 'MagnifyToNumberOfColumns'],\n    '0x0080': ['CS', '1', 'OverlayForegroundDensity'],\n    '0x0082': ['CS', '1', 'OverlayBackgroundDensity'],\n    '0x0090': ['CS', '1', 'OverlayMode'],\n    '0x0100': ['CS', '1', 'ThresholdDensity'],\n    '0x0500': ['SQ', '1', 'ReferencedImageBoxSequenceRetired']\n  },\n  '0x2050': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['SQ', '1', 'PresentationLUTSequence'],\n    '0x0020': ['CS', '1', 'PresentationLUTShape'],\n    '0x0500': ['SQ', '1', 'ReferencedPresentationLUTSequence']\n  },\n  '0x2100': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['SH', '1', 'PrintJobID'],\n    '0x0020': ['CS', '1', 'ExecutionStatus'],\n    '0x0030': ['CS', '1', 'ExecutionStatusInfo'],\n    '0x0040': ['DA', '1', 'CreationDate'],\n    '0x0050': ['TM', '1', 'CreationTime'],\n    '0x0070': ['AE', '1', 'Originator'],\n    '0x0140': ['AE', '1', 'DestinationAE'],\n    '0x0160': ['SH', '1', 'OwnerID'],\n    '0x0170': ['IS', '1', 'NumberOfFilms'],\n    '0x0500': ['SQ', '1', 'ReferencedPrintJobSequencePullStoredPrint']\n  },\n  '0x2110': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['CS', '1', 'PrinterStatus'],\n    '0x0020': ['CS', '1', 'PrinterStatusInfo'],\n    '0x0030': ['LO', '1', 'PrinterName'],\n    '0x0099': ['SH', '1', 'PrintQueueID']\n  },\n  '0x2120': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['CS', '1', 'QueueStatus'],\n    '0x0050': ['SQ', '1', 'PrintJobDescriptionSequence'],\n    '0x0070': ['SQ', '1', 'ReferencedPrintJobSequence']\n  },\n  '0x2130': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['SQ', '1', 'PrintManagementCapabilitiesSequence'],\n    '0x0015': ['SQ', '1', 'PrinterCharacteristicsSequence'],\n    '0x0030': ['SQ', '1', 'FilmBoxContentSequence'],\n    '0x0040': ['SQ', '1', 'ImageBoxContentSequence'],\n    '0x0050': ['SQ', '1', 'AnnotationContentSequence'],\n    '0x0060': ['SQ', '1', 'ImageOverlayBoxContentSequence'],\n    '0x0080': ['SQ', '1', 'PresentationLUTContentSequence'],\n    '0x00A0': ['SQ', '1', 'ProposedStudySequence'],\n    '0x00C0': ['SQ', '1', 'OriginalImageSequence']\n  },\n  '0x2200': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['CS', '1', 'LabelUsingInformationExtractedFromInstances'],\n    '0x0002': ['UT', '1', 'LabelText'],\n    '0x0003': ['CS', '1', 'LabelStyleSelection'],\n    '0x0004': ['LT', '1', 'MediaDisposition'],\n    '0x0005': ['LT', '1', 'BarcodeValue'],\n    '0x0006': ['CS', '1', 'BarcodeSymbology'],\n    '0x0007': ['CS', '1', 'AllowMediaSplitting'],\n    '0x0008': ['CS', '1', 'IncludeNonDICOMObjects'],\n    '0x0009': ['CS', '1', 'IncludeDisplayApplication'],\n    '0x000A': ['CS', '1', 'PreserveCompositeInstancesAfterMediaCreation'],\n    '0x000B': ['US', '1', 'TotalNumberOfPiecesOfMediaCreated'],\n    '0x000C': ['LO', '1', 'RequestedMediaApplicationProfile'],\n    '0x000D': ['SQ', '1', 'ReferencedStorageMediaSequence'],\n    '0x000E': ['AT', '1-n', 'FailureAttributes'],\n    '0x000F': ['CS', '1', 'AllowLossyCompression'],\n    '0x0020': ['CS', '1', 'RequestPriority']\n  },\n  '0x3002': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0002': ['SH', '1', 'RTImageLabel'],\n    '0x0003': ['LO', '1', 'RTImageName'],\n    '0x0004': ['ST', '1', 'RTImageDescription'],\n    '0x000A': ['CS', '1', 'ReportedValuesOrigin'],\n    '0x000C': ['CS', '1', 'RTImagePlane'],\n    '0x000D': ['DS', '3', 'XRayImageReceptorTranslation'],\n    '0x000E': ['DS', '1', 'XRayImageReceptorAngle'],\n    '0x0010': ['DS', '6', 'RTImageOrientation'],\n    '0x0011': ['DS', '2', 'ImagePlanePixelSpacing'],\n    '0x0012': ['DS', '2', 'RTImagePosition'],\n    '0x0020': ['SH', '1', 'RadiationMachineName'],\n    '0x0022': ['DS', '1', 'RadiationMachineSAD'],\n    '0x0024': ['DS', '1', 'RadiationMachineSSD'],\n    '0x0026': ['DS', '1', 'RTImageSID'],\n    '0x0028': ['DS', '1', 'SourceToReferenceObjectDistance'],\n    '0x0029': ['IS', '1', 'FractionNumber'],\n    '0x0030': ['SQ', '1', 'ExposureSequence'],\n    '0x0032': ['DS', '1', 'MetersetExposure'],\n    '0x0034': ['DS', '4', 'DiaphragmPosition'],\n    '0x0040': ['SQ', '1', 'FluenceMapSequence'],\n    '0x0041': ['CS', '1', 'FluenceDataSource'],\n    '0x0042': ['DS', '1', 'FluenceDataScale'],\n    '0x0050': ['SQ', '1', 'PrimaryFluenceModeSequence'],\n    '0x0051': ['CS', '1', 'FluenceMode'],\n    '0x0052': ['SH', '1', 'FluenceModeID']\n  },\n  '0x3004': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['CS', '1', 'DVHType'],\n    '0x0002': ['CS', '1', 'DoseUnits'],\n    '0x0004': ['CS', '1', 'DoseType'],\n    '0x0005': ['CS', '1', 'SpatialTransformOfDose'],\n    '0x0006': ['LO', '1', 'DoseComment'],\n    '0x0008': ['DS', '3', 'NormalizationPoint'],\n    '0x000A': ['CS', '1', 'DoseSummationType'],\n    '0x000C': ['DS', '2-n', 'GridFrameOffsetVector'],\n    '0x000E': ['DS', '1', 'DoseGridScaling'],\n    '0x0010': ['SQ', '1', 'RTDoseROISequence'],\n    '0x0012': ['DS', '1', 'DoseValue'],\n    '0x0014': ['CS', '1-3', 'TissueHeterogeneityCorrection'],\n    '0x0040': ['DS', '3', 'DVHNormalizationPoint'],\n    '0x0042': ['DS', '1', 'DVHNormalizationDoseValue'],\n    '0x0050': ['SQ', '1', 'DVHSequence'],\n    '0x0052': ['DS', '1', 'DVHDoseScaling'],\n    '0x0054': ['CS', '1', 'DVHVolumeUnits'],\n    '0x0056': ['IS', '1', 'DVHNumberOfBins'],\n    '0x0058': ['DS', '2-2n', 'DVHData'],\n    '0x0060': ['SQ', '1', 'DVHReferencedROISequence'],\n    '0x0062': ['CS', '1', 'DVHROIContributionType'],\n    '0x0070': ['DS', '1', 'DVHMinimumDose'],\n    '0x0072': ['DS', '1', 'DVHMaximumDose'],\n    '0x0074': ['DS', '1', 'DVHMeanDose']\n  },\n  '0x3006': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0002': ['SH', '1', 'StructureSetLabel'],\n    '0x0004': ['LO', '1', 'StructureSetName'],\n    '0x0006': ['ST', '1', 'StructureSetDescription'],\n    '0x0008': ['DA', '1', 'StructureSetDate'],\n    '0x0009': ['TM', '1', 'StructureSetTime'],\n    '0x0010': ['SQ', '1', 'ReferencedFrameOfReferenceSequence'],\n    '0x0012': ['SQ', '1', 'RTReferencedStudySequence'],\n    '0x0014': ['SQ', '1', 'RTReferencedSeriesSequence'],\n    '0x0016': ['SQ', '1', 'ContourImageSequence'],\n    '0x0018': ['SQ', '1', 'PredecessorStructureSetSequence'],\n    '0x0020': ['SQ', '1', 'StructureSetROISequence'],\n    '0x0022': ['IS', '1', 'ROINumber'],\n    '0x0024': ['UI', '1', 'ReferencedFrameOfReferenceUID'],\n    '0x0026': ['LO', '1', 'ROIName'],\n    '0x0028': ['ST', '1', 'ROIDescription'],\n    '0x002A': ['IS', '3', 'ROIDisplayColor'],\n    '0x002C': ['DS', '1', 'ROIVolume'],\n    '0x0030': ['SQ', '1', 'RTRelatedROISequence'],\n    '0x0033': ['CS', '1', 'RTROIRelationship'],\n    '0x0036': ['CS', '1', 'ROIGenerationAlgorithm'],\n    '0x0037': ['SQ', '1', 'ROIDerivationAlgorithmIdentificationSequence'],\n    '0x0038': ['LO', '1', 'ROIGenerationDescription'],\n    '0x0039': ['SQ', '1', 'ROIContourSequence'],\n    '0x0040': ['SQ', '1', 'ContourSequence'],\n    '0x0042': ['CS', '1', 'ContourGeometricType'],\n    '0x0044': ['DS', '1', 'ContourSlabThickness'],\n    '0x0045': ['DS', '3', 'ContourOffsetVector'],\n    '0x0046': ['IS', '1', 'NumberOfContourPoints'],\n    '0x0048': ['IS', '1', 'ContourNumber'],\n    '0x0049': ['IS', '1-n', 'AttachedContours'],\n    '0x004A': ['SQ', '1', 'SourcePixelPlanesCharacteristicsSequence'],\n    '0x0050': ['DS', '3-3n', 'ContourData'],\n    '0x0080': ['SQ', '1', 'RTROIObservationsSequence'],\n    '0x0082': ['IS', '1', 'ObservationNumber'],\n    '0x0084': ['IS', '1', 'ReferencedROINumber'],\n    '0x0085': ['SH', '1', 'ROIObservationLabel'],\n    '0x0086': ['SQ', '1', 'RTROIIdentificationCodeSequence'],\n    '0x0088': ['ST', '1', 'ROIObservationDescription'],\n    '0x00A0': ['SQ', '1', 'RelatedRTROIObservationsSequence'],\n    '0x00A4': ['CS', '1', 'RTROIInterpretedType'],\n    '0x00A6': ['PN', '1', 'ROIInterpreter'],\n    '0x00B0': ['SQ', '1', 'ROIPhysicalPropertiesSequence'],\n    '0x00B2': ['CS', '1', 'ROIPhysicalProperty'],\n    '0x00B4': ['DS', '1', 'ROIPhysicalPropertyValue'],\n    '0x00B6': ['SQ', '1', 'ROIElementalCompositionSequence'],\n    '0x00B7': ['US', '1', 'ROIElementalCompositionAtomicNumber'],\n    '0x00B8': ['FL', '1', 'ROIElementalCompositionAtomicMassFraction'],\n    '0x00B9': ['SQ', '1', 'AdditionalRTROIIdentificationCodeSequence'],\n    '0x00C0': ['SQ', '1', 'FrameOfReferenceRelationshipSequence'],\n    '0x00C2': ['UI', '1', 'RelatedFrameOfReferenceUID'],\n    '0x00C4': ['CS', '1', 'FrameOfReferenceTransformationType'],\n    '0x00C6': ['DS', '16', 'FrameOfReferenceTransformationMatrix'],\n    '0x00C8': ['LO', '1', 'FrameOfReferenceTransformationComment'],\n    '0x00C9': ['SQ', '1', 'PatientLocationCoordinatesSequence'],\n    '0x00CA': ['SQ', '1', 'PatientLocationCoordinatesCodeSequence'],\n    '0x00CB': ['SQ', '1', 'PatientSupportPositionSequence']\n  },\n  '0x3008': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['SQ', '1', 'MeasuredDoseReferenceSequence'],\n    '0x0012': ['ST', '1', 'MeasuredDoseDescription'],\n    '0x0014': ['CS', '1', 'MeasuredDoseType'],\n    '0x0016': ['DS', '1', 'MeasuredDoseValue'],\n    '0x0020': ['SQ', '1', 'TreatmentSessionBeamSequence'],\n    '0x0021': ['SQ', '1', 'TreatmentSessionIonBeamSequence'],\n    '0x0022': ['IS', '1', 'CurrentFractionNumber'],\n    '0x0024': ['DA', '1', 'TreatmentControlPointDate'],\n    '0x0025': ['TM', '1', 'TreatmentControlPointTime'],\n    '0x002A': ['CS', '1', 'TreatmentTerminationStatus'],\n    '0x002B': ['SH', '1', 'TreatmentTerminationCode'],\n    '0x002C': ['CS', '1', 'TreatmentVerificationStatus'],\n    '0x0030': ['SQ', '1', 'ReferencedTreatmentRecordSequence'],\n    '0x0032': ['DS', '1', 'SpecifiedPrimaryMeterset'],\n    '0x0033': ['DS', '1', 'SpecifiedSecondaryMeterset'],\n    '0x0036': ['DS', '1', 'DeliveredPrimaryMeterset'],\n    '0x0037': ['DS', '1', 'DeliveredSecondaryMeterset'],\n    '0x003A': ['DS', '1', 'SpecifiedTreatmentTime'],\n    '0x003B': ['DS', '1', 'DeliveredTreatmentTime'],\n    '0x0040': ['SQ', '1', 'ControlPointDeliverySequence'],\n    '0x0041': ['SQ', '1', 'IonControlPointDeliverySequence'],\n    '0x0042': ['DS', '1', 'SpecifiedMeterset'],\n    '0x0044': ['DS', '1', 'DeliveredMeterset'],\n    '0x0045': ['FL', '1', 'MetersetRateSet'],\n    '0x0046': ['FL', '1', 'MetersetRateDelivered'],\n    '0x0047': ['FL', '1-n', 'ScanSpotMetersetsDelivered'],\n    '0x0048': ['DS', '1', 'DoseRateDelivered'],\n    '0x0050': ['SQ', '1', 'TreatmentSummaryCalculatedDoseReferenceSequence'],\n    '0x0052': ['DS', '1', 'CumulativeDoseToDoseReference'],\n    '0x0054': ['DA', '1', 'FirstTreatmentDate'],\n    '0x0056': ['DA', '1', 'MostRecentTreatmentDate'],\n    '0x005A': ['IS', '1', 'NumberOfFractionsDelivered'],\n    '0x0060': ['SQ', '1', 'OverrideSequence'],\n    '0x0061': ['AT', '1', 'ParameterSequencePointer'],\n    '0x0062': ['AT', '1', 'OverrideParameterPointer'],\n    '0x0063': ['IS', '1', 'ParameterItemIndex'],\n    '0x0064': ['IS', '1', 'MeasuredDoseReferenceNumber'],\n    '0x0065': ['AT', '1', 'ParameterPointer'],\n    '0x0066': ['ST', '1', 'OverrideReason'],\n    '0x0067': ['US', '1', 'ParameterValueNumber'],\n    '0x0068': ['SQ', '1', 'CorrectedParameterSequence'],\n    '0x006A': ['FL', '1', 'CorrectionValue'],\n    '0x0070': ['SQ', '1', 'CalculatedDoseReferenceSequence'],\n    '0x0072': ['IS', '1', 'CalculatedDoseReferenceNumber'],\n    '0x0074': ['ST', '1', 'CalculatedDoseReferenceDescription'],\n    '0x0076': ['DS', '1', 'CalculatedDoseReferenceDoseValue'],\n    '0x0078': ['DS', '1', 'StartMeterset'],\n    '0x007A': ['DS', '1', 'EndMeterset'],\n    '0x0080': ['SQ', '1', 'ReferencedMeasuredDoseReferenceSequence'],\n    '0x0082': ['IS', '1', 'ReferencedMeasuredDoseReferenceNumber'],\n    '0x0090': ['SQ', '1', 'ReferencedCalculatedDoseReferenceSequence'],\n    '0x0092': ['IS', '1', 'ReferencedCalculatedDoseReferenceNumber'],\n    '0x00A0': ['SQ', '1', 'BeamLimitingDeviceLeafPairsSequence'],\n    '0x00B0': ['SQ', '1', 'RecordedWedgeSequence'],\n    '0x00C0': ['SQ', '1', 'RecordedCompensatorSequence'],\n    '0x00D0': ['SQ', '1', 'RecordedBlockSequence'],\n    '0x00D1': ['SQ', '1', 'RecordedBlockSlabSequence'],\n    '0x00E0': ['SQ', '1', 'TreatmentSummaryMeasuredDoseReferenceSequence'],\n    '0x00F0': ['SQ', '1', 'RecordedSnoutSequence'],\n    '0x00F2': ['SQ', '1', 'RecordedRangeShifterSequence'],\n    '0x00F4': ['SQ', '1', 'RecordedLateralSpreadingDeviceSequence'],\n    '0x00F6': ['SQ', '1', 'RecordedRangeModulatorSequence'],\n    '0x0100': ['SQ', '1', 'RecordedSourceSequence'],\n    '0x0105': ['LO', '1', 'SourceSerialNumber'],\n    '0x0110': ['SQ', '1', 'TreatmentSessionApplicationSetupSequence'],\n    '0x0116': ['CS', '1', 'ApplicationSetupCheck'],\n    '0x0120': ['SQ', '1', 'RecordedBrachyAccessoryDeviceSequence'],\n    '0x0122': ['IS', '1', 'ReferencedBrachyAccessoryDeviceNumber'],\n    '0x0130': ['SQ', '1', 'RecordedChannelSequence'],\n    '0x0132': ['DS', '1', 'SpecifiedChannelTotalTime'],\n    '0x0134': ['DS', '1', 'DeliveredChannelTotalTime'],\n    '0x0136': ['IS', '1', 'SpecifiedNumberOfPulses'],\n    '0x0138': ['IS', '1', 'DeliveredNumberOfPulses'],\n    '0x013A': ['DS', '1', 'SpecifiedPulseRepetitionInterval'],\n    '0x013C': ['DS', '1', 'DeliveredPulseRepetitionInterval'],\n    '0x0140': ['SQ', '1', 'RecordedSourceApplicatorSequence'],\n    '0x0142': ['IS', '1', 'ReferencedSourceApplicatorNumber'],\n    '0x0150': ['SQ', '1', 'RecordedChannelShieldSequence'],\n    '0x0152': ['IS', '1', 'ReferencedChannelShieldNumber'],\n    '0x0160': ['SQ', '1', 'BrachyControlPointDeliveredSequence'],\n    '0x0162': ['DA', '1', 'SafePositionExitDate'],\n    '0x0164': ['TM', '1', 'SafePositionExitTime'],\n    '0x0166': ['DA', '1', 'SafePositionReturnDate'],\n    '0x0168': ['TM', '1', 'SafePositionReturnTime'],\n    '0x0171': ['SQ', '1', 'PulseSpecificBrachyControlPointDeliveredSequence'],\n    '0x0172': ['US', '1', 'PulseNumber'],\n    '0x0173': ['SQ', '1', 'BrachyPulseControlPointDeliveredSequence'],\n    '0x0200': ['CS', '1', 'CurrentTreatmentStatus'],\n    '0x0202': ['ST', '1', 'TreatmentStatusComment'],\n    '0x0220': ['SQ', '1', 'FractionGroupSummarySequence'],\n    '0x0223': ['IS', '1', 'ReferencedFractionNumber'],\n    '0x0224': ['CS', '1', 'FractionGroupType'],\n    '0x0230': ['CS', '1', 'BeamStopperPosition'],\n    '0x0240': ['SQ', '1', 'FractionStatusSummarySequence'],\n    '0x0250': ['DA', '1', 'TreatmentDate'],\n    '0x0251': ['TM', '1', 'TreatmentTime']\n  },\n  '0x300A': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0002': ['SH', '1', 'RTPlanLabel'],\n    '0x0003': ['LO', '1', 'RTPlanName'],\n    '0x0004': ['ST', '1', 'RTPlanDescription'],\n    '0x0006': ['DA', '1', 'RTPlanDate'],\n    '0x0007': ['TM', '1', 'RTPlanTime'],\n    '0x0009': ['LO', '1-n', 'TreatmentProtocols'],\n    '0x000A': ['CS', '1', 'PlanIntent'],\n    '0x000B': ['LO', '1-n', 'TreatmentSites'],\n    '0x000C': ['CS', '1', 'RTPlanGeometry'],\n    '0x000E': ['ST', '1', 'PrescriptionDescription'],\n    '0x0010': ['SQ', '1', 'DoseReferenceSequence'],\n    '0x0012': ['IS', '1', 'DoseReferenceNumber'],\n    '0x0013': ['UI', '1', 'DoseReferenceUID'],\n    '0x0014': ['CS', '1', 'DoseReferenceStructureType'],\n    '0x0015': ['CS', '1', 'NominalBeamEnergyUnit'],\n    '0x0016': ['LO', '1', 'DoseReferenceDescription'],\n    '0x0018': ['DS', '3', 'DoseReferencePointCoordinates'],\n    '0x001A': ['DS', '1', 'NominalPriorDose'],\n    '0x0020': ['CS', '1', 'DoseReferenceType'],\n    '0x0021': ['DS', '1', 'ConstraintWeight'],\n    '0x0022': ['DS', '1', 'DeliveryWarningDose'],\n    '0x0023': ['DS', '1', 'DeliveryMaximumDose'],\n    '0x0025': ['DS', '1', 'TargetMinimumDose'],\n    '0x0026': ['DS', '1', 'TargetPrescriptionDose'],\n    '0x0027': ['DS', '1', 'TargetMaximumDose'],\n    '0x0028': ['DS', '1', 'TargetUnderdoseVolumeFraction'],\n    '0x002A': ['DS', '1', 'OrganAtRiskFullVolumeDose'],\n    '0x002B': ['DS', '1', 'OrganAtRiskLimitDose'],\n    '0x002C': ['DS', '1', 'OrganAtRiskMaximumDose'],\n    '0x002D': ['DS', '1', 'OrganAtRiskOverdoseVolumeFraction'],\n    '0x0040': ['SQ', '1', 'ToleranceTableSequence'],\n    '0x0042': ['IS', '1', 'ToleranceTableNumber'],\n    '0x0043': ['SH', '1', 'ToleranceTableLabel'],\n    '0x0044': ['DS', '1', 'GantryAngleTolerance'],\n    '0x0046': ['DS', '1', 'BeamLimitingDeviceAngleTolerance'],\n    '0x0048': ['SQ', '1', 'BeamLimitingDeviceToleranceSequence'],\n    '0x004A': ['DS', '1', 'BeamLimitingDevicePositionTolerance'],\n    '0x004B': ['FL', '1', 'SnoutPositionTolerance'],\n    '0x004C': ['DS', '1', 'PatientSupportAngleTolerance'],\n    '0x004E': ['DS', '1', 'TableTopEccentricAngleTolerance'],\n    '0x004F': ['FL', '1', 'TableTopPitchAngleTolerance'],\n    '0x0050': ['FL', '1', 'TableTopRollAngleTolerance'],\n    '0x0051': ['DS', '1', 'TableTopVerticalPositionTolerance'],\n    '0x0052': ['DS', '1', 'TableTopLongitudinalPositionTolerance'],\n    '0x0053': ['DS', '1', 'TableTopLateralPositionTolerance'],\n    '0x0055': ['CS', '1', 'RTPlanRelationship'],\n    '0x0070': ['SQ', '1', 'FractionGroupSequence'],\n    '0x0071': ['IS', '1', 'FractionGroupNumber'],\n    '0x0072': ['LO', '1', 'FractionGroupDescription'],\n    '0x0078': ['IS', '1', 'NumberOfFractionsPlanned'],\n    '0x0079': ['IS', '1', 'NumberOfFractionPatternDigitsPerDay'],\n    '0x007A': ['IS', '1', 'RepeatFractionCycleLength'],\n    '0x007B': ['LT', '1', 'FractionPattern'],\n    '0x0080': ['IS', '1', 'NumberOfBeams'],\n    '0x0082': ['DS', '3', 'BeamDoseSpecificationPoint'],\n    '0x0083': ['UI', '1', 'ReferencedDoseReferenceUID'],\n    '0x0084': ['DS', '1', 'BeamDose'],\n    '0x0086': ['DS', '1', 'BeamMeterset'],\n    '0x0088': ['FL', '1', 'BeamDosePointDepth'],\n    '0x0089': ['FL', '1', 'BeamDosePointEquivalentDepth'],\n    '0x008A': ['FL', '1', 'BeamDosePointSSD'],\n    '0x008B': ['CS', '1', 'BeamDoseMeaning'],\n    '0x008C': ['SQ', '1', 'BeamDoseVerificationControlPointSequence'],\n    '0x008D': ['FL', '1', 'AverageBeamDosePointDepth'],\n    '0x008E': ['FL', '1', 'AverageBeamDosePointEquivalentDepth'],\n    '0x008F': ['FL', '1', 'AverageBeamDosePointSSD'],\n    '0x0090': ['CS', '1', 'BeamDoseType'],\n    '0x0091': ['DS', '1', 'AlternateBeamDose'],\n    '0x0092': ['CS', '1', 'AlternateBeamDoseType'],\n    '0x0093': ['CS', '1', 'DepthValueAveragingFlag'],\n    '0x0094': ['DS', '1', 'BeamDosePointSourceToExternalContourDistance'],\n    '0x00A0': ['IS', '1', 'NumberOfBrachyApplicationSetups'],\n    '0x00A2': ['DS', '3', 'BrachyApplicationSetupDoseSpecificationPoint'],\n    '0x00A4': ['DS', '1', 'BrachyApplicationSetupDose'],\n    '0x00B0': ['SQ', '1', 'BeamSequence'],\n    '0x00B2': ['SH', '1', 'TreatmentMachineName'],\n    '0x00B3': ['CS', '1', 'PrimaryDosimeterUnit'],\n    '0x00B4': ['DS', '1', 'SourceAxisDistance'],\n    '0x00B6': ['SQ', '1', 'BeamLimitingDeviceSequence'],\n    '0x00B8': ['CS', '1', 'RTBeamLimitingDeviceType'],\n    '0x00BA': ['DS', '1', 'SourceToBeamLimitingDeviceDistance'],\n    '0x00BB': ['FL', '1', 'IsocenterToBeamLimitingDeviceDistance'],\n    '0x00BC': ['IS', '1', 'NumberOfLeafJawPairs'],\n    '0x00BE': ['DS', '3-n', 'LeafPositionBoundaries'],\n    '0x00C0': ['IS', '1', 'BeamNumber'],\n    '0x00C2': ['LO', '1', 'BeamName'],\n    '0x00C3': ['ST', '1', 'BeamDescription'],\n    '0x00C4': ['CS', '1', 'BeamType'],\n    '0x00C5': ['FD', '1', 'BeamDeliveryDurationLimit'],\n    '0x00C6': ['CS', '1', 'RadiationType'],\n    '0x00C7': ['CS', '1', 'HighDoseTechniqueType'],\n    '0x00C8': ['IS', '1', 'ReferenceImageNumber'],\n    '0x00CA': ['SQ', '1', 'PlannedVerificationImageSequence'],\n    '0x00CC': ['LO', '1-n', 'ImagingDeviceSpecificAcquisitionParameters'],\n    '0x00CE': ['CS', '1', 'TreatmentDeliveryType'],\n    '0x00D0': ['IS', '1', 'NumberOfWedges'],\n    '0x00D1': ['SQ', '1', 'WedgeSequence'],\n    '0x00D2': ['IS', '1', 'WedgeNumber'],\n    '0x00D3': ['CS', '1', 'WedgeType'],\n    '0x00D4': ['SH', '1', 'WedgeID'],\n    '0x00D5': ['IS', '1', 'WedgeAngle'],\n    '0x00D6': ['DS', '1', 'WedgeFactor'],\n    '0x00D7': ['FL', '1', 'TotalWedgeTrayWaterEquivalentThickness'],\n    '0x00D8': ['DS', '1', 'WedgeOrientation'],\n    '0x00D9': ['FL', '1', 'IsocenterToWedgeTrayDistance'],\n    '0x00DA': ['DS', '1', 'SourceToWedgeTrayDistance'],\n    '0x00DB': ['FL', '1', 'WedgeThinEdgePosition'],\n    '0x00DC': ['SH', '1', 'BolusID'],\n    '0x00DD': ['ST', '1', 'BolusDescription'],\n    '0x00DE': ['DS', '1', 'EffectiveWedgeAngle'],\n    '0x00E0': ['IS', '1', 'NumberOfCompensators'],\n    '0x00E1': ['SH', '1', 'MaterialID'],\n    '0x00E2': ['DS', '1', 'TotalCompensatorTrayFactor'],\n    '0x00E3': ['SQ', '1', 'CompensatorSequence'],\n    '0x00E4': ['IS', '1', 'CompensatorNumber'],\n    '0x00E5': ['SH', '1', 'CompensatorID'],\n    '0x00E6': ['DS', '1', 'SourceToCompensatorTrayDistance'],\n    '0x00E7': ['IS', '1', 'CompensatorRows'],\n    '0x00E8': ['IS', '1', 'CompensatorColumns'],\n    '0x00E9': ['DS', '2', 'CompensatorPixelSpacing'],\n    '0x00EA': ['DS', '2', 'CompensatorPosition'],\n    '0x00EB': ['DS', '1-n', 'CompensatorTransmissionData'],\n    '0x00EC': ['DS', '1-n', 'CompensatorThicknessData'],\n    '0x00ED': ['IS', '1', 'NumberOfBoli'],\n    '0x00EE': ['CS', '1', 'CompensatorType'],\n    '0x00EF': ['SH', '1', 'CompensatorTrayID'],\n    '0x00F0': ['IS', '1', 'NumberOfBlocks'],\n    '0x00F2': ['DS', '1', 'TotalBlockTrayFactor'],\n    '0x00F3': ['FL', '1', 'TotalBlockTrayWaterEquivalentThickness'],\n    '0x00F4': ['SQ', '1', 'BlockSequence'],\n    '0x00F5': ['SH', '1', 'BlockTrayID'],\n    '0x00F6': ['DS', '1', 'SourceToBlockTrayDistance'],\n    '0x00F7': ['FL', '1', 'IsocenterToBlockTrayDistance'],\n    '0x00F8': ['CS', '1', 'BlockType'],\n    '0x00F9': ['LO', '1', 'AccessoryCode'],\n    '0x00FA': ['CS', '1', 'BlockDivergence'],\n    '0x00FB': ['CS', '1', 'BlockMountingPosition'],\n    '0x00FC': ['IS', '1', 'BlockNumber'],\n    '0x00FE': ['LO', '1', 'BlockName'],\n    '0x0100': ['DS', '1', 'BlockThickness'],\n    '0x0102': ['DS', '1', 'BlockTransmission'],\n    '0x0104': ['IS', '1', 'BlockNumberOfPoints'],\n    '0x0106': ['DS', '2-2n', 'BlockData'],\n    '0x0107': ['SQ', '1', 'ApplicatorSequence'],\n    '0x0108': ['SH', '1', 'ApplicatorID'],\n    '0x0109': ['CS', '1', 'ApplicatorType'],\n    '0x010A': ['LO', '1', 'ApplicatorDescription'],\n    '0x010C': ['DS', '1', 'CumulativeDoseReferenceCoefficient'],\n    '0x010E': ['DS', '1', 'FinalCumulativeMetersetWeight'],\n    '0x0110': ['IS', '1', 'NumberOfControlPoints'],\n    '0x0111': ['SQ', '1', 'ControlPointSequence'],\n    '0x0112': ['IS', '1', 'ControlPointIndex'],\n    '0x0114': ['DS', '1', 'NominalBeamEnergy'],\n    '0x0115': ['DS', '1', 'DoseRateSet'],\n    '0x0116': ['SQ', '1', 'WedgePositionSequence'],\n    '0x0118': ['CS', '1', 'WedgePosition'],\n    '0x011A': ['SQ', '1', 'BeamLimitingDevicePositionSequence'],\n    '0x011C': ['DS', '2-2n', 'LeafJawPositions'],\n    '0x011E': ['DS', '1', 'GantryAngle'],\n    '0x011F': ['CS', '1', 'GantryRotationDirection'],\n    '0x0120': ['DS', '1', 'BeamLimitingDeviceAngle'],\n    '0x0121': ['CS', '1', 'BeamLimitingDeviceRotationDirection'],\n    '0x0122': ['DS', '1', 'PatientSupportAngle'],\n    '0x0123': ['CS', '1', 'PatientSupportRotationDirection'],\n    '0x0124': ['DS', '1', 'TableTopEccentricAxisDistance'],\n    '0x0125': ['DS', '1', 'TableTopEccentricAngle'],\n    '0x0126': ['CS', '1', 'TableTopEccentricRotationDirection'],\n    '0x0128': ['DS', '1', 'TableTopVerticalPosition'],\n    '0x0129': ['DS', '1', 'TableTopLongitudinalPosition'],\n    '0x012A': ['DS', '1', 'TableTopLateralPosition'],\n    '0x012C': ['DS', '3', 'IsocenterPosition'],\n    '0x012E': ['DS', '3', 'SurfaceEntryPoint'],\n    '0x0130': ['DS', '1', 'SourceToSurfaceDistance'],\n    '0x0131': ['FL', '1', 'AverageBeamDosePointSourceToExternalContourDistance'],\n    '0x0132': ['FL', '1', 'SourceToExternalContourDistance'],\n    '0x0133': ['FL', '3', 'ExternalContourEntryPoint'],\n    '0x0134': ['DS', '1', 'CumulativeMetersetWeight'],\n    '0x0140': ['FL', '1', 'TableTopPitchAngle'],\n    '0x0142': ['CS', '1', 'TableTopPitchRotationDirection'],\n    '0x0144': ['FL', '1', 'TableTopRollAngle'],\n    '0x0146': ['CS', '1', 'TableTopRollRotationDirection'],\n    '0x0148': ['FL', '1', 'HeadFixationAngle'],\n    '0x014A': ['FL', '1', 'GantryPitchAngle'],\n    '0x014C': ['CS', '1', 'GantryPitchRotationDirection'],\n    '0x014E': ['FL', '1', 'GantryPitchAngleTolerance'],\n    '0x0150': ['CS', '1', 'FixationEye'],\n    '0x0151': ['DS', '1', 'ChairHeadFramePosition'],\n    '0x0152': ['DS', '1', 'HeadFixationAngleTolerance'],\n    '0x0153': ['DS', '1', 'ChairHeadFramePositionTolerance'],\n    '0x0154': ['DS', '1', 'FixationLightAzimuthalAngleTolerance'],\n    '0x0155': ['DS', '1', 'FixationLightPolarAngleTolerance'],\n    '0x0180': ['SQ', '1', 'PatientSetupSequence'],\n    '0x0182': ['IS', '1', 'PatientSetupNumber'],\n    '0x0183': ['LO', '1', 'PatientSetupLabel'],\n    '0x0184': ['LO', '1', 'PatientAdditionalPosition'],\n    '0x0190': ['SQ', '1', 'FixationDeviceSequence'],\n    '0x0192': ['CS', '1', 'FixationDeviceType'],\n    '0x0194': ['SH', '1', 'FixationDeviceLabel'],\n    '0x0196': ['ST', '1', 'FixationDeviceDescription'],\n    '0x0198': ['SH', '1', 'FixationDevicePosition'],\n    '0x0199': ['FL', '1', 'FixationDevicePitchAngle'],\n    '0x019A': ['FL', '1', 'FixationDeviceRollAngle'],\n    '0x01A0': ['SQ', '1', 'ShieldingDeviceSequence'],\n    '0x01A2': ['CS', '1', 'ShieldingDeviceType'],\n    '0x01A4': ['SH', '1', 'ShieldingDeviceLabel'],\n    '0x01A6': ['ST', '1', 'ShieldingDeviceDescription'],\n    '0x01A8': ['SH', '1', 'ShieldingDevicePosition'],\n    '0x01B0': ['CS', '1', 'SetupTechnique'],\n    '0x01B2': ['ST', '1', 'SetupTechniqueDescription'],\n    '0x01B4': ['SQ', '1', 'SetupDeviceSequence'],\n    '0x01B6': ['CS', '1', 'SetupDeviceType'],\n    '0x01B8': ['SH', '1', 'SetupDeviceLabel'],\n    '0x01BA': ['ST', '1', 'SetupDeviceDescription'],\n    '0x01BC': ['DS', '1', 'SetupDeviceParameter'],\n    '0x01D0': ['ST', '1', 'SetupReferenceDescription'],\n    '0x01D2': ['DS', '1', 'TableTopVerticalSetupDisplacement'],\n    '0x01D4': ['DS', '1', 'TableTopLongitudinalSetupDisplacement'],\n    '0x01D6': ['DS', '1', 'TableTopLateralSetupDisplacement'],\n    '0x0200': ['CS', '1', 'BrachyTreatmentTechnique'],\n    '0x0202': ['CS', '1', 'BrachyTreatmentType'],\n    '0x0206': ['SQ', '1', 'TreatmentMachineSequence'],\n    '0x0210': ['SQ', '1', 'SourceSequence'],\n    '0x0212': ['IS', '1', 'SourceNumber'],\n    '0x0214': ['CS', '1', 'SourceType'],\n    '0x0216': ['LO', '1', 'SourceManufacturer'],\n    '0x0218': ['DS', '1', 'ActiveSourceDiameter'],\n    '0x021A': ['DS', '1', 'ActiveSourceLength'],\n    '0x021B': ['SH', '1', 'SourceModelID'],\n    '0x021C': ['LO', '1', 'SourceDescription'],\n    '0x0222': ['DS', '1', 'SourceEncapsulationNominalThickness'],\n    '0x0224': ['DS', '1', 'SourceEncapsulationNominalTransmission'],\n    '0x0226': ['LO', '1', 'SourceIsotopeName'],\n    '0x0228': ['DS', '1', 'SourceIsotopeHalfLife'],\n    '0x0229': ['CS', '1', 'SourceStrengthUnits'],\n    '0x022A': ['DS', '1', 'ReferenceAirKermaRate'],\n    '0x022B': ['DS', '1', 'SourceStrength'],\n    '0x022C': ['DA', '1', 'SourceStrengthReferenceDate'],\n    '0x022E': ['TM', '1', 'SourceStrengthReferenceTime'],\n    '0x0230': ['SQ', '1', 'ApplicationSetupSequence'],\n    '0x0232': ['CS', '1', 'ApplicationSetupType'],\n    '0x0234': ['IS', '1', 'ApplicationSetupNumber'],\n    '0x0236': ['LO', '1', 'ApplicationSetupName'],\n    '0x0238': ['LO', '1', 'ApplicationSetupManufacturer'],\n    '0x0240': ['IS', '1', 'TemplateNumber'],\n    '0x0242': ['SH', '1', 'TemplateType'],\n    '0x0244': ['LO', '1', 'TemplateName'],\n    '0x0250': ['DS', '1', 'TotalReferenceAirKerma'],\n    '0x0260': ['SQ', '1', 'BrachyAccessoryDeviceSequence'],\n    '0x0262': ['IS', '1', 'BrachyAccessoryDeviceNumber'],\n    '0x0263': ['SH', '1', 'BrachyAccessoryDeviceID'],\n    '0x0264': ['CS', '1', 'BrachyAccessoryDeviceType'],\n    '0x0266': ['LO', '1', 'BrachyAccessoryDeviceName'],\n    '0x026A': ['DS', '1', 'BrachyAccessoryDeviceNominalThickness'],\n    '0x026C': ['DS', '1', 'BrachyAccessoryDeviceNominalTransmission'],\n    '0x0271': ['DS', '1', 'ChannelEffectiveLength'],\n    '0x0272': ['DS', '1', 'ChannelInnerLength'],\n    '0x0273': ['SH', '1', 'AfterloaderChannelID'],\n    '0x0274': ['DS', '1', 'SourceApplicatorTipLength'],\n    '0x0280': ['SQ', '1', 'ChannelSequence'],\n    '0x0282': ['IS', '1', 'ChannelNumber'],\n    '0x0284': ['DS', '1', 'ChannelLength'],\n    '0x0286': ['DS', '1', 'ChannelTotalTime'],\n    '0x0288': ['CS', '1', 'SourceMovementType'],\n    '0x028A': ['IS', '1', 'NumberOfPulses'],\n    '0x028C': ['DS', '1', 'PulseRepetitionInterval'],\n    '0x0290': ['IS', '1', 'SourceApplicatorNumber'],\n    '0x0291': ['SH', '1', 'SourceApplicatorID'],\n    '0x0292': ['CS', '1', 'SourceApplicatorType'],\n    '0x0294': ['LO', '1', 'SourceApplicatorName'],\n    '0x0296': ['DS', '1', 'SourceApplicatorLength'],\n    '0x0298': ['LO', '1', 'SourceApplicatorManufacturer'],\n    '0x029C': ['DS', '1', 'SourceApplicatorWallNominalThickness'],\n    '0x029E': ['DS', '1', 'SourceApplicatorWallNominalTransmission'],\n    '0x02A0': ['DS', '1', 'SourceApplicatorStepSize'],\n    '0x02A1': ['IS', '1', 'ApplicatorShapeReferencedROINumber'],\n    '0x02A2': ['IS', '1', 'TransferTubeNumber'],\n    '0x02A4': ['DS', '1', 'TransferTubeLength'],\n    '0x02B0': ['SQ', '1', 'ChannelShieldSequence'],\n    '0x02B2': ['IS', '1', 'ChannelShieldNumber'],\n    '0x02B3': ['SH', '1', 'ChannelShieldID'],\n    '0x02B4': ['LO', '1', 'ChannelShieldName'],\n    '0x02B8': ['DS', '1', 'ChannelShieldNominalThickness'],\n    '0x02BA': ['DS', '1', 'ChannelShieldNominalTransmission'],\n    '0x02C8': ['DS', '1', 'FinalCumulativeTimeWeight'],\n    '0x02D0': ['SQ', '1', 'BrachyControlPointSequence'],\n    '0x02D2': ['DS', '1', 'ControlPointRelativePosition'],\n    '0x02D4': ['DS', '3', 'ControlPoint3DPosition'],\n    '0x02D6': ['DS', '1', 'CumulativeTimeWeight'],\n    '0x02E0': ['CS', '1', 'CompensatorDivergence'],\n    '0x02E1': ['CS', '1', 'CompensatorMountingPosition'],\n    '0x02E2': ['DS', '1-n', 'SourceToCompensatorDistance'],\n    '0x02E3': ['FL', '1', 'TotalCompensatorTrayWaterEquivalentThickness'],\n    '0x02E4': ['FL', '1', 'IsocenterToCompensatorTrayDistance'],\n    '0x02E5': ['FL', '1', 'CompensatorColumnOffset'],\n    '0x02E6': ['FL', '1-n', 'IsocenterToCompensatorDistances'],\n    '0x02E7': ['FL', '1', 'CompensatorRelativeStoppingPowerRatio'],\n    '0x02E8': ['FL', '1', 'CompensatorMillingToolDiameter'],\n    '0x02EA': ['SQ', '1', 'IonRangeCompensatorSequence'],\n    '0x02EB': ['LT', '1', 'CompensatorDescription'],\n    '0x0302': ['IS', '1', 'RadiationMassNumber'],\n    '0x0304': ['IS', '1', 'RadiationAtomicNumber'],\n    '0x0306': ['SS', '1', 'RadiationChargeState'],\n    '0x0308': ['CS', '1', 'ScanMode'],\n    '0x0309': ['CS', '1', 'ModulatedScanModeType'],\n    '0x030A': ['FL', '2', 'VirtualSourceAxisDistances'],\n    '0x030C': ['SQ', '1', 'SnoutSequence'],\n    '0x030D': ['FL', '1', 'SnoutPosition'],\n    '0x030F': ['SH', '1', 'SnoutID'],\n    '0x0312': ['IS', '1', 'NumberOfRangeShifters'],\n    '0x0314': ['SQ', '1', 'RangeShifterSequence'],\n    '0x0316': ['IS', '1', 'RangeShifterNumber'],\n    '0x0318': ['SH', '1', 'RangeShifterID'],\n    '0x0320': ['CS', '1', 'RangeShifterType'],\n    '0x0322': ['LO', '1', 'RangeShifterDescription'],\n    '0x0330': ['IS', '1', 'NumberOfLateralSpreadingDevices'],\n    '0x0332': ['SQ', '1', 'LateralSpreadingDeviceSequence'],\n    '0x0334': ['IS', '1', 'LateralSpreadingDeviceNumber'],\n    '0x0336': ['SH', '1', 'LateralSpreadingDeviceID'],\n    '0x0338': ['CS', '1', 'LateralSpreadingDeviceType'],\n    '0x033A': ['LO', '1', 'LateralSpreadingDeviceDescription'],\n    '0x033C': ['FL', '1', 'LateralSpreadingDeviceWaterEquivalentThickness'],\n    '0x0340': ['IS', '1', 'NumberOfRangeModulators'],\n    '0x0342': ['SQ', '1', 'RangeModulatorSequence'],\n    '0x0344': ['IS', '1', 'RangeModulatorNumber'],\n    '0x0346': ['SH', '1', 'RangeModulatorID'],\n    '0x0348': ['CS', '1', 'RangeModulatorType'],\n    '0x034A': ['LO', '1', 'RangeModulatorDescription'],\n    '0x034C': ['SH', '1', 'BeamCurrentModulationID'],\n    '0x0350': ['CS', '1', 'PatientSupportType'],\n    '0x0352': ['SH', '1', 'PatientSupportID'],\n    '0x0354': ['LO', '1', 'PatientSupportAccessoryCode'],\n    '0x0355': ['LO', '1', 'TrayAccessoryCode'],\n    '0x0356': ['FL', '1', 'FixationLightAzimuthalAngle'],\n    '0x0358': ['FL', '1', 'FixationLightPolarAngle'],\n    '0x035A': ['FL', '1', 'MetersetRate'],\n    '0x0360': ['SQ', '1', 'RangeShifterSettingsSequence'],\n    '0x0362': ['LO', '1', 'RangeShifterSetting'],\n    '0x0364': ['FL', '1', 'IsocenterToRangeShifterDistance'],\n    '0x0366': ['FL', '1', 'RangeShifterWaterEquivalentThickness'],\n    '0x0370': ['SQ', '1', 'LateralSpreadingDeviceSettingsSequence'],\n    '0x0372': ['LO', '1', 'LateralSpreadingDeviceSetting'],\n    '0x0374': ['FL', '1', 'IsocenterToLateralSpreadingDeviceDistance'],\n    '0x0380': ['SQ', '1', 'RangeModulatorSettingsSequence'],\n    '0x0382': ['FL', '1', 'RangeModulatorGatingStartValue'],\n    '0x0384': ['FL', '1', 'RangeModulatorGatingStopValue'],\n    '0x0386': ['FL', '1', 'RangeModulatorGatingStartWaterEquivalentThickness'],\n    '0x0388': ['FL', '1', 'RangeModulatorGatingStopWaterEquivalentThickness'],\n    '0x038A': ['FL', '1', 'IsocenterToRangeModulatorDistance'],\n    '0x038F': ['FL', '1-n', 'ScanSpotTimeOffset'],\n    '0x0390': ['SH', '1', 'ScanSpotTuneID'],\n    '0x0391': ['IS', '1-n', 'ScanSpotPrescribedIndices'],\n    '0x0392': ['IS', '1', 'NumberOfScanSpotPositions'],\n    '0x0393': ['CS', '1', 'ScanSpotReordered'],\n    '0x0394': ['FL', '1-n', 'ScanSpotPositionMap'],\n    '0x0395': ['CS', '1', 'ScanSpotReorderingAllowed'],\n    '0x0396': ['FL', '1-n', 'ScanSpotMetersetWeights'],\n    '0x0398': ['FL', '2', 'ScanningSpotSize'],\n    '0x0399': ['FL', '2-2n', 'ScanSpotSizesDelivered'],\n    '0x039A': ['IS', '1', 'NumberOfPaintings'],\n    '0x03A0': ['SQ', '1', 'IonToleranceTableSequence'],\n    '0x03A2': ['SQ', '1', 'IonBeamSequence'],\n    '0x03A4': ['SQ', '1', 'IonBeamLimitingDeviceSequence'],\n    '0x03A6': ['SQ', '1', 'IonBlockSequence'],\n    '0x03A8': ['SQ', '1', 'IonControlPointSequence'],\n    '0x03AA': ['SQ', '1', 'IonWedgeSequence'],\n    '0x03AC': ['SQ', '1', 'IonWedgePositionSequence'],\n    '0x0401': ['SQ', '1', 'ReferencedSetupImageSequence'],\n    '0x0402': ['ST', '1', 'SetupImageComment'],\n    '0x0410': ['SQ', '1', 'MotionSynchronizationSequence'],\n    '0x0412': ['FL', '3', 'ControlPointOrientation'],\n    '0x0420': ['SQ', '1', 'GeneralAccessorySequence'],\n    '0x0421': ['SH', '1', 'GeneralAccessoryID'],\n    '0x0422': ['ST', '1', 'GeneralAccessoryDescription'],\n    '0x0423': ['CS', '1', 'GeneralAccessoryType'],\n    '0x0424': ['IS', '1', 'GeneralAccessoryNumber'],\n    '0x0425': ['FL', '1', 'SourceToGeneralAccessoryDistance'],\n    '0x0426': ['DS', '1', 'IsocenterToGeneralAccessoryDistance'],\n    '0x0431': ['SQ', '1', 'ApplicatorGeometrySequence'],\n    '0x0432': ['CS', '1', 'ApplicatorApertureShape'],\n    '0x0433': ['FL', '1', 'ApplicatorOpening'],\n    '0x0434': ['FL', '1', 'ApplicatorOpeningX'],\n    '0x0435': ['FL', '1', 'ApplicatorOpeningY'],\n    '0x0436': ['FL', '1', 'SourceToApplicatorMountingPositionDistance'],\n    '0x0440': ['IS', '1', 'NumberOfBlockSlabItems'],\n    '0x0441': ['SQ', '1', 'BlockSlabSequence'],\n    '0x0442': ['DS', '1', 'BlockSlabThickness'],\n    '0x0443': ['US', '1', 'BlockSlabNumber'],\n    '0x0450': ['SQ', '1', 'DeviceMotionControlSequence'],\n    '0x0451': ['CS', '1', 'DeviceMotionExecutionMode'],\n    '0x0452': ['CS', '1', 'DeviceMotionObservationMode'],\n    '0x0453': ['SQ', '1', 'DeviceMotionParameterCodeSequence'],\n    '0x0501': ['FL', '1', 'DistalDepthFraction'],\n    '0x0502': ['FL', '1', 'DistalDepth'],\n    '0x0503': ['FL', '2', 'NominalRangeModulationFractions'],\n    '0x0504': ['FL', '2', 'NominalRangeModulatedRegionDepths'],\n    '0x0505': ['SQ', '1', 'DepthDoseParametersSequence'],\n    '0x0506': ['SQ', '1', 'DeliveredDepthDoseParametersSequence'],\n    '0x0507': ['FL', '1', 'DeliveredDistalDepthFraction'],\n    '0x0508': ['FL', '1', 'DeliveredDistalDepth'],\n    '0x0509': ['FL', '2', 'DeliveredNominalRangeModulationFractions'],\n    '0x0510': ['FL', '2', 'DeliveredNominalRangeModulatedRegionDepths'],\n    '0x0511': ['CS', '1', 'DeliveredReferenceDoseDefinition'],\n    '0x0512': ['CS', '1', 'ReferenceDoseDefinition'],\n    '0x0600': ['US', '1', 'RTControlPointIndex'],\n    '0x0601': ['US', '1', 'RadiationGenerationModeIndex'],\n    '0x0602': ['US', '1', 'ReferencedDefinedDeviceIndex'],\n    '0x0603': ['US', '1', 'RadiationDoseIdentificationIndex'],\n    '0x0604': ['US', '1', 'NumberOfRTControlPoints'],\n    '0x0605': ['US', '1', 'ReferencedRadiationGenerationModeIndex'],\n    '0x0606': ['US', '1', 'TreatmentPositionIndex'],\n    '0x0607': ['US', '1', 'ReferencedDeviceIndex'],\n    '0x0608': ['LO', '1', 'TreatmentPositionGroupLabel'],\n    '0x0609': ['UI', '1', 'TreatmentPositionGroupUID'],\n    '0x060A': ['SQ', '1', 'TreatmentPositionGroupSequence'],\n    '0x060B': ['US', '1', 'ReferencedTreatmentPositionIndex'],\n    '0x060C': ['US', '1', 'ReferencedRadiationDoseIdentificationIndex'],\n    '0x060D': ['FD', '1', 'RTAccessoryHolderWaterEquivalentThickness'],\n    '0x060E': ['US', '1', 'ReferencedRTAccessoryHolderDeviceIndex'],\n    '0x060F': ['CS', '1', 'RTAccessoryHolderSlotExistenceFlag'],\n    '0x0610': ['SQ', '1', 'RTAccessoryHolderSlotSequence'],\n    '0x0611': ['LO', '1', 'RTAccessoryHolderSlotID'],\n    '0x0612': ['FD', '1', 'RTAccessoryHolderSlotDistance'],\n    '0x0613': ['FD', '1', 'RTAccessorySlotDistance'],\n    '0x0614': ['SQ', '1', 'RTAccessoryHolderDefinitionSequence'],\n    '0x0615': ['LO', '1', 'RTAccessoryDeviceSlotID'],\n    '0x0616': ['SQ', '1', 'RTRadiationSequence'],\n    '0x0617': ['SQ', '1', 'RadiationDoseSequence'],\n    '0x0618': ['SQ', '1', 'RadiationDoseIdentificationSequence'],\n    '0x0619': ['LO', '1', 'RadiationDoseIdentificationLabel'],\n    '0x061A': ['CS', '1', 'ReferenceDoseType'],\n    '0x061B': ['CS', '1', 'PrimaryDoseValueIndicator'],\n    '0x061C': ['SQ', '1', 'DoseValuesSequence'],\n    '0x061D': ['CS', '1-n', 'DoseValuePurpose'],\n    '0x061E': ['FD', '3', 'ReferenceDosePointCoordinates'],\n    '0x061F': ['SQ', '1', 'RadiationDoseValuesParametersSequence'],\n    '0x0620': ['SQ', '1', 'MetersetToDoseMappingSequence'],\n    '0x0621': ['SQ', '1', 'ExpectedInVivoMeasurementValuesSequence'],\n    '0x0622': ['US', '1', 'ExpectedInVivoMeasurementValueIndex'],\n    '0x0623': ['LO', '1', 'RadiationDoseInVivoMeasurementLabel'],\n    '0x0624': ['FD', '2', 'RadiationDoseCentralAxisDisplacement'],\n    '0x0625': ['FD', '1', 'RadiationDoseValue'],\n    '0x0626': ['FD', '1', 'RadiationDoseSourceToSkinDistance'],\n    '0x0627': ['FD', '3', 'RadiationDoseMeasurementPointCoordinates'],\n    '0x0628': ['FD', '1', 'RadiationDoseSourceToExternalContourDistance'],\n    '0x0629': ['SQ', '1', 'RTToleranceSetSequence'],\n    '0x062A': ['LO', '1', 'RTToleranceSetLabel'],\n    '0x062B': ['SQ', '1', 'AttributeToleranceValuesSequence'],\n    '0x062C': ['FD', '1', 'ToleranceValue'],\n    '0x062D': ['SQ', '1', 'PatientSupportPositionToleranceSequence'],\n    '0x062E': ['FD', '1', 'TreatmentTimeLimit'],\n    '0x062F': ['SQ', '1', 'CArmPhotonElectronControlPointSequence'],\n    '0x0630': ['SQ', '1', 'ReferencedRTRadiationSequence'],\n    '0x0631': ['SQ', '1', 'ReferencedRTInstanceSequence'],\n    '0x0632': ['SQ', '1', 'ReferencedRTPatientSetupSequence'],\n    '0x0634': ['FD', '1', 'SourceToPatientSurfaceDistance'],\n    '0x0635': ['SQ', '1', 'TreatmentMachineSpecialModeCodeSequence'],\n    '0x0636': ['US', '1', 'IntendedNumberOfFractions'],\n    '0x0637': ['CS', '1', 'RTRadiationSetIntent'],\n    '0x0638': ['CS', '1', 'RTRadiationPhysicalAndGeometricContentDetailFlag'],\n    '0x0639': ['CS', '1', 'RTRecordFlag'],\n    '0x063A': ['SQ', '1', 'TreatmentDeviceIdentificationSequence'],\n    '0x063B': ['SQ', '1', 'ReferencedRTPhysicianIntentSequence'],\n    '0x063C': ['FD', '1', 'CumulativeMeterset'],\n    '0x063D': ['FD', '1', 'DeliveryRate'],\n    '0x063E': ['SQ', '1', 'DeliveryRateUnitSequence'],\n    '0x063F': ['SQ', '1', 'TreatmentPositionSequence'],\n    '0x0640': ['FD', '1', 'RadiationSourceAxisDistance'],\n    '0x0641': ['US', '1', 'NumberOfRTBeamLimitingDevices'],\n    '0x0642': ['FD', '1', 'RTBeamLimitingDeviceProximalDistance'],\n    '0x0643': ['FD', '1', 'RTBeamLimitingDeviceDistalDistance'],\n    '0x0644': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence'],\n    '0x0645': ['FD', '1', 'BeamModifierOrientationAngle'],\n    '0x0646': ['SQ', '1', 'FixedRTBeamDelimiterDeviceSequence'],\n    '0x0647': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceSequence'],\n    '0x0648': ['US', '1', 'NumberOfParallelRTBeamDelimiters'],\n    '0x0649': ['FD', '2-n', 'ParallelRTBeamDelimiterBoundaries'],\n    '0x064A': ['FD', '2-n', 'ParallelRTBeamDelimiterPositions'],\n    '0x064B': ['FD', '2', 'RTBeamLimitingDeviceOffset'],\n    '0x064C': ['SQ', '1', 'RTBeamDelimiterGeometrySequence'],\n    '0x064D': ['SQ', '1', 'RTBeamLimitingDeviceDefinitionSequence'],\n    '0x064E': ['CS', '1', 'ParallelRTBeamDelimiterOpeningMode'],\n    '0x064F': ['CS', '1-n', 'ParallelRTBeamDelimiterLeafMountingSide'],\n    '0x0650': ['UI', '1', 'PatientSetupUID'],\n    '0x0651': ['SQ', '1', 'WedgeDefinitionSequence'],\n    '0x0652': ['FD', '1', 'RadiationBeamWedgeAngle'],\n    '0x0653': ['FD', '1', 'RadiationBeamWedgeThinEdgeDistance'],\n    '0x0654': ['FD', '1', 'RadiationBeamEffectiveWedgeAngle'],\n    '0x0655': ['US', '1', 'NumberOfWedgePositions'],\n    '0x0656': ['SQ', '1', 'RTBeamLimitingDeviceOpeningSequence'],\n    '0x0657': ['US', '1', 'NumberOfRTBeamLimitingDeviceOpenings'],\n    '0x0658': ['SQ', '1', 'RadiationDosimeterUnitSequence'],\n    '0x0659': ['SQ', '1', 'RTDeviceDistanceReferenceLocationCodeSequence'],\n    '0x065A': ['SQ', '1', 'RadiationDeviceConfigurationAndCommissioningKeySequence'],\n    '0x065B': ['SQ', '1', 'PatientSupportPositionParameterSequence'],\n    '0x065C': ['CS', '1', 'PatientSupportPositionSpecificationMethod'],\n    '0x065D': ['SQ', '1', 'PatientSupportPositionDeviceParameterSequence'],\n    '0x065E': ['US', '1', 'DeviceOrderIndex'],\n    '0x065F': ['US', '1', 'PatientSupportPositionParameterOrderIndex'],\n    '0x0660': ['SQ', '1', 'PatientSupportPositionDeviceToleranceSequence'],\n    '0x0661': ['US', '1', 'PatientSupportPositionToleranceOrderIndex'],\n    '0x0662': ['SQ', '1', 'CompensatorDefinitionSequence'],\n    '0x0663': ['CS', '1', 'CompensatorMapOrientation'],\n    '0x0664': ['OF', '1', 'CompensatorProximalThicknessMap'],\n    '0x0665': ['OF', '1', 'CompensatorDistalThicknessMap'],\n    '0x0666': ['FD', '1', 'CompensatorBasePlaneOffset'],\n    '0x0667': ['SQ', '1', 'CompensatorShapeFabricationCodeSequence'],\n    '0x0668': ['SQ', '1', 'CompensatorShapeSequence'],\n    '0x0669': ['FD', '1', 'RadiationBeamCompensatorMillingToolDiameter'],\n    '0x066A': ['SQ', '1', 'BlockDefinitionSequence'],\n    '0x066B': ['OF', '1', 'BlockEdgeData'],\n    '0x066C': ['CS', '1', 'BlockOrientation'],\n    '0x066D': ['FD', '1', 'RadiationBeamBlockThickness'],\n    '0x066E': ['FD', '1', 'RadiationBeamBlockSlabThickness'],\n    '0x066F': ['SQ', '1', 'BlockEdgeDataSequence'],\n    '0x0670': ['US', '1', 'NumberOfRTAccessoryHolders'],\n    '0x0671': ['SQ', '1', 'GeneralAccessoryDefinitionSequence'],\n    '0x0672': ['US', '1', 'NumberOfGeneralAccessories'],\n    '0x0673': ['SQ', '1', 'BolusDefinitionSequence'],\n    '0x0674': ['US', '1', 'NumberOfBoluses'],\n    '0x0675': ['UI', '1', 'EquipmentFrameOfReferenceUID'],\n    '0x0676': ['ST', '1', 'EquipmentFrameOfReferenceDescription'],\n    '0x0677': ['SQ', '1', 'EquipmentReferencePointCoordinatesSequence'],\n    '0x0678': ['SQ', '1', 'EquipmentReferencePointCodeSequence'],\n    '0x0679': ['FD', '1', 'RTBeamLimitingDeviceAngle'],\n    '0x067A': ['FD', '1', 'SourceRollAngle'],\n    '0x067B': ['SQ', '1', 'RadiationGenerationModeSequence'],\n    '0x067C': ['SH', '1', 'RadiationGenerationModeLabel'],\n    '0x067D': ['ST', '1', 'RadiationGenerationModeDescription'],\n    '0x067E': ['SQ', '1', 'RadiationGenerationModeMachineCodeSequence'],\n    '0x067F': ['SQ', '1', 'RadiationTypeCodeSequence'],\n    '0x0680': ['DS', '1', 'NominalEnergy'],\n    '0x0681': ['DS', '1', 'MinimumNominalEnergy'],\n    '0x0682': ['DS', '1', 'MaximumNominalEnergy'],\n    '0x0683': ['SQ', '1', 'RadiationFluenceModifierCodeSequence'],\n    '0x0684': ['SQ', '1', 'EnergyUnitCodeSequence'],\n    '0x0685': ['US', '1', 'NumberOfRadiationGenerationModes'],\n    '0x0686': ['SQ', '1', 'PatientSupportDevicesSequence'],\n    '0x0687': ['US', '1', 'NumberOfPatientSupportDevices'],\n    '0x0688': ['FD', '1', 'RTBeamModifierDefinitionDistance'],\n    '0x0689': ['SQ', '1', 'BeamAreaLimitSequence'],\n    '0x068A': ['SQ', '1', 'ReferencedRTPrescriptionSequence'],\n    '0x0700': ['UI', '1', 'TreatmentSessionUID'],\n    '0x0701': ['CS', '1', 'RTRadiationUsage'],\n    '0x0702': ['SQ', '1', 'ReferencedRTRadiationSetSequence'],\n    '0x0703': ['SQ', '1', 'ReferencedRTRadiationRecordSequence'],\n    '0x0704': ['US', '1', 'RTRadiationSetDeliveryNumber'],\n    '0x0705': ['US', '1', 'ClinicalFractionNumber'],\n    '0x0706': ['CS', '1', 'RTTreatmentFractionCompletionStatus'],\n    '0x0707': ['CS', '1', 'RTRadiationSetUsage'],\n    '0x0708': ['CS', '1', 'TreatmentDeliveryContinuationFlag'],\n    '0x0709': ['CS', '1', 'TreatmentRecordContentOrigin'],\n    '0x0714': ['CS', '1', 'RTTreatmentTerminationStatus'],\n    '0x0715': ['SQ', '1', 'RTTreatmentTerminationReasonCodeSequence'],\n    '0x0716': ['SQ', '1', 'MachineSpecificTreatmentTerminationCodeSequence'],\n    '0x0722': ['SQ', '1', 'RTRadiationSalvageRecordControlPointSequence'],\n    '0x0723': ['CS', '1', 'StartingMetersetValueKnownFlag'],\n    '0x0730': ['ST', '1', 'TreatmentTerminationDescription'],\n    '0x0731': ['SQ', '1', 'TreatmentToleranceViolationSequence'],\n    '0x0732': ['CS', '1', 'TreatmentToleranceViolationCategory'],\n    '0x0733': ['SQ', '1', 'TreatmentToleranceViolationAttributeSequence'],\n    '0x0734': ['ST', '1', 'TreatmentToleranceViolationDescription'],\n    '0x0735': ['ST', '1', 'TreatmentToleranceViolationIdentification'],\n    '0x0736': ['DT', '1', 'TreatmentToleranceViolationDateTime'],\n    '0x073A': ['DT', '1', 'RecordedRTControlPointDateTime'],\n    '0x073B': ['US', '1', 'ReferencedRadiationRTControlPointIndex'],\n    '0x073E': ['SQ', '1', 'AlternateValueSequence'],\n    '0x073F': ['SQ', '1', 'ConfirmationSequence'],\n    '0x0740': ['SQ', '1', 'InterlockSequence'],\n    '0x0741': ['DT', '1', 'InterlockDateTime'],\n    '0x0742': ['ST', '1', 'InterlockDescription'],\n    '0x0743': ['SQ', '1', 'InterlockOriginatingDeviceSequence'],\n    '0x0744': ['SQ', '1', 'InterlockCodeSequence'],\n    '0x0745': ['SQ', '1', 'InterlockResolutionCodeSequence'],\n    '0x0746': ['SQ', '1', 'InterlockResolutionUserSequence'],\n    '0x0760': ['DT', '1', 'OverrideDateTime'],\n    '0x0761': ['SQ', '1', 'TreatmentToleranceViolationTypeCodeSequence'],\n    '0x0762': ['SQ', '1', 'TreatmentToleranceViolationCauseCodeSequence'],\n    '0x0772': ['SQ', '1', 'MeasuredMetersetToDoseMappingSequence'],\n    '0x0773': ['US', '1', 'ReferencedExpectedInVivoMeasurementValueIndex'],\n    '0x0774': ['SQ', '1', 'DoseMeasurementDeviceCodeSequence'],\n    '0x0780': ['SQ', '1', 'AdditionalParameterRecordingInstanceSequence'],\n    '0x0782': ['US', '1', ''],\n    '0x0783': ['ST', '1', 'InterlockOriginDescription'],\n    '0x0784': ['SQ', '1', 'RTPatientPositionScopeSequence'],\n    '0x0785': ['UI', '1', 'ReferencedTreatmentPositionGroupUID'],\n    '0x0786': ['US', '1', 'RadiationOrderIndex'],\n    '0x0787': ['SQ', '1', 'OmittedRadiationSequence'],\n    '0x0788': ['SQ', '1', 'ReasonForOmissionCodeSequence'],\n    '0x0789': ['SQ', '1', 'RTDeliveryStartPatientPositionSequence'],\n    '0x078A': ['SQ', '1', 'RTTreatmentPreparationPatientPositionSequence'],\n    '0x078B': ['SQ', '1', 'ReferencedRTTreatmentPreparationSequence'],\n    '0x078C': ['SQ', '1', 'ReferencedPatientSetupPhotoSequence'],\n    '0x078D': ['SQ', '1', 'PatientTreatmentPreparationMethodCodeSequence'],\n    '0x078E': ['LT', '1', 'PatientTreatmentPreparationProcedureParameterDescription'],\n    '0x078F': ['SQ', '1', 'PatientTreatmentPreparationDeviceSequence'],\n    '0x0790': ['SQ', '1', 'PatientTreatmentPreparationProcedureSequence'],\n    '0x0791': ['SQ', '1', 'PatientTreatmentPreparationProcedureCodeSequence'],\n    '0x0792': ['LT', '1', 'PatientTreatmentPreparationMethodDescription'],\n    '0x0793': ['SQ', '1', 'PatientTreatmentPreparationProcedureParameterSequence'],\n    '0x0794': ['LT', '1', 'PatientSetupPhotoDescription'],\n    '0x0795': ['US', '1', 'PatientTreatmentPreparationProcedureIndex'],\n    '0x0796': ['US', '1', 'ReferencedPatientSetupProcedureIndex'],\n    '0x0797': ['SQ', '1', 'RTRadiationTaskSequence'],\n    '0x0798': ['SQ', '1', 'RTPatientPositionDisplacementSequence'],\n    '0x0799': ['SQ', '1', 'RTPatientPositionSequence'],\n    '0x079A': ['LO', '1', 'DisplacementReferenceLabel'],\n    '0x079B': ['FD', '16', 'DisplacementMatrix'],\n    '0x079C': ['SQ', '1', 'PatientSupportDisplacementSequence'],\n    '0x079D': ['SQ', '1', 'DisplacementReferenceLocationCodeSequence'],\n    '0x079E': ['CS', '1', 'RTRadiationSetDeliveryUsage']\n  },\n  '0x300C': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0002': ['SQ', '1', 'ReferencedRTPlanSequence'],\n    '0x0004': ['SQ', '1', 'ReferencedBeamSequence'],\n    '0x0006': ['IS', '1', 'ReferencedBeamNumber'],\n    '0x0007': ['IS', '1', 'ReferencedReferenceImageNumber'],\n    '0x0008': ['DS', '1', 'StartCumulativeMetersetWeight'],\n    '0x0009': ['DS', '1', 'EndCumulativeMetersetWeight'],\n    '0x000A': ['SQ', '1', 'ReferencedBrachyApplicationSetupSequence'],\n    '0x000C': ['IS', '1', 'ReferencedBrachyApplicationSetupNumber'],\n    '0x000E': ['IS', '1', 'ReferencedSourceNumber'],\n    '0x0020': ['SQ', '1', 'ReferencedFractionGroupSequence'],\n    '0x0022': ['IS', '1', 'ReferencedFractionGroupNumber'],\n    '0x0040': ['SQ', '1', 'ReferencedVerificationImageSequence'],\n    '0x0042': ['SQ', '1', 'ReferencedReferenceImageSequence'],\n    '0x0050': ['SQ', '1', 'ReferencedDoseReferenceSequence'],\n    '0x0051': ['IS', '1', 'ReferencedDoseReferenceNumber'],\n    '0x0055': ['SQ', '1', 'BrachyReferencedDoseReferenceSequence'],\n    '0x0060': ['SQ', '1', 'ReferencedStructureSetSequence'],\n    '0x006A': ['IS', '1', 'ReferencedPatientSetupNumber'],\n    '0x0080': ['SQ', '1', 'ReferencedDoseSequence'],\n    '0x00A0': ['IS', '1', 'ReferencedToleranceTableNumber'],\n    '0x00B0': ['SQ', '1', 'ReferencedBolusSequence'],\n    '0x00C0': ['IS', '1', 'ReferencedWedgeNumber'],\n    '0x00D0': ['IS', '1', 'ReferencedCompensatorNumber'],\n    '0x00E0': ['IS', '1', 'ReferencedBlockNumber'],\n    '0x00F0': ['IS', '1', 'ReferencedControlPointIndex'],\n    '0x00F2': ['SQ', '1', 'ReferencedControlPointSequence'],\n    '0x00F4': ['IS', '1', 'ReferencedStartControlPointIndex'],\n    '0x00F6': ['IS', '1', 'ReferencedStopControlPointIndex'],\n    '0x0100': ['IS', '1', 'ReferencedRangeShifterNumber'],\n    '0x0102': ['IS', '1', 'ReferencedLateralSpreadingDeviceNumber'],\n    '0x0104': ['IS', '1', 'ReferencedRangeModulatorNumber'],\n    '0x0111': ['SQ', '1', 'OmittedBeamTaskSequence'],\n    '0x0112': ['CS', '1', 'ReasonForOmission'],\n    '0x0113': ['LO', '1', 'ReasonForOmissionDescription'],\n    '0x0114': ['SQ', '1', 'PrescriptionOverviewSequence'],\n    '0x0115': ['FL', '1', 'TotalPrescriptionDose'],\n    '0x0116': ['SQ', '1', 'PlanOverviewSequence'],\n    '0x0117': ['US', '1', 'PlanOverviewIndex'],\n    '0x0118': ['US', '1', 'ReferencedPlanOverviewIndex'],\n    '0x0119': ['US', '1', 'NumberOfFractionsIncluded'],\n    '0x0120': ['SQ', '1', 'DoseCalibrationConditionsSequence'],\n    '0x0121': ['FD', '1', 'AbsorbedDoseToMetersetRatio'],\n    '0x0122': ['FD', '2', 'DelineatedRadiationFieldSize'],\n    '0x0123': ['CS', '1', 'DoseCalibrationConditionsVerifiedFlag'],\n    '0x0124': ['FD', '1', 'CalibrationReferencePointDepth'],\n    '0x0125': ['SQ', '1', 'GatingBeamHoldTransitionSequence'],\n    '0x0126': ['CS', '1', 'BeamHoldTransition'],\n    '0x0127': ['DT', '1', 'BeamHoldTransitionDateTime'],\n    '0x0128': ['SQ', '1', 'BeamHoldOriginatingDeviceSequence']\n  },\n  '0x300E': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0002': ['CS', '1', 'ApprovalStatus'],\n    '0x0004': ['DA', '1', 'ReviewDate'],\n    '0x0005': ['TM', '1', 'ReviewTime'],\n    '0x0008': ['PN', '1', 'ReviewerName']\n  },\n  '0x3010': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['SQ', '1', 'RadiobiologicalDoseEffectSequence'],\n    '0x0002': ['CS', '1', 'RadiobiologicalDoseEffectFlag'],\n    '0x0003': ['SQ', '1', 'EffectiveDoseCalculationMethodCategoryCodeSequence'],\n    '0x0004': ['SQ', '1', 'EffectiveDoseCalculationMethodCodeSequence'],\n    '0x0005': ['LO', '1', 'EffectiveDoseCalculationMethodDescription'],\n    '0x0006': ['UI', '1', 'ConceptualVolumeUID'],\n    '0x0007': ['SQ', '1', 'OriginatingSOPInstanceReferenceSequence'],\n    '0x0008': ['SQ', '1', 'ConceptualVolumeConstituentSequence'],\n    '0x0009': ['SQ', '1', 'EquivalentConceptualVolumeInstanceReferenceSequence'],\n    '0x000A': ['SQ', '1', 'EquivalentConceptualVolumesSequence'],\n    '0x000B': ['UI', '1', 'ReferencedConceptualVolumeUID'],\n    '0x000C': ['UT', '1', 'ConceptualVolumeCombinationExpression'],\n    '0x000D': ['US', '1', 'ConceptualVolumeConstituentIndex'],\n    '0x000E': ['CS', '1', 'ConceptualVolumeCombinationFlag'],\n    '0x000F': ['ST', '1', 'ConceptualVolumeCombinationDescription'],\n    '0x0010': ['CS', '1', 'ConceptualVolumeSegmentationDefinedFlag'],\n    '0x0011': ['SQ', '1', 'ConceptualVolumeSegmentationReferenceSequence'],\n    '0x0012': ['SQ', '1', 'ConceptualVolumeConstituentSegmentationReferenceSequence'],\n    '0x0013': ['UI', '1', 'ConstituentConceptualVolumeUID'],\n    '0x0014': ['SQ', '1', 'DerivationConceptualVolumeSequence'],\n    '0x0015': ['UI', '1', 'SourceConceptualVolumeUID'],\n    '0x0016': ['SQ', '1', 'ConceptualVolumeDerivationAlgorithmSequence'],\n    '0x0017': ['ST', '1', 'ConceptualVolumeDescription'],\n    '0x0018': ['SQ', '1', 'SourceConceptualVolumeSequence'],\n    '0x0019': ['SQ', '1', 'AuthorIdentificationSequence'],\n    '0x001A': ['LO', '1', 'ManufacturerModelVersion'],\n    '0x001B': ['UC', '1', 'DeviceAlternateIdentifier'],\n    '0x001C': ['CS', '1', 'DeviceAlternateIdentifierType'],\n    '0x001D': ['LT', '1', 'DeviceAlternateIdentifierFormat'],\n    '0x001E': ['LO', '1', 'SegmentationCreationTemplateLabel'],\n    '0x001F': ['UI', '1', 'SegmentationTemplateUID'],\n    '0x0020': ['US', '1', 'ReferencedSegmentReferenceIndex'],\n    '0x0021': ['SQ', '1', 'SegmentReferenceSequence'],\n    '0x0022': ['US', '1', 'SegmentReferenceIndex'],\n    '0x0023': ['SQ', '1', 'DirectSegmentReferenceSequence'],\n    '0x0024': ['SQ', '1', 'CombinationSegmentReferenceSequence'],\n    '0x0025': ['SQ', '1', 'ConceptualVolumeSequence'],\n    '0x0026': ['SQ', '1', 'SegmentedRTAccessoryDeviceSequence'],\n    '0x0027': ['SQ', '1', 'SegmentCharacteristicsSequence'],\n    '0x0028': ['SQ', '1', 'RelatedSegmentCharacteristicsSequence'],\n    '0x0029': ['US', '1', 'SegmentCharacteristicsPrecedence'],\n    '0x002A': ['SQ', '1', 'RTSegmentAnnotationSequence'],\n    '0x002B': ['SQ', '1', 'SegmentAnnotationCategoryCodeSequence'],\n    '0x002C': ['SQ', '1', 'SegmentAnnotationTypeCodeSequence'],\n    '0x002D': ['LO', '1', 'DeviceLabel'],\n    '0x002E': ['SQ', '1', 'DeviceTypeCodeSequence'],\n    '0x002F': ['SQ', '1', 'SegmentAnnotationTypeModifierCodeSequence'],\n    '0x0030': ['SQ', '1', 'PatientEquipmentRelationshipCodeSequence'],\n    '0x0031': ['UI', '1', 'ReferencedFiducialsUID'],\n    '0x0032': ['SQ', '1', 'PatientTreatmentOrientationSequence'],\n    '0x0033': ['SH', '1', 'UserContentLabel'],\n    '0x0034': ['LO', '1', 'UserContentLongLabel'],\n    '0x0035': ['SH', '1', 'EntityLabel'],\n    '0x0036': ['LO', '1', 'EntityName'],\n    '0x0037': ['ST', '1', 'EntityDescription'],\n    '0x0038': ['LO', '1', 'EntityLongLabel'],\n    '0x0039': ['US', '1', 'DeviceIndex'],\n    '0x003A': ['US', '1', 'RTTreatmentPhaseIndex'],\n    '0x003B': ['UI', '1', 'RTTreatmentPhaseUID'],\n    '0x003C': ['US', '1', 'RTPrescriptionIndex'],\n    '0x003D': ['US', '1', 'RTSegmentAnnotationIndex'],\n    '0x003E': ['US', '1', 'BasisRTTreatmentPhaseIndex'],\n    '0x003F': ['US', '1', 'RelatedRTTreatmentPhaseIndex'],\n    '0x0040': ['US', '1', 'ReferencedRTTreatmentPhaseIndex'],\n    '0x0041': ['US', '1', 'ReferencedRTPrescriptionIndex'],\n    '0x0042': ['US', '1', 'ReferencedParentRTPrescriptionIndex'],\n    '0x0043': ['ST', '1', 'ManufacturerDeviceIdentifier'],\n    '0x0044': ['SQ', '1', 'InstanceLevelReferencedPerformedProcedureStepSequence'],\n    '0x0045': ['CS', '1', 'RTTreatmentPhaseIntentPresenceFlag'],\n    '0x0046': ['CS', '1', 'RadiotherapyTreatmentType'],\n    '0x0047': ['CS', '1-n', 'TeletherapyRadiationType'],\n    '0x0048': ['CS', '1-n', 'BrachytherapySourceType'],\n    '0x0049': ['SQ', '1', 'ReferencedRTTreatmentPhaseSequence'],\n    '0x004A': ['SQ', '1', 'ReferencedDirectSegmentInstanceSequence'],\n    '0x004B': ['SQ', '1', 'IntendedRTTreatmentPhaseSequence'],\n    '0x004C': ['DA', '1', 'IntendedPhaseStartDate'],\n    '0x004D': ['DA', '1', 'IntendedPhaseEndDate'],\n    '0x004E': ['SQ', '1', 'RTTreatmentPhaseIntervalSequence'],\n    '0x004F': ['CS', '1', 'TemporalRelationshipIntervalAnchor'],\n    '0x0050': ['FD', '1', 'MinimumNumberOfIntervalDays'],\n    '0x0051': ['FD', '1', 'MaximumNumberOfIntervalDays'],\n    '0x0052': ['UI', '1-n', 'PertinentSOPClassesInStudy'],\n    '0x0053': ['UI', '1-n', 'PertinentSOPClassesInSeries'],\n    '0x0054': ['LO', '1', 'RTPrescriptionLabel'],\n    '0x0055': ['SQ', '1', 'RTPhysicianIntentPredecessorSequence'],\n    '0x0056': ['LO', '1', 'RTTreatmentApproachLabel'],\n    '0x0057': ['SQ', '1', 'RTPhysicianIntentSequence'],\n    '0x0058': ['US', '1', 'RTPhysicianIntentIndex'],\n    '0x0059': ['CS', '1', 'RTTreatmentIntentType'],\n    '0x005A': ['UT', '1', 'RTPhysicianIntentNarrative'],\n    '0x005B': ['SQ', '1', 'RTProtocolCodeSequence'],\n    '0x005C': ['ST', '1', 'ReasonForSuperseding'],\n    '0x005D': ['SQ', '1', 'RTDiagnosisCodeSequence'],\n    '0x005E': ['US', '1', 'ReferencedRTPhysicianIntentIndex'],\n    '0x005F': ['SQ', '1', 'RTPhysicianIntentInputInstanceSequence'],\n    '0x0060': ['SQ', '1', 'RTAnatomicPrescriptionSequence'],\n    '0x0061': ['UT', '1', 'PriorTreatmentDoseDescription'],\n    '0x0062': ['SQ', '1', 'PriorTreatmentReferenceSequence'],\n    '0x0063': ['CS', '1', 'DosimetricObjectiveEvaluationScope'],\n    '0x0064': ['SQ', '1', 'TherapeuticRoleCategoryCodeSequence'],\n    '0x0065': ['SQ', '1', 'TherapeuticRoleTypeCodeSequence'],\n    '0x0066': ['US', '1', 'ConceptualVolumeOptimizationPrecedence'],\n    '0x0067': ['SQ', '1', 'ConceptualVolumeCategoryCodeSequence'],\n    '0x0068': ['CS', '1', 'ConceptualVolumeBlockingConstraint'],\n    '0x0069': ['SQ', '1', 'ConceptualVolumeTypeCodeSequence'],\n    '0x006A': ['SQ', '1', 'ConceptualVolumeTypeModifierCodeSequence'],\n    '0x006B': ['SQ', '1', 'RTPrescriptionSequence'],\n    '0x006C': ['SQ', '1', 'DosimetricObjectiveSequence'],\n    '0x006D': ['SQ', '1', 'DosimetricObjectiveTypeCodeSequence'],\n    '0x006E': ['UI', '1', 'DosimetricObjectiveUID'],\n    '0x006F': ['UI', '1', 'ReferencedDosimetricObjectiveUID'],\n    '0x0070': ['SQ', '1', 'DosimetricObjectiveParameterSequence'],\n    '0x0071': ['SQ', '1', 'ReferencedDosimetricObjectivesSequence'],\n    '0x0073': ['CS', '1', 'AbsoluteDosimetricObjectiveFlag'],\n    '0x0074': ['FD', '1', 'DosimetricObjectiveWeight'],\n    '0x0075': ['CS', '1', 'DosimetricObjectivePurpose'],\n    '0x0076': ['SQ', '1', 'PlanningInputInformationSequence'],\n    '0x0077': ['LO', '1', 'TreatmentSite'],\n    '0x0078': ['SQ', '1', 'TreatmentSiteCodeSequence'],\n    '0x0079': ['SQ', '1', 'FractionPatternSequence'],\n    '0x007A': ['UT', '1', 'TreatmentTechniqueNotes'],\n    '0x007B': ['UT', '1', 'PrescriptionNotes'],\n    '0x007C': ['IS', '1', 'NumberOfIntervalFractions'],\n    '0x007D': ['US', '1', 'NumberOfFractions'],\n    '0x007E': ['US', '1', 'IntendedDeliveryDuration'],\n    '0x007F': ['UT', '1', 'FractionationNotes'],\n    '0x0080': ['SQ', '1', 'RTTreatmentTechniqueCodeSequence'],\n    '0x0081': ['SQ', '1', 'PrescriptionNotesSequence'],\n    '0x0082': ['SQ', '1', 'FractionBasedRelationshipSequence'],\n    '0x0083': ['CS', '1', 'FractionBasedRelationshipIntervalAnchor'],\n    '0x0084': ['FD', '1', 'MinimumHoursBetweenFractions'],\n    '0x0085': ['TM', '1-n', 'IntendedFractionStartTime'],\n    '0x0086': ['LT', '1', 'IntendedStartDayOfWeek'],\n    '0x0087': ['SQ', '1', 'WeekdayFractionPatternSequence'],\n    '0x0088': ['SQ', '1', 'DeliveryTimeStructureCodeSequence'],\n    '0x0089': ['SQ', '1', 'TreatmentSiteModifierCodeSequence'],\n    '0x0090': ['CS', '1', 'RoboticBaseLocationIndicator'],\n    '0x0091': ['SQ', '1', 'RoboticPathNodeSetCodeSequence'],\n    '0x0092': ['UL', '1', 'RoboticNodeIdentifier'],\n    '0x0093': ['FD', '3', 'RTTreatmentSourceCoordinates'],\n    '0x0094': ['FD', '1', 'RadiationSourceCoordinateSystemYawAngle'],\n    '0x0095': ['FD', '1', 'RadiationSourceCoordinateSystemRollAngle'],\n    '0x0096': ['FD', '1', 'RadiationSourceCoordinateSystemPitchAngle'],\n    '0x0097': ['SQ', '1', 'RoboticPathControlPointSequence'],\n    '0x0098': ['SQ', '1', 'TomotherapeuticControlPointSequence'],\n    '0x0099': ['FD', '1-n', 'TomotherapeuticLeafOpenDurations'],\n    '0x009A': ['FD', '1-n', 'TomotherapeuticLeafInitialClosedDurations']\n  },\n  '0x4000': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['LT', '1', 'Arbitrary'],\n    '0x4000': ['LT', '1', 'TextComments']\n  },\n  '0x4008': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0040': ['SH', '1', 'ResultsID'],\n    '0x0042': ['LO', '1', 'ResultsIDIssuer'],\n    '0x0050': ['SQ', '1', 'ReferencedInterpretationSequence'],\n    '0x00FF': ['CS', '1', 'ReportProductionStatusTrial'],\n    '0x0100': ['DA', '1', 'InterpretationRecordedDate'],\n    '0x0101': ['TM', '1', 'InterpretationRecordedTime'],\n    '0x0102': ['PN', '1', 'InterpretationRecorder'],\n    '0x0103': ['LO', '1', 'ReferenceToRecordedSound'],\n    '0x0108': ['DA', '1', 'InterpretationTranscriptionDate'],\n    '0x0109': ['TM', '1', 'InterpretationTranscriptionTime'],\n    '0x010A': ['PN', '1', 'InterpretationTranscriber'],\n    '0x010B': ['ST', '1', 'InterpretationText'],\n    '0x010C': ['PN', '1', 'InterpretationAuthor'],\n    '0x0111': ['SQ', '1', 'InterpretationApproverSequence'],\n    '0x0112': ['DA', '1', 'InterpretationApprovalDate'],\n    '0x0113': ['TM', '1', 'InterpretationApprovalTime'],\n    '0x0114': ['PN', '1', 'PhysicianApprovingInterpretation'],\n    '0x0115': ['LT', '1', 'InterpretationDiagnosisDescription'],\n    '0x0117': ['SQ', '1', 'InterpretationDiagnosisCodeSequence'],\n    '0x0118': ['SQ', '1', 'ResultsDistributionListSequence'],\n    '0x0119': ['PN', '1', 'DistributionName'],\n    '0x011A': ['LO', '1', 'DistributionAddress'],\n    '0x0200': ['SH', '1', 'InterpretationID'],\n    '0x0202': ['LO', '1', 'InterpretationIDIssuer'],\n    '0x0210': ['CS', '1', 'InterpretationTypeID'],\n    '0x0212': ['CS', '1', 'InterpretationStatusID'],\n    '0x0300': ['ST', '1', 'Impressions'],\n    '0x4000': ['ST', '1', 'ResultsComments']\n  },\n  '0x4010': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['CS', '1', 'LowEnergyDetectors'],\n    '0x0002': ['CS', '1', 'HighEnergyDetectors'],\n    '0x0004': ['SQ', '1', 'DetectorGeometrySequence'],\n    '0x1001': ['SQ', '1', 'ThreatROIVoxelSequence'],\n    '0x1004': ['FL', '3', 'ThreatROIBase'],\n    '0x1005': ['FL', '3', 'ThreatROIExtents'],\n    '0x1006': ['OB', '1', 'ThreatROIBitmap'],\n    '0x1007': ['SH', '1', 'RouteSegmentID'],\n    '0x1008': ['CS', '1', 'GantryType'],\n    '0x1009': ['CS', '1', 'OOIOwnerType'],\n    '0x100A': ['SQ', '1', 'RouteSegmentSequence'],\n    '0x1010': ['US', '1', 'PotentialThreatObjectID'],\n    '0x1011': ['SQ', '1', 'ThreatSequence'],\n    '0x1012': ['CS', '1', 'ThreatCategory'],\n    '0x1013': ['LT', '1', 'ThreatCategoryDescription'],\n    '0x1014': ['CS', '1', 'ATDAbilityAssessment'],\n    '0x1015': ['CS', '1', 'ATDAssessmentFlag'],\n    '0x1016': ['FL', '1', 'ATDAssessmentProbability'],\n    '0x1017': ['FL', '1', 'Mass'],\n    '0x1018': ['FL', '1', 'Density'],\n    '0x1019': ['FL', '1', 'ZEffective'],\n    '0x101A': ['SH', '1', 'BoardingPassID'],\n    '0x101B': ['FL', '3', 'CenterOfMass'],\n    '0x101C': ['FL', '3', 'CenterOfPTO'],\n    '0x101D': ['FL', '6-n', 'BoundingPolygon'],\n    '0x101E': ['SH', '1', 'RouteSegmentStartLocationID'],\n    '0x101F': ['SH', '1', 'RouteSegmentEndLocationID'],\n    '0x1020': ['CS', '1', 'RouteSegmentLocationIDType'],\n    '0x1021': ['CS', '1-n', 'AbortReason'],\n    '0x1023': ['FL', '1', 'VolumeOfPTO'],\n    '0x1024': ['CS', '1', 'AbortFlag'],\n    '0x1025': ['DT', '1', 'RouteSegmentStartTime'],\n    '0x1026': ['DT', '1', 'RouteSegmentEndTime'],\n    '0x1027': ['CS', '1', 'TDRType'],\n    '0x1028': ['CS', '1', 'InternationalRouteSegment'],\n    '0x1029': ['LO', '1-n', 'ThreatDetectionAlgorithmAndVersion'],\n    '0x102A': ['SH', '1', 'AssignedLocation'],\n    '0x102B': ['DT', '1', 'AlarmDecisionTime'],\n    '0x1031': ['CS', '1', 'AlarmDecision'],\n    '0x1033': ['US', '1', 'NumberOfTotalObjects'],\n    '0x1034': ['US', '1', 'NumberOfAlarmObjects'],\n    '0x1037': ['SQ', '1', 'PTORepresentationSequence'],\n    '0x1038': ['SQ', '1', 'ATDAssessmentSequence'],\n    '0x1039': ['CS', '1', 'TIPType'],\n    '0x103A': ['CS', '1', 'DICOSVersion'],\n    '0x1041': ['DT', '1', 'OOIOwnerCreationTime'],\n    '0x1042': ['CS', '1', 'OOIType'],\n    '0x1043': ['FL', '3', 'OOISize'],\n    '0x1044': ['CS', '1', 'AcquisitionStatus'],\n    '0x1045': ['SQ', '1', 'BasisMaterialsCodeSequence'],\n    '0x1046': ['CS', '1', 'PhantomType'],\n    '0x1047': ['SQ', '1', 'OOIOwnerSequence'],\n    '0x1048': ['CS', '1', 'ScanType'],\n    '0x1051': ['LO', '1', 'ItineraryID'],\n    '0x1052': ['SH', '1', 'ItineraryIDType'],\n    '0x1053': ['LO', '1', 'ItineraryIDAssigningAuthority'],\n    '0x1054': ['SH', '1', 'RouteID'],\n    '0x1055': ['SH', '1', 'RouteIDAssigningAuthority'],\n    '0x1056': ['CS', '1', 'InboundArrivalType'],\n    '0x1058': ['SH', '1', 'CarrierID'],\n    '0x1059': ['CS', '1', 'CarrierIDAssigningAuthority'],\n    '0x1060': ['FL', '3', 'SourceOrientation'],\n    '0x1061': ['FL', '3', 'SourcePosition'],\n    '0x1062': ['FL', '1', 'BeltHeight'],\n    '0x1064': ['SQ', '1', 'AlgorithmRoutingCodeSequence'],\n    '0x1067': ['CS', '1', 'TransportClassification'],\n    '0x1068': ['LT', '1', 'OOITypeDescriptor'],\n    '0x1069': ['FL', '1', 'TotalProcessingTime'],\n    '0x106C': ['OB', '1', 'DetectorCalibrationData'],\n    '0x106D': ['CS', '1', 'AdditionalScreeningPerformed'],\n    '0x106E': ['CS', '1', 'AdditionalInspectionSelectionCriteria'],\n    '0x106F': ['SQ', '1', 'AdditionalInspectionMethodSequence'],\n    '0x1070': ['CS', '1', 'AITDeviceType'],\n    '0x1071': ['SQ', '1', 'QRMeasurementsSequence'],\n    '0x1072': ['SQ', '1', 'TargetMaterialSequence'],\n    '0x1073': ['FD', '1', 'SNRThreshold'],\n    '0x1075': ['DS', '1', 'ImageScaleRepresentation'],\n    '0x1076': ['SQ', '1', 'ReferencedPTOSequence'],\n    '0x1077': ['SQ', '1', 'ReferencedTDRInstanceSequence'],\n    '0x1078': ['ST', '1', 'PTOLocationDescription'],\n    '0x1079': ['SQ', '1', 'AnomalyLocatorIndicatorSequence'],\n    '0x107A': ['FL', '3', 'AnomalyLocatorIndicator'],\n    '0x107B': ['SQ', '1', 'PTORegionSequence'],\n    '0x107C': ['CS', '1', 'InspectionSelectionCriteria'],\n    '0x107D': ['SQ', '1', 'SecondaryInspectionMethodSequence'],\n    '0x107E': ['DS', '6', 'PRCSToRCSOrientation']\n  },\n  '0x4FFE': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['SQ', '1', 'MACParametersSequence']\n  },\n  '0x5000': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0005': ['US', '1', 'CurveDimensions'],\n    '0x0010': ['US', '1', 'NumberOfPoints'],\n    '0x0020': ['CS', '1', 'TypeOfData'],\n    '0x0022': ['LO', '1', 'CurveDescription'],\n    '0x0030': ['SH', '1-n', 'AxisUnits'],\n    '0x0040': ['SH', '1-n', 'AxisLabels'],\n    '0x0103': ['US', '1', 'DataValueRepresentation'],\n    '0x0104': ['US', '1-n', 'MinimumCoordinateValue'],\n    '0x0105': ['US', '1-n', 'MaximumCoordinateValue'],\n    '0x0106': ['SH', '1-n', 'CurveRange'],\n    '0x0110': ['US', '1-n', 'CurveDataDescriptor'],\n    '0x0112': ['US', '1-n', 'CoordinateStartValue'],\n    '0x0114': ['US', '1-n', 'CoordinateStepValue'],\n    '0x1001': ['CS', '1', 'CurveActivationLayer'],\n    '0x2000': ['US', '1', 'AudioType'],\n    '0x2002': ['US', '1', 'AudioSampleFormat'],\n    '0x2004': ['US', '1', 'NumberOfChannels'],\n    '0x2006': ['UL', '1', 'NumberOfSamples'],\n    '0x2008': ['UL', '1', 'SampleRate'],\n    '0x200A': ['UL', '1', 'TotalTime'],\n    '0x200C': ['ox', '1', 'AudioSampleData'],\n    '0x200E': ['LT', '1', 'AudioComments'],\n    '0x2500': ['LO', '1', 'CurveLabel'],\n    '0x2600': ['SQ', '1', 'CurveReferencedOverlaySequence'],\n    '0x2610': ['US', '1', 'CurveReferencedOverlayGroup'],\n    '0x3000': ['ox', '1', 'CurveData']\n  },\n  '0x5200': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x9229': ['SQ', '1', 'SharedFunctionalGroupsSequence'],\n    '0x9230': ['SQ', '1', 'PerFrameFunctionalGroupsSequence']\n  },\n  '0x5400': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0100': ['SQ', '1', 'WaveformSequence'],\n    '0x0110': ['ox', '1', 'ChannelMinimumValue'],\n    '0x0112': ['ox', '1', 'ChannelMaximumValue'],\n    '0x1004': ['US', '1', 'WaveformBitsAllocated'],\n    '0x1006': ['CS', '1', 'WaveformSampleInterpretation'],\n    '0x100A': ['ox', '1', 'WaveformPaddingValue'],\n    '0x1010': ['ox', '1', 'WaveformData']\n  },\n  '0x5600': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['OF', '1', 'FirstOrderPhaseCorrectionAngle'],\n    '0x0020': ['OF', '1', 'SpectroscopyData']\n  },\n  '0x6000': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['US', '1', 'OverlayRows'],\n    '0x0011': ['US', '1', 'OverlayColumns'],\n    '0x0012': ['US', '1', 'OverlayPlanes'],\n    '0x0015': ['IS', '1', 'NumberOfFramesInOverlay'],\n    '0x0022': ['LO', '1', 'OverlayDescription'],\n    '0x0040': ['CS', '1', 'OverlayType'],\n    '0x0045': ['LO', '1', 'OverlaySubtype'],\n    '0x0050': ['SS', '2', 'OverlayOrigin'],\n    '0x0051': ['US', '1', 'ImageFrameOrigin'],\n    '0x0052': ['US', '1', 'OverlayPlaneOrigin'],\n    '0x0060': ['CS', '1', 'OverlayCompressionCode'],\n    '0x0061': ['SH', '1', 'OverlayCompressionOriginator'],\n    '0x0062': ['SH', '1', 'OverlayCompressionLabel'],\n    '0x0063': ['CS', '1', 'OverlayCompressionDescription'],\n    '0x0066': ['AT', '1-n', 'OverlayCompressionStepPointers'],\n    '0x0068': ['US', '1', 'OverlayRepeatInterval'],\n    '0x0069': ['US', '1', 'OverlayBitsGrouped'],\n    '0x0100': ['US', '1', 'OverlayBitsAllocated'],\n    '0x0102': ['US', '1', 'OverlayBitPosition'],\n    '0x0110': ['CS', '1', 'OverlayFormat'],\n    '0x0200': ['US', '1', 'OverlayLocation'],\n    '0x0800': ['CS', '1-n', 'OverlayCodeLabel'],\n    '0x0802': ['US', '1', 'OverlayNumberOfTables'],\n    '0x0803': ['AT', '1-n', 'OverlayCodeTableLocation'],\n    '0x0804': ['US', '1', 'OverlayBitsForCodeWord'],\n    '0x1001': ['CS', '1', 'OverlayActivationLayer'],\n    '0x1100': ['US', '1', 'OverlayDescriptorGray'],\n    '0x1101': ['US', '1', 'OverlayDescriptorRed'],\n    '0x1102': ['US', '1', 'OverlayDescriptorGreen'],\n    '0x1103': ['US', '1', 'OverlayDescriptorBlue'],\n    '0x1200': ['US', '1-n', 'OverlaysGray'],\n    '0x1201': ['US', '1-n', 'OverlaysRed'],\n    '0x1202': ['US', '1-n', 'OverlaysGreen'],\n    '0x1203': ['US', '1-n', 'OverlaysBlue'],\n    '0x1301': ['IS', '1', 'ROIArea'],\n    '0x1302': ['DS', '1', 'ROIMean'],\n    '0x1303': ['DS', '1', 'ROIStandardDeviation'],\n    '0x1500': ['LO', '1', 'OverlayLabel'],\n    '0x3000': ['ox', '1', 'OverlayData'],\n    '0x4000': ['LT', '1', 'OverlayComments']\n  },\n  '0x7F00': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0010': ['ox', '1', 'VariablePixelData'],\n    '0x0011': ['US', '1', 'VariableNextDataGroup'],\n    '0x0020': ['OW', '1', 'VariableCoefficientsSDVN'],\n    '0x0030': ['OW', '1', 'VariableCoefficientsSDHN'],\n    '0x0040': ['OW', '1', 'VariableCoefficientsSDDN']\n  },\n  '0x7FE0': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0x0001': ['OV', '1', 'ExtendedOffsetTable'],\n    '0x0002': ['OV', '1', 'ExtendedOffsetTableLengths'],\n    '0x0008': ['OF', '1', 'FloatPixelData'],\n    '0x0009': ['OD', '1', 'DoubleFloatPixelData'],\n    '0x0010': ['ox', '1', 'PixelData'],\n    '0x0020': ['OW', '1', 'CoefficientsSDVN'],\n    '0x0030': ['OW', '1', 'CoefficientsSDHN'],\n    '0x0040': ['OW', '1', 'CoefficientsSDDN']\n  },\n  '0xFFFA': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0xFFFA': ['SQ', '1', 'DigitalSignaturesSequence']\n  },\n  '0xFFFC': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0xFFFC': ['OB', '1', 'DataSetTrailingPadding']\n  },\n  '0xFFFE': {\n    '0x0000': ['UL', '1', 'GenericGroupLength'],\n    '0xE000': ['NONE', '1', 'Item'],\n    '0xE00D': ['NONE', '1', 'ItemDelimitationItem'],\n    '0xE0DD': ['NONE', '1', 'SequenceDelimitationItem']\n  }\n}; // Dictionnary\n\n// taken from gdcm-2.6.1\\Source\\DataDictionary\\GroupName.dic\n// -> removed duplicates (commented)\nexport const tagGroups = {\n  x0000: 'Command',\n  x0002: 'Meta Element',\n  x0004: 'File Set',\n  //'x0004': 'Directory',\n  x0008: 'Identifying',\n  x0009: 'SPI Identifying',\n  x0010: 'Patient',\n  x0012: 'Clinical Trial',\n  x0018: 'Acquisition',\n  x0019: 'SPI Acquisition',\n  x0020: 'Image',\n  x0021: 'SPI Image',\n  x0022: 'Ophtalmology',\n  x0028: 'Image Presentation',\n  x0032: 'Study',\n  x0038: 'Visit',\n  x003A: 'Waveform',\n  x0040: 'Procedure',\n  //'x0040': ''Modality Worklist',\n  x0042: 'Encapsulated Document',\n  x0050: 'Device Informations',\n  //'x0050': 'XRay Angio Device',\n  x0054: 'Nuclear Medicine',\n  x0060: 'Histogram',\n  x0070: 'Presentation State',\n  x0072: 'Hanging Protocol',\n  x0088: 'Storage',\n  //'x0088': 'Medicine',\n  x0100: 'Authorization',\n  x0400: 'Digital Signature',\n  x1000: 'Code Table',\n  x1010: 'Zonal Map',\n  x2000: 'Film Session',\n  x2010: 'Film Box',\n  x2020: 'Image Box',\n  x2030: 'Annotation',\n  x2040: 'Overlay Box',\n  x2050: 'Presentation LUT',\n  x2100: 'Print Job',\n  x2110: 'Printer',\n  x2120: 'Queue',\n  x2130: 'Print Content',\n  x2200: 'Media Creation',\n  x3002: 'RT Image',\n  x3004: 'RT Dose',\n  x3006: 'RT StructureSet',\n  x3008: 'RT Treatment',\n  x300A: 'RT Plan',\n  x300C: 'RT Relationship',\n  x300E: 'RT Approval',\n  x4000: 'Text',\n  x4008: 'Results',\n  x4FFE: 'MAC Parameters',\n  x5000: 'Curve',\n  x5002: 'Curve',\n  x5004: 'Curve',\n  x5006: 'Curve',\n  x5008: 'Curve',\n  x500A: 'Curve',\n  x500C: 'Curve',\n  x500E: 'Curve',\n  x5400: 'Waveform Data',\n  x6000: 'Overlays',\n  x6002: 'Overlays',\n  x6004: 'Overlays',\n  x6008: 'Overlays',\n  x600A: 'Overlays',\n  x600C: 'Overlays',\n  x600E: 'Overlays',\n  xFFFC: 'Generic',\n  x7FE0: 'Pixel Data',\n  xFFFF: 'Unknown'\n};\n\n// Value Representation (VR) with 32bit Value Length (VL)\n// Added locally used 'ox'\n// see http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1\nexport const vr32bitVL = [\n  'OB', 'OD', 'OF', 'OL', 'OV', 'OW', 'SQ', 'SV', 'UC', 'UN', 'UR', 'UT', 'UV', 'ox'\n];\n\n// String VR with extended or replaced default character repertoire defined in\n// Specific Character Set (0008,0005)\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html#sect_6.1.2.2\nexport const charSetString = [\n  'SH', 'LO', 'UC', 'ST', 'LT', 'UT', 'PN'\n];\n\n// VR types\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1\nexport const vrTypes = {\n  AE: 'string',\n  AS: 'string',\n  AT: undefined,\n  CS: 'string',\n  DA: 'string',\n  DS: 'string',\n  DT: 'string',\n  FL: 'Float32',\n  FD: 'Float64',\n  IS: 'string',\n  LO: 'string',\n  LT: 'string',\n  OB: 'Uint8',\n  OD: 'Uint64',\n  OF: 'Uint32',\n  OL: 'Uint32',\n  OV: 'Uint64',\n  OW: 'Uint16',\n  PN: 'string',\n  SH: 'string',\n  SL: 'Int32',\n  SQ: undefined,\n  SS: 'Int16',\n  ST: 'string',\n  SV: 'Int64',\n  TM: 'string',\n  UC: 'string',\n  UI: 'string',\n  UL: 'Uint32',\n  UN: 'Uint8',\n  UR: 'string',\n  US: 'Uint16',\n  UT: 'string',\n  UV: 'Uint64'\n};\n","import {\n  dictionary,\n  tagGroups\n} from './dictionary';\n\n/**\n * Immutable tag.\n */\nexport class Tag {\n\n  /**\n   * The tag group.\n   *\n   * @private\n   * @type {string}\n   */\n  #group;\n\n  /**\n   * The tag element.\n   *\n   * @private\n   * @type {string}\n   */\n  #element;\n\n  /**\n   * @param {string} group The tag group as '0x####'.\n   * @param {string} element The tag element as '0x####'.\n   */\n  constructor(group, element) {\n    if (!group || typeof group === 'undefined') {\n      throw new Error('Cannot create tag with no group.');\n    }\n    if (group.length !== 6 || !group.startsWith('0x')) {\n      throw new Error('Cannot create tag with badly formed group.');\n    }\n    if (!element || typeof element === 'undefined') {\n      throw new Error('Cannot create tag with no element.');\n    }\n    if (element.length !== 6 || !element.startsWith('0x')) {\n      throw new Error('Cannot create tag with badly formed element.');\n    }\n    this.#group = group;\n    this.#element = element;\n  }\n\n  /**\n   * Get the tag group.\n   *\n   * @returns {string} The tag group.\n   */\n  getGroup() {\n    return this.#group;\n  }\n\n  /**\n   * Get the tag element.\n   *\n   * @returns {string} The tag element.\n   */\n  getElement() {\n    return this.#element;\n  }\n\n  toString() {\n    return this.getKey() + ': ' + this.getNameFromDictionary();\n  }\n\n  /**\n   * Check for Tag equality.\n   *\n   * @param {Tag} rhs The other tag to compare to.\n   * @returns {boolean} True if both tags are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.getGroup() === rhs.getGroup() &&\n      this.getElement() === rhs.getElement();\n  }\n\n  /**\n   * Get the group-element key used to store DICOM elements.\n   *\n   * @returns {string} The key as 'x########'.\n   */\n  getKey() {\n    // group and element are in the '0x####' form\n    return 'x' + this.getGroup().substring(2) + this.getElement().substring(2);\n  }\n\n  /**\n   * Get a simplified group-element key.\n   *\n   * @returns {string} The key as '########'.\n   */\n  getKey2() {\n    // group and element are in the '0x####' form\n    return this.getGroup().substring(2) + this.getElement().substring(2);\n  }\n\n  /**\n   * Get the group name as defined in TagGroups.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    // group is in the '0x####' form\n    // TagGroups include the x\n    return tagGroups[this.getGroup().substring(1)];\n  }\n\n  /**\n   * Does this tag have a VR.\n   * Basically the Item, ItemDelimitationItem and SequenceDelimitationItem tags.\n   *\n   * @returns {boolean} True if this tag has a VR.\n   */\n  isWithVR() {\n    const element = this.getElement();\n    return !(this.getGroup() === '0xFFFE' &&\n      (element === '0xE000' || element === '0xE00D' || element === '0xE0DD')\n    );\n  }\n\n  /**\n   * Is the tag group a private tag group ?\n   * see: http://dicom.nema.org/medical/dicom/2015a/output/html/part05.html#sect_7.8\n   *\n   * @returns {boolean} True if the tag group is private,\n   *   ie if its group is an odd number.\n   */\n  isPrivate() {\n    // group is in the '0x####' form\n    const groupNumber = parseInt(this.getGroup().substring(2), 16);\n    return groupNumber % 2 === 1;\n  }\n\n  /**\n   * Get the tag info from the dicom dictionary.\n   *\n   * @returns {Array} The info as [vr, multiplicity, name].\n   */\n  getInfoFromDictionary() {\n    let info = null;\n    if (typeof dictionary[this.getGroup()] !== 'undefined' &&\n      typeof dictionary[this.getGroup()][this.getElement()] !==\n        'undefined') {\n      info = dictionary[this.getGroup()][this.getElement()];\n    }\n    return info;\n  }\n\n  /**\n   * Get the tag Value Representation (VR) from the dicom dictionary.\n   *\n   * @returns {string} The VR.\n   */\n  getVrFromDictionary() {\n    let vr = null;\n    const info = this.getInfoFromDictionary();\n    if (info !== null) {\n      vr = info[0];\n    }\n    return vr;\n  }\n\n  /**\n   * Get the tag name from the dicom dictionary.\n   *\n   * @returns {string} The VR.\n   */\n  getNameFromDictionary() {\n    let name = null;\n    const info = this.getInfoFromDictionary();\n    if (info !== null) {\n      name = info[2];\n    }\n    return name;\n  }\n\n} // Tag class\n\n/**\n * Tag compare function.\n *\n * @param {Tag} a The first tag.\n * @param {Tag} b The second tag.\n * @returns {number} The result of the tag comparison,\n *   positive for b before a, negative for a before b and\n *   zero to keep same order.\n */\nexport function tagCompareFunction(a, b) {\n  // first by group\n  let res = parseInt(a.getGroup()) - parseInt(b.getGroup());\n  if (res === 0) {\n    // by element if same group\n    res = parseInt(a.getElement()) - parseInt(b.getElement());\n  }\n  return res;\n}\n\n/**\n * Split a group-element key used to store DICOM elements.\n *\n * @param {string} key The key in form \"x00280102\" as generated by tag::getKey.\n * @returns {object} The DICOM tag.\n */\nexport function getTagFromKey(key) {\n  return new Tag(\n    '0x' + key.substring(1, 5),\n    '0x' + key.substring(5, 9));\n}\n\n/**\n * Get the TransferSyntaxUID Tag.\n *\n * @returns {object} The tag.\n */\nexport function getTransferSyntaxUIDTag() {\n  return new Tag('0x0002', '0x0010');\n}\n\n/**\n * Get the FileMetaInformationGroupLength Tag.\n *\n * @returns {object} The tag.\n */\nexport function getFileMetaInformationGroupLengthTag() {\n  return new Tag('0x0002', '0x0000');\n}\n\n/**\n * Is the input tag the FileMetaInformationGroupLength Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isFileMetaInformationGroupLengthTag(tag) {\n  return tag.equals(getFileMetaInformationGroupLengthTag());\n}\n\n/**\n * Get the Item Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemTag() {\n  return new Tag('0xFFFE', '0xE000');\n}\n\n/**\n * Is the input tag the Item Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemTag(tag) {\n  return tag.equals(getItemTag());\n}\n\n/**\n * Get the ItemDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemDelimitationItemTag() {\n  return new Tag('0xFFFE', '0xE00D');\n}\n\n/**\n * Is the input tag the ItemDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemDelimitationItemTag(tag) {\n  return tag.equals(getItemDelimitationItemTag());\n}\n\n/**\n * Get the SequenceDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getSequenceDelimitationItemTag() {\n  return new Tag('0xFFFE', '0xE0DD');\n}\n\n/**\n * Is the input tag the SequenceDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isSequenceDelimitationItemTag(tag) {\n  return tag.equals(getSequenceDelimitationItemTag());\n}\n\n/**\n * Get the PixelData Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getPixelDataTag() {\n  return new Tag('0x7FE0', '0x0010');\n}\n\n/**\n * Is the input tag the PixelData Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isPixelDataTag(tag) {\n  return tag.equals(getPixelDataTag());\n}\n\n/**\n * Get a tag from the dictionary using a tag string name.\n *\n * @param {string} tagName The tag string name.\n * @returns {object|null} The tag object or null if not found.\n */\nexport function getTagFromDictionary(tagName) {\n  if (typeof tagName === 'undefined' || tagName === null) {\n    return null;\n  }\n  let group = null;\n  let element = null;\n  const dict = dictionary;\n  const keys0 = Object.keys(dict);\n  let keys1 = null;\n  let foundTag = false;\n  // search through dictionary\n  for (let k0 = 0, lenK0 = keys0.length; k0 < lenK0; ++k0) {\n    group = keys0[k0];\n    keys1 = Object.keys(dict[group]);\n    for (let k1 = 0, lenK1 = keys1.length; k1 < lenK1; ++k1) {\n      element = keys1[k1];\n      if (dict[group][element][2] === tagName) {\n        foundTag = true;\n        break;\n      }\n    }\n    if (foundTag) {\n      break;\n    }\n  }\n  let tag = null;\n  if (foundTag) {\n    tag = new Tag(group, element);\n  }\n  return tag;\n}\n","/**\n * Is the Native endianness Little Endian.\n *\n * @type {boolean}\n */\nexport function isNativeLittleEndian() {\n  return new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n}\n\n/**\n * Flip an array's endianness.\n * Inspired from [DataStream.js]{@link https://github.com/kig/DataStream.js}.\n *\n * @param {object} array The array to flip (modified).\n */\nfunction flipArrayEndianness(array) {\n  const blen = array.byteLength;\n  const u8 = new Uint8Array(array.buffer, array.byteOffset, blen);\n  const bpe = array.BYTES_PER_ELEMENT;\n  let tmp;\n  for (let i = 0; i < blen; i += bpe) {\n    for (let j = i + bpe - 1, k = i; j > k; j--, k++) {\n      tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n}\n\n/**\n * Data reader.\n */\nexport class DataReader {\n\n  /**\n   * The input buffer.\n   *\n   * @private\n   * @type {Array}\n   */\n  #buffer;\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * Is the Native endianness Little Endian.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isNativeLittleEndian = isNativeLittleEndian();\n\n  /**\n   * Flag to know if the TypedArray data needs flipping.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #needFlip;\n\n  /**\n   * The main data view.\n   *\n   * @private\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {Array} buffer The input array buffer.\n   * @param {boolean} isLittleEndian Flag to tell if the data is little\n   *   or big endian.\n   */\n  constructor(buffer, isLittleEndian) {\n    this.#buffer = buffer;\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#needFlip = (this.#isLittleEndian !== this.#isNativeLittleEndian);\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Read Uint16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint16(byteOffset) {\n    return this.#view.getUint16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt16(byteOffset) {\n    return this.#view.getInt16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Uint32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint32(byteOffset) {\n    return this.#view.getUint32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigUint64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readBigUint64(byteOffset) {\n    return this.#view.getBigUint64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt32(byteOffset) {\n    return this.#view.getInt32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigInt64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readBigInt64(byteOffset) {\n    return this.#view.getBigInt64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat32(byteOffset) {\n    return this.#view.getFloat32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat64(byteOffset) {\n    return this.#view.getFloat64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read binary (0/1) array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Array} The read data.\n   */\n  readBinaryArray(byteOffset, size) {\n    // input\n    const bitArray = new Uint8Array(this.#buffer, byteOffset, size);\n    // result\n    const byteArrayLength = 8 * bitArray.length;\n    const data = new Uint8Array(byteArrayLength);\n    let bitNumber = 0;\n    let bitIndex = 0;\n    for (let i = 0; i < byteArrayLength; ++i) {\n      bitNumber = i % 8;\n      bitIndex = Math.floor(i / 8);\n      // see https://stackoverflow.com/questions/4854207/get-a-specific-bit-from-byte/4854257\n      data[i] = 255 * ((bitArray[bitIndex] & (1 << bitNumber)) !== 0);\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Array} The read data.\n   */\n  readUint8Array(byteOffset, size) {\n    return new Uint8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Int8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Array} The read data.\n   */\n  readInt8Array(byteOffset, size) {\n    return new Int8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Array} The read data.\n   */\n  readUint16Array(byteOffset, size) {\n    const bpe = Uint16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Uint16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint16Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint16(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Array} The read data.\n   */\n  readInt16Array(byteOffset, size) {\n    const bpe = Int16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Int16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int16Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt16(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Array} The read data.\n   */\n  readUint32Array(byteOffset, size) {\n    const bpe = Uint32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Uint32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint32Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint32(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Array} The read data.\n   */\n  readUint64Array(byteOffset, size) {\n    const bpe = BigUint64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigUint64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigUint64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigUint64Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigUint64(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Array} The read data.\n   */\n  readInt32Array(byteOffset, size) {\n    const bpe = Int32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Int32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int32Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt32(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Array} The read data.\n   */\n  readInt64Array(byteOffset, size) {\n    const bpe = BigInt64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigInt64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigInt64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigInt64Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigInt64(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Array} The read data.\n   */\n  readFloat32Array(byteOffset, size) {\n    const bpe = Float32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Float32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float32Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat32(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Array} The read data.\n   */\n  readFloat64Array(byteOffset, size) {\n    const bpe = Float64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new Float64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float64Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat64(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read data as an hexadecimal string.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {Array} The read data.\n   */\n  readHex(byteOffset) {\n    // read and convert to hex string\n    const str = this.readUint16(byteOffset).toString(16);\n    // return padded\n    return '0x0000'.substring(0, 6 - str.length) + str.toUpperCase();\n  }\n\n} // class DataReader\n","/**\n * Immutable index.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Index {\n\n  /**\n   * Index values.\n   *\n   * @private\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The index values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create index with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create index with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create index with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number|undefined} The value or undefined if not in range.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input index can be compared to this one.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Index equality.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare indices and return different dimensions.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {Array} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Add another index to this one.\n   *\n   * @param {Index} rhs The index to add.\n   * @returns {Index} The index representing the sum of both indices.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // add values\n    const values = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      values.push(this.get(i) + rhs.get(i));\n    }\n    // seems ok!\n    return new Index(values);\n  }\n\n  /**\n   * Get the current index with a new 2D base.\n   *\n   * @param {number} i The new 0 index.\n   * @param {number} j The new 1 index.\n   * @returns {Index} The new index.\n   */\n  getWithNew2D(i, j) {\n    const values = [i, j];\n    for (let l = 2, lenl = this.length(); l < lenl; ++l) {\n      values.push(this.get(l));\n    }\n    return new Index(values);\n  }\n\n  /**\n   * Get a string id from the index values in the form of: '#0-1_#1-2'.\n   *\n   * @param {Array} dims Optional list of dimensions to use.\n   * @returns {string} The string id.\n   */\n  toStringId(dims) {\n    if (typeof dims === 'undefined') {\n      dims = [];\n      for (let j = 0; j < this.length(); ++j) {\n        dims.push(j);\n      }\n    }\n    for (let ii = 0; ii < dims.length; ++ii) {\n      if (dims[ii] >= this.length()) {\n        throw new Error('Non valid dimension for toStringId.');\n      }\n    }\n    let res = '';\n    for (let i = 0; i < dims.length; ++i) {\n      if (i !== 0) {\n        res += '_';\n      }\n      res += '#' + dims[i] + '-' + this.get(dims[i]);\n    }\n    return res;\n  }\n\n} // Index class\n\n/**\n * Get an index with values set to 0 and the input size.\n *\n * @param {number} size The size of the index.\n * @returns {Index} The zero index.\n */\nexport function getZeroIndex(size) {\n  const values = new Array(size);\n  values.fill(0);\n  return new Index(values);\n}\n\n/**\n * Get an array sort callback.\n * f(a,b) > 0 -> b,a\n * f(a,b) < 0 -> a,b\n * f(a,b) = 0 -> original order\n *\n * @param {number} direction The direction to use to compare indices.\n * @returns {Function} A function that compares two Index.\n */\nexport function getIndexCompareFunction(direction) {\n  return function (a, b) {\n    return a.get(direction) - b.get(direction);\n  };\n}\n\n/**\n * Get an index from an id string in the form of: '#0-1_#1-2'\n * (result of index.toStringId).\n *\n * @param {string} inputStr The input string.\n * @returns {Index} The corresponding index.\n */\nexport function getIndexFromStringId(inputStr) {\n  // split ids\n  const strIds = inputStr.split('_');\n  // get the size of the index\n  let pointLength = 0;\n  let dim;\n  for (let i = 0; i < strIds.length; ++i) {\n    dim = parseInt(strIds[i].substring(1, 2), 10);\n    if (dim > pointLength) {\n      pointLength = dim;\n    }\n  }\n  if (pointLength === 0) {\n    throw new Error('No dimension found in point stringId');\n  }\n  // default values\n  const values = new Array(pointLength);\n  values.fill(0);\n  // get other values from the input string\n  for (let j = 0; j < strIds.length; ++j) {\n    dim = parseInt(strIds[j].substring(1, 3), 10);\n    const value = parseInt(strIds[j].substring(3), 10);\n    values[dim] = value;\n  }\n  return new Index(values);\n}\n","import {Index} from '../math/index';\n\n/**\n * Immutable Size class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Size {\n\n  /**\n   * The size values.\n   *\n   * @private\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The size values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create size with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create size with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create size with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the size value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the size.\n   *\n   * @returns {string} The Size as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if a dimension exists and has more than one element.\n   *\n   * @param {number} dimension The dimension to check.\n   * @returns {boolean} True if the size is more than one.\n   */\n  moreThanOne(dimension) {\n    return this.length() >= dimension + 1 && this.get(dimension) !== 1;\n  }\n\n  /**\n   * Check if the associated data is scrollable in 3D.\n   *\n   * @param {Matrix33} viewOrientation The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll3D(viewOrientation) {\n    let dimension = 2;\n    if (typeof viewOrientation !== 'undefined') {\n      dimension = viewOrientation.getThirdColMajorDirection();\n    }\n    return this.moreThanOne(dimension);\n  }\n\n  /**\n   * Check if the associated data is scrollable: either in 3D or\n   * in other directions.\n   *\n   * @param {Matrix33} viewOrientation The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll(viewOrientation) {\n    let canScroll = this.canScroll3D(viewOrientation);\n    // check possible other dimensions\n    for (let i = 3; i < this.length(); ++i) {\n      canScroll = canScroll || this.moreThanOne(i);\n    }\n    return canScroll;\n  }\n\n  /**\n   * Get the size of a given dimension.\n   *\n   * @param {number} dimension The dimension.\n   * @param {number} start Optional start dimension to start counting from.\n   * @returns {number} The size.\n   */\n  getDimSize(dimension, start) {\n    if (dimension > this.length()) {\n      return null;\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > dimension) {\n        throw new Error('Invalid start value for getDimSize');\n      }\n    }\n    let size = 1;\n    for (let i = start; i < dimension; ++i) {\n      size *= this.get(i);\n    }\n    return size;\n  }\n\n  /**\n   * Get the total size.\n   *\n   * @param {number} start Optional start dimension to base the offset on.\n   * @returns {number} The total size.\n   */\n  getTotalSize(start) {\n    return this.getDimSize(this.length(), start);\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Size} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check that an index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {Array} dirs Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(index, dirs) {\n    // check input\n    if (!index) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== index.length()) {\n      return false;\n    }\n    // create dirs if not there\n    if (typeof dirs === 'undefined') {\n      dirs = [];\n      for (let j = 0; j < length; ++j) {\n        dirs.push(j);\n      }\n    } else {\n      for (let k = 0; k < length; ++k) {\n        if (dirs[k] > length - 1) {\n          throw new Error('Wrong input dir value: ' + dirs[k]);\n        }\n      }\n    }\n    // check values is 0 <= v < size\n    const inBound = function (value, size) {\n      return value >= 0 && value < size;\n    };\n    // check\n    for (let i = 0; i < dirs.length; ++i) {\n      if (!inBound(index.get(dirs[i]), this.get(dirs[i]))) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Convert an index to an offset in memory.\n   *\n   * @param {Index} index The index to convert.\n   * @param {number} start Optional start dimension to base the offset on.\n   * @returns {number} The offset.\n   */\n  indexToOffset(index, start) {\n    // TODO check for equality\n    if (index.length() < this.length()) {\n      throw new Error('Incompatible index and size length');\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > this.length() - 1) {\n        throw new Error('Invalid start value for indexToOffset');\n      }\n    }\n    let offset = 0;\n    for (let i = start; i < this.length(); ++i) {\n      offset += index.get(i) * this.getDimSize(i, start);\n    }\n    return offset;\n  }\n\n  /**\n   * Convert an offset in memory to an index.\n   *\n   * @param {number} offset The offset to convert.\n   * @returns {Index} The index.\n   */\n  offsetToIndex(offset) {\n    const values = new Array(this.length());\n    let off = offset;\n    let dimSize = 0;\n    for (let i = this.length() - 1; i > 0; --i) {\n      dimSize = this.getDimSize(i);\n      values[i] = Math.floor(off / dimSize);\n      off = off - values[i] * dimSize;\n    }\n    values[0] = off;\n    return new Index(values);\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {object} The 2D base [0,1] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Size class\n","/**\n * Immutable Spacing class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Spacing {\n\n  /**\n   * The spacing values.\n   *\n   * @private\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The spacing values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create spacing with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create spacing with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create spacing with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the spacing value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the spacing.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the spacing.\n   *\n   * @returns {string} The spacing as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this spacing.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Spacing} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {object} The 2D base [col,row] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Spacing class\n","export const logger = {\n  /**\n   * Available log levels.\n   * Note: need to activate verbose level in\n   *   Chrome console to see DEBUG messages.\n   */\n  levels: {\n    TRACE: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4\n  },\n\n  /**\n   * Logger level: default to WARN.\n   */\n  level: 3,\n\n  /**\n   * Log a trace message.\n   *\n   * @param {string} msg The message to log.\n   */\n  trace: function (msg) {\n    if (this.level <= this.levels.TRACE) {\n      console.trace(msg);\n    }\n  },\n\n  /**\n   * Log a debug message.\n   * Careful: depends on console settings.\n   *\n   * @param {string} msg The message to log.\n   */\n  debug: function (msg) {\n    if (this.level <= this.levels.DEBUG) {\n      console.debug(msg);\n    }\n  },\n\n  /**\n   * Log an info message.\n   *\n   * @param {string} msg The message to log.\n   */\n  info: function (msg) {\n    if (this.level <= this.levels.INFO) {\n      console.info(msg);\n    }\n  },\n\n  /**\n   * Log a warn message.\n   *\n   * @param {string} msg The message to log.\n   */\n  warn: function (msg) {\n    if (this.level <= this.levels.WARN) {\n      console.warn(msg);\n    }\n  },\n\n  /**\n   * Log an error message.\n   *\n   * @param {string} msg The message to log.\n   */\n  error: function (msg) {\n    if (this.level <= this.levels.ERROR) {\n      console.error(msg);\n    }\n  }\n\n}; // logger\n","import {\n  DicomParser,\n  cleanString,\n  getTransferSyntaxName\n} from './dicomParser';\nimport {\n  Tag,\n  isPixelDataTag,\n  isItemDelimitationItemTag,\n  isSequenceDelimitationItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getTagFromDictionary\n} from './dicomTag';\nimport {isNativeLittleEndian} from './dataReader';\nimport {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {logger} from '../utils/logger';\n\n/**\n * DicomElements wrapper.\n */\nexport class DicomElementsWrapper {\n\n  /**\n   * Wrapped elements.\n   *\n   * @private\n   * @type {Array}\n   */\n  #dicomElements;\n\n  /**\n   * @param {Array} dicomElements The elements to wrap.\n   */\n  constructor(dicomElements) {\n    this.#dicomElements = dicomElements;\n  }\n\n  /**\n   * Get a DICOM Element value from a group/element key.\n   *\n   * @param {string} groupElementKey The key to retrieve.\n   * @returns {object} The DICOM element.\n   */\n  getDEFromKey(groupElementKey) {\n    return this.#dicomElements[groupElementKey];\n  }\n\n  /**\n   * Get a DICOM Element value from a group/element key.\n   *\n   * @param {string} groupElementKey The key to retrieve.\n   * @param {boolean} asArray Get the value as an Array.\n   * @returns {object} The DICOM element value.\n   */\n  getFromKey(groupElementKey, asArray) {\n    // default\n    if (typeof asArray === 'undefined') {\n      asArray = false;\n    }\n    let value = null;\n    const dElement = this.#dicomElements[groupElementKey];\n    if (typeof dElement !== 'undefined') {\n      // raw value if only one\n      if (dElement.value.length === 1 && asArray === false) {\n        value = dElement.value[0];\n      } else {\n        value = dElement.value;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Dump the DICOM tags to an object.\n   *\n   * @returns {object} The DICOM tags as an object.\n   */\n  dumpToObject() {\n    const keys = Object.keys(this.#dicomElements);\n    const obj = {};\n    let dicomElement = null;\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      dicomElement = this.#dicomElements[keys[i]];\n      obj[this.getTagName(dicomElement.tag)] =\n        this.getElementAsObject(dicomElement);\n    }\n    return obj;\n  }\n\n  /**\n   * Get a tag string name from the dictionary.\n   *\n   * @param {object} tag The DICOM tag object.\n   * @returns {string} The tag name.\n   */\n  getTagName(tag) {\n    let name = tag.getNameFromDictionary();\n    if (name === null) {\n      name = tag.getKey2();\n    }\n    return name;\n  }\n\n  /**\n   * Get a DICOM element as a simple object.\n   *\n   * @param {object} dicomElement The DICOM element.\n   * @returns {object} The element as a simple object.\n   */\n  getElementAsObject(dicomElement) {\n    // element value\n    let value = null;\n\n    const isPixel = isPixelDataTag(dicomElement.tag);\n\n    const vr = dicomElement.vr;\n    if (vr === 'SQ' &&\n      typeof dicomElement.value !== 'undefined' &&\n      !isPixel) {\n      value = [];\n      const items = dicomElement.value;\n      let itemValues = null;\n      for (let i = 0; i < items.length; ++i) {\n        itemValues = {};\n        const keys = Object.keys(items[i]);\n        for (let k = 0; k < keys.length; ++k) {\n          const itemElement = items[i][keys[k]];\n          const key = this.getTagName(itemElement.tag);\n          // do not inclure Item elements\n          if (key !== 'Item') {\n            itemValues[key] = this.getElementAsObject(itemElement);\n          }\n        }\n        value.push(itemValues);\n      }\n    } else {\n      value = this.getElementValueAsString(dicomElement);\n    }\n\n    // return\n    return {\n      value: value,\n      group: dicomElement.tag.getGroup(),\n      element: dicomElement.tag.getElement(),\n      vr: vr,\n      vl: dicomElement.vl\n    };\n  }\n\n  /**\n   * Dump the DICOM tags to a string.\n   *\n   * @returns {string} The dumped file.\n   */\n  dump() {\n    const keys = Object.keys(this.#dicomElements);\n    let result = '\\n';\n    result += '# Dicom-File-Format\\n';\n    result += '\\n';\n    result += '# Dicom-Meta-Information-Header\\n';\n    result += '# Used TransferSyntax: ';\n    if (isNativeLittleEndian()) {\n      result += 'Little Endian Explicit\\n';\n    } else {\n      result += 'NOT Little Endian Explicit\\n';\n    }\n    let dicomElement = null;\n    let checkHeader = true;\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      dicomElement = this.#dicomElements[keys[i]];\n      if (checkHeader && dicomElement.tag.getGroup() !== '0x0002') {\n        result += '\\n';\n        result += '# Dicom-Data-Set\\n';\n        result += '# Used TransferSyntax: ';\n        const syntax = cleanString(\n          this.#dicomElements.x00020010.value[0]);\n        result += getTransferSyntaxName(syntax);\n        result += '\\n';\n        checkHeader = false;\n      }\n      result += this.getElementAsString(dicomElement) + '\\n';\n    }\n    return result;\n  }\n\n  /**\n   * Get a data element value as a string.\n   *\n   * @param {object} dicomElement The DICOM element.\n   * @param {boolean} pretty When set to true, returns a 'pretified' content.\n   * @returns {string} A string representation of the DICOM element.\n   */\n  getElementValueAsString(\n    dicomElement, pretty) {\n    let str = '';\n    const strLenLimit = 65;\n\n    // dafault to pretty output\n    if (typeof pretty === 'undefined') {\n      pretty = true;\n    }\n    // check dicom element input\n    if (typeof dicomElement === 'undefined' || dicomElement === null) {\n      return str;\n    }\n\n    // Polyfill for Number.isInteger.\n    const isInteger = Number.isInteger || function (value) {\n      return typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value;\n    };\n\n    // TODO Support sequences.\n\n    if (dicomElement.vr !== 'SQ' &&\n      dicomElement.value.length === 1 && dicomElement.value[0] === '') {\n      str += '(no value available)';\n    } else if (isPixelDataTag(dicomElement.tag) &&\n      dicomElement.undefinedLength) {\n      str = '(PixelSequence)';\n    } else if (dicomElement.vr === 'DA' && pretty) {\n      const daValue = dicomElement.value[0];\n      // Two possible date formats:\n      // - standard 'YYYYMMDD'\n      // - non-standard 'YYYY.MM.DD' (previous ACR-NEMA)\n      let monthBeginIndex = 4;\n      let dayBeginIndex = 6;\n      if (daValue.length !== 8) {\n        monthBeginIndex = 5;\n        dayBeginIndex = 8;\n      }\n      const da = new Date(\n        parseInt(daValue.substring(0, 4), 10),\n        parseInt(daValue.substring(\n          monthBeginIndex, monthBeginIndex + 2), 10) - 1, // 0-11 range\n        parseInt(daValue.substring(\n          dayBeginIndex, dayBeginIndex + 2), 10));\n      str = da.toLocaleDateString();\n    } else if (dicomElement.vr === 'TM' && pretty) {\n      const tmValue = dicomElement.value[0];\n      const tmHour = tmValue.substring(0, 2);\n      const tmMinute = tmValue.length >= 4 ? tmValue.substring(2, 4) : '00';\n      const tmSeconds = tmValue.length >= 6 ? tmValue.substring(4, 6) : '00';\n      str = tmHour + ':' + tmMinute + ':' + tmSeconds;\n    } else {\n      let isOtherVR = false;\n      if (dicomElement.vr.length !== 0) {\n        isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n      }\n      const isFloatNumberVR = (dicomElement.vr === 'FL' ||\n        dicomElement.vr === 'FD' ||\n        dicomElement.vr === 'DS');\n      let valueStr = '';\n      for (let k = 0, lenk = dicomElement.value.length; k < lenk; ++k) {\n        valueStr = '';\n        if (k !== 0) {\n          valueStr += '\\\\';\n        }\n        if (isFloatNumberVR) {\n          let val = dicomElement.value[k];\n          if (typeof val === 'string') {\n            val = cleanString(val);\n          }\n          const num = Number(val);\n          if (!isInteger(num) && pretty) {\n            valueStr += num.toPrecision(4);\n          } else {\n            valueStr += num.toString();\n          }\n        } else if (isOtherVR) {\n          let tmp = dicomElement.value[k].toString(16);\n          if (dicomElement.vr === 'OB') {\n            tmp = '00'.substring(0, 2 - tmp.length) + tmp;\n          } else {\n            tmp = '0000'.substring(0, 4 - tmp.length) + tmp;\n          }\n          valueStr += tmp;\n        } else if (typeof dicomElement.value[k] === 'string') {\n          valueStr += cleanString(dicomElement.value[k]);\n        } else {\n          valueStr += dicomElement.value[k];\n        }\n        // check length\n        if (str.length + valueStr.length <= strLenLimit) {\n          str += valueStr;\n        } else {\n          str += '...';\n          break;\n        }\n      }\n    }\n    return str;\n  }\n\n  /**\n   * Get a data element value as a string.\n   *\n   * @param {string} groupElementKey The key to retrieve.\n   * @returns {string} The element as a string.\n   */\n  getElementValueAsStringFromKey(groupElementKey) {\n    return this.getElementValueAsString(this.getDEFromKey(groupElementKey));\n  }\n\n  /**\n   * Get a data element as a string.\n   *\n   * @param {object} dicomElement The DICOM element.\n   * @param {string} prefix A string to prepend this one.\n   * @returns {string} The element as a string.\n   */\n  getElementAsString(dicomElement, prefix) {\n    // default prefix\n    prefix = prefix || '';\n\n    // get tag anme from dictionary\n    const tag = dicomElement.tag;\n    const tagName = tag.getNameFromDictionary();\n\n    let deSize = dicomElement.value.length;\n    let isOtherVR = false;\n    if (dicomElement.vr.length !== 0) {\n      isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n    }\n\n    // no size for delimitations\n    if (isItemDelimitationItemTag(dicomElement.tag) ||\n      isSequenceDelimitationItemTag(dicomElement.tag)) {\n      deSize = 0;\n    } else if (isOtherVR) {\n      deSize = 1;\n    }\n\n    const isPixSequence = (isPixelDataTag(dicomElement.tag) &&\n      dicomElement.undefinedLength);\n\n    let line = null;\n\n    // (group,element)\n    line = '(';\n    line += dicomElement.tag.getGroup().substring(2).toLowerCase();\n    line += ',';\n    line += dicomElement.tag.getElement().substring(2).toLowerCase();\n    line += ') ';\n    // value representation\n    line += dicomElement.vr;\n    // value\n    if (dicomElement.vr !== 'SQ' &&\n      dicomElement.value.length === 1 &&\n      dicomElement.value[0] === '') {\n      line += ' (no value available)';\n      deSize = 0;\n    } else {\n      // simple number display\n      if (dicomElement.vr === 'na') {\n        line += ' ';\n        line += dicomElement.value[0];\n      } else if (isPixSequence) {\n        // pixel sequence\n        line += ' (PixelSequence #=' + deSize + ')';\n      } else if (dicomElement.vr === 'SQ') {\n        line += ' (Sequence with';\n        if (dicomElement.undefinedLength) {\n          line += ' undefined';\n        } else {\n          line += ' explicit';\n        }\n        line += ' length #=';\n        line += dicomElement.value.length;\n        line += ')';\n      } else if (isOtherVR ||\n          dicomElement.vr === 'pi' ||\n          dicomElement.vr === 'UL' ||\n          dicomElement.vr === 'US' ||\n          dicomElement.vr === 'SL' ||\n          dicomElement.vr === 'SS' ||\n          dicomElement.vr === 'FL' ||\n          dicomElement.vr === 'FD' ||\n          dicomElement.vr === 'AT') {\n        // 'O'ther array, limited display length\n        line += ' ';\n        line += this.getElementValueAsString(dicomElement, false);\n      } else {\n        // default\n        line += ' [';\n        line += this.getElementValueAsString(dicomElement, false);\n        line += ']';\n      }\n    }\n\n    // align #\n    const nSpaces = 55 - line.length;\n    if (nSpaces > 0) {\n      for (let s = 0; s < nSpaces; ++s) {\n        line += ' ';\n      }\n    }\n    line += ' # ';\n    if (dicomElement.vl < 100) {\n      line += ' ';\n    }\n    if (dicomElement.vl < 10) {\n      line += ' ';\n    }\n    line += dicomElement.vl;\n    line += ', ';\n    line += deSize; //dictElement[1];\n    line += ' ';\n    if (tagName !== null) {\n      line += tagName;\n    } else {\n      line += 'Unknown Tag & Data';\n    }\n\n    let message = null;\n\n    // continue for sequence\n    if (dicomElement.vr === 'SQ') {\n      let item = null;\n      for (let l = 0, lenl = dicomElement.value.length; l < lenl; ++l) {\n        item = dicomElement.value[l];\n        const itemKeys = Object.keys(item);\n        if (itemKeys.length === 0) {\n          continue;\n        }\n\n        // get the item element\n        const itemElement = item.xFFFEE000;\n        message = '(Item with';\n        if (itemElement.undefinedLength) {\n          message += ' undefined';\n        } else {\n          message += ' explicit';\n        }\n        message += ' length #=' + (itemKeys.length - 1) + ')';\n        itemElement.value = [message];\n        itemElement.vr = 'na';\n\n        line += '\\n';\n        line += this.getElementAsString(itemElement, prefix + '  ');\n\n        for (let m = 0, lenm = itemKeys.length; m < lenm; ++m) {\n          if (itemKeys[m] !== 'xFFFEE000') {\n            line += '\\n';\n            line += this.getElementAsString(item[itemKeys[m]], prefix + '    ');\n          }\n        }\n\n        message = '(ItemDelimitationItem';\n        if (!itemElement.undefinedLength) {\n          message += ' for re-encoding';\n        }\n        message += ')';\n        const itemDelimElement = {\n          tag: getItemDelimitationItemTag(),\n          vr: 'na',\n          vl: '0',\n          value: [message]\n        };\n        line += '\\n';\n        line += this.getElementAsString(itemDelimElement, prefix + '  ');\n\n      }\n\n      message = '(SequenceDelimitationItem';\n      if (!dicomElement.undefinedLength) {\n        message += ' for re-encod.';\n      }\n      message += ')';\n      const sqDelimElement = {\n        tag: getSequenceDelimitationItemTag(),\n        vr: 'na',\n        vl: '0',\n        value: [message]\n      };\n      line += '\\n';\n      line += this.getElementAsString(sqDelimElement, prefix);\n    } else if (isPixSequence) {\n      // pixel sequence\n      let pixItem = null;\n      for (let n = 0, lenn = dicomElement.value.length; n < lenn; ++n) {\n        pixItem = dicomElement.value[n];\n        line += '\\n';\n        pixItem.vr = 'pi';\n        line += this.getElementAsString(pixItem, prefix + '  ');\n      }\n\n      const pixDelimElement = {\n        tag: getSequenceDelimitationItemTag(),\n        vr: 'na',\n        vl: '0',\n        value: ['(SequenceDelimitationItem)']\n      };\n      line += '\\n';\n      line += this.getElementAsString(pixDelimElement, prefix);\n    }\n\n    return prefix + line;\n  }\n\n  /**\n   * Get a DICOM Element value from a group and an element.\n   *\n   * @param {number} group The group.\n   * @param {number} element The element.\n   * @returns {object} The DICOM element value.\n   */\n  getFromGroupElement(group, element) {\n    return this.getFromKey(new Tag(group, element).getKey());\n  }\n\n  /**\n   * Get a DICOM Element value from a tag name.\n   * Uses the DICOM dictionary.\n   *\n   * @param {string} name The tag name.\n   * @returns {object} The DICOM element value.\n   */\n  getFromName(name) {\n    let value = null;\n    const tag = getTagFromDictionary(name);\n    // check that we are not at the end of the dictionary\n    if (tag !== null) {\n      value = this.getFromKey(tag.getKey());\n    }\n    return value;\n  }\n\n  /**\n   * Extract a size from dicom elements.\n   *\n   * @returns {object} The size.\n   */\n  getImageSize() {\n    // rows\n    const rows = this.getFromKey('x00280010');\n    if (!rows) {\n      throw new Error('Missing or empty DICOM image number of rows');\n    }\n    // columns\n    const columns = this.getFromKey('x00280011');\n    if (!columns) {\n      throw new Error('Missing or empty DICOM image number of columns');\n    }\n    return new Size([columns, rows, 1]);\n  }\n\n  /**\n   * Get the pixel spacing from the different spacing tags.\n   *\n   * @returns {object} The read spacing or the default [1,1].\n   */\n  getPixelSpacing() {\n    // default\n    let rowSpacing = 1;\n    let columnSpacing = 1;\n\n    // 1. PixelSpacing\n    // 2. ImagerPixelSpacing\n    // 3. NominalScannedPixelSpacing\n    // 4. PixelAspectRatio\n    const keys = ['x00280030', 'x00181164', 'x00182010', 'x00280034'];\n    for (let k = 0; k < keys.length; ++k) {\n      const spacing = this.getFromKey(keys[k], true);\n      if (spacing && spacing.length === 2) {\n        rowSpacing = parseFloat(spacing[0]);\n        columnSpacing = parseFloat(spacing[1]);\n        break;\n      }\n    }\n\n    // check\n    if (columnSpacing === 0) {\n      logger.warn('Zero column spacing.');\n      columnSpacing = 1;\n    }\n    if (rowSpacing === 0) {\n      logger.warn('Zero row spacing.');\n      rowSpacing = 1;\n    }\n\n    // return\n    // (slice spacing will be calculated using the image position patient)\n    return new Spacing([columnSpacing, rowSpacing, 1]);\n  }\n\n  /**\n   * Get the time.\n   *\n   * @returns {number|undefined} The time value if available.\n   */\n  getTime() {\n    // default returns undefined\n    return undefined;\n  }\n\n  /**\n   * Get the pixel data unit.\n   *\n   * @returns {string|null} The unit value if available.\n   */\n  getPixelUnit() {\n    // RescaleType\n    let unit = this.getFromKey('x00281054');\n    if (!unit) {\n      // Units (for PET)\n      unit = this.getFromKey('x00541001');\n    }\n    // default rescale type for CT\n    if (!unit) {\n      const modality = this.getFromKey('x00080060');\n      if (modality === 'CT') {\n        unit = 'HU';\n      }\n    }\n    return unit;\n  }\n\n} // class DicomElementsWrapper\n\n/**\n * Get the file list from a DICOMDIR\n *\n * @param {object} data The buffer data of the DICOMDIR\n * @returns {Array|undefined} The file list as an array ordered by\n *   STUDY > SERIES > IMAGES.\n */\nexport function getFileListFromDicomDir(data) {\n  // parse file\n  const parser = new DicomParser();\n  parser.parse(data);\n  const elements = parser.getRawDicomElements();\n\n  // Directory Record Sequence\n  if (typeof elements.x00041220 === 'undefined' ||\n    typeof elements.x00041220.value === 'undefined') {\n    logger.warn('No Directory Record Sequence found in DICOMDIR.');\n    return undefined;\n  }\n  const dirSeq = elements.x00041220.value;\n\n  if (dirSeq.length === 0) {\n    logger.warn('The Directory Record Sequence of the DICOMDIR is empty.');\n    return undefined;\n  }\n\n  const records = [];\n  let series = null;\n  let study = null;\n  for (let i = 0; i < dirSeq.length; ++i) {\n    // Directory Record Type\n    if (typeof dirSeq[i].x00041430 === 'undefined' ||\n      typeof dirSeq[i].x00041430.value === 'undefined') {\n      continue;\n    }\n    const recType = cleanString(dirSeq[i].x00041430.value[0]);\n\n    // supposed to come in order...\n    if (recType === 'STUDY') {\n      study = [];\n      records.push(study);\n    } else if (recType === 'SERIES') {\n      series = [];\n      study.push(series);\n    } else if (recType === 'IMAGE') {\n      // Referenced File ID\n      if (typeof dirSeq[i].x00041500 === 'undefined' ||\n        typeof dirSeq[i].x00041500.value === 'undefined') {\n        continue;\n      }\n      const refFileIds = dirSeq[i].x00041500.value;\n      // clean and join ids\n      let refFileId = '';\n      for (let j = 0; j < refFileIds.length; ++j) {\n        if (j !== 0) {\n          refFileId += '/';\n        }\n        refFileId += cleanString(refFileIds[j]);\n      }\n      series.push(refFileId);\n    }\n  }\n  return records;\n}\n","import {\n  Tag,\n  isSequenceDelimitationItemTag,\n  isItemDelimitationItemTag,\n  isPixelDataTag\n} from './dicomTag';\nimport {\n  vr32bitVL,\n  vrTypes,\n  charSetString\n} from './dictionary';\nimport {DataReader} from './dataReader';\nimport {DicomElementsWrapper} from './dicomElementsWrapper';\nimport {logger} from '../utils/logger';\nimport {arrayEquals} from '../utils/array';\n\n/**\n * Get the version of the library.\n *\n * @returns {string} The version of the library.\n */\nexport function getDwvVersion() {\n  return '0.32.0-beta.0';\n}\n\n/**\n * Check that an input buffer includes the DICOM prefix 'DICM'\n * after the 128 bytes preamble.\n * Ref: [DICOM File Meta]{@link https://dicom.nema.org/dicom/2013/output/chtml/part10/chapter_7.html#sect_7.1}\n *\n * @param {ArrayBuffer} buffer The buffer to check.\n * @returns {boolean} True if the buffer includes the prefix.\n */\nexport function hasDicomPrefix(buffer) {\n  const prefixArray = new Uint8Array(buffer, 128, 4);\n  const stringReducer = function (previous, current) {\n    return previous += String.fromCharCode(current);\n  };\n  return prefixArray.reduce(stringReducer, '') === 'DICM';\n}\n\n/**\n * Clean string: trim and remove ending.\n *\n * @param {string} inputStr The string to clean.\n * @returns {string} The cleaned string.\n */\nexport function cleanString(inputStr) {\n  let res = inputStr;\n  if (inputStr) {\n    // trim spaces\n    res = inputStr.trim();\n    // get rid of ending zero-width space (u200B)\n    if (res[res.length - 1] === String.fromCharCode('u200B')) {\n      res = res.substring(0, res.length - 1);\n    }\n  }\n  return res;\n}\n\n/**\n * Get the utfLabel (used by the TextDecoder) from a character set term\n * References:\n * - DICOM [Value Encoding]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_6.html}\n * - DICOM [Specific Character Set]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.12.html#sect_C.12.1.1.2}\n * - [TextDecoder#Parameters]{@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/TextDecoder#Parameters}\n *\n * @param {string} charSetTerm The DICOM character set.\n * @returns {string} The corresponding UTF label.\n */\nfunction getUtfLabel(charSetTerm) {\n  let label = 'utf-8';\n  if (charSetTerm === 'ISO_IR 100') {\n    label = 'iso-8859-1';\n  } else if (charSetTerm === 'ISO_IR 101') {\n    label = 'iso-8859-2';\n  } else if (charSetTerm === 'ISO_IR 109') {\n    label = 'iso-8859-3';\n  } else if (charSetTerm === 'ISO_IR 110') {\n    label = 'iso-8859-4';\n  } else if (charSetTerm === 'ISO_IR 144') {\n    label = 'iso-8859-5';\n  } else if (charSetTerm === 'ISO_IR 127') {\n    label = 'iso-8859-6';\n  } else if (charSetTerm === 'ISO_IR 126') {\n    label = 'iso-8859-7';\n  } else if (charSetTerm === 'ISO_IR 138') {\n    label = 'iso-8859-8';\n  } else if (charSetTerm === 'ISO_IR 148') {\n    label = 'iso-8859-9';\n  } else if (charSetTerm === 'ISO_IR 13') {\n    label = 'shift-jis';\n  } else if (charSetTerm === 'ISO_IR 166') {\n    label = 'iso-8859-11';\n  } else if (charSetTerm === 'ISO 2022 IR 87') {\n    label = 'iso-2022-jp';\n  } else if (charSetTerm === 'ISO 2022 IR 149') {\n    // not supported by TextDecoder when it says it should...\n    //label = \"iso-2022-kr\";\n  } else if (charSetTerm === 'ISO 2022 IR 58') {\n    // not supported by TextDecoder...\n    //label = \"iso-2022-cn\";\n  } else if (charSetTerm === 'ISO_IR 192') {\n    label = 'utf-8';\n  } else if (charSetTerm === 'GB18030') {\n    label = 'gb18030';\n  } else if (charSetTerm === 'GB2312') {\n    label = 'gb2312';\n  } else if (charSetTerm === 'GBK') {\n    label = 'chinese';\n  }\n  return label;\n}\n\n/**\n * Default text decoder\n */\nclass DefaultTextDecoder {\n  /**\n   * Decode an input string buffer.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decode(buffer) {\n    let result = '';\n    for (let i = 0, leni = buffer.length; i < leni; ++i) {\n      result += String.fromCharCode(buffer[i]);\n    }\n    return result;\n  }\n}\n\n/**\n * Get patient orientation label in the reverse direction.\n *\n * @param {string} ori Patient Orientation value.\n * @returns {string} Reverse Orientation Label.\n */\nexport function getReverseOrientation(ori) {\n  if (!ori) {\n    return null;\n  }\n  // reverse labels\n  const rlabels = {\n    L: 'R',\n    R: 'L',\n    A: 'P',\n    P: 'A',\n    H: 'F',\n    F: 'H'\n  };\n\n  let rori = '';\n  for (let n = 0; n < ori.length; n++) {\n    const o = ori.substring(n, n + 1);\n    const r = rlabels[o];\n    if (r) {\n      rori += r;\n    }\n  }\n  // return\n  return rori;\n}\n\n/**\n * Get the name of an image orientation patient.\n *\n * @param {Array} orientation The image orientation patient.\n * @returns {string} The orientation name: axial, coronal or sagittal.\n */\nexport function getOrientationName(orientation) {\n  const axialOrientation = [1, 0, 0, 0, 1, 0];\n  const coronalOrientation = [1, 0, 0, 0, 0, -1];\n  const sagittalOrientation = [0, 1, 0, 0, 0, -1];\n  let name;\n  if (arrayEquals(orientation, axialOrientation)) {\n    name = 'axial';\n  } else if (arrayEquals(orientation, coronalOrientation)) {\n    name = 'coronal';\n  } else if (arrayEquals(orientation, sagittalOrientation)) {\n    name = 'sagittal';\n  }\n  return name;\n}\n\n/**\n * Tell if a given syntax is an implicit one (element with no VR).\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if an implicit syntax.\n */\nexport function isImplicitTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2';\n}\n\n/**\n * Tell if a given syntax is a big endian syntax.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a big endian syntax.\n */\nexport function isBigEndianTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.2';\n}\n\n/**\n * Tell if a given syntax is a JPEG baseline one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg baseline syntax.\n */\nexport function isJpegBaselineTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.4.50' ||\n    syntax === '1.2.840.10008.1.2.4.51';\n}\n\n/**\n * Tell if a given syntax is a retired JPEG one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a retired jpeg syntax.\n */\nfunction isJpegRetiredTransferSyntax(syntax) {\n  return (syntax.match(/1.2.840.10008.1.2.4.5/) !== null &&\n    !isJpegBaselineTransferSyntax() &&\n    !isJpegLosslessTransferSyntax()) ||\n    syntax.match(/1.2.840.10008.1.2.4.6/) !== null;\n}\n\n/**\n * Tell if a given syntax is a JPEG Lossless one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg lossless syntax.\n */\nexport function isJpegLosslessTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.4.57' ||\n    syntax === '1.2.840.10008.1.2.4.70';\n}\n\n/**\n * Tell if a given syntax is a JPEG-LS one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg-ls syntax.\n */\nfunction isJpeglsTransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.8/) !== null;\n}\n\n/**\n * Tell if a given syntax is a JPEG 2000 one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg 2000 syntax.\n */\nexport function isJpeg2000TransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.9/) !== null;\n}\n\n/**\n * Tell if a given syntax is a RLE (Run-length encoding) one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a RLE syntax.\n */\nfunction isRleTransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.5/) !== null;\n}\n\n/**\n * Tell if a given syntax needs decompression.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {string} The name of the decompression algorithm.\n */\nexport function getSyntaxDecompressionName(syntax) {\n  let algo = null;\n  if (isJpeg2000TransferSyntax(syntax)) {\n    algo = 'jpeg2000';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    algo = 'jpeg-baseline';\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    algo = 'jpeg-lossless';\n  } else if (isRleTransferSyntax(syntax)) {\n    algo = 'rle';\n  }\n  return algo;\n}\n\n/**\n * Tell if a given syntax is supported for reading.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a supported syntax.\n */\nfunction isReadSupportedTransferSyntax(syntax) {\n\n  // Unsupported:\n  // \"1.2.840.10008.1.2.1.99\": Deflated Explicit VR - Little Endian\n  // \"1.2.840.10008.1.2.4.100\": MPEG2 Image Compression\n  // isJpegRetiredTransferSyntax(syntax): non supported JPEG\n  // isJpeglsTransferSyntax(syntax): JPEG-LS\n\n  return (syntax === '1.2.840.10008.1.2' || // Implicit VR - Little Endian\n    syntax === '1.2.840.10008.1.2.1' || // Explicit VR - Little Endian\n    syntax === '1.2.840.10008.1.2.2' || // Explicit VR - Big Endian\n    isJpegBaselineTransferSyntax(syntax) || // JPEG baseline\n    isJpegLosslessTransferSyntax(syntax) || // JPEG Lossless\n    isJpeg2000TransferSyntax(syntax) || // JPEG 2000\n    isRleTransferSyntax(syntax)); // RLE\n}\n\n/**\n * Get the transfer syntax name.\n * Reference: [UID Values]{@link http://dicom.nema.org/dicom/2013/output/chtml/part06/chapter_A.html}.\n *\n * @param {string} syntax The transfer syntax.\n * @returns {string} The name of the transfer syntax.\n */\nexport function getTransferSyntaxName(syntax) {\n  let name = 'Unknown';\n  if (syntax === '1.2.840.10008.1.2') {\n    // Implicit VR - Little Endian\n    name = 'Little Endian Implicit';\n  } else if (syntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR - Little Endian\n    name = 'Little Endian Explicit';\n  } else if (syntax === '1.2.840.10008.1.2.1.99') {\n    // Deflated Explicit VR - Little Endian\n    name = 'Little Endian Deflated Explicit';\n  } else if (syntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR - Big Endian\n    name = 'Big Endian Explicit';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    // JPEG baseline\n    if (syntax === '1.2.840.10008.1.2.4.50') {\n      name = 'JPEG Baseline';\n    } else { // *.51\n      name = 'JPEG Extended, Process 2+4';\n    }\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    // JPEG Lossless\n    if (syntax === '1.2.840.10008.1.2.4.57') {\n      name = 'JPEG Lossless, Nonhierarchical (Processes 14)';\n    } else { // *.70\n      name = 'JPEG Lossless, Non-hierarchical, 1st Order Prediction';\n    }\n  } else if (isJpegRetiredTransferSyntax(syntax)) {\n    // Retired JPEG\n    name = 'Retired JPEG';\n  } else if (isJpeglsTransferSyntax(syntax)) {\n    // JPEG-LS\n    name = 'JPEG-LS';\n  } else if (isJpeg2000TransferSyntax(syntax)) {\n    // JPEG 2000\n    if (syntax === '1.2.840.10008.1.2.4.91') {\n      name = 'JPEG 2000 (Lossless or Lossy)';\n    } else { // *.90\n      name = 'JPEG 2000 (Lossless only)';\n    }\n  } else if (syntax === '1.2.840.10008.1.2.4.100') {\n    // MPEG2 Image Compression\n    name = 'MPEG2';\n  } else if (isRleTransferSyntax(syntax)) {\n    // RLE (lossless)\n    name = 'RLE';\n  }\n  // return\n  return name;\n}\n\n/**\n * Guess the transfer syntax from the first data element.\n * See https://github.com/ivmartel/dwv/issues/188\n *   (Allow to load DICOM with no DICM preamble) for more details.\n *\n * @param {object} firstDataElement The first data element of the DICOM header.\n * @returns {object} The transfer syntax data element.\n */\nfunction guessTransferSyntax(firstDataElement) {\n  const oEightGroupBigEndian = '0x0800';\n  const oEightGroupLittleEndian = '0x0008';\n  // check that group is 0x0008\n  const group = firstDataElement.tag.getGroup();\n  if (group !== oEightGroupBigEndian &&\n    group !== oEightGroupLittleEndian) {\n    throw new Error(\n      'Not a valid DICOM file (no magic DICM word found' +\n        ' and first element not in 0x0008 group)'\n    );\n  }\n  // reasonable assumption: 2 uppercase characters => explicit vr\n  const vr = firstDataElement.vr;\n  const vr0 = vr.charCodeAt(0);\n  const vr1 = vr.charCodeAt(1);\n  const implicit = (vr0 >= 65 && vr0 <= 90 && vr1 >= 65 && vr1 <= 90)\n    ? false : true;\n  // guess transfer syntax\n  let syntax = null;\n  if (group === oEightGroupLittleEndian) {\n    if (implicit) {\n      // ImplicitVRLittleEndian\n      syntax = '1.2.840.10008.1.2';\n    } else {\n      // ExplicitVRLittleEndian\n      syntax = '1.2.840.10008.1.2.1';\n    }\n  } else {\n    if (implicit) {\n      // ImplicitVRBigEndian: impossible\n      throw new Error(\n        'Not a valid DICOM file (no magic DICM word found' +\n        'and implicit VR big endian detected)'\n      );\n    } else {\n      // ExplicitVRBigEndian\n      syntax = '1.2.840.10008.1.2.2';\n    }\n  }\n  // set transfer syntax data element\n  const dataElement = {\n    tag: new Tag('0x0002', '0x0010'),\n    vr: 'UI'\n  };\n  dataElement.value = [syntax + ' ']; // even length\n  dataElement.vl = dataElement.value[0].length;\n  dataElement.startOffset = firstDataElement.startOffset;\n  dataElement.endOffset = dataElement.startOffset + dataElement.vl;\n\n  return dataElement;\n}\n\n/**\n * Get the appropriate TypedArray in function of arguments.\n *\n * @param {number} bitsAllocated The number of bites used to store\n *   the data: [8, 16, 32].\n * @param {number} pixelRepresentation The pixel representation,\n *   0:unsigned;1:signed.\n * @param {number} size The size of the new array.\n * @returns {Array} The good typed array.\n */\nexport function getTypedArray(bitsAllocated, pixelRepresentation, size) {\n  let res = null;\n  try {\n    if (bitsAllocated === 8) {\n      if (pixelRepresentation === 0) {\n        res = new Uint8Array(size);\n      } else {\n        res = new Int8Array(size);\n      }\n    } else if (bitsAllocated === 16) {\n      if (pixelRepresentation === 0) {\n        res = new Uint16Array(size);\n      } else {\n        res = new Int16Array(size);\n      }\n    } else if (bitsAllocated === 32) {\n      if (pixelRepresentation === 0) {\n        res = new Uint32Array(size);\n      } else {\n        res = new Int32Array(size);\n      }\n    }\n  } catch (error) {\n    if (error instanceof RangeError) {\n      const powerOf2 = Math.floor(Math.log(size) / Math.log(2));\n      logger.error('Cannot allocate array of size: ' +\n        size + ' (>2^' + powerOf2 + ').');\n    }\n  }\n  return res;\n}\n\n/**\n * Does this Value Representation (VR) have a 32bit Value Length (VL).\n * Ref: [Data Element explicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_7.html#table_7.1-1}.\n *\n * @param {string} vr The data Value Representation (VR).\n * @returns {boolean} True if this VR has a 32-bit VL.\n */\nexport function is32bitVLVR(vr) {\n  return vr32bitVL.includes(vr);\n}\n\n/**\n * Get the number of bytes occupied by a data element prefix,\n *   i.e. without its value.\n *\n * @param {string} vr The Value Representation of the element.\n * @param {boolean} isImplicit Does the data use implicit VR?\n * @returns {number} The size of the element prefix.\n * WARNING: this is valid for tags with a VR, if not sure use\n *   the 'isTagWithVR' function first.\n * Reference:\n * - [Data Element explicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_7.html#table_7.1-1},\n * - [Data Element implicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_7.5.html#table_7.5-1}.\n *\n * | Tag | VR  | VL | Value |\n * | 4   | 2   | 2  | X     | -> regular explicit: 8 + X\n * | 4   | 2+2 | 4  | X     | -> 32bit VL: 12 + X\n *\n * | Tag | VL | Value |\n * | 4   | 4  | X     | -> implicit (32bit VL): 8 + X\n *\n * | Tag | Len | Value |\n * | 4   | 4   | X     | -> item: 8 + X\n */\nexport function getDataElementPrefixByteSize(vr, isImplicit) {\n  return isImplicit ? 8 : is32bitVLVR(vr) ? 12 : 8;\n}\n\n/**\n * DicomParser class.\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // get the wrapped dicom tags\n *   // (raw tags are available via 'getRawDicomElements')\n *   const tags = dicomParser.getDicomElements();\n *   // display the modality\n *   const div = document.getElementById('dwv');\n *   div.appendChild(document.createTextNode(\n *     'Modality: ' + tags.getFromName('Modality')\n *   ));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomParser {\n\n  /**\n   * The list of DICOM elements.\n   *\n   * @type {Array}\n   */\n  dicomElements = {};\n\n  /**\n   * Default character set (optional).\n   *\n   * @private\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Default text decoder.\n   *\n   * @private\n   * @type {DefaultTextDecoder}\n   */\n  #defaultTextDecoder = new DefaultTextDecoder();\n\n  /**\n   * Special text decoder.\n   *\n   * @private\n   * @type {DefaultTextDecoder|TextDecoder}\n   */\n  #textDecoder = this.#defaultTextDecoder;\n\n  /**\n   * Decode an input string buffer using the default text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decodeString(buffer) {\n    return this.#defaultTextDecoder.decode(buffer);\n  }\n\n  /**\n   * Decode an input string buffer using the 'special' text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decodeSpecialString(buffer) {\n    return this.#textDecoder.decode(buffer);\n  }\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n    this.setCharacterSet(characterSet);\n  }\n\n  /**\n   * Set the text decoder character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDecoderCharacterSet(characterSet) {\n    /**\n     * The text decoder.\n     *\n     * @external TextDecoder\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder\n     */\n    this.#textDecoder = new TextDecoder(characterSet);\n  }\n\n  /**\n   * Get the raw DICOM data elements.\n   *\n   * @returns {object} The raw DICOM elements.\n   */\n  getRawDicomElements() {\n    return this.dicomElements;\n  }\n\n  /**\n   * Get the DICOM data elements.\n   *\n   * @returns {object} The DICOM elements.\n   */\n  getDicomElements() {\n    return new DicomElementsWrapper(this.dicomElements);\n  }\n\n  /**\n   * Read a DICOM tag.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @returns {object} An object containing the tag and the end offset.\n   */\n  readTag(reader, offset) {\n    // group\n    const group = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // element\n    const element = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // return\n    return {\n      tag: new Tag(group, element),\n      endOffset: offset\n    };\n  }\n\n  /**\n   * Read an item data element.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as a list of data elements.\n   */\n  readItemDataElement(\n    reader, offset, implicit) {\n    const itemData = {};\n\n    // read the first item\n    let item = this.readDataElement(reader, offset, implicit);\n    offset = item.endOffset;\n\n    // exit if it is a sequence delimitation item\n    if (isSequenceDelimitationItemTag(item.tag)) {\n      return {\n        data: itemData,\n        endOffset: item.endOffset,\n        isSeqDelim: true\n      };\n    }\n\n    // store item (mainly to keep vl)\n    itemData[item.tag.getKey()] = {\n      tag: item.tag,\n      vr: 'NONE',\n      vl: item.vl,\n      undefinedLength: item.undefinedLength\n    };\n\n    if (!item.undefinedLength) {\n      // explicit VR item: read until the end offset\n      const endOffset = offset;\n      offset -= item.vl;\n      while (offset < endOffset) {\n        item = this.readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        itemData[item.tag.getKey()] = item;\n      }\n    } else {\n      // implicit VR item: read until the item delimitation item\n      let isItemDelim = false;\n      while (!isItemDelim) {\n        item = this.readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        isItemDelim = isItemDelimitationItemTag(item.tag);\n        if (!isItemDelim) {\n          itemData[item.tag.getKey()] = item;\n        }\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      isSeqDelim: false\n    };\n  }\n\n  /**\n   * Read the pixel item data element.\n   * Ref: [Single frame fragments]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_A.4.html#table_A.4-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {Array} The item data as an array of data elements.\n   */\n  readPixelItemDataElement(\n    reader, offset, implicit) {\n    const itemData = [];\n\n    // first item: basic offset table\n    let item = this.readDataElement(reader, offset, implicit);\n    const offsetTableVl = item.vl;\n    offset = item.endOffset;\n\n    // read until the sequence delimitation item\n    let isSeqDelim = false;\n    while (!isSeqDelim) {\n      item = this.readDataElement(reader, offset, implicit);\n      offset = item.endOffset;\n      isSeqDelim = isSequenceDelimitationItemTag(item.tag);\n      if (!isSeqDelim) {\n        // force pixel item vr to OB\n        item.vr = 'OB';\n        itemData.push(item);\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      offsetTableVl: offsetTableVl\n    };\n  }\n\n  /**\n   * Read a DICOM data element.\n   * Reference: [DICOM VRs]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html#table_6.2-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} An object containing the element\n   *   'tag', 'vl', 'vr', 'data' and 'endOffset'.\n   */\n  readDataElement(\n    reader, offset, implicit) {\n    // Tag: group, element\n    const readTagRes = this.readTag(reader, offset);\n    const tag = readTagRes.tag;\n    offset = readTagRes.endOffset;\n\n    // Value Representation (VR)\n    let vr = null;\n    let is32bitVL = false;\n    if (tag.isWithVR()) {\n      // implicit VR\n      if (implicit) {\n        vr = tag.getVrFromDictionary();\n        if (vr === null) {\n          vr = 'UN';\n        }\n        is32bitVL = true;\n      } else {\n        vr = this.decodeString(reader.readUint8Array(offset, 2));\n        offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        is32bitVL = is32bitVLVR(vr);\n        // reserved 2 bytes\n        if (is32bitVL) {\n          offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        }\n      }\n    } else {\n      vr = 'NONE';\n      is32bitVL = true;\n    }\n\n    // Value Length (VL)\n    let vl = 0;\n    if (is32bitVL) {\n      vl = reader.readUint32(offset);\n      offset += Uint32Array.BYTES_PER_ELEMENT;\n    } else {\n      vl = reader.readUint16(offset);\n      offset += Uint16Array.BYTES_PER_ELEMENT;\n    }\n\n    // check the value of VL\n    let undefinedLength = false;\n    if (vl === 0xffffffff) {\n      undefinedLength = true;\n      vl = 0;\n    }\n\n    // treat private tag with unknown VR and zero VL as a sequence (see #799)\n    if (tag.isPrivate() && vr === 'UN' && vl === 0) {\n      vr = 'SQ';\n    }\n\n    let startOffset = offset;\n    let endOffset = startOffset + vl;\n\n    // read sequence elements\n    let data = null;\n    if (isPixelDataTag(tag) && undefinedLength) {\n      // pixel data sequence (implicit)\n      const pixItemData =\n        this.readPixelItemDataElement(reader, offset, implicit);\n      offset = pixItemData.endOffset;\n      startOffset += pixItemData.offsetTableVl;\n      data = pixItemData.data;\n      endOffset = offset;\n      vl = offset - startOffset;\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      let itemData;\n      if (!undefinedLength) {\n        if (vl !== 0) {\n          // explicit VR sequence: read until the end offset\n          const sqEndOffset = offset + vl;\n          while (offset < sqEndOffset) {\n            itemData = this.readItemDataElement(reader, offset, implicit);\n            data.push(itemData.data);\n            offset = itemData.endOffset;\n          }\n          endOffset = offset;\n          vl = offset - startOffset;\n        }\n      } else {\n        // implicit VR sequence: read until the sequence delimitation item\n        let isSeqDelim = false;\n        while (!isSeqDelim) {\n          itemData = this.readItemDataElement(reader, offset, implicit);\n          isSeqDelim = itemData.isSeqDelim;\n          offset = itemData.endOffset;\n          // do not store the delimitation item\n          if (!isSeqDelim) {\n            data.push(itemData.data);\n          }\n        }\n        endOffset = offset;\n        vl = offset - startOffset;\n      }\n    }\n\n    // return\n    const element = {\n      tag: tag,\n      vr: vr,\n      vl: vl,\n      startOffset: startOffset,\n      endOffset: endOffset\n    };\n    // only set if true (only for sequences and items)\n    if (undefinedLength) {\n      element.undefinedLength = undefinedLength;\n    }\n    if (data) {\n      element.items = data;\n    }\n    return element;\n  }\n\n  /**\n   * Interpret the data of an element.\n   *\n   * @param {object} element The data element.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} pixelRepresentation PixelRepresentation 0->unsigned,\n   *   1->signed (needed for pixel data or VR=xs).\n   * @param {number} bitsAllocated Bits allocated (needed for pixel data).\n   * @returns {object} The interpreted data.\n   */\n  interpretElement(\n    element, reader, pixelRepresentation, bitsAllocated) {\n\n    const tag = element.tag;\n    const vl = element.vl;\n    const vr = element.vr;\n    const offset = element.startOffset;\n\n    // data\n    let data = null;\n    const vrType = vrTypes[vr];\n    if (isPixelDataTag(tag)) {\n      if (element.undefinedLength) {\n        // implicit pixel data sequence\n        data = [];\n        for (let j = 0; j < element.items.length; ++j) {\n          data.push(this.interpretElement(\n            element.items[j], reader,\n            pixelRepresentation, bitsAllocated));\n        }\n        // remove non parsed items\n        delete element.items;\n      } else {\n        // check bits allocated and VR\n        // https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.2.html\n        if (bitsAllocated > 8 && vr === 'OB') {\n          logger.warn(\n            'Reading DICOM pixel data with bitsAllocated>8 and OB VR.'\n          );\n        }\n        // read\n        data = [];\n        if (bitsAllocated === 1) {\n          data.push(reader.readBinaryArray(offset, vl));\n        } else if (bitsAllocated === 8) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint8Array(offset, vl));\n          } else {\n            data.push(reader.readInt8Array(offset, vl));\n          }\n        } else if (bitsAllocated === 16) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint16Array(offset, vl));\n          } else {\n            data.push(reader.readInt16Array(offset, vl));\n          }\n        } else {\n          throw new Error('Unsupported bits allocated: ' + bitsAllocated);\n        }\n      }\n    } else if (typeof vrType !== 'undefined') {\n      if (vrType === 'Uint8') {\n        data = reader.readUint8Array(offset, vl);\n      } else if (vrType === 'Uint16') {\n        data = reader.readUint16Array(offset, vl);\n      } else if (vrType === 'Uint32') {\n        data = reader.readUint32Array(offset, vl);\n      } else if (vrType === 'Uint64') {\n        data = reader.readUint64Array(offset, vl);\n      } else if (vrType === 'Int16') {\n        data = reader.readInt16Array(offset, vl);\n      } else if (vrType === 'Int32') {\n        data = reader.readInt32Array(offset, vl);\n      } else if (vrType === 'Int64') {\n        data = reader.readInt64Array(offset, vl);\n      } else if (vrType === 'Float32') {\n        data = reader.readFloat32Array(offset, vl);\n      } else if (vrType === 'Float64') {\n        data = reader.readFloat64Array(offset, vl);\n      } else if (vrType === 'string') {\n        const stream = reader.readUint8Array(offset, vl);\n        if (charSetString.includes(vr)) {\n          data = this.decodeSpecialString(stream);\n        } else {\n          data = this.decodeString(stream);\n        }\n        data = data.split('\\\\');\n      } else {\n        throw Error('Unknown VR type: ' + vrType);\n      }\n    } else if (vr === 'ox') {\n      // OB or OW\n      if (bitsAllocated === 8) {\n        data = reader.readUint8Array(offset, vl);\n      } else {\n        data = reader.readUint16Array(offset, vl);\n      }\n    } else if (vr === 'xs') {\n      // US or SS\n      if (pixelRepresentation === 0) {\n        data = reader.readUint16Array(offset, vl);\n      } else {\n        data = reader.readInt16Array(offset, vl);\n      }\n    } else if (vr === 'AT') {\n      // attribute\n      const raw = reader.readUint16Array(offset, vl);\n      data = [];\n      for (let i = 0, leni = raw.length; i < leni; i += 2) {\n        const stri = raw[i].toString(16);\n        const stri1 = raw[i + 1].toString(16);\n        let str = '(';\n        str += '0000'.substring(0, 4 - stri.length) + stri.toUpperCase();\n        str += ',';\n        str += '0000'.substring(0, 4 - stri1.length) + stri1.toUpperCase();\n        str += ')';\n        data.push(str);\n      }\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      for (let k = 0; k < element.items.length; ++k) {\n        const item = element.items[k];\n        const itemData = {};\n        const keys = Object.keys(item);\n        for (let l = 0; l < keys.length; ++l) {\n          const subElement = item[keys[l]];\n          subElement.value = this.interpretElement(\n            subElement, reader,\n            pixelRepresentation, bitsAllocated);\n          itemData[keys[l]] = subElement;\n        }\n        data.push(itemData);\n      }\n      // remove non parsed elements\n      delete element.items;\n    } else if (vr === 'NONE') {\n      // no VR -> no data\n      data = [];\n    } else {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + element.tag.getKey() + ')');\n      // empty data...\n      data = [];\n    }\n\n    return data;\n  }\n\n  /**\n   * Interpret the data of a list of elements.\n   *\n   * @param {Array} elements A list of data elements.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} pixelRepresentation PixelRepresentation 0->unsigned,\n   *   1->signed.\n   * @param {number} bitsAllocated Bits allocated.\n   */\n  interpret(\n    elements, reader,\n    pixelRepresentation, bitsAllocated) {\n\n    const keys = Object.keys(elements);\n    for (let i = 0; i < keys.length; ++i) {\n      const element = elements[keys[i]];\n      if (typeof element.value === 'undefined') {\n        element.value = this.interpretElement(\n          element, reader, pixelRepresentation, bitsAllocated);\n      }\n      // delete interpretation specific properties\n      delete element.startOffset;\n      delete element.endOffset;\n    }\n  }\n\n  /**\n   * Parse the complete DICOM file (given as input to the class).\n   * Fills in the member object 'dicomElements'.\n   *\n   * @param {object} buffer The input array buffer.\n   */\n  parse(buffer) {\n    let offset = 0;\n    let syntax = '';\n    let dataElement = null;\n    // default readers\n    const metaReader = new DataReader(buffer);\n    let dataReader = new DataReader(buffer);\n\n    // 128 -> 132: magic word\n    offset = 128;\n    const magicword = this.decodeString(metaReader.readUint8Array(offset, 4));\n    offset += 4 * Uint8Array.BYTES_PER_ELEMENT;\n    if (magicword === 'DICM') {\n      // 0x0002, 0x0000: FileMetaInformationGroupLength\n      dataElement = this.readDataElement(metaReader, offset, false);\n      dataElement.value = this.interpretElement(dataElement, metaReader);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      this.dicomElements[dataElement.tag.getKey()] = dataElement;\n      // get meta length\n      const metaLength = parseInt(dataElement.value[0], 10);\n\n      // meta elements\n      const metaEnd = offset + metaLength;\n      while (offset < metaEnd) {\n        // get the data element\n        dataElement = this.readDataElement(metaReader, offset, false);\n        offset = dataElement.endOffset;\n        // store the data element\n        this.dicomElements[dataElement.tag.getKey()] = dataElement;\n      }\n\n      // check the TransferSyntaxUID (has to be there!)\n      dataElement = this.dicomElements.x00020010;\n      if (typeof dataElement === 'undefined') {\n        throw new Error('Not a valid DICOM file (no TransferSyntaxUID found)');\n      }\n      dataElement.value = this.interpretElement(dataElement, metaReader);\n      syntax = cleanString(dataElement.value[0]);\n\n    } else {\n      logger.warn('No DICM prefix, trying to guess tansfer syntax.');\n      // read first element\n      dataElement = this.readDataElement(dataReader, 0, false);\n      // guess transfer syntax\n      const tsElement = guessTransferSyntax(dataElement);\n      // store\n      this.dicomElements[tsElement.tag.getKey()] = tsElement;\n      syntax = cleanString(tsElement.value[0]);\n      // reset offset\n      offset = 0;\n    }\n\n    // check transfer syntax support\n    if (!isReadSupportedTransferSyntax(syntax)) {\n      throw new Error('Unsupported DICOM transfer syntax: \\'' + syntax +\n        '\\' (' + getTransferSyntaxName(syntax) + ')');\n    }\n\n    // set implicit flag\n    let implicit = false;\n    if (isImplicitTransferSyntax(syntax)) {\n      implicit = true;\n    }\n\n    // Big Endian\n    if (isBigEndianTransferSyntax(syntax)) {\n      dataReader = new DataReader(buffer, false);\n    }\n\n    // DICOM data elements\n    while (offset < buffer.byteLength) {\n      // get the data element\n      dataElement = this.readDataElement(dataReader, offset, implicit);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      if (typeof this.dicomElements[dataElement.tag.getKey()] === 'undefined') {\n        this.dicomElements[dataElement.tag.getKey()] = dataElement;\n      } else {\n        logger.warn('Not saving duplicate tag: ' +\n          dataElement.tag.getKey());\n      }\n    }\n\n    // safety checks...\n    if (isNaN(offset)) {\n      throw new Error('Problem while parsing, bad offset');\n    }\n    if (buffer.byteLength !== offset) {\n      logger.warn('Did not reach the end of the buffer: ' +\n        offset + ' != ' + buffer.byteLength);\n    }\n\n    //-------------------------------------------------\n    // values needed for data interpretation\n\n    // pixel specific\n    let pixelRepresentation = 0;\n    let bitsAllocated = 16;\n    if (typeof this.dicomElements.x7FE00010 !== 'undefined') {\n      // PixelRepresentation 0->unsigned, 1->signed\n      dataElement = this.dicomElements.x00280103;\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.interpretElement(dataElement, dataReader);\n        pixelRepresentation = dataElement.value[0];\n      } else {\n        logger.warn(\n          'Reading DICOM pixel data with default pixelRepresentation.');\n      }\n\n      // BitsAllocated\n      dataElement = this.dicomElements.x00280100;\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.interpretElement(dataElement, dataReader);\n        bitsAllocated = dataElement.value[0];\n      } else {\n        logger.warn('Reading DICOM pixel data with default bitsAllocated.');\n      }\n    }\n\n    // default character set\n    if (typeof this.getDefaultCharacterSet() !== 'undefined') {\n      this.setDecoderCharacterSet(this.getDefaultCharacterSet());\n    }\n\n    // SpecificCharacterSet\n    dataElement = this.dicomElements.x00080005;\n    if (typeof dataElement !== 'undefined') {\n      dataElement.value = this.interpretElement(dataElement, dataReader);\n      let charSetTerm;\n      if (dataElement.value.length === 1) {\n        charSetTerm = cleanString(dataElement.value[0]);\n      } else {\n        charSetTerm = cleanString(dataElement.value[1]);\n        logger.warn('Unsupported character set with code extensions: \\'' +\n          charSetTerm + '\\'.');\n      }\n      this.setDecoderCharacterSet(getUtfLabel(charSetTerm));\n    }\n\n    // interpret the dicom elements\n    this.interpret(\n      this.dicomElements, dataReader,\n      pixelRepresentation, bitsAllocated\n    );\n\n    // handle fragmented pixel buffer\n    // Reference: http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_8.2.html\n    // (third note, \"Depending on the transfer syntax...\")\n    dataElement = this.dicomElements.x7FE00010;\n    if (typeof dataElement !== 'undefined') {\n      if (dataElement.undefinedLength) {\n        let numberOfFrames = 1;\n        if (typeof this.dicomElements.x00280008 !== 'undefined') {\n          numberOfFrames = cleanString(\n            this.dicomElements.x00280008.value[0]);\n        }\n        const pixItems = dataElement.value;\n        if (pixItems.length > 1 && pixItems.length > numberOfFrames) {\n          // concatenate pixel data items\n          // concat does not work on typed arrays\n          //this.pixelBuffer = this.pixelBuffer.concat( dataElement.data );\n          // manual concat...\n          const nItemPerFrame = pixItems.length / numberOfFrames;\n          const newPixItems = [];\n          let index = 0;\n          for (let f = 0; f < numberOfFrames; ++f) {\n            index = f * nItemPerFrame;\n            // calculate the size of a frame\n            let size = 0;\n            for (let i = 0; i < nItemPerFrame; ++i) {\n              size += pixItems[index + i].length;\n            }\n            // create new buffer\n            const newBuffer = new pixItems[0].constructor(size);\n            // fill new buffer\n            let fragOffset = 0;\n            for (let j = 0; j < nItemPerFrame; ++j) {\n              newBuffer.set(pixItems[index + j], fragOffset);\n              fragOffset += pixItems[index + j].length;\n            }\n            newPixItems[f] = newBuffer;\n          }\n          // store as pixel data\n          dataElement.value = newPixItems;\n        }\n      }\n    }\n  }\n\n} // class DicomParser\n","/**\n * Data writer.\n */\nexport class DataWriter {\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * The main data view.\n   *\n   * @private\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {Array} buffer The input array buffer.\n   * @param {boolean} isLittleEndian Flag to tell if the data is\n   *   little or big endian.\n   */\n  constructor(buffer, isLittleEndian) {\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Write Uint8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8(byteOffset, value) {\n    this.#view.setUint8(byteOffset, value);\n    return byteOffset + Uint8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8(byteOffset, value) {\n    this.#view.setInt8(byteOffset, value);\n    return byteOffset + Int8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16(byteOffset, value) {\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16(byteOffset, value) {\n    this.#view.setInt16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32(byteOffset, value) {\n    this.#view.setUint32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64(byteOffset, value) {\n    this.#view.setBigUint64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigUint64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32(byteOffset, value) {\n    this.#view.setInt32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64(byteOffset, value) {\n    this.#view.setBigInt64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigInt64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32(byteOffset, value) {\n    this.#view.setFloat32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64(byteOffset, value) {\n    this.#view.setFloat64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write string data as hexadecimal.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} str The padded hexadecimal string to write ('0x####').\n   * @returns {number} The new offset position.\n   */\n  writeHex(byteOffset, str) {\n    // remove first two chars and parse\n    const value = parseInt(str.substring(2), 16);\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write a boolean array as binary.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeBinaryArray(byteOffset, array) {\n    if (array.length % 8 !== 0) {\n      throw new Error('Cannot write boolean array as binary.');\n    }\n    let byte = null;\n    let val = null;\n    for (let i = 0, len = array.length; i < len; i += 8) {\n      byte = 0;\n      for (let j = 0; j < 8; ++j) {\n        val = array[i + j] === 0 ? 0 : 1;\n        byte += val << j;\n      }\n      byteOffset = this.writeUint8(byteOffset, byte);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n} // class DataWriter\n","import {\n  vrTypes,\n  charSetString\n} from './dictionary';\nimport {\n  Tag,\n  getTagFromDictionary,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getFileMetaInformationGroupLengthTag,\n  isPixelDataTag,\n  isItemTag,\n  tagCompareFunction\n} from './dicomTag';\nimport {\n  getDwvVersion,\n  cleanString,\n  is32bitVLVR,\n  isImplicitTransferSyntax,\n  isBigEndianTransferSyntax,\n  getDataElementPrefixByteSize\n} from './dicomParser';\nimport {DataWriter} from './dataWriter';\nimport {logger} from '../utils/logger';\n\n/**\n * Get the dwv UID prefix.\n * Issued by Medical Connections Ltd (www.medicalconnections.co.uk)\n *   on 25/10/2017.\n *\n * @returns {string} The dwv UID prefix.\n */\nfunction getDwvUIDPrefix() {\n  return '1.2.826.0.1.3680043.9.7278.1';\n}\n\n// local generated uid counter\nlet _uidCount = 0;\n\n/**\n * Get a UID for a DICOM tag.\n * Note: Use https://github.com/uuidjs/uuid?\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_9.html\n * @see http://dicomiseasy.blogspot.com/2011/12/chapter-4-dicom-objects-in-chapter-3.html\n * @see https://stackoverflow.com/questions/46304306/how-to-generate-unique-dicom-uid\n * @param {string} tagName The input tag.\n * @returns {string} The corresponding UID.\n */\nexport function getUID(tagName) {\n  const prefix = getDwvUIDPrefix() + '.';\n  let uid = '';\n  if (tagName === 'ImplementationClassUID') {\n    uid = prefix + getDwvVersion();\n  } else {\n    // date (only numbers), do not keep milliseconds\n    const date = (new Date()).toISOString().replace(/\\D/g, '');\n    const datePart = '.' + date.substring(0, 14);\n    // count\n    _uidCount += 1;\n    const countPart = '.' + _uidCount;\n\n    // uid = prefix . tag . date . count\n    uid = prefix;\n\n    // limit tag part to not exceed 64 length\n    const nonTagLength = prefix.length + countPart.length + datePart.length;\n    const leni = Math.min(tagName.length, 64 - nonTagLength);\n    if (leni > 1) {\n      let tagNumber = '';\n      for (let i = 0; i < leni; ++i) {\n        tagNumber += tagName.charCodeAt(i);\n      }\n      uid += tagNumber.substring(0, leni);\n    }\n\n    // finish\n    uid += datePart + countPart;\n  }\n  return uid;\n}\n\n/**\n * Return true if the input number is even.\n *\n * @param {number} number The number to check.\n * @returns {boolean} True is the number is even.\n */\nfunction isEven(number) {\n  return number % 2 === 0;\n}\n\n/**\n * Is the input VR a VR that stores data in a typed array.\n * TODO: include ox and xs?\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a typed array one.\n */\nfunction isTypedArrayVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType !== 'string';\n}\n\n/**\n * Is the input VR a string VR.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a string one.\n */\nfunction isStringVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType === 'string';\n}\n\n/**\n * Is the input VR a VR that could need padding.\n * see http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR needs padding.\n */\nfunction isVrToPad(vr) {\n  return isStringVr(vr) || vr === 'OB';\n}\n\n/**\n * Get the VR specific padding value.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} The value used to pad.\n */\nfunction getVrPad(vr) {\n  let pad = 0;\n  if (isStringVr(vr)) {\n    if (vr === 'UI') {\n      pad = '\\0';\n    } else {\n      pad = ' ';\n    }\n  }\n  return pad;\n}\n\n/**\n * Push a value at the end of an input Uint8Array.\n *\n * @param {Uint8Array} arr The input array.\n * @param {number} value The value to push.\n * @returns {Uint8Array} The new array.\n */\nfunction uint8ArrayPush(arr, value) {\n  const newArr = new Uint8Array(arr.length + 1);\n  newArr.set(arr);\n  newArr.set(value, arr.length);\n  return newArr;\n}\n\n/**\n * Pad an input OB value.\n *\n * @param {Array|Uint8Array} value The input value.\n * @returns {Array|Uint8Array} The padded input.\n */\nfunction padOBValue(value) {\n  if (value !== null &&\n    typeof value !== 'undefined' &&\n    typeof value.length !== 'undefined') {\n    // calculate size and pad if needed\n    if (value.length !== 0 &&\n      typeof value[0].length !== 'undefined') {\n      // handle array of array\n      let size = 0;\n      for (let i = 0; i < value.length; ++i) {\n        size += value[i].length;\n      }\n      if (!isEven(size)) {\n        value[value.length - 1] = uint8ArrayPush(\n          value[value.length - 1], 0);\n      }\n    } else {\n      if (!isEven(value.length)) {\n        value = uint8ArrayPush(value, 0);\n      }\n    }\n  } else {\n    throw new Error('Cannot pad undefined or null OB value.');\n  }\n  // uint8ArrayPush may create a new array so we\n  // need to return it\n  return value;\n}\n\n/**\n * Helper method to flatten an array of typed arrays to 2D typed array\n *\n * @param {Array} initialArray array of typed arrays\n * @returns {object} a typed array containing all values\n */\nfunction flattenArrayOfTypedArrays(initialArray) {\n  const initialArrayLength = initialArray.length;\n  const arrayLength = initialArray[0].length;\n  // If this is not a array of arrays, just return the initial one:\n  if (typeof arrayLength === 'undefined') {\n    return initialArray;\n  }\n\n  const flattenendArrayLength = initialArrayLength * arrayLength;\n\n  const flattenedArray = new initialArray[0].constructor(flattenendArrayLength);\n\n  for (let i = 0; i < initialArrayLength; i++) {\n    const indexFlattenedArray = i * arrayLength;\n    flattenedArray.set(initialArray[i], indexFlattenedArray);\n  }\n  return flattenedArray;\n}\n\n/**\n * Default text encoder.\n */\nclass DefaultTextEncoder {\n  /**\n   * Encode an input string.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encode(str) {\n    const result = new Uint8Array(str.length);\n    for (let i = 0, leni = str.length; i < leni; ++i) {\n      result[i] = str.charCodeAt(i);\n    }\n    return result;\n  }\n}\n\n/**\n * DICOM writer.\n *\n * Example usage:\n *   const parser = new DicomParser();\n *   parser.parse(this.response);\n *\n *   const writer = new DicomWriter(parser.getRawDicomElements());\n *   const blob = new Blob([writer.getBuffer()], {type: 'application/dicom'});\n *\n *   const element = document.getElementById(\"download\");\n *   element.href = URL.createObjectURL(blob);\n *   element.download = \"anonym.dcm\";\n */\nexport class DicomWriter {\n\n  // flag to use VR=UN for private sequences, default to false\n  // (mainly used in tests)\n  #useUnVrForPrivateSq = false;\n\n  /**\n   * Set the use UN VR for private sequence flag.\n   *\n   * @param {boolean} flag True to use UN VR.\n   */\n  setUseUnVrForPrivateSq(flag) {\n    this.#useUnVrForPrivateSq = flag;\n  }\n\n  // possible tag actions\n  #actions = {\n    copy: function (item) {\n      return item;\n    },\n    remove: function () {\n      return null;\n    },\n    clear: function (item) {\n      item.value = [];\n      return item;\n    },\n    replace: function (item, value) {\n      item.value = [value];\n      return item;\n    }\n  };\n\n  // default rules: just copy\n  #defaultRules = {\n    default: {action: 'copy', value: null}\n  };\n\n  /**\n   * Writing rules.\n   * Set of objects as:\n   *   name : { action: 'actionName', value: 'optionalValue }\n   * The names are either 'default', tagName or groupName.\n   * Each DICOM element will be checked to see if a rule is applicable.\n   * First checked by tagName and then by groupName,\n   * if nothing is found the default rule is applied.\n   */\n  #rules = this.#defaultRules;\n\n  /**\n   * Set the writing rules.\n   *\n   * @param {object} rules The input rules.\n   */\n  setRules(rules) {\n    this.#rules = rules;\n  }\n\n  /**\n   * Default text encoder.\n   *\n   * @private\n   * @type {DefaultTextEncoder}\n   */\n  #defaultTextEncoder = new DefaultTextEncoder();\n\n  /**\n   * Special text encoder.\n   *\n   * @private\n   * @type {DefaultTextEncoder|TextEncoder}\n   */\n  #textEncoder = this.#defaultTextEncoder;\n\n  /**\n   * Encode string data.\n   *\n   * @param {number} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encodeString(str) {\n    return this.#defaultTextEncoder.encode(str);\n  }\n\n  /**\n   * Encode data as a UTF-8.\n   *\n   * @param {number} str The string to write.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encodeSpecialString(str) {\n    return this.#textEncoder.encode(str);\n  }\n\n  /**\n   * Use a TextEncoder instead of the default text decoder.\n   */\n  useSpecialTextEncoder() {\n    /**\n     * The text encoder.\n     *\n     * @external TextEncoder\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\n     */\n    this.#textEncoder = new TextEncoder();\n  }\n\n  /**\n   * Example anonymisation rules.\n   */\n  anonymisationRules = {\n    default: {action: 'remove', value: null},\n    PatientName: {action: 'replace', value: 'Anonymized'}, // tag\n    'Meta Element': {action: 'copy', value: null}, // group 'x0002'\n    Acquisition: {action: 'copy', value: null}, // group 'x0018'\n    'Image Presentation': {action: 'copy', value: null}, // group 'x0028'\n    Procedure: {action: 'copy', value: null}, // group 'x0040'\n    'Pixel Data': {action: 'copy', value: null} // group 'x7fe0'\n  };\n\n  /**\n   * Get the element to write according to the class rules.\n   * Priority order: tagName, groupName, default.\n   *\n   * @param {object} element The element to check\n   * @returns {object} The element to write, can be null.\n   */\n  getElementToWrite(element) {\n    // get group and tag string name\n    const groupName = element.tag.getGroupName();\n    const tagName = element.tag.getNameFromDictionary();\n\n    // apply rules:\n    let rule;\n    if (typeof this.#rules[element.tag.getKey()] !== 'undefined') {\n      // 1. tag itself\n      rule = this.#rules[element.tag.getKey()];\n    } else if (tagName !== null &&\n      typeof this.#rules[tagName] !== 'undefined') {\n      // 2. tag name\n      rule = this.#rules[tagName];\n    } else if (typeof this.#rules[groupName] !== 'undefined') {\n      // 3. group name\n      rule = this.#rules[groupName];\n    } else {\n      // 4. default\n      rule = this.#rules['default'];\n    }\n    // apply action on element and return\n    return this.#actions[rule.action](element, rule.value);\n  }\n\n  /**\n   * Write a list of items.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} items The list of items to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  writeDataElementItems(\n    writer, byteOffset, items, isImplicit) {\n    let item = null;\n    for (let i = 0; i < items.length; ++i) {\n      item = items[i];\n      const itemKeys = Object.keys(item);\n      if (itemKeys.length === 0) {\n        continue;\n      }\n      // item element (create new to not modify original)\n      let undefinedLength = false;\n      if (typeof item.xFFFEE000.undefinedLength !== 'undefined') {\n        undefinedLength = item.xFFFEE000.undefinedLength;\n      }\n      const itemElement = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: undefinedLength ? 0xffffffff : item.xFFFEE000.vl,\n        value: []\n      };\n      byteOffset = this.writeDataElement(\n        writer, itemElement, byteOffset, isImplicit);\n      // write rest\n      for (let m = 0; m < itemKeys.length; ++m) {\n        if (itemKeys[m] !== 'xFFFEE000' && itemKeys[m] !== 'xFFFEE00D') {\n          byteOffset = this.writeDataElement(\n            writer, item[itemKeys[m]], byteOffset, isImplicit);\n        }\n      }\n      // item delimitation\n      if (undefinedLength) {\n        const itemDelimElement = {\n          tag: getItemDelimitationItemTag(),\n          vr: 'NONE',\n          vl: 0,\n          value: []\n        };\n        byteOffset = this.writeDataElement(\n          writer, itemDelimElement, byteOffset, isImplicit);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write data with a specific Value Representation (VR).\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  writeDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n\n    const startOffset = byteOffset;\n\n    if (element.vr === 'NONE') {\n      // nothing to do!\n    } else if (value instanceof Uint8Array) {\n      // binary data has been expanded 8 times at read\n      if (value.length === 8 * element.vl) {\n        byteOffset = writer.writeBinaryArray(byteOffset, value);\n      } else {\n        byteOffset = writer.writeUint8Array(byteOffset, value);\n      }\n    } else if (value instanceof Int8Array) {\n      byteOffset = writer.writeInt8Array(byteOffset, value);\n    } else if (value instanceof Uint16Array) {\n      byteOffset = writer.writeUint16Array(byteOffset, value);\n    } else if (value instanceof Int16Array) {\n      byteOffset = writer.writeInt16Array(byteOffset, value);\n    } else if (value instanceof Uint32Array) {\n      byteOffset = writer.writeUint32Array(byteOffset, value);\n    } else if (value instanceof Int32Array) {\n      byteOffset = writer.writeInt32Array(byteOffset, value);\n    } else if (value instanceof BigUint64Array) {\n      byteOffset = writer.writeUint64Array(byteOffset, value);\n    } else if (value instanceof BigInt64Array) {\n      byteOffset = writer.writeInt64Array(byteOffset, value);\n    } else {\n      // switch according to VR if input type is undefined\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined') {\n        if (vrType === 'Uint8') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else if (vrType === 'Uint16') {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        } else if (vrType === 'Int16') {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else if (vrType === 'Uint32') {\n          byteOffset = writer.writeUint32Array(byteOffset, value);\n        } else if (vrType === 'Int32') {\n          byteOffset = writer.writeInt32Array(byteOffset, value);\n        } else if (vrType === 'Uint64') {\n          byteOffset = writer.writeUint64Array(byteOffset, value);\n        } else if (vrType === 'Int64') {\n          byteOffset = writer.writeInt64Array(byteOffset, value);\n        } else if (vrType === 'Float32') {\n          byteOffset = writer.writeFloat32Array(byteOffset, value);\n        } else if (vrType === 'Float64') {\n          byteOffset = writer.writeFloat64Array(byteOffset, value);\n        } else if (vrType === 'string') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else {\n          throw Error('Unknown VR type: ' + vrType);\n        }\n      } else if (element.vr === 'SQ') {\n        byteOffset = this.writeDataElementItems(\n          writer, byteOffset, value, isImplicit);\n      } else if (element.vr === 'AT') {\n        for (let i = 0; i < value.length; ++i) {\n          const hexString = value[i] + '';\n          const hexString1 = hexString.substring(1, 5);\n          const hexString2 = hexString.substring(6, 10);\n          const dec1 = parseInt(hexString1, 16);\n          const dec2 = parseInt(hexString2, 16);\n          const atValue = new Uint16Array([dec1, dec2]);\n          byteOffset = writer.writeUint16Array(byteOffset, atValue);\n        }\n      } else {\n        logger.warn('Unknown VR: ' + element.vr);\n      }\n    }\n\n    if (element.vr !== 'SQ' && element.vr !== 'NONE') {\n      const diff = byteOffset - startOffset;\n      if (diff !== element.vl) {\n        logger.warn('Offset difference and VL are not equal: ' +\n          diff + ' != ' + element.vl + ', vr:' + element.vr);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a pixel data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  writePixelDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n    // undefined length flag\n    let undefinedLength = false;\n    if (typeof element.undefinedLength !== 'undefined') {\n      undefinedLength = element.undefinedLength;\n    }\n    // explicit length\n    if (!undefinedLength) {\n      let finalValue = value[0];\n      // flatten multi frame\n      if (value.length > 1) {\n        finalValue = flattenArrayOfTypedArrays(value);\n      }\n      // write\n      byteOffset = this.writeDataElementValue(\n        writer, element, byteOffset, finalValue, isImplicit);\n    } else {\n      // pixel data as sequence\n      const item = {};\n      // first item: basic offset table\n      item.xFFFEE000 = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      // data\n      for (let i = 0; i < value.length; ++i) {\n        item[i] = {\n          tag: getItemTag(),\n          vr: element.vr,\n          vl: value[i].length,\n          value: value[i]\n        };\n      }\n      // write\n      byteOffset = this.writeDataElementItems(\n        writer, byteOffset, [item], isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The DICOM data element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  writeDataElement(\n    writer, element, byteOffset, isImplicit) {\n    const isTagWithVR = element.tag.isWithVR();\n    const is32bitVL = (isImplicit || !isTagWithVR)\n      ? true : is32bitVLVR(element.vr);\n    // group\n    byteOffset = writer.writeHex(byteOffset, element.tag.getGroup());\n    // element\n    byteOffset = writer.writeHex(byteOffset, element.tag.getElement());\n    // VR\n    let vr = element.vr;\n    // use VR=UN for private sequence\n    if (this.#useUnVrForPrivateSq &&\n      element.tag.isPrivate() &&\n      vr === 'SQ') {\n      logger.warn('Write element using VR=UN for private sequence.');\n      vr = 'UN';\n    }\n    if (isTagWithVR && !isImplicit) {\n      byteOffset = writer.writeUint8Array(byteOffset, this.encodeString(vr));\n      // reserved 2 bytes for 32bit VL\n      if (is32bitVL) {\n        byteOffset += 2;\n      }\n    }\n\n    let undefinedLengthSequence = false;\n    if (element.vr === 'SQ' ||\n      isPixelDataTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthSequence = element.undefinedLength;\n      }\n    }\n    let undefinedLengthItem = false;\n    if (isItemTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthItem = element.undefinedLength;\n      }\n    }\n\n    // update vl for sequence or item with undefined length\n    let vl = element.vl;\n    if (undefinedLengthSequence || undefinedLengthItem) {\n      vl = 0xffffffff;\n    }\n    // VL\n    if (is32bitVL) {\n      byteOffset = writer.writeUint32(byteOffset, vl);\n    } else {\n      byteOffset = writer.writeUint16(byteOffset, vl);\n    }\n\n    // value\n    let value = element.value;\n    // check value\n    if (typeof value === 'undefined') {\n      value = [];\n    }\n    // write\n    if (isPixelDataTag(element.tag)) {\n      byteOffset = this.writePixelDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    } else {\n      byteOffset = this.writeDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    }\n\n    // sequence delimitation item for sequence with undefined length\n    if (undefinedLengthSequence) {\n      const seqDelimElement = {\n        tag: getSequenceDelimitationItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      byteOffset = this.writeDataElement(\n        writer, seqDelimElement, byteOffset, isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Get the ArrayBuffer corresponding to input DICOM elements.\n   *\n   * @param {Array} dicomElements The wrapped elements to write.\n   * @returns {ArrayBuffer} The elements as a buffer.\n   */\n  getBuffer(dicomElements) {\n    // Transfer Syntax\n    const syntax = cleanString(dicomElements.x00020010.value[0]);\n    const isImplicit = isImplicitTransferSyntax(syntax);\n    const isBigEndian = isBigEndianTransferSyntax(syntax);\n    // Specific CharacterSet\n    if (typeof dicomElements.x00080005 !== 'undefined') {\n      const oldscs = cleanString(dicomElements.x00080005.value[0]);\n      // force UTF-8 if not default character set\n      if (typeof oldscs !== 'undefined' && oldscs !== 'ISO-IR 6') {\n        logger.debug('Change charset to UTF, was: ' + oldscs);\n        this.useSpecialTextEncoder();\n        dicomElements.x00080005.value = ['ISO_IR 192'];\n      }\n    }\n    // Bits Allocated (for image data)\n    let bitsAllocated;\n    if (typeof dicomElements.x00280100 !== 'undefined') {\n      bitsAllocated = dicomElements.x00280100.value[0];\n    }\n\n    // calculate buffer size and split elements (meta and non meta)\n    let totalSize = 128 + 4; // DICM\n    let localSize = 0;\n    const metaElements = [];\n    const rawElements = [];\n    let element;\n    let groupName;\n    let metaLength = 0;\n    // FileMetaInformationGroupLength\n    const fmiglTag = getFileMetaInformationGroupLengthTag();\n    // FileMetaInformationVersion\n    const fmivTag = new Tag('0x0002', '0x0001');\n    // ImplementationClassUID\n    const icUIDTag = new Tag('0x0002', '0x0012');\n    // ImplementationVersionName\n    const ivnTag = new Tag('0x0002', '0x0013');\n\n    // loop through elements to get the buffer size\n    const keys = Object.keys(dicomElements);\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      element = this.getElementToWrite(dicomElements[keys[i]]);\n      if (element !== null &&\n        !fmiglTag.equals(element.tag) &&\n        !fmivTag.equals(element.tag) &&\n        !icUIDTag.equals(element.tag) &&\n        !ivnTag.equals(element.tag)) {\n        localSize = 0;\n\n        // XB7 2020-04-17\n        // Check if UN can be converted to correct VR.\n        // This check must be done BEFORE calculating totalSize,\n        // otherwise there may be extra null bytes at the end of the file\n        // (dcmdump may crash because of these bytes)\n        checkUnknownVR(element);\n\n        // update value and vl\n        this.setElementValue(\n          element, element.value, isImplicit, bitsAllocated);\n\n        // tag group name\n        groupName = element.tag.getGroupName();\n\n        // prefix\n        if (groupName === 'Meta Element') {\n          localSize += getDataElementPrefixByteSize(element.vr, false);\n        } else {\n          localSize += getDataElementPrefixByteSize(\n            element.vr, isImplicit);\n        }\n\n        // value\n        localSize += element.vl;\n\n        // sort elements\n        if (groupName === 'Meta Element') {\n          metaElements.push(element);\n          metaLength += localSize;\n        } else {\n          rawElements.push(element);\n        }\n\n        // add to total size\n        totalSize += localSize;\n      }\n    }\n\n    // FileMetaInformationVersion\n    const fmiv = getDicomElement('FileMetaInformationVersion');\n    let fmivSize = getDataElementPrefixByteSize(fmiv.vr, false);\n    fmivSize += this.setElementValue(fmiv, [0, 1], false);\n    metaElements.push(fmiv);\n    metaLength += fmivSize;\n    totalSize += fmivSize;\n    // ImplementationClassUID\n    const icUID = getDicomElement('ImplementationClassUID');\n    let icUIDSize = getDataElementPrefixByteSize(icUID.vr, false);\n    icUIDSize += this.setElementValue(\n      icUID, [getUID('ImplementationClassUID')], false);\n    metaElements.push(icUID);\n    metaLength += icUIDSize;\n    totalSize += icUIDSize;\n    // ImplementationVersionName\n    const ivn = getDicomElement('ImplementationVersionName');\n    let ivnSize = getDataElementPrefixByteSize(ivn.vr, false);\n    const ivnValue = 'DWV_' + getDwvVersion();\n    ivnSize += this.setElementValue(ivn, [ivnValue], false);\n    metaElements.push(ivn);\n    metaLength += ivnSize;\n    totalSize += ivnSize;\n\n    // sort elements\n    const elemSortFunc = function (a, b) {\n      return tagCompareFunction(a.tag, b.tag);\n    };\n    metaElements.sort(elemSortFunc);\n    rawElements.sort(elemSortFunc);\n\n    // create the FileMetaInformationGroupLength element\n    const fmigl = getDicomElement('FileMetaInformationGroupLength');\n    let fmiglSize = getDataElementPrefixByteSize(fmigl.vr, false);\n    fmiglSize += this.setElementValue(\n      fmigl, new Uint32Array([metaLength]), false);\n    totalSize += fmiglSize;\n\n    // create buffer\n    const buffer = new ArrayBuffer(totalSize);\n    const metaWriter = new DataWriter(buffer);\n    const dataWriter = new DataWriter(buffer, !isBigEndian);\n\n    let offset = 128;\n    // DICM\n    offset = metaWriter.writeUint8Array(offset, this.encodeString('DICM'));\n    // FileMetaInformationGroupLength\n    offset = this.writeDataElement(metaWriter, fmigl, offset, false);\n    // write meta\n    for (let j = 0, lenj = metaElements.length; j < lenj; ++j) {\n      offset = this.writeDataElement(\n        metaWriter, metaElements[j], offset, false);\n    }\n\n    // check meta position\n    const preambleSize = 128 + 4;\n    const metaOffset = preambleSize + fmiglSize + metaLength;\n    if (offset !== metaOffset) {\n      logger.warn('Bad size calculation... meta offset: ' + offset +\n        ', calculated size:' + metaOffset +\n        ' (diff:' + (offset - metaOffset) + ')');\n    }\n\n    // write non meta\n    for (let k = 0, lenk = rawElements.length; k < lenk; ++k) {\n      offset = this.writeDataElement(\n        dataWriter, rawElements[k], offset, isImplicit);\n    }\n\n    // check final position\n    if (offset !== totalSize) {\n      logger.warn('Bad size calculation... final offset: ' + offset +\n        ', calculated size:' + totalSize +\n        ' (diff:' + (offset - totalSize) + ')');\n    }\n    // return\n    return buffer;\n  }\n\n  /**\n   * Set a DICOM element value according to its VR (Value Representation).\n   *\n   * @param {object} element The DICOM element to set the value.\n   * @param {object} value The value to set.\n   * @param {boolean} isImplicit Does the data use implicit VR?\n   * @param {number} bitsAllocated Bits allocated used for pixel data.\n   * @returns {number} The total element size.\n   */\n  setElementValue(\n    element, value, isImplicit, bitsAllocated) {\n    // byte size of the element\n    let size = 0;\n    // special sequence case\n    if (element.vr === 'SQ') {\n\n      if (value !== null && value !== 0) {\n        const newItems = [];\n        let name;\n\n        // explicit or undefined length sequence\n        let undefinedLength = false;\n        if (typeof element.undefinedLength !== 'undefined') {\n          undefinedLength = element.undefinedLength;\n          delete element.undefinedLength;\n        }\n\n        // items\n        for (let i = 0; i < value.length; ++i) {\n          const oldItemElements = value[i];\n          const newItemElements = {};\n          let subSize = 0;\n\n          // check data\n          if (oldItemElements === null || oldItemElements === 0) {\n            continue;\n          }\n\n          // elements\n          const itemKeys = Object.keys(oldItemElements);\n          for (let j = 0, lenj = itemKeys.length; j < lenj; ++j) {\n            const itemKey = itemKeys[j];\n            const subElement = oldItemElements[itemKey];\n            if (isItemTag(subElement.tag)) {\n              continue;\n            }\n            // set item value\n            subSize += this.setElementValue(\n              subElement, subElement.value, isImplicit, bitsAllocated);\n            newItemElements[itemKey] = subElement;\n            // add prefix size\n            subSize += getDataElementPrefixByteSize(\n              subElement.vr, isImplicit);\n          }\n\n          // add item element (used to store its size)\n          const itemElement = {\n            tag: getItemTag(),\n            vr: 'NONE',\n            vl: subSize,\n            value: []\n          };\n          if (undefinedLength) {\n            itemElement.undefinedLength = undefinedLength;\n          }\n          name = itemElement.tag.getKey();\n          newItemElements[name] = itemElement;\n          subSize += getDataElementPrefixByteSize(\n            itemElement.vr, isImplicit);\n\n          // add item delimitation size\n          if (undefinedLength) {\n            subSize += getDataElementPrefixByteSize(\n              'NONE', isImplicit);\n          }\n\n          size += subSize;\n          newItems.push(newItemElements);\n        }\n\n        // add sequence delimitation size\n        if (undefinedLength) {\n          size += getDataElementPrefixByteSize('NONE', isImplicit);\n        }\n\n        // update sequence element\n        element.value = newItems;\n        element.vl = size;\n        if (undefinedLength) {\n          element.undefinedLength = undefinedLength;\n        }\n      }\n    } else {\n      // pad if necessary\n      if (isVrToPad(element.vr)) {\n        let pad = getVrPad(element.vr);\n        // encode string\n        // TODO: not sure for UN...\n        if (isStringVr(element.vr)) {\n          if (charSetString.includes(element.vr)) {\n            value = this.encodeSpecialString(value.join('\\\\'));\n            pad = this.encodeSpecialString(pad);\n          } else {\n            value = this.encodeString(value.join('\\\\'));\n            pad = this.encodeString(pad);\n          }\n          if (!isEven(value.length)) {\n            value = uint8ArrayPush(value, pad);\n          }\n        } else if (element.vr === 'OB') {\n          value = padOBValue(value);\n        }\n      }\n\n      // calculate byte size\n      size = 0;\n      if (element.vr === 'AT') {\n        size = 4 * value.length;\n      } else if (element.vr === 'xs') {\n        size = value.length * Uint16Array.BYTES_PER_ELEMENT;\n      } else if (isTypedArrayVr(element.vr) || element.vr === 'ox') {\n        if (isPixelDataTag(element.tag) &&\n          Array.isArray(value)) {\n          size = 0;\n          for (let b = 0; b < value.length; ++b) {\n            size += value[b].length;\n          }\n        } else {\n          size = value.length;\n        }\n\n        // convert size to bytes\n        const vrType = vrTypes[element.vr];\n        if (isPixelDataTag(element.tag) || element.vr === 'ox') {\n          if (element.undefinedLength) {\n            const itemPrefixSize =\n              getDataElementPrefixByteSize('NONE', isImplicit);\n            // offset table\n            size += itemPrefixSize;\n            // pixel items\n            size += itemPrefixSize * value.length;\n            // add sequence delimitation size\n            size += itemPrefixSize;\n          } else {\n            // use bitsAllocated for pixel data\n            // no need to multiply for 8 bits\n            if (typeof bitsAllocated !== 'undefined') {\n              if (bitsAllocated === 1) {\n                // binary data\n                size /= 8;\n              } else if (bitsAllocated === 16) {\n                size *= Uint16Array.BYTES_PER_ELEMENT;\n              }\n            }\n          }\n        } else if (typeof vrType !== 'undefined') {\n          const bpe = getBpeForVrType(vrType);\n          if (typeof bpe !== 'undefined') {\n            size *= bpe;\n          } else {\n            throw Error('Unknown bytes per element for VR type: ' + vrType);\n          }\n        } else {\n          throw Error('Unsupported element: ' + element.vr);\n        }\n      } else {\n        size = value.length;\n      }\n\n      element.value = value;\n      element.vl = size;\n    }\n\n    // return the size of that data\n    return size;\n  }\n\n} // class DicomWriter\n\n/**\n * Fix for broken DICOM elements: Replace \"UN\" with correct VR if the\n * element exists in dictionary\n *\n * @param {object} element The DICOM element.\n */\nfunction checkUnknownVR(element) {\n  if (element.vr === 'UN') {\n    const dictVr = element.tag.getVrFromDictionary();\n    if (dictVr !== null && element.vr !== dictVr) {\n      element.vr = dictVr;\n      logger.info('Element ' + element.tag.getGroup() +\n        ' ' + element.tag.getElement() +\n        ' VR changed from UN to ' + element.vr);\n    }\n  }\n}\n\n/**\n * Get a DICOM element from its tag name (value set separatly).\n *\n * @param {string} tagName The string tag name.\n * @returns {object} The DICOM element.\n */\nfunction getDicomElement(tagName) {\n  const tag = getTagFromDictionary(tagName);\n  return {\n    tag: tag,\n    vr: tag.getVrFromDictionary()\n  };\n}\n\n/**\n * Get the number of bytes per element for a given VR type.\n *\n * @param {string} vrType The VR type as defined in the dictionary.\n * @returns {number} The bytes per element.\n */\nfunction getBpeForVrType(vrType) {\n  let bpe;\n  if (vrType === 'Uint8') {\n    bpe = Uint8Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint16') {\n    bpe = Uint16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int16') {\n    bpe = Int16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint32') {\n    bpe = Uint32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int32') {\n    bpe = Int32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float32') {\n    bpe = Float32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float64') {\n    bpe = Float64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint64') {\n    bpe = BigUint64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int64') {\n    bpe = BigInt64Array.BYTES_PER_ELEMENT;\n  }\n  return bpe;\n}\n\n/**\n * Get the DICOM elements from a DICOM json tags object.\n * The json is a simplified version of the oficial DICOM json with\n * tag names instead of keys and direct values (no value property) for\n * simple tags.\n *\n * @param {object} jsonTags The DICOM json tags object.\n * @returns {object} The DICOM elements.\n */\nexport function getElementsFromJSONTags(jsonTags) {\n  const keys = Object.keys(jsonTags);\n  const dicomElements = {};\n  for (let k = 0, len = keys.length; k < len; ++k) {\n    // get the DICOM element definition from its name\n    const tag = getTagFromDictionary(keys[k]);\n    if (!tag) {\n      continue;\n    }\n    const vr = tag.getVrFromDictionary();\n    // tag value\n    let value;\n    let undefinedLength = false;\n    const jsonTag = jsonTags[keys[k]];\n    if (vr === 'SQ') {\n      const items = [];\n      if (typeof jsonTag.undefinedLength !== 'undefined') {\n        undefinedLength = jsonTag.undefinedLength;\n      }\n      if (typeof jsonTag.value !== 'undefined' &&\n        jsonTag.value !== null) {\n        for (let i = 0; i < jsonTag.value.length; ++i) {\n          items.push(getElementsFromJSONTags(jsonTag.value[i]));\n        }\n      } else {\n        logger.trace('Undefined or null jsonTag SQ value.');\n      }\n      value = items;\n    } else {\n      if (Array.isArray(jsonTag)) {\n        value = jsonTag;\n      } else {\n        value = [jsonTag];\n      }\n    }\n    // create element\n    const dicomElement = {\n      tag: tag,\n      vr: vr,\n      value: value\n    };\n    if (undefinedLength) {\n      dicomElement.undefinedLength = undefinedLength;\n    }\n    // store\n    dicomElements[tag.getKey()] = dicomElement;\n  }\n  // return\n  return dicomElements;\n}\n","/**\n * Rescale LUT class.\n * Typically converts from integer to float.\n */\nexport class RescaleLut {\n\n  /**\n   * The rescale slope.\n   *\n   * @private\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi;\n\n  /**\n   * The internal array.\n   *\n   * @private\n   * @type {Float32Array}\n   */\n  #lut = null;\n\n  /**\n   * Flag to know if the lut is ready or not.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isReady = false;\n\n  /**\n   * The size of the LUT array.\n   *\n   * @private\n   * @type {number}\n   */\n  #length;\n\n  /**\n   * @param {RescaleSlopeAndIntercept} rsi The rescale slope and intercept.\n   * @param {number} bitsStored The number of bits used to store the data.\n   */\n  constructor(rsi, bitsStored) {\n    this.#rsi = rsi;\n    this.#length = Math.pow(2, bitsStored);\n  }\n\n  /**\n   * Get the Rescale Slope and Intercept (RSI).\n   *\n   * @returns {object} The rescale slope and intercept object.\n   */\n  getRSI() {\n    return this.#rsi;\n  }\n\n  /**\n   * Is the lut ready to use or not? If not, the user must\n   * call 'initialise'.\n   *\n   * @returns {boolean} True if the lut is ready to use.\n   */\n  isReady() {\n    return this.#isReady;\n  }\n\n  /**\n   * Initialise the LUT.\n   */\n  initialise() {\n    // check if already initialised\n    if (this.#isReady) {\n      return;\n    }\n    // create lut and fill it\n    this.#lut = new Float32Array(this.#length);\n    for (let i = 0; i < this.#length; ++i) {\n      this.#lut[i] = this.#rsi.apply(i);\n    }\n    // update ready flag\n    this.#isReady = true;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this.#length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range.\n   * @returns {number} The float32 value of the LUT at the given offset.\n   */\n  getValue(offset) {\n    return this.#lut[offset];\n  }\n\n} // class RescaleLut\n","/**\n * Window LUT class.\n * Typically converts from float to integer.\n */\nexport class WindowLut {\n\n  /**\n   * The rescale LUT.\n   *\n   * @private\n   * @type {RescaleLut}\n   */\n  #rescaleLut;\n\n  /**\n   * Signed data flag.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isSigned;\n\n  /**\n   * The internal array: Uint8ClampedArray clamps between 0 and 255.\n   *\n   * @private\n   * @type {Uint8ClampedArray}\n   */\n  #lut = null;\n\n  /**\n   * The window level.\n   *\n   * @private\n   * @type {object}\n   */\n  #windowLevel = null;\n\n  /**\n   * Flag to know if the lut is ready or not.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isReady = false;\n\n  /**\n   * Shift for signed data.\n   *\n   * @private\n   * @type {number}\n   */\n  #signedShift = 0;\n\n  /**\n   * @param {RescaleLut} rescaleLut The associated rescale LUT.\n   * @param {boolean} isSigned Flag to know if the data is signed or not.\n   */\n  constructor(rescaleLut, isSigned) {\n    this.#rescaleLut = rescaleLut;\n    this.#isSigned = isSigned;\n  }\n\n  /**\n   * Get the window / level.\n   *\n   * @returns {object} The window / level.\n   */\n  getWindowLevel() {\n    return this.#windowLevel;\n  }\n\n  /**\n   * Get the signed flag.\n   *\n   * @returns {boolean} The signed flag.\n   */\n  isSigned() {\n    return this.#isSigned;\n  }\n\n  /**\n   * Get the rescale lut.\n   *\n   * @returns {object} The rescale lut.\n   */\n  getRescaleLut() {\n    return this.#rescaleLut;\n  }\n\n  /**\n   * Is the lut ready to use or not? If not, the user must\n   * call 'update'.\n   *\n   * @returns {boolean} True if the lut is ready to use.\n   */\n  isReady() {\n    return this.#isReady;\n  }\n\n  /**\n   * Set the window center and width.\n   *\n   * @param {object} wl The window level.\n   */\n  setWindowLevel(wl) {\n    // store the window values\n    this.#windowLevel = wl;\n    // possible signed shift\n    this.#signedShift = 0;\n    this.#windowLevel.setSignedOffset(0);\n    if (this.#isSigned) {\n      const size = this.#rescaleLut.getLength();\n      this.#signedShift = size / 2;\n      this.#windowLevel.setSignedOffset(\n        this.#rescaleLut.getRSI().getSlope() * this.#signedShift);\n    }\n    // update ready flag\n    this.#isReady = false;\n  }\n\n  /**\n   * Update the lut if needed..\n   */\n  update() {\n    // check if we need to update\n    if (this.#isReady) {\n      return;\n    }\n\n    // check rescale lut\n    if (!this.#rescaleLut.isReady()) {\n      this.#rescaleLut.initialise();\n    }\n    // create window lut\n    const size = this.#rescaleLut.getLength();\n    if (!this.#lut) {\n      // use clamped array (polyfilled in env.js)\n      this.#lut = new Uint8ClampedArray(size);\n    }\n    // by default WindowLevel returns a value in the [0,255] range\n    // this is ok with regular Arrays and ClampedArray.\n    for (let i = 0; i < size; ++i) {\n      this.#lut[i] = this.#windowLevel.apply(this.#rescaleLut.getValue(i));\n    }\n\n    // update ready flag\n    this.#isReady = true;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this.#lut.length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range.\n   * @returns {number} The integer value (default [0,255]) of the LUT\n   *   at the given offset.\n   */\n  getValue(offset) {\n    return this.#lut[offset + this.#signedShift];\n  }\n\n} // class WindowLut\n","/**\n * Lookup tables for image colour display.\n */\n\nconst lut_range_max = 256;\n\n/**\n * Build a LUT of size lut_range_max.\n *\n * @param {Function} func The i to lut function.\n * @returns {Array} THe LUT.\n */\nfunction buildLut(func) {\n  const lut = [];\n  for (let i = 0; i < lut_range_max; ++i) {\n    lut.push(func(i));\n  }\n  return lut;\n}\n\n/**\n * Ramp to lut_range_max minus one on the first third values.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxFirstThird(i) {\n  const val = i * 3;\n  if (val > lut_range_max - 1) {\n    return lut_range_max - 1;\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the second third values.\n *  otherwise return 0 for the first third and\n *  lut_range_max minus one for the last third.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxSecondThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= third) {\n    val = (i - third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the last third values.\n *  otherwise return 0.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxThirdThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= 2 * third) {\n    val = (i - 2 * third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Identity, returns i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction id(i) {\n  return i;\n}\n\n/**\n * Returns lut_range_max minus one minus i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction invId(i) {\n  return (lut_range_max - 1) - i;\n}\n\nexport const lut = {\n  // plain\n  plain: {\n    red: buildLut(id),\n    green: buildLut(id),\n    blue: buildLut(id)\n  },\n\n  // inverse plain\n  invPlain: {\n    red: buildLut(invId),\n    green: buildLut(invId),\n    blue: buildLut(invId)\n  },\n\n  // rainbow\n  /* eslint-disable max-len */\n  rainbow: {\n    blue: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 247, 239, 231, 223, 215, 207, 199, 191, 183, 175, 167, 159, 151, 143, 135, 127, 119, 111, 103, 95, 87, 79, 71, 63, 55, 47, 39, 31, 23, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 251, 249, 247, 245, 243, 241, 239, 237, 235, 233, 231, 229, 227, 225, 223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 192, 189, 186, 183, 180, 177, 174, 171, 168, 165, 162, 159, 156, 153, 150, 147, 144, 141, 138, 135, 132, 129, 126, 123, 120, 117, 114, 111, 108, 105, 102, 99, 96, 93, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3],\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  },\n  /* eslint-enable max-len */\n\n  // hot\n  hot: {\n    red: buildLut(toMaxFirstThird),\n    green: buildLut(toMaxSecondThird),\n    blue: buildLut(toMaxThirdThird)\n  },\n\n  // hot iron\n  /* eslint-disable max-len */\n  hot_iron: {\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    bluen  },\n  /* eslint-enable max-len */\n\n  // pet\n  /* eslint-disable max-len */\n  pet: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 63, 61, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, 15, 13, 11, 9, 7, 5, 3, 1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    blue: [0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 252, 248, 244, 240, 236, 232, 228, 224, 220, 216, 212, 208, 204, 200, 196, 192, 188, 184, 180, 176, 172, 168, 164, 160, 156, 152, 148, 144, 140, 136, 132, 128, 124, 120, 116, 112, 108, 104, 100, 96, 92, 88, 84, 80, 76, 72, 68, 64, 60, 56, 52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8, 4, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 255]\n  },\n  /* eslint-enable max-len */\n\n  // hot metal blue\n  /* eslint-disable max-len */\n  hot_metal_blue: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 52, 55, 57, 59, 62, 64, 66, 69, 71, 74, 76, 78, 81, 83, 85, 88, 90, 93, 96, 99, 102, 105, 108, 111, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 166, 169, 172, 175, 178, 181, 184, 187, 190, 194, 198, 201, 205, 209, 213, 217, 221, 224, 228, 232, 236, 240, 244, 247, 251, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 60, 62, 64, 66, 68, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 109, 111, 113, 115, 117, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 139, 141, 143, 145, 147, 149, 151, 152, 154, 156, 158, 160, 162, 164, 166, 168, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 201, 203, 205, 207, 209, 211, 213, 215, 216, 218, 220, 222, 224, 226, 228, 229, 231, 233, 235, 237, 239, 240, 242, 244, 246, 248, 250, 251, 253, 255],\n    blue: [0, 2, 4, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 197, 194, 191, 188, 185, 182, 179, 176, 174, 171, 168, 165, 162, 159, 156, 153, 150, 144, 138, 132, 126, 121, 115, 109, 103, 97, 91, 85, 79, 74, 68, 62, 56, 50, 47, 44, 41, 38, 35, 32, 29, 26, 24, 21, 18, 15, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 210, 213, 216, 219, 223, 226, 229, 232, 236, 239, 242, 245, 249, 252, 255]\n  },\n  /* eslint-enable max-len */\n\n  // pet 20 step\n  /* eslint-disable max-len */\n  pet_20step: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  }\n  /* eslint-enable max-len */\n};\n","/**\n * Minimum window width value.\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2\n */\nconst MinWindowWidth = 1;\n\nexport const defaultPresets = {\n  CT: {\n    mediastinum: {center: 40, width: 400},\n    lung: {center: -500, width: 1500},\n    bone: {center: 500, width: 2000},\n    brain: {center: 40, width: 80},\n    head: {center: 90, width: 350}\n  }\n};\n\n/**\n * Validate an input window width.\n *\n * @param {number} value The value to test.\n * @returns {number} A valid window width.\n */\nexport function validateWindowWidth(value) {\n  return value < MinWindowWidth ? MinWindowWidth : value;\n}\n\n/**\n * WindowLevel class.\n * <br>Pseudo-code:\n * <pre>\n *  if (x &lt;= c - 0.5 - (w-1)/2), then y = ymin\n *  else if (x > c - 0.5 + (w-1)/2), then y = ymax,\n *  else y = ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax - ymin) + ymin\n * </pre>\n *\n * @see DICOM doc for [Window Center and Window Width]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2}\n */\nexport class WindowLevel {\n\n  /**\n   * The center.\n   *\n   * @private\n   * @type {number}\n   */\n  #center;\n\n  /**\n   * The width.\n   *\n   * @private\n   * @type {number}\n   */\n  #width;\n\n  /**\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   */\n  constructor(center, width) {\n    // check width\n    if (width < MinWindowWidth) {\n      throw new Error('Window width shall always be greater than or equal to ' +\n        MinWindowWidth);\n    }\n    this.#center = center;\n    this.#width = width;\n\n    this.#init();\n  }\n\n  /**\n   * Signed data offset. Defaults to 0.\n   *\n   * @private\n   * @type {number}\n   */\n  #signedOffset = 0;\n\n  /**\n   * Output value minimum. Defaults to 0.\n   *\n   * @private\n   * @type {number}\n   */\n  #ymin = 0;\n\n  /**\n   * Output value maximum. Defaults to 255.\n   *\n   * @private\n   * @type {number}\n   */\n  #ymax = 255;\n\n  /**\n   * Input value minimum (calculated).\n   *\n   * @private\n   * @type {number}\n   */\n  #xmin = null;\n\n  /**\n   * Input value maximum (calculated).\n   *\n   * @private\n   * @type {number}\n   */\n  #xmax = null;\n\n  /**\n   * Window level equation slope (calculated).\n   *\n   * @private\n   * @type {number}\n   */\n  #slope = null;\n\n  /**\n   * Window level equation intercept (calculated).\n   *\n   * @private\n   * @type {number}\n   */\n  #inter = null;\n\n  /**\n   * Initialise members. Called at construction.\n   *\n   * @private\n   */\n  #init() {\n    const c = this.#center + this.#signedOffset;\n    // from the standard\n    this.#xmin = c - 0.5 - ((this.#width - 1) / 2);\n    this.#xmax = c - 0.5 + ((this.#width - 1) / 2);\n    // develop the equation:\n    // y = ( ( x - (c - 0.5) ) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    // y = ( x / (w-1) ) * (ymax - ymin) +\n    //     ( -(c - 0.5) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    this.#slope = (this.#ymax - this.#ymin) / (this.#width - 1);\n    this.#inter = (-(c - 0.5) / (this.#width - 1) + 0.5) *\n      (this.#ymax - this.#ymin) + this.#ymin;\n  }\n\n  /**\n   * Get the window center.\n   *\n   * @returns {number} The window center.\n   */\n  getCenter() {\n    return this.#center;\n  }\n\n  /**\n   * Get the window width.\n   *\n   * @returns {number} The window width.\n   */\n  getWidth() {\n    return this.#width;\n  }\n\n  /**\n   * Set the output value range.\n   *\n   * @param {number} min The output value minimum.\n   * @param {number} max The output value maximum.\n   */\n  setRange(min, max) {\n    this.#ymin = parseInt(min, 10);\n    this.#ymax = parseInt(max, 10);\n    // re-initialise\n    this.#init();\n  }\n\n  /**\n   * Set the signed offset.\n   *\n   * @param {number} offset The signed data offset,\n   *   typically: slope * ( size / 2).\n   */\n  setSignedOffset(offset) {\n    this.#signedOffset = offset;\n    // re-initialise\n    this.#init();\n  }\n\n  /**\n   * Apply the window level on an input value.\n   *\n   * @param {number} value The value to rescale as an integer.\n   * @returns {number} The leveled value, in the\n   *  [ymin, ymax] range (default [0,255]).\n   */\n  apply(value) {\n    if (value <= this.#xmin) {\n      return this.#ymin;\n    } else if (value > this.#xmax) {\n      return this.#ymax;\n    } else {\n      return parseInt(((value * this.#slope) + this.#inter), 10);\n    }\n  }\n\n  /**\n   * Check for window level equality.\n   *\n   * @param {object} rhs The other window level to compare to.\n   * @returns {boolean} True if both window level are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter() === rhs.getCenter() &&\n      this.getWidth() === rhs.getWidth();\n  }\n\n  /**\n   * Get a string representation of the window level.\n   *\n   * @returns {string} The window level as a string.\n   */\n  toString() {\n    return (this.getCenter() + ', ' + this.getWidth());\n  }\n\n} // class WindowLevel\n","// example implementation: dcmtk/dcmiod/libsrc/cielabutil.cc\n// https://github.com/DCMTK/dcmtk/blob/DCMTK-3.6.6/dcmiod/libsrc/cielabutil.cc\n\n/**\n * Check if two rgb objects are equal.\n *\n * @param {object} c1 The first colour.\n * @param {object} c2 The second colour.\n * @returns {boolean} True if both colour are equal.\n */\nexport function isEqualRgb(c1, c2) {\n  return c1 !== null &&\n    c2 !== null &&\n    typeof c1 !== 'undefined' &&\n    typeof c2 !== 'undefined' &&\n    c1.r === c2.r &&\n    c1.g === c2.g &&\n    c1.b === c2.b;\n}\n\n/**\n * Convert YBR to RGB.\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.7.html#sect_C.7.6.3.1.2\n * @see https://en.wikipedia.org/wiki/YCbCr#JPEG_conversion\n * @param {number} y The Y component.\n * @param {number} cb The Cb component.\n * @param {number} cr The Cr component.\n * @returns {object} RGB equivalent as {r,g,b}.\n */\nexport function ybrToRgb(y, cb, cr) {\n  return {\n    r: y + 1.402 * (cr - 128),\n    g: y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128),\n    b: y + 1.772 * (cb - 128)\n  };\n}\n\n/**\n * Convert a hex color into RGB.\n *\n * @param {string} hexStr The hex color as '#ab01ef'.\n * @returns {object} The RGB values as {r,g,b}.\n */\nexport function hexToRgb(hexStr) {\n  return {\n    r: parseInt(hexStr.substring(1, 3), 16),\n    g: parseInt(hexStr.substring(3, 5), 16),\n    b: parseInt(hexStr.substring(5, 7), 16)\n  };\n}\n\n/**\n * Convert RGB to its hex equivalent.\n *\n * @param {object} rgb The RGB object as {r,g,b}.\n * @returns {string} A string representing the hex color as '#ab01ef'.\n */\nexport function rgbToHex(rgb) {\n  return '#' +\n    ((1 << 24) + (rgb.r << 16) + (rgb.g << 8) + rgb.b).toString(16).slice(1);\n}\n\n/**\n * Get the brightness of a RGB colour: calculates\n * the luma (Y) of the YIQ colour space.\n *\n * @see https://en.wikipedia.org/wiki/YIQ#From_RGB_to_YIQ\n * @param {object} rgbTriplet RGB triplet.\n * @returns {number} The brightness ([0,1]).\n */\nexport function getBrightness(rgbTriplet) {\n  // 0.001172549 = 0.299 / 255\n  // 0.002301961 = 0.587 / 255\n  // 0.000447059 = 0.114 / 255\n  return rgbTriplet.r * 0.001172549 +\n    rgbTriplet.g * 0.002301961 +\n    rgbTriplet.b * 0.000447059;\n}\n\n/**\n * Check if a colour given in hexadecimal format is dark.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {boolean} True if the colour is dark (brightness < 0.5).\n */\nexport function isDarkColour(hexColour) {\n  return getBrightness(hexToRgb(hexColour)) < 0.5;\n}\n\n/**\n * Get the shadow colour of an input colour.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {string} The shadow colour (white or black).\n */\nexport function getShadowColour(hexColour) {\n  return isDarkColour(hexColour) ? '#fff' : '#000';\n}\n\n/**\n * Unsigned int CIE LAB value ([0, 65535]) to CIE LAB value\n *   (L: [0, 100], a: [-128, 127], b: [-128, 127]).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b} with unsigned range.\n * @returns {object} CIE LAB triplet as {l,a,b} with CIE LAB range.\n */\nexport function uintLabToLab(triplet) {\n  // 0.001525902 = 100 / 65535\n  // 0.003891051 = 255 / 65535\n  return {\n    l: 0.001525902 * triplet.l,\n    a: 0.003891051 * triplet.a - 128,\n    b: 0.003891051 * triplet.b - 128,\n  };\n}\n\n/**\n * CIE LAB value (L: [0, 100], a: [-128, 127], b: [-128, 127]) to\n *   unsigned int CIE LAB ([0, 65535]).\n *\n * @param {object} triplet CIE XYZ triplet as {x,y,z} with CIE LAB range.\n * @returns {object} CIE LAB triplet as {l,a,b} with unsigned range.\n */\nexport function labToUintLab(triplet) {\n  // 655.35 = 65535 / 100\n  // aUint = (a + 128) * 65535 / 255\n  // 257 = 65535 / 255\n  // 32896 = 257 * 128\n  return {\n    l: 655.35 * triplet.l,\n    a: 257 * triplet.a + 32896,\n    b: 257 * triplet.b + 32896,\n  };\n}\n\n/**\n * CIE Standard Illuminant D65, standard 2° observer.\n *\n * @see https://en.wikipedia.org/wiki/Illuminant_D65\n */\nconst d65 = {\n  x: 95.0489,\n  y: 100,\n  z: 108.884\n};\n\n/**\n * Convert CIE LAB to CIE XYZ (standard illuminant D65, 2degree 1931).\n *\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIELAB_to_CIEXYZ\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {object} CIE XYZ triplet as {x,y,z}.\n */\nexport function cielabToCiexyz(triplet) {\n  /**\n   * Apply the inverse lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function invLabFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    if (x > 0.206896552) {\n      res = Math.pow(x, 3);\n    } else {\n      // 0.128418549 = 3 * delta^2\n      // 0.017712903 = 3 * delta^2 * (4 / 29)\n      res = 0.128418549 * x - 0.017712903;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const l0 = (triplet.l + 16) / 116;\n\n  return {\n    x: illuminant.x * invLabFunc(l0 + triplet.a / 500),\n    y: illuminant.y * invLabFunc(l0),\n    z: illuminant.z * invLabFunc(l0 - triplet.b / 200)\n  };\n}\n\n/**\n * Convert CIE XYZ to CIE LAB (standard illuminant D65, 2degree 1931).\n *\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIEXYZ_to_CIELAB\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function ciexyzToCielab(triplet) {\n  /**\n   * Apply the lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function labFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    // delta^3 = 0.008856452\n    if (x > 0.008856452) {\n      res = Math.pow(x, 0.333333333);\n    } else {\n      // 7.787037037 = 1 / 3 * delta^2\n      // 0.137931034 = 4 / 29\n      res = 7.787037037 * x + 0.137931034;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const fy = labFunc(triplet.y / illuminant.y);\n\n  return {\n    l: 116 * fy - 16,\n    a: 500 * (labFunc(triplet.x / illuminant.x) - fy),\n    b: 200 * (fy - labFunc(triplet.z / illuminant.z))\n  };\n}\n\n/**\n * Convert CIE XYZ to sRGB.\n *\n * @see https://en.wikipedia.org/wiki/SRGB#From_CIE_XYZ_to_sRGB\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} sRGB triplet as {r,g,b}.\n */\nexport function ciexyzToSrgb(triplet) {\n  /**\n   * Apply the gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function gammaFunc(x) {\n    let res = null;\n    if (x <= 0.0031308) {\n      res = 12.92 * x;\n    } else {\n      // 0.416666667 = 1 / 2.4\n      res = 1.055 * Math.pow(x, 0.416666667) - 0.055;\n    }\n    // clip [0,1]\n    return Math.min(1, Math.max(0, res));\n  }\n\n  const x = triplet.x / 100;\n  const y = triplet.y / 100;\n  const z = triplet.z / 100;\n\n  return {\n    r: Math.round(255 * gammaFunc(3.2406 * x - 1.5372 * y - 0.4986 * z)),\n    g: Math.round(255 * gammaFunc(-0.9689 * x + 1.8758 * y + 0.0415 * z)),\n    b: Math.round(255 * gammaFunc(0.0557 * x - 0.2040 * y + 1.0570 * z))\n  };\n}\n\n/**\n * Convert sRGB to CIE XYZ.\n *\n * @see https://en.wikipedia.org/wiki/SRGB#From_sRGB_to_CIE_XYZ\n * @param {object} triplet sRGB triplet as {r,g,b}.\n * @returns {object} CIE XYZ triplet as {x,y,z}.\n */\nexport function srgbToCiexyz(triplet) {\n  /**\n   * Apply the inverse gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function invGammaFunc(x) {\n    let res = null;\n    if (x <= 0.04045) {\n      res = x / 12.92;\n    } else {\n      res = Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n    return res;\n  }\n\n  const rl = invGammaFunc(triplet.r / 255);\n  const gl = invGammaFunc(triplet.g / 255);\n  const bl = invGammaFunc(triplet.b / 255);\n\n  return {\n    x: 100 * (0.4124 * rl + 0.3576 * gl + 0.1805 * bl),\n    y: 100 * (0.2126 * rl + 0.7152 * gl + 0.0722 * bl),\n    z: 100 * (0.0193 * rl + 0.1192 * gl + 0.9505 * bl)\n  };\n}\n\n/**\n * Convert CIE LAB to sRGB (standard illuminant D65).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {object} sRGB triplet as {r,g,b}.\n */\nexport function cielabToSrgb(triplet) {\n  return ciexyzToSrgb(cielabToCiexyz(triplet));\n}\n\n/**\n * Convert sRGB to CIE LAB (standard illuminant D65).\n *\n * @param {object} triplet sRGB triplet as {r,g,b}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function srgbToCielab(triplet) {\n  return ciexyzToCielab(srgbToCiexyz(triplet));\n}\n\n/**\n * Get the hex code of a string colour for a colour used in pre dwv v0.17.\n *\n * @param {string} name The name of a colour.\n * @returns {string} The hex representing the colour.\n */\nexport function colourNameToHex(name) {\n  // default colours used in dwv version < 0.17\n  const dict = {\n    Yellow: '#ffff00',\n    Red: '#ff0000',\n    White: '#ffffff',\n    Green: '#008000',\n    Blue: '#0000ff',\n    Lime: '#00ff00',\n    Fuchsia: '#ff00ff',\n    Black: '#000000'\n  };\n  let res = '#ffff00';\n  if (typeof dict[name] !== 'undefined') {\n    res = dict[name];\n  }\n  return res;\n}\n","/**\n * Immutable 3D vector.\n */\nexport class Vector3D {\n\n  /**\n   * X coordinate.\n   *\n   * @private\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y coordinate.\n   *\n   * @private\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z coordinate.\n   *\n   * @private\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X component of the vector.\n   * @param {number} y The Y component of the vector.\n   * @param {number} z The Z component of the vector.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X component of the vector.\n   *\n   * @returns {number} The X component of the vector.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y component of the vector.\n   *\n   * @returns {number} The Y component of the vector.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z component of the vector.\n   *\n   * @returns {number} The Z component of the vector.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n  /**\n   * Check for Vector3D equality.\n   *\n   * @param {object} rhs The other vector to compare to.\n   * @returns {boolean} True if both vectors are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY() &&\n      this.getZ() === rhs.getZ();\n  }\n\n  /**\n   * Get a string representation of the Vector3D.\n   *\n   * @returns {string} The vector as a string.\n   */\n  toString() {\n    return '(' + this.getX() +\n      ', ' + this.getY() +\n      ', ' + this.getZ() + ')';\n  }\n\n  /**\n   * Get the norm of the vector.\n   *\n   * @returns {number} The norm.\n   */\n  norm() {\n    return Math.sqrt(\n      (this.getX() * this.getX()) +\n      (this.getY() * this.getY()) +\n      (this.getZ() * this.getZ())\n    );\n  }\n\n  /**\n   * Get the cross product with another Vector3D, ie the\n   * vector that is perpendicular to both a and b.\n   * If both vectors are parallel, the cross product is a zero vector.\n   *\n   * @see https://en.wikipedia.org/wiki/Cross_product\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {Vector3D} The result vector.\n   */\n  crossProduct(vector3D) {\n    return new Vector3D(\n      (this.getY() * vector3D.getZ()) - (vector3D.getY() * this.getZ()),\n      (this.getZ() * vector3D.getX()) - (vector3D.getZ() * this.getX()),\n      (this.getX() * vector3D.getY()) - (vector3D.getX() * this.getY()));\n  }\n\n  /**\n   * Get the dot product with another Vector3D.\n   *\n   * @see https://en.wikipedia.org/wiki/Dot_product\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {number} The dot product.\n   */\n  dotProduct(vector3D) {\n    return (this.getX() * vector3D.getX()) +\n      (this.getY() * vector3D.getY()) +\n      (this.getZ() * vector3D.getZ());\n  }\n\n} // Vector3D class","import {Vector3D} from './vector';\nimport {Point3D} from './point';\nimport {Index} from './index';\nimport {logger} from '../utils/logger';\n\n// difference between 1 and the smallest floating point number greater than 1\n// -> ~2e-16\nif (typeof Number.EPSILON === 'undefined') {\n  Number.EPSILON = Math.pow(2, -52);\n}\n// -> ~2e-12\nexport const BIG_EPSILON = Number.EPSILON * 1e4;\n// 'real world', for example when comparing positions\nexport const REAL_WORLD_EPSILON = 1e-4;\n\n/**\n * Check if two numbers are similar.\n *\n * @param {number} a The first number.\n * @param {number} b The second number.\n * @param {number} tol The comparison tolerance\n *   default to Number.EPSILON.\n * @returns {boolean} True if similar.\n */\nexport function isSimilar(a, b, tol) {\n  if (typeof tol === 'undefined') {\n    tol = Number.EPSILON;\n  }\n  return Math.abs(a - b) < tol;\n}\n\n/**\n * Immutable 3x3 Matrix.\n */\nexport class Matrix33 {\n\n  /**\n   * Matrix values.\n   *\n   * @private\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * Matrix inverse, calculated at first ask\n   *\n   * @private\n   * @type {Array}\n   */\n  #inverse;\n\n  /**\n   * @param {Array} values row-major ordered 9 values.\n   */\n  constructor(values) {\n    this.#values = values;\n  }\n\n  /**\n   * Get a value of the matrix.\n   *\n   * @param {number} row The row at wich to get the value.\n   * @param {number} col The column at wich to get the value.\n   * @returns {number} The value at the position.\n   */\n  get(row, col) {\n    return this.#values[row * 3 + col];\n  }\n\n  /**\n   * Get the inverse of this matrix.\n   *\n   * @returns {Matrix33|undefined} The inverse matrix or undefined\n   *   if the determinant is zero.\n   */\n  getInverse() {\n    if (typeof this.#inverse === 'undefined') {\n      this.#inverse = getMatrixInverse(this);\n    }\n    return this.#inverse;\n  }\n\n  /**\n   * Check for Matrix33 equality.\n   *\n   * @param {Matrix33} rhs The other matrix to compare to.\n   * @param {number} p A numeric expression for the precision to use in check\n   *   (ex: 0.001). Defaults to Number.EPSILON if not provided.\n   * @returns {boolean} True if both matrices are equal.\n   */\n  equals(rhs, p) {\n    // TODO: add type check\n    // check values\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (!isSimilar(this.get(i, j), rhs.get(i, j), p)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Get a string representation of the Matrix33.\n   *\n   * @returns {string} The matrix as a string.\n   */\n  toString() {\n    let str = '[';\n    for (let i = 0; i < 3; ++i) {\n      if (i !== 0) {\n        str += ', \\n ';\n      }\n      for (let j = 0; j < 3; ++j) {\n        if (j !== 0) {\n          str += ', ';\n        }\n        str += this.get(i, j);\n      }\n    }\n    str += ']';\n    return str;\n  }\n\n  /**\n   * Multiply this matrix by another.\n   *\n   * @param {Matrix33} rhs The matrix to multiply by.\n   * @returns {Matrix33} The product matrix.\n   */\n  multiply(rhs) {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        let tmp = 0;\n        for (let k = 0; k < 3; ++k) {\n          tmp += this.get(i, k) * rhs.get(k, j);\n        }\n        values.push(tmp);\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Get the absolute value of this matrix.\n   *\n   * @returns {Matrix33} The result matrix.\n   */\n  getAbs() {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        values.push(Math.abs(this.get(i, j)));\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Multiply this matrix by a 3D array.\n   *\n   * @param {Array} array3D The input 3D array.\n   * @returns {Array} The result 3D array.\n   */\n  multiplyArray3D(array3D) {\n    if (array3D.length !== 3) {\n      throw new Error('Cannot multiply 3x3 matrix with non 3D array: ',\n        array3D.length);\n    }\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      let tmp = 0;\n      for (let j = 0; j < 3; ++j) {\n        tmp += this.get(i, j) * array3D[j];\n      }\n      values.push(tmp);\n    }\n    return values;\n  }\n\n  /**\n   * Multiply this matrix by a 3D vector.\n   *\n   * @param {Vector3D} vector3D The input 3D vector.\n   * @returns {Vector3D} The result 3D vector.\n   */\n  multiplyVector3D(vector3D) {\n    const array3D = this.multiplyArray3D(\n      [vector3D.getX(), vector3D.getY(), vector3D.getZ()]\n    );\n    return new Vector3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D point.\n   *\n   * @param {Point3D} point3D The input 3D point.\n   * @returns {Point3D} The result 3D point.\n   */\n  multiplyPoint3D(point3D) {\n    const array3D = this.multiplyArray3D(\n      [point3D.getX(), point3D.getY(), point3D.getZ()]\n    );\n    return new Point3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D index.\n   *\n   * @param {Index} index3D The input 3D index.\n   * @returns {Index} The result 3D index.\n   */\n  multiplyIndex3D(index3D) {\n    const array3D = this.multiplyArray3D(index3D.getValues());\n    return new Index(array3D);\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a row.\n   *\n   * @param {number} row The row to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getRowAbsMax(row) {\n    const values = [\n      Math.abs(this.get(row, 0)),\n      Math.abs(this.get(row, 1)),\n      Math.abs(this.get(row, 2))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(row, index),\n      index: index\n    };\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a column.\n   *\n   * @param {number} col The column to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getColAbsMax(col) {\n    const values = [\n      Math.abs(this.get(0, col)),\n      Math.abs(this.get(1, col)),\n      Math.abs(this.get(2, col))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(index, col),\n      index: index\n    };\n  }\n\n  /**\n   * Get this matrix with only zero and +/- ones instead of the maximum,\n   *\n   * @returns {Matrix33} The simplified matrix.\n   */\n  asOneAndZeros() {\n    const res = [];\n    for (let j = 0; j < 3; ++j) {\n      const max = this.getRowAbsMax(j);\n      const sign = max.value > 0 ? 1 : -1;\n      for (let i = 0; i < 3; ++i) {\n        if (i === max.index) {\n          //res.push(1);\n          res.push(1 * sign);\n        } else {\n          res.push(0);\n        }\n      }\n    }\n    return new Matrix33(res);\n  }\n\n  /**\n   * Get the third column direction index of an orientation matrix.\n   *\n   * @returns {number} The index of the absolute maximum of the last column.\n   */\n  getThirdColMajorDirection() {\n    return this.getColAbsMax(2).index;\n  }\n\n} // Matrix33\n\n/**\n * Get the inverse of an input 3*3 matrix.\n *\n * @param {Matrix33} m The input matrix.\n * @returns {Matrix33|undefined} The inverse matrix or undefined\n *   if the determinant is zero.\n * @see https://en.wikipedia.org/wiki/Invertible_matrix#Inversion_of_3_%C3%97_3_matrices\n * @see https://github.com/willnode/N-Matrix-Programmer\n */\nfunction getMatrixInverse(m) {\n  const m00 = m.get(0, 0);\n  const m01 = m.get(0, 1);\n  const m02 = m.get(0, 2);\n  const m10 = m.get(1, 0);\n  const m11 = m.get(1, 1);\n  const m12 = m.get(1, 2);\n  const m20 = m.get(2, 0);\n  const m21 = m.get(2, 1);\n  const m22 = m.get(2, 2);\n\n  const a1212 = m11 * m22 - m12 * m21;\n  const a2012 = m12 * m20 - m10 * m22;\n  const a0112 = m10 * m21 - m11 * m20;\n\n  let det = m00 * a1212 + m01 * a2012 + m02 * a0112;\n  if (det === 0) {\n    logger.warn('Cannot invert 3*3 matrix with zero determinant.');\n    return undefined;\n  }\n  det = 1 / det;\n\n  const values = [\n    det * a1212,\n    det * (m02 * m21 - m01 * m22),\n    det * (m01 * m12 - m02 * m11),\n    det * a2012,\n    det * (m00 * m22 - m02 * m20),\n    det * (m02 * m10 - m00 * m12),\n    det * a0112,\n    det * (m01 * m20 - m00 * m21),\n    det * (m00 * m11 - m01 * m10)\n  ];\n\n  return new Matrix33(values);\n}\n\n/**\n * Create a 3x3 identity matrix.\n *\n * @returns {Matrix33} The identity matrix.\n */\nexport function getIdentityMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Check if a matrix is a 3x3 identity matrix.\n *\n * @param {Matrix33} mat33 The matrix to test.\n * @returns {boolean} True if identity.\n */\nexport function isIdentityMat33(mat33) {\n  return mat33.equals(getIdentityMat33());\n}\n\n/**\n * Create a 3x3 coronal (xzy) matrix.\n *\n * @returns {Matrix33} The coronal matrix.\n */\nexport function getCoronalMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 0, 1,\n    0, -1, 0\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Create a 3x3 sagittal (yzx) matrix.\n *\n * @returns {Matrix33} The sagittal matrix.\n */\nexport function getSagittalMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    0, 0, -1,\n    1, 0, 0,\n    0, -1, 0\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Get an orientation matrix from a name.\n *\n * @param {string} name The orientation name.\n * @returns {Matrix33} The orientation matrix.\n */\nexport function getMatrixFromName(name) {\n  let matrix = null;\n  if (name === 'axial') {\n    matrix = getIdentityMat33();\n  } else if (name === 'coronal') {\n    matrix = getCoronalMat33();\n  } else if (name === 'sagittal') {\n    matrix = getSagittalMat33();\n  }\n  return matrix;\n}\n","import {isSimilar} from './matrix';\nimport {Vector3D} from './vector';\n\n/**\n * Immutable 2D point.\n */\nexport class Point2D {\n\n  /**\n   * X position.\n   *\n   * @private\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @private\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   */\n  constructor(x, y) {\n    this.#x = x;\n    this.#y = y;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Check for Point2D equality.\n   *\n   * @param {Point2D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY();\n  }\n\n  /**\n   * Get a string representation of the Point2D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.getX() + ', ' + this.getY() + ')';\n  }\n\n  /**\n   * Get the distance to another Point2D.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {number} The distance to the input point.\n   */\n  getDistance(point2D) {\n    return Math.sqrt(\n      (this.getX() - point2D.getX()) * (this.getX() - point2D.getX()) +\n      (this.getY() - point2D.getY()) * (this.getY() - point2D.getY()));\n  }\n\n  /**\n   * Round a Point2D.\n   *\n   * @returns {Point2D} The rounded point.\n   */\n  getRound() {\n    return new Point2D(\n      Math.round(this.getX()),\n      Math.round(this.getY())\n    );\n  }\n\n} // Point2D class\n\n/**\n * Immutable 3D point.\n */\nexport class Point3D {\n\n  /**\n   * X position.\n   *\n   * @private\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @private\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z position.\n   *\n   * @private\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   * @param {number} z The Z coordinate for the point.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z position of the point.\n   *\n   * @returns {number} The Z position of the point.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n\n  /**\n   * Check for Point3D equality.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY() &&\n      this.getZ() === rhs.getZ();\n  }\n\n  /**\n   * Check for Point3D similarity.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @param {number} tol Optional comparison tolerance,\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if both points are equal.\n   */\n  isSimilar(rhs, tol) {\n    return rhs !== null &&\n      isSimilar(this.getX(), rhs.getX(), tol) &&\n      isSimilar(this.getY(), rhs.getY(), tol) &&\n      isSimilar(this.getZ(), rhs.getZ(), tol);\n  }\n\n  /**\n   * Get a string representation of the Point3D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.getX() +\n      ', ' + this.getY() +\n      ', ' + this.getZ() + ')';\n  }\n\n  /**\n   * Get the distance to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} Ths distance to the input point.\n   */\n  getDistance(point3D) {\n    return Math.sqrt(\n      (this.getX() - point3D.getX()) * (this.getX() - point3D.getX()) +\n      (this.getY() - point3D.getY()) * (this.getY() - point3D.getY()) +\n      (this.getZ() - point3D.getZ()) * (this.getZ() - point3D.getZ()));\n  }\n\n  /**\n   * Get the difference to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {Point3D} The 3D vector from the input point to this one.\n   */\n  minus(point3D) {\n    return new Vector3D(\n      (this.getX() - point3D.getX()),\n      (this.getY() - point3D.getY()),\n      (this.getZ() - point3D.getZ()));\n  }\n\n} // Point3D class\n\n/**\n * Get an array find callback for an equal input point.\n *\n * @param {Point3D} point The point to compare to.\n * @returns {Function} A function that compares, using `equals`,\n *   its input point to the one given as input to this function.\n */\nexport function getEqualPoint3DFunction(point) {\n  return function (element) {\n    return element.equals(point);\n  };\n}\n\n/**\n * Get an array find callback for a similar input point.\n *\n * @param {Point3D} point The point to compare to.\n * @param {number} tol The comparison tolerance\n *   default to Number.EPSILON.\n * @returns {Function} A function that compares, using `isSimilar`,\n *   its input point to the one given as input to this function.\n */\nexport function getSimilarPoint3DFunction(point, tol) {\n  return function (element) {\n    return element.isSimilar(point, tol);\n  };\n}\n\n/**\n * Immutable point.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Point {\n\n  /**\n   * Point values.\n   *\n   * @private\n   * @type {number}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The point values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create point with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create point with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create point with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input point can be compared to this one.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Point equality.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare points and return different dimensions.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {Array} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Get the 3D part of this point.\n   *\n   * @returns {Point3D} The Point3D.\n   */\n  get3D() {\n    return new Point3D(this.get(0), this.get(1), this.get(2));\n  }\n\n  /**\n   * Add another point to this one.\n   *\n   * @param {Point} rhs The point to add.\n   * @returns {Point} The point representing the sum of both points.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    const values = [];\n    const values0 = this.getValues();\n    const values1 = rhs.getValues();\n    for (let i = 0; i < values0.length; ++i) {\n      values.push(values0[i] + values1[i]);\n    }\n    return new Point(values);\n  }\n\n  /**\n   * Merge this point with a Point3D to create a new point.\n   *\n   * @param {Point3D} rhs The Point3D to merge with.\n   * @returns {Point} The merge result.\n   */\n  mergeWith3D(rhs) {\n    const values = this.getValues();\n    values[0] = rhs.getX();\n    values[1] = rhs.getY();\n    values[2] = rhs.getZ();\n    return new Point(values);\n  }\n\n} // Point class\n","import {Index} from '../math/index';\nimport {Point2D} from '../math/point';\n\n/**\n * Get an simple iterator for a given range for a one component data.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies (default=1).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function simpleRange(dataAccessor, start, end, increment) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  let nextIndex = start;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a one component data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy)\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2) {\n  if (typeof reverse1 === 'undefined') {\n    reverse1 = false;\n  }\n  if (typeof reverse2 === 'undefined') {\n    reverse2 = false;\n  }\n\n  // first index of the iteration\n  let nextIndex = start;\n  // adapt first index and increments to reverse values\n  if (reverse1) {\n    blockIncrement *= -1;\n    if (reverse2) {\n      // start at end of line\n      nextIndex -= (blockMaxIter - 1) * increment;\n    } else {\n      increment *= -1;\n    }\n  } else {\n    if (reverse2) {\n      // start at end of line\n      nextIndex += (blockMaxIter - 1) * increment;\n      increment *= -1;\n    }\n  }\n  const finalBlockIncrement = blockIncrement - blockMaxIter * increment;\n\n  // counters\n  let mainCount = 0;\n  let blockCount = 0;\n  // result\n  return {\n    next: function () {\n      if (mainCount < maxIter) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        ++mainCount;\n        ++blockCount;\n        if (blockCount === blockMaxIter) {\n          blockCount = 0;\n          nextIndex += finalBlockIncrement;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: nextIndex\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number} regionSize The size of the region to iterate through.\n * @param {number} regionOffset The offset between regions.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegion(\n  dataAccessor, start, end, increment, regionSize, regionOffset) {\n  let nextIndex = start;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regionSize) {\n          regionElementCount = 0;\n          nextIndex += regionOffset;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {Array} regions An array of regions: [off0, size, off1].\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegions(\n  dataAccessor, start, end, increment, regions) {\n  let nextIndex = start;\n  let regionCount = 0;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regions[regionCount][1]) {\n          regionElementCount = 0;\n          // off1 of current group\n          nextIndex += regions[regionCount][2];\n          regionCount += 1;\n          // off0 of next group\n          if (regionCount < regions.length) {\n            nextIndex += regions[regionCount][0];\n          }\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n *   (end - start) needs to be a multiple of 3...\n * @param {number} increment The increment between indicies (default=1).\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} A 3 components iterator folowing the iterator and iterable\n *   protocol, the value is an array of size 3 with each component.\n */\nexport function simpleRange3d(\n  dataAccessor, start, end, increment, isPlanar) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  if (typeof isPlanar === 'undefined') {\n    isPlanar = false;\n  }\n  let nextIndex = start;\n  let componentIncrement = 1;\n  if (isPlanar) {\n    componentIncrement = (end - start) / 3;\n  } else {\n    increment *= 3;\n  }\n  let nextIndex1 = nextIndex + componentIncrement;\n  let nextIndex2 = nextIndex + 2 * componentIncrement;\n\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: [\n            dataAccessor(nextIndex),\n            dataAccessor(nextIndex1),\n            dataAccessor(nextIndex2)\n          ],\n          done: false,\n          index: [nextIndex, nextIndex1, nextIndex2]\n        };\n        nextIndex += increment;\n        nextIndex1 += increment;\n        nextIndex2 += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: [end]\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy)\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range3d(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar) {\n  const iters = [];\n  if (isPlanar) {\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2 * maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  } else {\n    increment *= 3;\n    blockIncrement *= 3;\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 1, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  }\n\n  // result\n  return {\n    next: function () {\n      const r0 = iters[0].next();\n      const r1 = iters[1].next();\n      const r2 = iters[2].next();\n      if (!r0.done) {\n        return {\n          value: [\n            r0.value,\n            r1.value,\n            r2.value\n          ],\n          done: false,\n          index: [\n            r0.index,\n            r1.index,\n            r2.index\n          ]\n        };\n      }\n      return {\n        done: true,\n        index: r2.index\n      };\n    }\n  };\n}\n\n/**\n * Get a list of values for a given iterator.\n *\n * @param {object} iterator The iterator to use to loop through data.\n * @returns {Array} The list of values.\n */\nexport function getIteratorValues(iterator) {\n  const values = [];\n  let ival = iterator.next();\n  while (!ival.done) {\n    values.push(ival.value);\n    ival = iterator.next();\n  }\n  return values;\n}\n\n/**\n * Get a slice index iterator.\n *\n * @param {Image} image The image to parse.\n * @param {Point} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {object} The slice iterator.\n */\nexport function getSliceIterator(\n  image, position, isRescaled, viewOrientation) {\n  const size = image.getGeometry().getSize();\n  // zero-ify non direction index\n  let dirMax2Index = 2;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    dirMax2Index = viewOrientation.getColAbsMax(2).index;\n  }\n  const posValues = position.getValues();\n  // keep the main direction and any other than 3D\n  const indexFilter = function (element, index) {\n    return (index === dirMax2Index || index > 2) ? element : 0;\n  };\n  const posStart = new Index(posValues.map(indexFilter));\n  let start = size.indexToOffset(posStart);\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const ncols = size.get(0);\n  const nrows = size.get(1);\n  const nslices = size.get(2);\n  let sliceSize = size.getDimSize(2);\n\n  const ncomp = image.getNumberOfComponents();\n  const isPlanar = image.getPlanarConfiguration() === 1;\n  const getRange = function (\n    dataAccessor, start, maxIter, increment,\n    blockMaxIter, blockIncrement, reverse1, reverse2) {\n    if (ncomp === 1) {\n      return range(dataAccessor, start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2);\n    } else if (ncomp === 3) {\n      return range3d(dataAccessor, 3 * start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar);\n    }\n  };\n\n  let rangeObj = null;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    const dirMax0 = viewOrientation.getColAbsMax(0);\n    const dirMax2 = viewOrientation.getColAbsMax(2);\n\n    // default reverse\n    const reverse1 = false;\n    const reverse2 = false;\n\n    let maxIter = null;\n    if (dirMax2.index === 2) {\n      // axial\n      maxIter = ncols * nrows;\n      if (dirMax0.index === 0) {\n        // xyz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, ncols, reverse1, reverse2);\n      } else {\n        // yxz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, 1, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 0) {\n      // sagittal\n      maxIter = nslices * nrows;\n      if (dirMax0.index === 1) {\n        // yzx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, sliceSize, reverse1, reverse2);\n      } else {\n        // zyx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, ncols, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 1) {\n      // coronal\n      maxIter = nslices * ncols;\n      if (dirMax0.index === 0) {\n        // xzy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, sliceSize, reverse1, reverse2);\n      } else {\n        // zxy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, 1, reverse1, reverse2);\n      }\n    } else {\n      throw new Error('Unknown direction: ' + dirMax2.index);\n    }\n  } else {\n    if (image.getNumberOfComponents() === 1) {\n      rangeObj = simpleRange(dataAccessor, start, start + sliceSize);\n    } else if (image.getNumberOfComponents() === 3) {\n      // 3 times bigger...\n      start *= 3;\n      sliceSize *= 3;\n      rangeObj = simpleRange3d(\n        dataAccessor, start, start + sliceSize, 1, isPlanar);\n    } else {\n      throw new Error('Unsupported number of components: ' +\n        image.getNumberOfComponents());\n    }\n  }\n\n  return rangeObj;\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Point} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Point2D} min The minimum position (optional).\n * @param {Point2D} max The maximum position (optional).\n * @returns {object} The slice iterator.\n */\nexport function getRegionSliceIterator(\n  image, position, isRescaled, min, max) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n  if (typeof min === 'undefined') {\n    min = new Point2D(0, 0);\n  }\n  if (typeof max === 'undefined') {\n    max = new Point2D(\n      size.get(0) - 1,\n      size.get(1)\n    );\n  }\n  // position to pixel for max: extra X is ok, remove extra Y\n  const startOffset = size.indexToOffset(position.getWithNew2D(\n    min.getX(), min.getY()\n  ));\n  const endOffset = size.indexToOffset(position.getWithNew2D(\n    max.getX(), max.getY() - 1\n  ));\n\n  // minimum 1 column\n  const rangeNumberOfColumns = Math.max(1, max.getX() - min.getX());\n  const rowIncrement = size.get(0) - rangeNumberOfColumns;\n\n  return rangeRegion(\n    dataAccessor, startOffset, endOffset + 1,\n    1, rangeNumberOfColumns, rowIncrement);\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Point} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Array} regions An array of regions.\n * @returns {object|undefined} The slice iterator.\n */\nexport function getVariableRegionSliceIterator(\n  image, position, isRescaled, regions) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n\n  const offsetRegions = [];\n  let region;\n  let min = null;\n  let max = null;\n  let index = null;\n  for (let i = 0; i < regions.length; ++i) {\n    region = regions[i];\n    const width = region[1][0] - region[0][0];\n    if (width !== 0) {\n      index = i;\n      if (!min) {\n        min = region[0];\n      }\n      offsetRegions.push([\n        region[0][0],\n        width,\n        size.get(0) - region[1][0]\n      ]);\n    }\n  }\n  if (index !== null) {\n    max = regions[index][1];\n  }\n\n  // exit if no offsets\n  if (offsetRegions.length === 0) {\n    return undefined;\n  }\n\n  const startOffset = size.indexToOffset(position.getWithNew2D(\n    min[0], min[1]\n  ));\n  const endOffset = size.indexToOffset(position.getWithNew2D(\n    max[0], max[1]\n  ));\n\n  return rangeRegions(\n    dataAccessor, startOffset, endOffset + 1,\n    1, offsetRegions);\n}\n\n/**\n * Get a colour iterator. The input array defines the colours and\n * their start index.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Array} colours An array of {index, colour} pairs.\n * @param {number} end The end of the range (excluded).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function colourRange(colours, end) {\n  let nextIndex = 0;\n  let nextColourIndex = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        if (nextColourIndex + 1 < colours.length &&\n          nextIndex >= colours[nextColourIndex + 1].index) {\n          ++nextColourIndex;\n        }\n        const result = {\n          value: colours[nextColourIndex].colour,\n          done: false,\n          index: nextIndex\n        };\n        ++nextIndex;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n","/**\n * ListenerHandler class: handles add/removing and firing listeners.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget#example\n */\nexport class ListenerHandler {\n  /**\n   * listeners.\n   *\n   * @private\n   * @type {object}\n   */\n  #listeners = {};\n\n  /**\n   * Add an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  add(type, callback) {\n    // create array if not present\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    // add callback to listeners array\n    this.#listeners[type].push(callback);\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  remove(type, callback) {\n    // check if the type is present\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    // remove from listeners array\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === callback) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  fireEvent = (event) => {\n    // check if they are listeners for the event type\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    // fire events from a copy of the listeners array\n    // to avoid interference from possible add/remove\n    const stack = this.#listeners[event.type].slice();\n    for (let i = 0; i < stack.length; ++i) {\n      stack[i](event);\n    }\n  };\n}\n","import {Index} from '../math/index';\nimport {RescaleLut} from './rescaleLut';\nimport {WindowLut} from './windowLut';\nimport {lut} from './luts';\nimport {WindowLevel} from './windowLevel';\nimport {generateImageDataMonochrome} from './viewMonochrome';\nimport {generateImageDataPaletteColor} from './viewPaletteColor';\nimport {generateImageDataRgb} from './viewRgb';\nimport {generateImageDataYbrFull} from './viewYbrFull';\nimport {getSliceIterator} from '../image/iterator';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n/**\n * List of view event names.\n *\n * @type {Array}\n */\nexport const viewEventNames = [\n  'wlchange',\n  'wlpresetadd',\n  'colourchange',\n  'positionchange',\n  'opacitychange',\n  'alphafuncchange'\n];\n\n/**\n * View class.\n *\n * Need to set the window lookup table once created\n * (either directly or with helper methods).\n */\nexport class View {\n\n  /**\n   * The associated image.\n   *\n   * @private\n   * @type {Image}\n   */\n  #image;\n\n  /**\n   * Window lookup tables, indexed per Rescale Slope and Intercept (RSI).\n   *\n   * @private\n   * @type {Window}\n   */\n  #windowLuts = {};\n\n  /**\n   * Window presets.\n   * Minmax will be filled at first use (see view.setWindowLevelPreset).\n   *\n   * @private\n   * @type {object}\n   */\n  #windowPresets = {minmax: {name: 'minmax'}};\n\n  /**\n   * Current window preset name.\n   *\n   * @private\n   * @type {string}\n   */\n  #currentPresetName = null;\n\n  /**\n   * Current window level.\n   *\n   * @private\n   * @type {object}\n   */\n  #currentWl = null;\n\n  /**\n   * colour map.\n   *\n   * @private\n   * @type {object}\n   */\n  #colourMap = lut.plain;\n\n  /**\n   * Current position as a Point3D.\n   * Store position and not index to stay geometry independent.\n   *\n   * @private\n   * @type {Point3D}\n   */\n  #currentPosition = null;\n\n  /**\n   * View orientation. Undefined will use the original slice ordering.\n   *\n   * @private\n   * @type {object}\n   */\n  #orientation;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Image} image The associated image.\n   */\n  constructor(image) {\n    this.#image = image;\n\n    // listen to appendframe event to update the current position\n    //   to add the extra dimension\n    this.#image.addEventListener('appendframe', () => {\n      // update current position if first appendFrame\n      const index = this.getCurrentIndex();\n      if (index.length() === 3) {\n        // add dimension\n        const values = index.getValues();\n        values.push(0);\n        this.setCurrentIndex(new Index(values));\n      }\n    });\n  }\n\n  /**\n   * Get the associated image.\n   *\n   * @returns {Image} The associated image.\n   */\n  getImage() {\n    return this.#image;\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} inImage The associated image.\n   */\n  setImage(inImage) {\n    this.#image = inImage;\n  }\n\n  /**\n   * Get the view orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Set the view orientation.\n   *\n   * @param {Matrix33} mat33 The orientation matrix.\n   */\n  setOrientation(mat33) {\n    this.#orientation = mat33;\n  }\n\n  /**\n   * Initialise the view: set initial index.\n   */\n  init() {\n    this.setInitialIndex();\n  }\n\n  /**\n   * Set the initial index to 0.\n   */\n  setInitialIndex() {\n    const geometry = this.#image.getGeometry();\n    const size = geometry.getSize();\n    const values = new Array(size.length());\n    values.fill(0);\n    // middle\n    values[0] = Math.floor(size.get(0) / 2);\n    values[1] = Math.floor(size.get(1) / 2);\n    values[2] = Math.floor(size.get(2) / 2);\n    this.setCurrentIndex(new Index(values), true);\n  }\n\n  /**\n   * Get the milliseconds per frame from frame rate.\n   *\n   * @param {number} recommendedDisplayFrameRate Recommended Display Frame Rate.\n   * @returns {number} The milliseconds per frame.\n   */\n  getPlaybackMilliseconds(recommendedDisplayFrameRate) {\n    if (!recommendedDisplayFrameRate) {\n      // Default to 10 FPS if none is found in the meta\n      recommendedDisplayFrameRate = 10;\n    }\n    // round milliseconds per frame to nearest whole number\n    return Math.round(1000 / recommendedDisplayFrameRate);\n  }\n\n  /**\n   * Per value alpha function.\n   *\n   * @param {*} _value The pixel value. Can be a number for monochrome\n   *  data or an array for RGB data.\n   * @param {number} _index The data index of the value.\n   * @returns {number} The coresponding alpha [0,255].\n   */\n  #alphaFunction = function (_value, _index) {\n    // default always returns fully visible\n    return 0xff;\n  };\n\n  /**\n   * Get the alpha function.\n   *\n   * @returns {Function} The function.\n   */\n  getAlphaFunction() {\n    return this.#alphaFunction;\n  }\n\n  /**\n   * Set alpha function.\n   *\n   * @param {Function} func The function.\n   * @fires View#alphafuncchange\n   */\n  setAlphaFunction(func) {\n    this.#alphaFunction = func;\n    /**\n     * Alpha func change event.\n     *\n     * @event View#alphafuncchange\n     * @type {object}\n     */\n    this.#fireEvent({\n      type: 'alphafuncchange'\n    });\n  }\n\n  /**\n   * Get the window LUT of the image.\n   * Warning: can be undefined in no window/level was set.\n   *\n   * @param {object} rsi Optional image rsi, will take the one of the\n   *   current slice otherwise.\n   * @returns {Window} The window LUT of the image.\n   * @fires View#wlchange\n   */\n  getCurrentWindowLut(rsi) {\n    // check position\n    if (!this.getCurrentIndex()) {\n      this.setInitialIndex();\n    }\n    const currentIndex = this.getCurrentIndex();\n    // use current rsi if not provided\n    if (typeof rsi === 'undefined') {\n      rsi = this.#image.getRescaleSlopeAndIntercept(currentIndex);\n    }\n\n    // get the current window level\n    let wl = null;\n    // special case for 'perslice' presets\n    if (this.#currentPresetName &&\n      typeof this.#windowPresets[this.#currentPresetName] !== 'undefined' &&\n      typeof this.#windowPresets[this.#currentPresetName].perslice !==\n        'undefined' &&\n      this.#windowPresets[this.#currentPresetName].perslice === true) {\n      // get the preset for this slice\n      const offset = this.#image.getSecondaryOffset(currentIndex);\n      wl = this.#windowPresets[this.#currentPresetName].wl[offset];\n    }\n    // regular case\n    if (!wl) {\n      // if no current, use first id\n      if (!this.#currentWl) {\n        this.setWindowLevelPresetById(0, true);\n      }\n      wl = this.#currentWl;\n    }\n\n    // get the window lut\n    let wlut = this.#windowLuts[rsi.toString()];\n    if (typeof wlut === 'undefined') {\n      // create the rescale lookup table\n      const rescaleLut = new RescaleLut(\n        this.#image.getRescaleSlopeAndIntercept(0),\n        this.#image.getMeta().BitsStored);\n      // create the window lookup table\n      const windowLut = new WindowLut(\n        rescaleLut, this.#image.getMeta().IsSigned);\n      // store\n      this.addWindowLut(windowLut);\n      wlut = windowLut;\n    }\n\n    // update lut window level if not present or different from previous\n    const lutWl = wlut.getWindowLevel();\n    if (!wl.equals(lutWl)) {\n      // set lut window level\n      wlut.setWindowLevel(wl);\n      wlut.update();\n      // fire change event\n      if (!lutWl ||\n        lutWl.getWidth() !== wl.getWidth() ||\n        lutWl.getCenter() !== wl.getCenter()) {\n        this.#fireEvent({\n          type: 'wlchange',\n          value: [wl.getCenter(), wl.getWidth()],\n          wc: wl.getCenter(),\n          ww: wl.getWidth(),\n          skipGenerate: true\n        });\n      }\n    }\n\n    // return\n    return wlut;\n  }\n\n  /**\n   * Add the window LUT to the list.\n   *\n   * @param {Window} wlut The window LUT of the image.\n   */\n  addWindowLut(wlut) {\n    const rsi = wlut.getRescaleLut().getRSI();\n    this.#windowLuts[rsi.toString()] = wlut;\n  }\n\n  /**\n   * Get the window presets.\n   *\n   * @returns {object} The window presets.\n   */\n  getWindowPresets() {\n    return this.#windowPresets;\n  }\n\n  /**\n   * Get the window presets names.\n   *\n   * @returns {object} The list of window presets names.\n   */\n  getWindowPresetsNames() {\n    return Object.keys(this.#windowPresets);\n  }\n\n  /**\n   * Set the window presets.\n   *\n   * @param {object} presets The window presets.\n   */\n  setWindowPresets(presets) {\n    this.#windowPresets = presets;\n  }\n\n  /**\n   * Set the default colour map.\n   *\n   * @param {object} map The colour map.\n   */\n  setDefaultColourMap(map) {\n    this.#colourMap = map;\n  }\n\n  /**\n   * Add window presets to the existing ones.\n   *\n   * @param {object} presets The window presets.\n   */\n  addWindowPresets(presets) {\n    const keys = Object.keys(presets);\n    let key = null;\n    for (let i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (typeof this.#windowPresets[key] !== 'undefined') {\n        if (typeof this.#windowPresets[key].perslice !== 'undefined' &&\n        this.#windowPresets[key].perslice === true) {\n          throw new Error('Cannot add perslice preset');\n        } else {\n          this.#windowPresets[key] = presets[key];\n        }\n      } else {\n        // add new\n        this.#windowPresets[key] = presets[key];\n        // fire event\n        /**\n         * Window/level add preset event.\n         *\n         * @event View#wlpresetadd\n         * @type {object}\n         * @property {string} name The name of the preset.\n         */\n        this.#fireEvent({\n          type: 'wlpresetadd',\n          name: key\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the colour map of the image.\n   *\n   * @returns {object} The colour map of the image.\n   */\n  getColourMap() {\n    return this.#colourMap;\n  }\n\n  /**\n   * Set the colour map of the image.\n   *\n   * @param {object} map The colour map of the image.\n   * @fires View#colourchange\n   */\n  setColourMap(map) {\n    this.#colourMap = map;\n    /**\n     * Color change event.\n     *\n     * @event View#colourchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     * @property {number} wc The new window center value.\n     * @property {number} ww The new window wdth value.\n     */\n    this.#fireEvent({\n      type: 'colourchange',\n      wc: this.getCurrentWindowLut().getWindowLevel().getCenter(),\n      ww: this.getCurrentWindowLut().getWindowLevel().getWidth()\n    });\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The current position.\n   */\n  getCurrentPosition() {\n    return this.#currentPosition;\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    const position = this.getCurrentPosition();\n    if (!position) {\n      return null;\n    }\n    const geometry = this.getImage().getGeometry();\n    return geometry.worldToIndex(position);\n  }\n\n  /**\n   * Check is the provided position can be set.\n   *\n   * @param {Point} position The position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  canSetPosition(position) {\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    return geometry.isIndexInBounds(index, dirs);\n  }\n\n  /**\n   * Get the origin at a given position.\n   *\n   * @param {Point} position The position.\n   * @returns {Point} The origin.\n   */\n  getOrigin(position) {\n    const geometry = this.#image.getGeometry();\n    let originIndex = 0;\n    if (typeof position !== 'undefined') {\n      const index = geometry.worldToIndex(position);\n      // index is reoriented, 2 is scroll index\n      originIndex = index.get(2);\n    }\n    return geometry.getOrigins()[originIndex];\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {boolean} silent Flag to fire event or not.\n   * @returns {boolean} False if not in bounds\n   * @fires View#positionchange\n   */\n  setCurrentPosition(position, silent) {\n    // send invalid event if not in bounds\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      if (!silent) {\n        // fire event with valid: false\n        this.#fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n      return false;\n    }\n    return this.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The new index.\n   * @param {boolean} silent Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View#positionchange\n   */\n  setCurrentIndex(index, silent) {\n    // check input\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    const geometry = this.#image.getGeometry();\n    const position = geometry.indexToWorld(index);\n\n    // check if possible\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      // do no send invalid positionchange event: avoid empty repaint\n      return false;\n    }\n\n    // calculate diff dims before updating internal\n    let diffDims = null;\n    let currentIndex = null;\n    if (this.getCurrentPosition()) {\n      currentIndex = this.getCurrentIndex();\n    }\n    if (currentIndex) {\n      if (currentIndex.canCompare(index)) {\n        diffDims = currentIndex.compare(index);\n      } else {\n        diffDims = [];\n        const minLen = Math.min(currentIndex.length(), index.length());\n        for (let i = 0; i < minLen; ++i) {\n          if (currentIndex.get(i) !== index.get(i)) {\n            diffDims.push(i);\n          }\n        }\n        const maxLen = Math.max(currentIndex.length(), index.length());\n        for (let j = minLen; j < maxLen; ++j) {\n          diffDims.push(j);\n        }\n      }\n    } else {\n      diffDims = [];\n      for (let k = 0; k < index.length(); ++k) {\n        diffDims.push(k);\n      }\n    }\n\n    // assign\n    this.#currentPosition = position;\n\n    if (!silent) {\n      /**\n       * Position change event.\n       *\n       * @event View#positionchange\n       * @type {object}\n       * @property {Array} value The changed value as [index, pixelValue].\n       * @property {Array} diffDims An array of modified indices.\n       */\n      const posEvent = {\n        type: 'positionchange',\n        value: [\n          index.getValues(),\n          position.getValues(),\n        ],\n        diffDims: diffDims,\n        data: {\n          imageUid: this.#image.getImageUid(index)\n        }\n      };\n\n      // add value if possible\n      if (this.#image.canQuantify()) {\n        const pixValue = this.#image.getRescaledValueAtIndex(index);\n        posEvent.value.push(pixValue);\n      }\n\n      // fire\n      this.#fireEvent(posEvent);\n    }\n\n    // all good\n    return true;\n  }\n\n  /**\n   * Set the view window/level.\n   *\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   * @param {string} name Associated preset name, defaults to 'manual'.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   * @param {boolean} silent Flag to launch events with skipGenerate.\n   * @fires View#wlchange\n   */\n  setWindowLevel(center, width, name, silent) {\n    // window width shall be >= 1 (see https://www.dabsoft.ch/dicom/3/C.11.2.1.2/)\n    if (width < 1) {\n      return;\n    }\n\n    // check input\n    if (typeof name === 'undefined') {\n      name = 'manual';\n    }\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    // new window level\n    const newWl = new WindowLevel(center, width);\n\n    // check if new\n    const isNew = !newWl.equals(this.#currentWl);\n\n    // compare to previous if present\n    if (isNew) {\n      const isNewWidth = this.#currentWl\n        ? this.#currentWl.getWidth() !== width : true;\n      const isNewCenter = this.#currentWl\n        ? this.#currentWl.getCenter() !== center : true;\n      // assign\n      this.#currentWl = newWl;\n      this.#currentPresetName = name;\n\n      if (isNewWidth || isNewCenter) {\n        /**\n         * Window/level change event.\n         *\n         * @event View#wlchange\n         * @type {object}\n         * @property {Array} value The changed value.\n         * @property {number} wc The new window center value.\n         * @property {number} ww The new window wdth value.\n         * @property {boolean} skipGenerate Flag to skip view generation.\n         */\n        this.#fireEvent({\n          type: 'wlchange',\n          value: [center, width],\n          wc: center,\n          ww: width,\n          skipGenerate: silent\n        });\n      }\n    }\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   * @param {boolean} silent Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPreset(name, silent) {\n    const preset = this.getWindowPresets()[name];\n    if (typeof preset === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    // special min/max\n    if (name === 'minmax' && typeof preset.wl === 'undefined') {\n      preset.wl = [this.getWindowLevelMinMax()];\n    }\n    // default to first\n    let wl = preset.wl[0];\n    // check if 'perslice' case\n    if (typeof preset.perslice !== 'undefined' &&\n      preset.perslice === true) {\n      const offset = this.#image.getSecondaryOffset(this.getCurrentIndex());\n      wl = preset.wl[offset];\n    }\n    // set w/l\n    this.setWindowLevel(\n      wl.getCenter(), wl.getWidth(), name, silent);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   * @param {boolean} silent Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPresetById(id, silent) {\n    const keys = Object.keys(this.getWindowPresets());\n    this.setWindowLevelPreset(keys[id], silent);\n  }\n\n  /**\n   * Clone the image using all meta data and the original data buffer.\n   *\n   * @returns {View} A full copy of this {View}.\n   */\n  clone() {\n    const copy = new View(this.getImage());\n    for (const key in this.#windowLuts) {\n      copy.addWindowLut(this.#windowLuts[key]);\n    }\n    copy.setListeners(this.getListeners());\n    return copy;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the image window/level that covers the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   *\n   * @returns {object} A min/max window level.\n   */\n  getWindowLevelMinMax() {\n    const range = this.getImage().getRescaledDataRange();\n    const min = range.min;\n    const max = range.max;\n    let width = max - min;\n    // full black / white images, defaults to 1.\n    if (width < 1) {\n      logger.warn('Zero or negative window width, defaulting to one.');\n      width = 1;\n    }\n    const center = min + width / 2;\n    return new WindowLevel(center, width);\n  }\n\n  /**\n   * Set the image window/level to cover the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   */\n  setWindowLevelMinMax() {\n    // calculate center and width\n    const wl = this.getWindowLevelMinMax();\n    // set window level\n    this.setWindowLevel(wl.getCenter(), wl.getWidth(), 'minmax');\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {Array} array The array to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(array, index) {\n    // check index\n    if (typeof index === 'undefined') {\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      index = this.getCurrentIndex();\n    }\n\n    const image = this.getImage();\n    const iterator = getSliceIterator(\n      image, index, false, this.getOrientation());\n\n    const photoInterpretation = image.getPhotometricInterpretation();\n    switch (photoInterpretation) {\n    case 'MONOCHROME1':\n    case 'MONOCHROME2':\n      generateImageDataMonochrome(\n        array,\n        iterator,\n        this.getAlphaFunction(),\n        this.getCurrentWindowLut(),\n        this.getColourMap()\n      );\n      break;\n\n    case 'PALETTE COLOR':\n      generateImageDataPaletteColor(\n        array,\n        iterator,\n        this.getAlphaFunction(),\n        this.getColourMap(),\n        image.getMeta().BitsStored === 16\n      );\n      break;\n\n    case 'RGB':\n      generateImageDataRgb(\n        array,\n        iterator,\n        this.getAlphaFunction(),\n        this.getCurrentWindowLut()\n      );\n      break;\n\n    case 'YBR_FULL':\n      generateImageDataYbrFull(\n        array,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    default:\n      throw new Error(\n        'Unsupported photometric interpretation: ' + photoInterpretation);\n    }\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = 1;\n    } else {\n      console.warn('Cannot increment given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    const newIndex = index.add(incr);\n    return this.setCurrentIndex(newIndex, silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = -1;\n    } else {\n      console.warn('Cannot decrement given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    const newIndex = index.add(incr);\n    return this.setCurrentIndex(newIndex, silent);\n  }\n\n  /**\n   * Get the scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    const orientation = this.getOrientation();\n    if (typeof orientation !== 'undefined') {\n      index = orientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.decrementIndex(this.getScrollIndex(), silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.incrementIndex(this.getScrollIndex(), silent);\n  }\n\n} // class View\n","/**\n * Generate image data for 'MONOCHROME*' photometric interpretation.\n *\n * @param {Array} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {object} windowLut The window/level LUT.\n * @param {object} colourMap The colour map.\n */\nexport function generateImageDataMonochrome(\n  array,\n  iterator,\n  alphaFunc,\n  windowLut,\n  colourMap) {\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = windowLut.getValue(ival.value);\n    // store data\n    array.data[index] = colourMap.red[pxValue];\n    array.data[index + 1] = colourMap.green[pxValue];\n    array.data[index + 2] = colourMap.blue[pxValue];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {logger} from '../utils/logger';\n\n/**\n * Generate image data for 'PALETTE COLOR' photometric interpretation.\n *\n * @param {Array} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {object} colourMap The colour map.\n * @param {boolean} is16BitsStored Flag to know if the data is 16bits.\n */\nexport function generateImageDataPaletteColor(\n  array,\n  iterator,\n  alphaFunc,\n  colourMap,\n  is16BitsStored) {\n  // right shift 8\n  const to8 = function (value) {\n    return value >> 8;\n  };\n\n  if (is16BitsStored) {\n    logger.info('Scaling 16bits data to 8bits.');\n  }\n\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = ival.value;\n    // store data\n    // TODO check pxValue fits in lut\n    if (is16BitsStored) {\n      array.data[index] = to8(colourMap.red[pxValue]);\n      array.data[index + 1] = to8(colourMap.green[pxValue]);\n      array.data[index + 2] = to8(colourMap.blue[pxValue]);\n    } else {\n      array.data[index] = colourMap.red[pxValue];\n      array.data[index + 1] = colourMap.green[pxValue];\n      array.data[index + 2] = colourMap.blue[pxValue];\n    }\n    array.data[index + 3] = alphaFunc(pxValue, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","/**\n * Generate image data for 'RGB' photometric interpretation.\n *\n * @param {Array} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataRgb(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // store data\n    array.data[index] = ival.value[0];\n    array.data[index + 1] = ival.value[1];\n    array.data[index + 2] = ival.value[2];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {ybrToRgb} from '../utils/colour';\n\n/**\n * Generate image data for 'YBR_FULL' photometric interpretation.\n *\n * @param {Array} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataYbrFull(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let rgb = null;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // convert ybr to rgb\n    rgb = ybrToRgb(ival.value[0], ival.value[1], ival.value[2]);\n    // store data\n    array.data[index] = rgb.r;\n    array.data[index + 1] = rgb.g;\n    array.data[index + 2] = rgb.b;\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {View} from './view';\nimport {lut} from './luts';\nimport {WindowLevel, defaultPresets} from './windowLevel';\n\n/**\n * {@link View} factory.\n */\nexport class ViewFactory {\n\n  /**\n   * Get an View object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Image} image The associated image.\n   * @returns {View} The new View.\n   */\n  create(dicomElements, image) {\n    // view\n    const view = new View(image);\n\n    // default color map\n    if (image.getPhotometricInterpretation() === 'MONOCHROME1') {\n      view.setDefaultColourMap(lut.invPlain);\n    } else if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      const paletteLut = image.getMeta().paletteLut;\n      if (typeof (paletteLut) !== 'undefined') {\n        view.setDefaultColourMap(paletteLut);\n      }\n    }\n\n    // window level presets\n    let windowPresets = {};\n    // image presets\n    if (typeof image.getMeta().windowPresets !== 'undefined') {\n      windowPresets = image.getMeta().windowPresets;\n    }\n    // min/max\n    // Not filled yet since it is stil too costly to calculate min/max\n    // for each slice... It will be filled at first use\n    // (see view.setWindowLevelPreset).\n    // Order is important, if no wl from DICOM, this will be the default.\n    windowPresets.minmax = {name: 'minmax'};\n    // optional modality presets\n    if (typeof defaultPresets !== 'undefined') {\n      const modality = image.getMeta().Modality;\n      for (const key in defaultPresets[modality]) {\n        const preset = defaultPresets[modality][key];\n        windowPresets[key] = {\n          wl: new WindowLevel(preset.center, preset.width),\n          name: key\n        };\n      }\n    }\n\n    // store\n    view.setWindowPresets(windowPresets);\n\n    // initialise the view\n    view.init();\n\n    return view;\n  }\n\n} // class ViewFactory\n","/**\n * Rescale Slope and Intercept\n */\nexport class RescaleSlopeAndIntercept {\n\n  /**\n   * The slope.\n   *\n   * @private\n   * @type {number}\n   */\n  #slope;\n\n  /**\n   * The intercept.\n   *\n   * @private\n   * @type {number}\n   */\n  #intercept;\n\n  /**\n   * @param {number} slope The slope of the RSI.\n   * @param {number} intercept The intercept of the RSI.\n   */\n  constructor(slope, intercept) {\n    /*// Check the rescale slope.\n      if(typeof(slope) === 'undefined') {\n          slope = 1;\n      }\n      // Check the rescale intercept.\n      if(typeof(intercept) === 'undefined') {\n          intercept = 0;\n      }*/\n    this.#slope = slope;\n    this.#intercept = intercept;\n  }\n\n  /**\n   * Get the slope of the RSI.\n   *\n   * @returns {number} The slope of the RSI.\n   */\n  getSlope() {\n    return this.#slope;\n  }\n\n  /**\n   * Get the intercept of the RSI.\n   *\n   * @returns {number} The intercept of the RSI.\n   */\n  getIntercept() {\n    return this.#intercept;\n  }\n\n  /**\n   * Apply the RSI on an input value.\n   *\n   * @param {number} value The input value.\n   * @returns {number} The value to rescale.\n   */\n  apply(value) {\n    return value * this.#slope + this.#intercept;\n  }\n\n  /**\n   * Check for RSI equality.\n   *\n   * @param {object} rhs The other RSI to compare to.\n   * @returns {boolean} True if both RSI are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n          this.getSlope() === rhs.getSlope() &&\n          this.getIntercept() === rhs.getIntercept();\n  }\n\n  /**\n   * Get a string representation of the RSI.\n   *\n   * @returns {string} The RSI as a string.\n   */\n  toString() {\n    return (this.getSlope() + ', ' + this.getIntercept());\n  }\n\n  /**\n   * Is this RSI an ID RSI.\n   *\n   * @returns {boolean} True if the RSI has a slope of 1 and no intercept.\n   */\n  isID() {\n    return (this.getSlope() === 1 && this.getIntercept() === 0);\n  }\n\n} // class RescaleSlopeAndIntercept\n","import {Index} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {getTypedArray} from '../dicom/dicomParser';\nimport {ListenerHandler} from '../utils/listen';\nimport {colourRange} from './iterator';\nimport {RescaleSlopeAndIntercept} from './rsi';\n\n/**\n * Get the slice index of an input slice into a volume geometry.\n *\n * @param {Geometry} volumeGeometry The volume geometry.\n * @param {Geometry} sliceGeometry The slice geometry.\n * @returns {Index} The index of the slice in the volume geomtry.\n */\nfunction getSliceIndex(volumeGeometry, sliceGeometry) {\n  // possible time\n  const timeId = sliceGeometry.getInitialTime();\n  // index values\n  const values = [];\n  // x, y\n  values.push(0);\n  values.push(0);\n  // z\n  values.push(volumeGeometry.getSliceIndex(sliceGeometry.getOrigin(), timeId));\n  // time\n  if (typeof timeId !== 'undefined') {\n    values.push(timeId);\n  }\n  // return index\n  return new Index(values);\n}\n\n/**\n * Image class.\n * Usable once created, optional are:\n * - rescale slope and intercept (default 1:0),\n * - photometric interpretation (default MONOCHROME2),\n * - planar configuration (default RGBRGB...).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // create the image\n *   const imageFactory = new ImageFactory();\n *   // inputs are dicom tags and buffer\n *   const image = imageFactory.create(\n *     dicomParser.getDicomElements(),\n *     dicomParser.getRawDicomElements().x7FE00010.value[0]\n *   );\n *   // result div\n *   const div = document.getElementById('dwv');\n *   // display the image size\n *   const size = image.getGeometry().getSize();\n *   div.appendChild(document.createTextNode(\n *     'Size: ' + size.toString() +\n *     ' (should be 256,256,1)'));\n *   // break line\n *   div.appendChild(document.createElement('br'));\n *   // display a pixel value\n *   div.appendChild(document.createTextNode(\n *     'Pixel @ [128,40,0]: ' +\n *     image.getRescaledValue(128,40,0) +\n *     ' (should be 101)'));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class Image {\n\n  /**\n   * Data geometry.\n   *\n   * @private\n   * @type {Geometry}\n   */\n  #geometry;\n\n  /**\n   * Data buffer.\n   *\n   * @private\n   * @type {Array}\n   */\n  #buffer;\n\n  /**\n   * Image UIDs.\n   *\n   * @private\n   * @type {Array}\n   */\n  #imageUids;\n\n  /**\n   * Constant rescale slope and intercept (default).\n   *\n   * @private\n   * @type {object}\n   */\n  #rsi = new RescaleSlopeAndIntercept(1, 0);\n\n  /**\n   * Varying rescale slope and intercept.\n   *\n   * @private\n   * @type {Array}\n   */\n  #rsis = null;\n\n  /**\n   * Flag to know if the RSIs are all identity (1,0).\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isIdentityRSI = true;\n\n  /**\n   * Flag to know if the RSIs are all equals.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isConstantRSI = true;\n\n  /**\n   * Photometric interpretation (MONOCHROME, RGB...).\n   *\n   * @private\n   * @type {string}\n   */\n  #photometricInterpretation = 'MONOCHROME2';\n\n  /**\n   * Planar configuration for RGB data (0:RGBRGBRGBRGB... or\n   *   1:RRR...GGG...BBB...).\n   *\n   * @private\n   * @type {number}\n   */\n  #planarConfiguration = 0;\n\n  /**\n   * Number of components.\n   *\n   * @private\n   * @type {number}\n   */\n  #numberOfComponents;\n\n  /**\n   * Meta information.\n   *\n   * @private\n   * @type {object}\n   */\n  #meta = {};\n\n  /**\n   * Data range.\n   *\n   * @private\n   * @type {object}\n   */\n  #dataRange = null;\n\n  /**\n   * Rescaled data range.\n   *\n   * @private\n   * @type {object}\n   */\n  #rescaledDataRange = null;\n\n  /**\n   * Histogram.\n   *\n   * @private\n   * @type {Array}\n   */\n  #histogram = null;\n\n  /**\n   * Listener handler.\n   *\n   * @private\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Geometry} geometry The geometry of the image.\n   * @param {Array} buffer The image data as a one dimensional buffer.\n   * @param {Array} imageUids An array of Uids indexed to slice number.\n   */\n  constructor(geometry, buffer, imageUids) {\n    this.#geometry = geometry;\n    this.#buffer = buffer;\n    this.#imageUids = imageUids;\n\n    this.#numberOfComponents = this.#buffer.length / (\n      this.#geometry.getSize().getTotalSize());\n  }\n\n  /**\n   * Get the image UID at a given index.\n   *\n   * @param {Index} index The index at which to get the id.\n   * @returns {string} The UID.\n   */\n  getImageUid(index) {\n    let uid = this.#imageUids[0];\n    if (this.#imageUids.length !== 1 && typeof index !== 'undefined') {\n      uid = this.#imageUids[this.getSecondaryOffset(index)];\n    }\n    return uid;\n  }\n\n  /**\n   * Get the geometry of the image.\n   *\n   * @returns {Geometry} The geometry.\n   */\n  getGeometry() {\n    return this.#geometry;\n  }\n\n  /**\n   * Get the data buffer of the image.\n   *\n   * @todo dangerous...\n   * @returns {Array} The data buffer of the image.\n   */\n  getBuffer() {\n    return this.#buffer;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if only one component.\n   */\n  canQuantify() {\n    return this.getNumberOfComponents() === 1;\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  canWindowLevel() {\n    return this.getPhotometricInterpretation()\n      .match(/MONOCHROME/) !== null;\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @param {Matrix33} viewOrientation The view orientation.\n   * @returns {boolean} True if the data has a third dimension greater than one\n   *   after applying the view orientation.\n   */\n  canScroll(viewOrientation) {\n    const size = this.getGeometry().getSize();\n    // also check the numberOfFiles in case we are in the middle of a load\n    let nFiles = 1;\n    if (typeof this.#meta.numberOfFiles !== 'undefined') {\n      nFiles = this.#meta.numberOfFiles;\n    }\n    return size.canScroll(viewOrientation) || nFiles !== 1;\n  }\n\n  /**\n   * Get the secondary offset max.\n   *\n   * @returns {number} The maximum offset.\n   */\n  #getSecondaryOffsetMax() {\n    return this.#geometry.getSize().getTotalSize(2);\n  }\n\n  /**\n   * Get the secondary offset: an offset that takes into account\n   *   the slice and above dimension numbers.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The offset.\n   */\n  getSecondaryOffset(index) {\n    return this.#geometry.getSize().indexToOffset(index, 2);\n  }\n\n  /**\n   * Get the rescale slope and intercept.\n   *\n   * @param {Index} index The index (only needed for non constant rsi).\n   * @returns {object} The rescale slope and intercept.\n   */\n  getRescaleSlopeAndIntercept(index) {\n    let res = this.#rsi;\n    if (!this.isConstantRSI()) {\n      if (typeof index === 'undefined') {\n        throw new Error('Cannot get non constant RSI with empty slice index.');\n      }\n      const offset = this.getSecondaryOffset(index);\n      if (typeof this.#rsis[offset] !== 'undefined') {\n        res = this.#rsis[offset];\n      } else {\n        logger.warn('undefined non constant rsi at ' + offset);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the rsi at a specified (secondary) offset.\n   *\n   * @param {number} offset The desired (secondary) offset.\n   * @returns {object} The coresponding rsi.\n   */\n  #getRescaleSlopeAndInterceptAtOffset(offset) {\n    return this.#rsis[offset];\n  }\n\n  /**\n   * Set the rescale slope and intercept.\n   *\n   * @param {object} inRsi The input rescale slope and intercept.\n   * @param {number} offset The rsi offset (only needed for non constant rsi).\n   */\n  setRescaleSlopeAndIntercept(inRsi, offset) {\n    // update identity flag\n    this.#isIdentityRSI = this.#isIdentityRSI && inRsi.isID();\n    // update constant flag\n    if (!this.#isConstantRSI) {\n      if (typeof index === 'undefined') {\n        throw new Error(\n          'Cannot store non constant RSI with empty slice index.');\n      }\n      this.#rsis.splice(offset, 0, inRsi);\n    } else {\n      if (!this.#rsi.equals(inRsi)) {\n        if (typeof index === 'undefined') {\n          // no slice index, replace existing\n          this.#rsi = inRsi;\n        } else {\n          // first non constant rsi\n          this.#isConstantRSI = false;\n          // switch to non constant mode\n          this.#rsis = [];\n          // initialise RSIs\n          for (let i = 0, leni = this.#getSecondaryOffsetMax(); i < leni; ++i) {\n            this.#rsis.push(i);\n          }\n          // store\n          this.#rsi = null;\n          this.#rsis.splice(offset, 0, inRsi);\n        }\n      }\n    }\n  }\n\n  /**\n   * Are all the RSIs identity (1,0).\n   *\n   * @returns {boolean} True if they are.\n   */\n  isIdentityRSI() {\n    return this.#isIdentityRSI;\n  }\n\n  /**\n   * Are all the RSIs equal.\n   *\n   * @returns {boolean} True if they are.\n   */\n  isConstantRSI() {\n    return this.#isConstantRSI;\n  }\n\n  /**\n   * Get the photometricInterpretation of the image.\n   *\n   * @returns {string} The photometricInterpretation of the image.\n   */\n  getPhotometricInterpretation() {\n    return this.#photometricInterpretation;\n  }\n\n  /**\n   * Set the photometricInterpretation of the image.\n   *\n   * @param {string} interp The photometricInterpretation of the image.\n   */\n  setPhotometricInterpretation(interp) {\n    this.#photometricInterpretation = interp;\n  }\n\n  /**\n   * Get the planarConfiguration of the image.\n   *\n   * @returns {number} The planarConfiguration of the image.\n   */\n  getPlanarConfiguration() {\n    return this.#planarConfiguration;\n  }\n\n  /**\n   * Set the planarConfiguration of the image.\n   *\n   * @param {number} config The planarConfiguration of the image.\n   */\n  setPlanarConfiguration(config) {\n    this.#planarConfiguration = config;\n  }\n\n  /**\n   * Get the numberOfComponents of the image.\n   *\n   * @returns {number} The numberOfComponents of the image.\n   */\n  getNumberOfComponents() {\n    return this.#numberOfComponents;\n  }\n\n  /**\n   * Get the meta information of the image.\n   *\n   * @returns {object} The meta information of the image.\n   */\n  getMeta() {\n    return this.#meta;\n  }\n\n  /**\n   * Set the meta information of the image.\n   *\n   * @param {object} rhs The meta information of the image.\n   */\n  setMeta(rhs) {\n    this.#meta = rhs;\n  }\n\n  /**\n   * Get value at offset. Warning: No size check...\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The value at offset.\n   */\n  getValueAtOffset(offset) {\n    return this.#buffer[offset];\n  }\n\n  /**\n   * Get the offsets where the buffer equals the input value.\n   * Loops through the whole volume, can get long for big data...\n   *\n   * @param {number|object} value The value to check.\n   * @returns {Array} The list of offsets.\n   */\n  getOffsets(value) {\n    // value to array\n    if (this.#numberOfComponents === 1) {\n      value = [value];\n    } else if (this.#numberOfComponents === 3 &&\n      typeof value.r !== 'undefined') {\n      value = [value.r, value.g, value.b];\n    }\n    // main loop\n    const offsets = [];\n    let equal;\n    for (let i = 0; i < this.#buffer.length; i = i + this.#numberOfComponents) {\n      equal = true;\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\n        if (this.#buffer[i + j] !== value[j]) {\n          equal = false;\n          break;\n        }\n      }\n      if (equal) {\n        offsets.push(i);\n      }\n    }\n    return offsets;\n  }\n\n  /**\n   * Check if the input values are in the buffer.\n   * Could loop through the whole volume, can get long for big data...\n   *\n   * @param {Array} values The values to check.\n   * @returns {Array} A list of booleans for each input value,\n   *   set to true if the value is present in the buffer.\n   */\n  hasValues(values) {\n    // check input\n    if (typeof values === 'undefined' ||\n      values.length === 0) {\n      return [];\n    }\n    // final array value\n    const finalValues = [];\n    for (let v1 = 0; v1 < values.length; ++v1) {\n      if (this.#numberOfComponents === 1) {\n        finalValues.push([values[v1]]);\n      } else if (this.#numberOfComponents === 3) {\n        finalValues.push([\n          values[v1].r,\n          values[v1].g,\n          values[v1].b\n        ]);\n      }\n    }\n    // find callback\n    let equalFunc;\n    if (this.#numberOfComponents === 1) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0];\n      };\n    } else if (this.#numberOfComponents === 3) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0] &&\n          a[1] === b[1] &&\n          a[2] === b[2];\n      };\n    }\n    const getEqualCallback = function (value) {\n      return function (item) {\n        return equalFunc(item, value);\n      };\n    };\n    // main loop\n    const res = new Array(values.length);\n    res.fill(false);\n    const valuesToFind = finalValues.slice();\n    let equal;\n    let indicesToRemove;\n    for (let i = 0, leni = this.#buffer.length;\n      i < leni; i = i + this.#numberOfComponents) {\n      indicesToRemove = [];\n      for (let v = 0; v < valuesToFind.length; ++v) {\n        equal = true;\n        // check value(s)\n        for (let j = 0; j < this.#numberOfComponents; ++j) {\n          if (this.#buffer[i + j] !== valuesToFind[v][j]) {\n            equal = false;\n            break;\n          }\n        }\n        // if found, store answer and add to indices to remove\n        if (equal) {\n          const valIndex = finalValues.findIndex(\n            getEqualCallback(valuesToFind[v]));\n          res[valIndex] = true;\n          indicesToRemove.push(v);\n        }\n      }\n      // remove found values\n      for (let r = 0; r < indicesToRemove.length; ++r) {\n        valuesToFind.splice(indicesToRemove[r], 1);\n      }\n      // exit if no values to find\n      if (valuesToFind.length === 0) {\n        break;\n      }\n    }\n    // return\n    return res;\n  }\n\n  /**\n   * Clone the image.\n   *\n   * @returns {Image} A clone of this image.\n   */\n  clone() {\n    // clone the image buffer\n    const clonedBuffer = this.#buffer.slice(0);\n    // create the image copy\n    const copy = new Image(this.getGeometry(), clonedBuffer, this.#imageUids);\n    // copy the RSI(s)\n    if (this.isConstantRSI()) {\n      copy.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());\n    } else {\n      for (let i = 0; i < this.#getSecondaryOffsetMax(); ++i) {\n        copy.setRescaleSlopeAndIntercept(\n          this.#getRescaleSlopeAndInterceptAtOffset(i), i);\n      }\n    }\n    // copy extras\n    copy.setPhotometricInterpretation(this.getPhotometricInterpretation());\n    copy.setPlanarConfiguration(this.getPlanarConfiguration());\n    copy.setMeta(this.getMeta());\n    // return\n    return copy;\n  }\n\n  /**\n   * Re-allocate buffer memory to an input size.\n   *\n   * @param {number} size The new size.\n   */\n  #realloc(size) {\n    // save buffer\n    let tmpBuffer = this.#buffer;\n    // create new\n    this.#buffer = getTypedArray(\n      this.#buffer.BYTES_PER_ELEMENT * 8,\n      this.#meta.IsSigned ? 1 : 0,\n      size);\n    if (this.#buffer === null) {\n      throw new Error('Cannot reallocate data for image.');\n    }\n    // put old in new\n    this.#buffer.set(tmpBuffer);\n    // clean\n    tmpBuffer = null;\n  }\n\n  /**\n   * Append a slice to the image.\n   *\n   * @param {Image} rhs The slice to append.\n   */\n  appendSlice(rhs) {\n    // check input\n    if (rhs === null) {\n      throw new Error('Cannot append null slice');\n    }\n    const rhsSize = rhs.getGeometry().getSize();\n    let size = this.#geometry.getSize();\n    if (rhsSize.get(2) !== 1) {\n      throw new Error('Cannot append more than one slice');\n    }\n    if (size.get(0) !== rhsSize.get(0)) {\n      throw new Error('Cannot append a slice with different number of columns');\n    }\n    if (size.get(1) !== rhsSize.get(1)) {\n      throw new Error('Cannot append a slice with different number of rows');\n    }\n    if (!this.#geometry.getOrientation().equals(\n      rhs.getGeometry().getOrientation(), 0.0001)) {\n      throw new Error('Cannot append a slice with different orientation');\n    }\n    if (this.#photometricInterpretation !==\n      rhs.getPhotometricInterpretation()) {\n      throw new Error(\n        'Cannot append a slice with different photometric interpretation');\n    }\n    // all meta should be equal\n    for (const key in this.#meta) {\n      if (key === 'windowPresets' || key === 'numberOfFiles' ||\n        key === 'custom') {\n        continue;\n      }\n      if (this.#meta[key] !== rhs.getMeta()[key]) {\n        throw new Error('Cannot append a slice with different ' + key);\n      }\n    }\n\n    // possible time\n    const timeId = rhs.getGeometry().getInitialTime();\n\n    // append frame if needed\n    let isNewFrame = false;\n    if (typeof timeId !== 'undefined' &&\n      !this.#geometry.hasSlicesAtTime(timeId)) {\n      // update grometry\n      this.appendFrame(rhs.getGeometry().getOrigin(), timeId);\n      // update size\n      size = this.#geometry.getSize();\n      // update flag\n      isNewFrame = true;\n    }\n\n    // get slice index\n    const index = getSliceIndex(this.#geometry, rhs.getGeometry());\n\n    // calculate slice size\n    const sliceSize = this.#numberOfComponents * size.getDimSize(2);\n\n    // create full buffer if not done yet\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for buffer manipulation.');\n    }\n    const fullBufferSize = sliceSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n\n    // slice index\n    const sliceIndex = index.get(2);\n\n    // slice index including possible 4D\n    let fullSliceIndex = sliceIndex;\n    if (typeof timeId !== 'undefined') {\n      fullSliceIndex +=\n        this.#geometry.getCurrentNumberOfSlicesBeforeTime(timeId);\n    }\n    // offset of the input slice\n    const indexOffset = fullSliceIndex * sliceSize;\n    const maxOffset =\n      this.#geometry.getCurrentTotalNumberOfSlices() * sliceSize;\n    // move content if needed\n    if (indexOffset < maxOffset) {\n      this.#buffer.set(\n        this.#buffer.subarray(indexOffset, maxOffset),\n        indexOffset + sliceSize\n      );\n    }\n    // add new slice content\n    this.#buffer.set(rhs.getBuffer(), indexOffset);\n\n    // update geometry\n    if (!isNewFrame) {\n      this.#geometry.appendOrigin(\n        rhs.getGeometry().getOrigin(), sliceIndex, timeId);\n    }\n    // update rsi\n    // (rhs should just have one rsi)\n    this.setRescaleSlopeAndIntercept(\n      rhs.getRescaleSlopeAndIntercept(), fullSliceIndex);\n\n    // current number of images\n    const numberOfImages = this.#imageUids.length;\n\n    // insert sop instance UIDs\n    this.#imageUids.splice(fullSliceIndex, 0, rhs.getImageUid());\n\n    // update window presets\n    if (typeof this.#meta.windowPresets !== 'undefined') {\n      const windowPresets = this.#meta.windowPresets;\n      const rhsPresets = rhs.getMeta().windowPresets;\n      const keys = Object.keys(rhsPresets);\n      let pkey = null;\n      for (let i = 0; i < keys.length; ++i) {\n        pkey = keys[i];\n        const rhsPreset = rhsPresets[pkey];\n        const windowPreset = windowPresets[pkey];\n        if (typeof windowPreset !== 'undefined') {\n          // if not set or false, check perslice\n          if (typeof windowPreset.perslice === 'undefined' ||\n            windowPreset.perslice === false) {\n            // if different preset.wl, mark it as perslice\n            if (!windowPreset.wl[0].equals(rhsPreset.wl[0])) {\n              windowPreset.perslice = true;\n              // fill wl array with copy of wl[0]\n              // (loop on number of images minus the existing one)\n              for (let j = 0; j < numberOfImages - 1; ++j) {\n                windowPreset.wl.push(windowPreset.wl[0]);\n              }\n            }\n          }\n          // store (first) rhs preset.wl if needed\n          if (typeof windowPreset.perslice !== 'undefined' &&\n            windowPreset.perslice === true) {\n            windowPresets[pkey].wl.splice(\n              fullSliceIndex, 0, rhsPreset.wl[0]);\n          }\n        } else {\n          // if not defined (it should be), store all\n          windowPresets[pkey] = rhsPresets[pkey];\n        }\n      }\n    }\n  }\n\n  /**\n   * Append a frame buffer to the image.\n   *\n   * @param {object} frameBuffer The frame buffer to append.\n   * @param {number} frameIndex The frame index.\n   */\n  appendFrameBuffer(frameBuffer, frameIndex) {\n    // create full buffer if not done yet\n    const size = this.#geometry.getSize();\n    const frameSize = this.#numberOfComponents * size.getDimSize(2);\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for frame buffer manipulation.');\n    }\n    const fullBufferSize = frameSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n    // check index\n    if (frameIndex >= this.#meta.numberOfFiles) {\n      logger.warn('Ignoring frame at index ' + frameIndex +\n        ' (size: ' + this.#meta.numberOfFiles + ')');\n      return;\n    }\n    // append\n    this.#buffer.set(frameBuffer, frameSize * frameIndex);\n    // update geometry\n    this.appendFrame();\n  }\n\n  /**\n   * Append a frame to the image.\n   *\n   * @param {number} time The frame time value.\n   * @param {Point3D} origin The origin of the frame.\n   */\n  appendFrame(time, origin) {\n    this.#geometry.appendFrame(time, origin);\n    this.#fireEvent({type: 'appendframe'});\n    // memory will be updated at the first appendSlice or appendFrameBuffer\n  }\n\n  /**\n   * Get the data range.\n   *\n   * @returns {object} The data range.\n   */\n  getDataRange() {\n    if (!this.#dataRange) {\n      this.#dataRange = this.calculateDataRange();\n    }\n    return this.#dataRange;\n  }\n\n  /**\n   * Get the rescaled data range.\n   *\n   * @returns {object} The rescaled data range.\n   */\n  getRescaledDataRange() {\n    if (!this.#rescaledDataRange) {\n      this.#rescaledDataRange = this.calculateRescaledDataRange();\n    }\n    return this.#rescaledDataRange;\n  }\n\n  /**\n   * Get the histogram.\n   *\n   * @returns {Array} The histogram.\n   */\n  getHistogram() {\n    if (!this.#histogram) {\n      const res = this.calculateHistogram();\n      this.#dataRange = res.dataRange;\n      this.#rescaledDataRange = res.rescaledDataRange;\n      this.#histogram = res.histogram;\n    }\n    return this.#histogram;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // ****************************************\n  // image data modifiers... carefull...\n  // ****************************************\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsets List of offsets where to set the data.\n   * @param {object} value The value to set at the given offsets.\n   * @fires Image#imagechange\n   */\n  setAtOffsets(offsets, value) {\n    let offset;\n    for (let i = 0, leni = offsets.length; i < leni; ++i) {\n      offset = offsets[i];\n      this.#buffer[offset] = value.r;\n      this.#buffer[offset + 1] = value.g;\n      this.#buffer[offset + 2] = value.b;\n    }\n    // fire imagechange\n    this.#fireEvent({type: 'imagechange'});\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsetsLists List of offset lists where to set the data.\n   * @param {object} value The value to set at the given offsets.\n   * @returns {Array} A list of objects representing the original values before\n   *  replacing them.\n   * @fires Image#imagechange\n   */\n  setAtOffsetsAndGetOriginals(offsetsLists, value) {\n    const originalColoursLists = [];\n\n    // update and store\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      // first colour\n      let offset = offsets[0] * 3;\n      let previousColour = {\n        r: this.#buffer[offset],\n        g: this.#buffer[offset + 1],\n        b: this.#buffer[offset + 2]\n      };\n      // original value storage\n      const originalColours = [];\n      originalColours.push({\n        index: 0,\n        colour: previousColour\n      });\n      for (let i = 0; i < offsets.length; ++i) {\n        offset = offsets[i] * 3;\n        const currentColour = {\n          r: this.#buffer[offset],\n          g: this.#buffer[offset + 1],\n          b: this.#buffer[offset + 2]\n        };\n        // check if new colour\n        if (previousColour.r !== currentColour.r ||\n          previousColour.g !== currentColour.g ||\n          previousColour.b !== currentColour.b) {\n          // store new colour\n          originalColours.push({\n            index: i,\n            colour: currentColour\n          });\n          previousColour = currentColour;\n        }\n        // write update colour\n        this.#buffer[offset] = value.r;\n        this.#buffer[offset + 1] = value.g;\n        this.#buffer[offset + 2] = value.b;\n      }\n      originalColoursLists.push(originalColours);\n    }\n    // fire imagechange\n    this.#fireEvent({type: 'imagechange'});\n    return originalColoursLists;\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsetsLists List of offset lists where to set the data.\n   * @param {object|Array} value The value to set at the given offsets.\n   * @fires Image#imagechange\n   */\n  setAtOffsetsWithIterator(offsetsLists, value) {\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      let iterator;\n      if (typeof value !== 'undefined' &&\n        typeof value.r !== 'undefined') {\n        // input value is a simple color\n        iterator = colourRange(\n          [{index: 0, colour: value}], offsets.length);\n      } else {\n        // input value is a list of iterators\n        // created by setAtOffsetsAndGetOriginals\n        iterator = colourRange(\n          value[j], offsets.length);\n      }\n\n      // set values\n      let ival = iterator.next();\n      while (!ival.done) {\n        const offset = offsets[ival.index] * 3;\n        this.#buffer[offset] = ival.value.r;\n        this.#buffer[offset + 1] = ival.value.g;\n        this.#buffer[offset + 2] = ival.value.b;\n        ival = iterator.next();\n      }\n    }\n    /**\n     * Image change event.\n     *\n     * @event Image#imagechange\n     * @type {object}\n     */\n    this.#fireEvent({type: 'imagechange'});\n  }\n\n  /**\n   * Get the value of the image at a specific coordinate.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValue(i, j, k, f) {\n    const frame = (f || 0);\n    const index = new Index([i, j, k, frame]);\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValueAtIndex(index) {\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific position.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValue(i, j, k, f) {\n    if (typeof f === 'undefined') {\n      f = 0;\n    }\n    let val = this.getValue(i, j, k, f);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const values = [i, j, k, f];\n        const index = new Index(values);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValueAtIndex(index) {\n    return this.getRescaledValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index)\n    );\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific offset.\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The rescaled value at the desired offset.\n   * Warning: No size check...\n   */\n  getRescaledValueAtOffset(offset) {\n    let val = this.getValueAtOffset(offset);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const index = this.getGeometry().getSize().offsetToIndex(offset);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Calculate the data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateDataRange() {\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    const size = this.getGeometry().getSize();\n    let leni = size.getTotalSize();\n    // max to 3D\n    if (size.length() >= 3) {\n      leni = size.getDimSize(3);\n    }\n    for (let i = 0; i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    }\n    // return\n    return {min: min, max: max};\n  }\n\n  /**\n   * Calculate the rescaled data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateRescaledDataRange() {\n    if (this.isIdentityRSI()) {\n      return this.getDataRange();\n    } else if (this.isConstantRSI()) {\n      const range = this.getDataRange();\n      const resmin = this.getRescaleSlopeAndIntercept().apply(range.min);\n      const resmax = this.getRescaleSlopeAndIntercept().apply(range.max);\n      return {\n        min: ((resmin < resmax) ? resmin : resmax),\n        max: ((resmin > resmax) ? resmin : resmax)\n      };\n    } else {\n      let rmin = this.getRescaledValueAtOffset(0);\n      let rmax = rmin;\n      let rvalue = 0;\n      const size = this.getGeometry().getSize();\n      let leni = size.getTotalSize();\n      // max to 3D\n      if (size.length() === 3) {\n        leni = size.getDimSize(3);\n      }\n      for (let i = 0; i < leni; ++i) {\n        rvalue = this.getRescaledValueAtOffset(i);\n        if (rvalue > rmax) {\n          rmax = rvalue;\n        }\n        if (rvalue < rmin) {\n          rmin = rvalue;\n        }\n      }\n      // return\n      return {min: rmin, max: rmax};\n    }\n  }\n\n  /**\n   * Calculate the histogram of the image.\n   *\n   * @returns {object} The histogram, data range and rescaled data range.\n   */\n  calculateHistogram() {\n    const size = this.getGeometry().getSize();\n    const histo = [];\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    let rmin = this.getRescaledValueAtOffset(0);\n    let rmax = rmin;\n    let rvalue = 0;\n    for (let i = 0, leni = size.getTotalSize(); i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n      rvalue = this.getRescaledValueAtOffset(i);\n      if (rvalue > rmax) {\n        rmax = rvalue;\n      }\n      if (rvalue < rmin) {\n        rmin = rvalue;\n      }\n      histo[rvalue] = (histo[rvalue] || 0) + 1;\n    }\n    // set data range\n    const dataRange = {min: min, max: max};\n    const rescaledDataRange = {min: rmin, max: rmax};\n    // generate data for plotting\n    const histogram = [];\n    for (let b = rmin; b <= rmax; ++b) {\n      histogram.push([b, (histo[b] || 0)]);\n    }\n    // return\n    return {\n      dataRange: dataRange,\n      rescaledDataRange: rescaledDataRange,\n      histogram: histogram\n    };\n  }\n\n  /**\n   * Convolute the image with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @returns {Image} The convoluted image.\n   */\n  convolute2D(weights) {\n    if (weights.length !== 9) {\n      throw new Error(\n        'The convolution matrix does not have a length of 9; it has ' +\n        weights.length);\n    }\n\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n\n    const imgSize = this.getGeometry().getSize();\n    const dimOffset = imgSize.getDimSize(2) * this.getNumberOfComponents();\n    for (let k = 0; k < imgSize.get(2); ++k) {\n      this.convoluteBuffer(weights, newBuffer, k * dimOffset);\n    }\n\n    return newImage;\n  }\n\n  /**\n   * Convolute an image buffer with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @param {Array} buffer The buffer to convolute.\n   * @param {number} startOffset The index to start at.\n   */\n  convoluteBuffer(\n    weights, buffer, startOffset) {\n    const imgSize = this.getGeometry().getSize();\n    const ncols = imgSize.get(0);\n    const nrows = imgSize.get(1);\n    const ncomp = this.getNumberOfComponents();\n\n    // number of component and planar configuration vars\n    let factor = 1;\n    let componentOffset = 1;\n    if (ncomp === 3) {\n      if (this.getPlanarConfiguration() === 0) {\n        factor = 3;\n      } else {\n        componentOffset = imgSize.getDimSize(2);\n      }\n    }\n\n    // allow special indent for matrices\n    /*jshint indent:false */\n\n    // default weight offset matrix\n    const wOff = [];\n    wOff[0] = (-ncols - 1) * factor;\n    wOff[1] = (-ncols) * factor;\n    wOff[2] = (-ncols + 1) * factor;\n    wOff[3] = -factor;\n    wOff[4] = 0;\n    wOff[5] = 1 * factor;\n    wOff[6] = (ncols - 1) * factor;\n    wOff[7] = (ncols) * factor;\n    wOff[8] = (ncols + 1) * factor;\n\n    // border weight offset matrices\n    // borders are extended (see http://en.wikipedia.org/wiki/Kernel_%28image_processing%29)\n\n    // i=0, j=0\n    const wOff00 = [];\n    wOff00[0] = wOff[4]; wOff00[1] = wOff[4]; wOff00[2] = wOff[5];\n    wOff00[3] = wOff[4]; wOff00[4] = wOff[4]; wOff00[5] = wOff[5];\n    wOff00[6] = wOff[7]; wOff00[7] = wOff[7]; wOff00[8] = wOff[8];\n    // i=0, j=*\n    const wOff0x = [];\n    wOff0x[0] = wOff[1]; wOff0x[1] = wOff[1]; wOff0x[2] = wOff[2];\n    wOff0x[3] = wOff[4]; wOff0x[4] = wOff[4]; wOff0x[5] = wOff[5];\n    wOff0x[6] = wOff[7]; wOff0x[7] = wOff[7]; wOff0x[8] = wOff[8];\n    // i=0, j=nrows\n    const wOff0n = [];\n    wOff0n[0] = wOff[1]; wOff0n[1] = wOff[1]; wOff0n[2] = wOff[2];\n    wOff0n[3] = wOff[4]; wOff0n[4] = wOff[4]; wOff0n[5] = wOff[5];\n    wOff0n[6] = wOff[4]; wOff0n[7] = wOff[4]; wOff0n[8] = wOff[5];\n\n    // i=*, j=0\n    const wOffx0 = [];\n    wOffx0[0] = wOff[3]; wOffx0[1] = wOff[4]; wOffx0[2] = wOff[5];\n    wOffx0[3] = wOff[3]; wOffx0[4] = wOff[4]; wOffx0[5] = wOff[5];\n    wOffx0[6] = wOff[6]; wOffx0[7] = wOff[7]; wOffx0[8] = wOff[8];\n    // i=*, j=* -> wOff\n    // i=*, j=nrows\n    const wOffxn = [];\n    wOffxn[0] = wOff[0]; wOffxn[1] = wOff[1]; wOffxn[2] = wOff[2];\n    wOffxn[3] = wOff[3]; wOffxn[4] = wOff[4]; wOffxn[5] = wOff[5];\n    wOffxn[6] = wOff[3]; wOffxn[7] = wOff[4]; wOffxn[8] = wOff[5];\n\n    // i=ncols, j=0\n    const wOffn0 = [];\n    wOffn0[0] = wOff[3]; wOffn0[1] = wOff[4]; wOffn0[2] = wOff[4];\n    wOffn0[3] = wOff[3]; wOffn0[4] = wOff[4]; wOffn0[5] = wOff[4];\n    wOffn0[6] = wOff[6]; wOffn0[7] = wOff[7]; wOffn0[8] = wOff[7];\n    // i=ncols, j=*\n    const wOffnx = [];\n    wOffnx[0] = wOff[0]; wOffnx[1] = wOff[1]; wOffnx[2] = wOff[1];\n    wOffnx[3] = wOff[3]; wOffnx[4] = wOff[4]; wOffnx[5] = wOff[4];\n    wOffnx[6] = wOff[6]; wOffnx[7] = wOff[7]; wOffnx[8] = wOff[7];\n    // i=ncols, j=nrows\n    const wOffnn = [];\n    wOffnn[0] = wOff[0]; wOffnn[1] = wOff[1]; wOffnn[2] = wOff[1];\n    wOffnn[3] = wOff[3]; wOffnn[4] = wOff[4]; wOffnn[5] = wOff[4];\n    wOffnn[6] = wOff[3]; wOffnn[7] = wOff[4]; wOffnn[8] = wOff[4];\n\n    // restore indent for rest of method\n    /*jshint indent:4 */\n\n    // loop vars\n    let pixelOffset = startOffset;\n    let newValue = 0;\n    let wOffFinal = [];\n    for (let c = 0; c < ncomp; ++c) {\n      // component offset\n      pixelOffset += c * componentOffset;\n      for (let j = 0; j < nrows; ++j) {\n        for (let i = 0; i < ncols; ++i) {\n          wOffFinal = wOff;\n          // special border cases\n          if (i === 0 && j === 0) {\n            wOffFinal = wOff00;\n          } else if (i === 0 && j === (nrows - 1)) {\n            wOffFinal = wOff0n;\n          } else if (i === (ncols - 1) && j === 0) {\n            wOffFinal = wOffn0;\n          } else if (i === (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffnn;\n          } else if (i === 0 && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOff0x;\n          } else if (i === (ncols - 1) && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOffnx;\n          } else if (i !== 0 && i !== (ncols - 1) && j === 0) {\n            wOffFinal = wOffx0;\n          } else if (i !== 0 && i !== (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffxn;\n          }\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          newValue = 0;\n          for (let wi = 0; wi < 9; ++wi) {\n            newValue += this.getValueAtOffset(\n              pixelOffset + wOffFinal[wi]) * weights[wi];\n          }\n          buffer[pixelOffset] = newValue;\n          // increment pixel offset\n          pixelOffset += factor;\n        }\n      }\n    }\n  }\n\n  /**\n   * Transform an image using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Function} operator The operator to use when transforming.\n   * @returns {Image} The transformed image.\n   * Note: Uses the raw buffer values.\n   */\n  transform(operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      newBuffer[i] = operator(newImage.getValueAtOffset(i));\n    }\n    return newImage;\n  }\n\n  /**\n   * Compose this image with another one and using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Image} rhs The image to compose with.\n   * @param {Function} operator The operator to use when composing.\n   * @returns {Image} The composed image.\n   * Note: Uses the raw buffer values.\n   */\n  compose(rhs, operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      // using the operator on the local buffer, i.e. the\n      // latest (not original) data\n      newBuffer[i] = Math.floor(\n        operator(this.getValueAtOffset(i), rhs.getValueAtOffset(i))\n      );\n    }\n    return newImage;\n  }\n\n} // class Image\n","import {\n  BIG_EPSILON,\n  isSimilar,\n  getIdentityMat33\n} from '../math/matrix';\nimport {Point3D, Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {Size} from './size';\nimport {Spacing} from './spacing';\n\n/**\n * 2D/3D Geometry class.\n */\nexport class Geometry {\n\n  /**\n   * Array of origins.\n   *\n   * @private\n   * @type {Array}\n   */\n  #origins;\n\n  /**\n   * Data size.\n   *\n   * @private\n   * @type {Size}\n   */\n  #size;\n\n  /**\n   * Data spacing.\n   *\n   * @private\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * Local helper object for time points.\n   *\n   * @private\n   * @type {object}\n   */\n  #timeOrigins = {};\n\n  /**\n   * Initial time index.\n   *\n   * @private\n   * @type {number}\n   */\n  #initialTime;\n\n  /**\n   * Data orientation.\n   *\n   * @private\n   * @type {Matrix33}\n   */\n  #orientation = new getIdentityMat33();\n\n  /**\n   * Flag to know if new origins were added.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #newOrigins = false;\n\n  /**\n   * @param {Point3D} origin The object origin (a 3D point).\n   * @param {Size} size The object size.\n   * @param {Spacing} spacing The object spacing.\n   * @param {Matrix33} orientation The object orientation (3*3 matrix,\n   *   default to 3*3 identity).\n   * @param {number} time Optional time index.\n   */\n  constructor(origin, size, spacing, orientation, time) {\n    this.#origins = [origin];\n    this.#size = size;\n    this.#spacing = spacing;\n    if (typeof time !== 'undefined') {\n      this.#initialTime = time;\n      this.#timeOrigins[time] = [origin];\n    }\n    // check input orientation\n    if (typeof orientation !== 'undefined') {\n      this.#orientation = orientation;\n    }\n  }\n\n  /**\n   * Get the time value that was passed at construction.\n   *\n   * @returns {number} The time value.\n   */\n  getInitialTime() {\n    return this.#initialTime;\n  }\n\n  /**\n   * Get the total number of slices.\n   * Can be different from what is stored in the size object\n   *  during a volume with time points creation process.\n   *\n   * @returns {number} The total count.\n   */\n  getCurrentTotalNumberOfSlices() {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return this.#origins.length;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      count += this.#timeOrigins[keys[i]].length;\n    }\n    return count;\n  }\n\n  /**\n   * Check if a time point has associated slices.\n   *\n   * @param {number} time The time point to check.\n   * @returns {boolean} True if slices are present.\n   */\n  hasSlicesAtTime(time) {\n    return typeof this.#timeOrigins[time] !== 'undefined';\n  }\n\n  /**\n   * Get the number of slices stored for time points preceding\n   * the input one.\n   *\n   * @param {number} time The time point to check.\n   * @returns {number|undefined} The count.\n   */\n  getCurrentNumberOfSlicesBeforeTime(time) {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return undefined;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (parseInt(key, 10) === time) {\n        break;\n      }\n      count += this.#timeOrigins[key].length;\n    }\n    return count;\n  }\n\n  /**\n   * Get the object origin.\n   * This should be the lowest origin to ease calculations (?).\n   *\n   * @returns {Point3D} The object origin.\n   */\n  getOrigin() {\n    return this.#origins[0];\n  }\n\n  /**\n   * Get the object origins.\n   *\n   * @returns {Array} The object origins.\n   */\n  getOrigins() {\n    return this.#origins;\n  }\n\n  /**\n   * Check if a point is in the origin list.\n   *\n   * @param {Point3D} point3D The point to check.\n   * @param {number} tol The comparison tolerance\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if in list.\n   */\n  includesOrigin(point3D, tol) {\n    for (let i = 0; i < this.#origins.length; ++i) {\n      if (this.#origins[i].isSimilar(point3D, tol)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the object size.\n   * Warning: the size comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} viewOrientation The view orientation (optional)\n   * @returns {Size} The object size.\n   */\n  getSize(viewOrientation) {\n    let res = this.#size;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let values = getOrientedArray3D(\n        [\n          this.#size.get(0),\n          this.#size.get(1),\n          this.#size.get(2)\n        ],\n        viewOrientation);\n      values = values.map(Math.abs);\n      res = new Size(values.concat(this.#size.getValues().slice(3)));\n    }\n    return res;\n  }\n\n  /**\n   * Calculate slice spacing from origins and replace current\n   *   if needed.\n   */\n  #updateSliceSpacing() {\n    const geoSliceSpacing = getSliceGeometrySpacing(\n      this.#origins,\n      this.#orientation\n    );\n    // update local if needed\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      this.#spacing.get(2) !== geoSliceSpacing) {\n      logger.trace('Updating slice spacing.');\n      const values = this.#spacing.getValues();\n      values[2] = geoSliceSpacing;\n      this.#spacing = new Spacing(values);\n    }\n  }\n\n  /**\n   * Get the object spacing.\n   * Warning: the spacing comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} viewOrientation The view orientation (optional)\n   * @returns {Spacing} The object spacing.\n   */\n  getSpacing(viewOrientation) {\n    // update slice spacing after appendSlice\n    if (this.#newOrigins) {\n      this.#updateSliceSpacing();\n      this.#newOrigins = false;\n    }\n    let res = this.#spacing;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let orientedValues = getOrientedArray3D(\n        [\n          this.#spacing.get(0),\n          this.#spacing.get(1),\n          this.#spacing.get(2)\n        ],\n        viewOrientation);\n      orientedValues = orientedValues.map(Math.abs);\n      res = new Spacing(orientedValues);\n    }\n    return res;\n  }\n\n  /**\n   * Get the image spacing in real world.\n   *\n   * @returns {Spacing} The object spacing.\n   */\n  getRealSpacing() {\n    // asOneAndZeros to not change spacing values...\n    return this.getSpacing(\n      this.#orientation.getInverse().asOneAndZeros()\n    );\n  }\n\n  /**\n   * Get the object orientation.\n   *\n   * @returns {Matrix33} The object orientation.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Get the slice position of a point in the current slice layout.\n   * Slice indices increase with decreasing origins (high index -> low origin),\n   * this simplified the handling of reconstruction since it means\n   * the displayed data is in the same 'direction' as the extracted data.\n   * As seen in the getOrigin method, the main origin is the lowest one.\n   * This implies that the index to world and reverse method do some flipping\n   * magic...\n   *\n   * @param {Point3D} point The point to evaluate.\n   * @param {number} time Optional time index.\n   * @returns {number} The slice index.\n   */\n  getSliceIndex(point, time) {\n    // cannot use this.worldToIndex(point).getK() since\n    // we cannot guaranty consecutive slices...\n\n    let localOrigins = this.#origins;\n    if (typeof time !== 'undefined') {\n      localOrigins = this.#timeOrigins[time];\n    }\n\n    // find the closest index\n    let closestSliceIndex = 0;\n    let minDist = point.getDistance(localOrigins[0]);\n    let dist = 0;\n    for (let i = 0; i < localOrigins.length; ++i) {\n      dist = point.getDistance(localOrigins[i]);\n      if (dist < minDist) {\n        minDist = dist;\n        closestSliceIndex = i;\n      }\n    }\n    const closestOrigin = localOrigins[closestSliceIndex];\n    // direction between the input point and the closest origin\n    const pointDir = point.minus(closestOrigin);\n    // use third orientation matrix column as base plane vector\n    const normal = new Vector3D(\n      this.#orientation.get(0, 2),\n      this.#orientation.get(1, 2),\n      this.#orientation.get(2, 2)\n    );\n    // a.dot(b) = ||a|| * ||b|| * cos(theta)\n    // (https://en.wikipedia.org/wiki/Dot_product#Geometric_definition)\n    // -> the sign of the dot product depends on the cosinus of\n    //    the angle between the vectors\n    //   -> >0 => vectors are codirectional\n    //   -> <0 => vectors are opposite\n    const dotProd = normal.dotProduct(pointDir);\n    // oposite vectors get higher index\n    const sliceIndex = dotProd > 0 ? closestSliceIndex + 1 : closestSliceIndex;\n    return sliceIndex;\n  }\n\n  /**\n   * Append an origin to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} index The index at which to append.\n   * @param {number} time Optional time index.\n   */\n  appendOrigin(origin, index, time) {\n    if (typeof time !== 'undefined') {\n      this.#timeOrigins[time].splice(index, 0, origin);\n    }\n    if (typeof time === 'undefined' || time === this.#initialTime) {\n      this.#newOrigins = true;\n      // add in origin array\n      this.#origins.splice(index, 0, origin);\n      // increment second dimension\n      const values = this.#size.getValues();\n      values[2] += 1;\n      this.#size = new Size(values);\n    }\n  }\n\n  /**\n   * Append a frame to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} time Optional time index.\n   */\n  appendFrame(origin, time) {\n    // add origin to list\n    this.#timeOrigins[time] = [origin];\n    // increment third dimension\n    const sizeValues = this.#size.getValues();\n    const spacingValues = this.#spacing.getValues();\n    if (sizeValues.length === 4) {\n      sizeValues[3] += 1;\n    } else {\n      sizeValues.push(2);\n      spacingValues.push(1);\n    }\n    this.#size = new Size(sizeValues);\n    this.#spacing = new Spacing(spacingValues);\n  }\n\n  /**\n   * Get a string representation of the geometry.\n   *\n   * @returns {string} The geometry as a string.\n   */\n  toString() {\n    return 'Origin: ' + this.getOrigin() +\n      ', Size: ' + this.getSize() +\n      ', Spacing: ' + this.getSpacing() +\n      ', Orientation: ' + this.getOrientation();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Geometry} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getOrigin().equals(rhs.getOrigin()) &&\n      this.getSize().equals(rhs.getSize()) &&\n      this.getSpacing().equals(rhs.getSpacing());\n  }\n\n  /**\n   * Check that a point is within bounds.\n   *\n   * @param {Point} point The point to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(point) {\n    return this.isIndexInBounds(this.worldToIndex(point));\n  }\n\n  /**\n   * Check that a index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {Array} dirs Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isIndexInBounds(index, dirs) {\n    return this.getSize().isInBounds(index, dirs);\n  }\n\n  /**\n   * Convert an index into world coordinates.\n   *\n   * @param {Index} index The index to convert.\n   * @returns {Point} The corresponding point.\n   */\n  indexToWorld(index) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      index.get(0) * spacing.get(0),\n      index.get(1) * spacing.get(1),\n      index.get(2) * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // keep >3d values\n    const values = index.getValues();\n    const origin = this.getOrigin();\n    values[0] = origin.getX() + point3D.getX();\n    values[1] = origin.getY() + point3D.getY();\n    values[2] = origin.getZ() + point3D.getZ();\n    // return point\n    return new Point(values);\n  }\n\n  /**\n   * Convert a 3D point into world coordinates.\n   *\n   * @param {Point3D} point The 3D point to convert.\n   * @returns {Point3D} The corresponding world 3D point.\n   */\n  pointToWorld(point) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // return point3D\n    const origin = this.getOrigin();\n    return new Point3D(\n      origin.getX() + point3D.getX(),\n      origin.getY() + point3D.getY(),\n      origin.getZ() + point3D.getZ()\n    );\n  }\n\n  /**\n   * Convert world coordinates into an index.\n   *\n   * @param {Point} point The point to convert.\n   * @returns {Index} The corresponding index.\n   */\n  worldToIndex(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    // TODO: use slice origin...\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = Math.round(orientedPoint3D.getX() / spacing.get(0));\n    values[1] = Math.round(orientedPoint3D.getY() / spacing.get(1));\n    values[2] = Math.round(orientedPoint3D.getZ() / spacing.get(2));\n\n    // return index\n    return new Index(values);\n  }\n\n  /**\n   * Convert world coordinates into an point.\n   *\n   * @param {Point} point The world point to convert.\n   * @returns {Point3D} The corresponding point.\n   */\n  worldToPoint(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = orientedPoint3D.getX() / spacing.get(0);\n    values[1] = orientedPoint3D.getY() / spacing.get(1);\n    values[2] = orientedPoint3D.getZ() / spacing.get(2);\n\n    // return index\n    return new Point3D(values[0], values[1], values[2]);\n  }\n\n} // class Geometry\n\n/**\n * Get the oriented values of an input 3D array.\n *\n * @param {Array} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {Array} The values reordered according to the orientation.\n */\nexport function getOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  // -> inv(orientation) * values = orientedValues\n  return orientation.getInverse().multiplyArray3D(array3D);\n}\n\n/**\n * Get the raw values of an oriented input 3D array.\n *\n * @param {Array} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {Array} The values reordered to compensate the orientation.\n */\nexport function getDeOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  return orientation.multiplyArray3D(array3D);\n}\n\n/**\n * Get the slice spacing from the difference in the Z directions\n * of input origins.\n *\n * @param {Array} origins An array of Point3D.\n * @param {Matrix} orientation The oritentation matrix.\n * @param {boolean} withCheck Flag to activate spacing variation check,\n *   default to true.\n * @returns {number|undefined} The spacing.\n */\nexport function getSliceGeometrySpacing(origins, orientation, withCheck) {\n  if (typeof withCheck === 'undefined') {\n    withCheck = true;\n  }\n  // check origins\n  if (origins.length <= 1) {\n    return;\n  }\n  // (x, y, z) = orientationMatrix * (i, j, k)\n  // -> inv(orientationMatrix) * (x, y, z) = (i, j, k)\n  // applied on the patient position, reorders indices\n  // so that Z is the slice direction\n  const invOrientation = orientation.getInverse();\n  let origin1 = invOrientation.multiplyVector3D(origins[0]);\n  let origin2 = invOrientation.multiplyVector3D(origins[1]);\n  let sliceSpacing = Math.abs(origin1.getZ() - origin2.getZ());\n  const deltas = [];\n  for (let i = 0; i < origins.length - 1; ++i) {\n    origin1 = invOrientation.multiplyVector3D(origins[i]);\n    origin2 = invOrientation.multiplyVector3D(origins[i + 1]);\n    const diff = Math.abs(origin1.getZ() - origin2.getZ());\n    if (diff === 0) {\n      throw new Error('Zero slice spacing.' +\n        origin1.toString() + ' ' + origin2.toString());\n    }\n    // keep smallest\n    if (diff < sliceSpacing) {\n      sliceSpacing = diff;\n    }\n    if (withCheck) {\n      if (!isSimilar(sliceSpacing, diff, BIG_EPSILON)) {\n        deltas.push(Math.abs(sliceSpacing - diff));\n      }\n    }\n  }\n  // warn if non constant\n  if (withCheck && deltas.length !== 0) {\n    const sumReducer = function (sum, value) {\n      return sum + value;\n    };\n    const mean = deltas.reduce(sumReducer) / deltas.length;\n    if (mean > 1e-4) {\n      logger.warn('Varying slice spacing, mean delta: ' +\n        mean.toFixed(3) + ' (' + deltas.length + ' case(s))');\n    }\n  }\n\n  return sliceSpacing;\n}\n","import {Vector3D} from '../math/vector';\nimport {getTargetOrientation} from '../gui/layerGroup';\nimport {getOrientedArray3D, getDeOrientedArray3D} from './geometry';\n\n/**\n * Plane geometry helper.\n */\nexport class PlaneHelper {\n\n  /**\n   * The associated spacing.\n   *\n   * @private\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * The image orientation.\n   *\n   * @private\n   * @type {Matrix33}\n   */\n  #imageOrientation;\n\n  /**\n   * The viewe orientation.\n   *\n   * @private\n   * @type {Matrix33}\n   */\n  #viewOrientation;\n\n  /**\n   * The target orientation.\n   *\n   * @private\n   * @type {Matrix33}\n   */\n  #targetOrientation;\n\n  /**\n   * @param {Spacing} spacing The spacing.\n   * @param {Matrix} imageOrientation The image oientation.\n   * @param {Matrix} viewOrientation The view orientation.\n   */\n  constructor(spacing, imageOrientation, viewOrientation) {\n    this.#spacing = spacing;\n    this.#imageOrientation = imageOrientation;\n    this.#viewOrientation = viewOrientation;\n\n    this.#targetOrientation = getTargetOrientation(\n      imageOrientation, viewOrientation);\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {object} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    // make 3D\n    const planeOffset = new Vector3D(\n      offset2D.x, offset2D.y, 0);\n    // de-orient\n    const pixelOffset = this.getTargetDeOrientedVector3D(planeOffset);\n    // ~indexToWorld\n    return new Vector3D(\n      pixelOffset.getX() * this.#spacing.get(0),\n      pixelOffset.getY() * this.#spacing.get(1),\n      pixelOffset.getZ() * this.#spacing.get(2));\n  }\n\n  /**\n   * Get a plane offset from a 3D one.\n   *\n   * @param {object} offset3D The 3D offset as {x,y,z}.\n   * @returns {object} The plane offset as {x,y}.\n   */\n  getPlaneOffsetFromOffset3D(offset3D) {\n    // ~worldToIndex\n    const pixelOffset = new Vector3D(\n      offset3D.x / this.#spacing.get(0),\n      offset3D.y / this.#spacing.get(1),\n      offset3D.z / this.#spacing.get(2));\n    // orient\n    const planeOffset = this.getTargetOrientedVector3D(pixelOffset);\n    // make 2D\n    return {\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    };\n  }\n\n  /**\n   * Orient an input vector from real to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The oriented vector.\n   */\n  getTargetOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      planeVector =\n        this.#targetOrientation.getInverse().multiplyVector3D(vector);\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input vector from target to real space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getTargetDeOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      vector = this.#targetOrientation.multiplyVector3D(planeVector);\n    }\n    return vector;\n  }\n\n  /**\n   * Orient an input vector from target to image space.\n   * WARN: returns absolute values...\n   * TODO: check why abs is needed...\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The orienteded vector.\n   */\n  getImageOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planeVector.getX(),\n          planeVector.getY(),\n          planeVector.getZ()\n        ],\n        this.#viewOrientation);\n      vector = new Vector3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return vector;\n  }\n\n  /**\n   * De-orient an input vector from image to target space.\n   * WARN: returns absolute values...\n   * TODO: check why abs is needed...\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getImageDeOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          vector.getX(),\n          vector.getY(),\n          vector.getZ()\n        ],\n        this.#viewOrientation);\n      planeVector = new Vector3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planeVector;\n  }\n\n  /**\n   * Reorder values to follow target orientation.\n   * WARN: returns absolute values...\n   * TODO: check why abs is needed...\n   *\n   * @param {object} values Values as {x,y,z}.\n   * @returns {object} Reoriented values as {x,y,z}.\n   */\n  getTargetOrientedPositiveXYZ(values) {\n    const orientedValues = getOrientedArray3D(\n      [\n        values.x,\n        values.y,\n        values.z\n      ],\n      this.#targetOrientation);\n    return {\n      x: orientedValues[0],\n      y: orientedValues[1],\n      z: orientedValues[2]\n    };\n  }\n\n  /**\n   * Get the (view) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      index = this.#viewOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Get the native (image) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getNativeScrollIndex() {\n    let index = null;\n    if (typeof this.#imageOrientation !== 'undefined') {\n      index = this.#imageOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n} // class PlaneHelper\n","import {getIdentityMat33, getCoronalMat33} from '../math/matrix';\nimport {Index} from '../math/index';\nimport {Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {viewEventNames} from '../image/view';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\nimport {ViewLayer} from './viewLayer';\nimport {DrawLayer} from './drawLayer';\n\n/**\n * Get the layer div id.\n *\n * @param {string} groupDivId The layer group div id.\n * @param {number} layerId The lyaer id.\n * @returns {string} A string id.\n */\nexport function getLayerDivId(groupDivId, layerId) {\n  return groupDivId + '-layer-' + layerId;\n}\n\n/**\n * Get the layer details from a div id.\n *\n * @param {string} idString The layer div id.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromLayerDivId(idString) {\n  const split = idString.split('-layer-');\n  if (split.length !== 2) {\n    logger.warn('Not the expected layer div id format...');\n  }\n  return {\n    groupDivId: split[0],\n    layerId: split[1]\n  };\n}\n\n/**\n * Get the layer details from a mouse event.\n *\n * @param {object} event The event to get the layer div id from. Expecting\n * an event origininating from a canvas inside a layer HTML div\n * with the 'layer' class and id generated with `getLayerDivId`.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromEvent(event) {\n  let res = null;\n  // get the closest element from the event target and with the 'layer' class\n  const layerDiv = event.target.closest('.layer');\n  if (layerDiv && typeof layerDiv.id !== 'undefined') {\n    res = getLayerDetailsFromLayerDivId(layerDiv.id);\n  }\n  return res;\n}\n\n/**\n * Get the view orientation according to an image and target orientation.\n * The view orientation is used to go from target to image space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} targetOrientation The target orientation.\n * @returns {Matrix33} The view orientation.\n */\nexport function getViewOrientation(imageOrientation, targetOrientation) {\n  let viewOrientation = getIdentityMat33();\n  if (typeof targetOrientation !== 'undefined') {\n    // i: image, v: view, t: target, O: orientation, P: point\n    // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n    // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n    // -> Ov = (Oi)-1 * Ot\n    // TODO: asOneAndZeros simplifies but not nice...\n    viewOrientation =\n      imageOrientation.asOneAndZeros().getInverse().multiply(targetOrientation);\n  }\n  // TODO: why abs???\n  return viewOrientation.getAbs();\n}\n\n/**\n * Get the target orientation according to an image and view orientation.\n * The target orientation is used to go from target to real space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {Matrix33} The target orientation.\n */\nexport function getTargetOrientation(imageOrientation, viewOrientation) {\n  // i: image, v: view, t: target, O: orientation, P: point\n  // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n  // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n  // -> Ot = Oi * Ov\n  // note: asOneAndZeros as in getViewOrientation...\n  let targetOrientation =\n    imageOrientation.asOneAndZeros().multiply(viewOrientation);\n\n  // TODO: why abs???\n  const simpleImageOrientation = imageOrientation.asOneAndZeros().getAbs();\n  if (simpleImageOrientation.equals(getCoronalMat33().getAbs())) {\n    targetOrientation = targetOrientation.getAbs();\n  }\n\n  return targetOrientation;\n}\n\n/**\n * Get a scaled offset to adapt to new scale and such as the input center\n * stays at the same position.\n *\n * @param {object} offset The previous offset as {x,y}.\n * @param {object} scale The previous scale as {x,y}.\n * @param {object} newScale The new scale as {x,y}.\n * @param {object} center The scale center as {x,y}.\n * @returns {object} The scaled offset as {x,y}.\n */\nexport function getScaledOffset(offset, scale, newScale, center) {\n  // worldPoint = indexPoint / scale + offset\n  //=> indexPoint = (worldPoint - offset ) * scale\n\n  // plane center should stay the same:\n  // indexCenter / newScale + newOffset =\n  //   indexCenter / oldScale + oldOffset\n  //=> newOffset = indexCenter / oldScale + oldOffset -\n  //     indexCenter / newScale\n  //=> newOffset = worldCenter - indexCenter / newScale\n  const indexCenter = {\n    x: (center.x - offset.x) * scale.x,\n    y: (center.y - offset.y) * scale.y\n  };\n  return {\n    x: center.x - (indexCenter.x / newScale.x),\n    y: center.y - (indexCenter.y / newScale.y)\n  };\n}\n\n/**\n * Layer group.\n *\n * Display position: {x,y}\n * Plane position: Index (access: get(i))\n * (world) Position: Point3D (access: getX, getY, getZ)\n *\n * Display -> World:\n * planePos = viewLayer.displayToPlanePos(displayPos)\n * -> compensate for layer scale and offset\n * pos = viewController.getPositionFromPlanePoint(planePos)\n *\n * World -> display\n * planePos = viewController.getOffset3DFromPlaneOffset(pos)\n * no need yet for a planePos to displayPos...\n */\nexport class LayerGroup {\n\n  /**\n   * The container div.\n   *\n   * @private\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * List of layers.\n   *\n   * @private\n   * @type {Array}\n   */\n  #layers = [];\n\n  /**\n   * The layer scale as {x,y}.\n   *\n   * @private\n   * @type {object}\n   */\n  #scale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base scale as {x,y}: all posterior scale will be on top of this one.\n   *\n   * @private\n   * @type {object}\n   */\n  #baseScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset as {x,y}.\n   *\n   * @private\n   * @type {object}\n   */\n  #offset = {x: 0, y: 0, z: 0};\n\n  /**\n   * Active view layer index.\n   *\n   * @private\n   * @type {number}\n   */\n  #activeViewLayerIndex = null;\n\n  /**\n   * Active draw layer index.\n   *\n   * @private\n   * @type {number}\n   */\n  #activeDrawLayerIndex = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * The target orientation matrix.\n   *\n   * @type {object}\n   * @private\n   */\n  #targetOrientation;\n\n  /**\n   * Flag to activate crosshair or not.\n   *\n   * @type {boolean}\n   * @private\n   */\n  #showCrosshair = false;\n\n  /**\n   * The current position used for the crosshair.\n   *\n   * @type {Point}\n   * @private\n   */\n  #currentPosition;\n\n  /**\n   * @param {HTMLElement} containerDiv The associated HTML div.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n  }\n\n  /**\n   * Get the target orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getTargetOrientation() {\n    return this.#targetOrientation;\n  }\n\n  /**\n   * Set the target orientation.\n   *\n   * @param {Matrix33} orientation The orientation matrix.\n   */\n  setTargetOrientation(orientation) {\n    this.#targetOrientation = orientation;\n  }\n\n  /**\n   * Get the showCrosshair flag.\n   *\n   * @returns {boolean} True to display the crosshair.\n   */\n  getShowCrosshair() {\n    return this.#showCrosshair;\n  }\n\n  /**\n   * Set the showCrosshair flag.\n   *\n   * @param {boolean} flag True to display the crosshair.\n   */\n  setShowCrosshair(flag) {\n    this.#showCrosshair = flag;\n    if (flag) {\n      // listen to offset and zoom change\n      this.addEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.addEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // show crosshair div\n      this.#showCrosshairDiv();\n    } else {\n      // listen to offset and zoom change\n      this.removeEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.removeEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // remove crosshair div\n      this.#removeCrosshairDiv();\n    }\n  }\n\n  /**\n   * Update crosshair on offset or zoom change.\n   *\n   * @param {object} _event The change event.\n   */\n  #updateCrosshairOnChange = (_event) => {\n    this.#showCrosshairDiv();\n  };\n\n  /**\n   * Get the Id of the container div.\n   *\n   * @returns {string} The id of the div.\n   */\n  getDivId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getScale() {\n    return this.#scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the added scale: the scale added to the base scale\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return {\n      x: this.#scale.x / this.#baseScale.x,\n      y: this.#scale.y / this.#baseScale.y,\n      z: this.#scale.z / this.#baseScale.z\n    };\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {object} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this.#offset;\n  }\n\n  /**\n   * Get the number of layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfLayers() {\n    return this.#layers.length;\n  }\n\n  /**\n   * Get the active image layer.\n   *\n   * @returns {object} The layer.\n   */\n  getActiveViewLayer() {\n    return this.#layers[this.#activeViewLayerIndex];\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        res.push(this.#layers[i]);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Search view layers for equal imae meta data.\n   *\n   * @param {object} meta The meta data to find.\n   * @returns {Array} The list of view layers that contain matched data.\n   */\n  searchViewLayers(meta) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer) {\n        if (this.#layers[i].getViewController().equalImageMeta(meta)) {\n          res.push(this.#layers[i]);\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the view layers data indices.\n   *\n   * @returns {Array} The list of indices.\n   */\n  getViewDataIndices() {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer) {\n        res.push(this.#layers[i].getDataIndex());\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the active draw layer.\n   *\n   * @returns {object} The layer.\n   */\n  getActiveDrawLayer() {\n    return this.#layers[this.#activeDrawLayerIndex];\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof DrawLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        res.push(this.#layers[i]);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the active view layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveViewLayer(index) {\n    this.#activeViewLayerIndex = index;\n  }\n\n  /**\n   * Set the active view layer with a data index.\n   *\n   * @param {number} index The data index.\n   */\n  setActiveViewLayerByDataIndex(index) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        this.setActiveViewLayer(i);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the active draw layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveDrawLayer(index) {\n    this.#activeDrawLayerIndex = index;\n  }\n\n  /**\n   * Set the active draw layer with a data index.\n   *\n   * @param {number} index The data index.\n   */\n  setActiveDrawLayerByDataIndex(index) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof DrawLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        this.setActiveDrawLayer(i);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @returns {object} The created layer.\n   */\n  addViewLayer() {\n    // layer index\n    const viewLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // view layer\n    const layer = new ViewLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // mark it as active\n    this.setActiveViewLayer(viewLayerIndex);\n    // bind view layer events\n    this.#bindViewLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Add a draw layer.\n   *\n   * @returns {object} The created layer.\n   */\n  addDrawLayer() {\n    // store active index\n    this.#activeDrawLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // draw layer\n    const layer = new DrawLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // bind draw layer events\n    this.#bindDrawLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Bind view layer events to this.\n   *\n   * @param {object} viewLayer The view layer to bind.\n   */\n  #bindViewLayer(viewLayer) {\n    // listen to position change to update other group layers\n    viewLayer.addEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // propagate view viewLayer-layer events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      viewLayer.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate viewLayer events\n    viewLayer.addEventListener('renderstart', this.#fireEvent);\n    viewLayer.addEventListener('renderend', this.#fireEvent);\n  }\n\n  /**\n   * Bind draw layer events to this.\n   *\n   * @param {object} drawLayer The draw layer to bind.\n   */\n  #bindDrawLayer(drawLayer) {\n    // propagate drawLayer events\n    drawLayer.addEventListener('drawcreate', this.#fireEvent);\n    drawLayer.addEventListener('drawdelete', this.#fireEvent);\n  }\n\n  /**\n   * Get the next layer DOM div.\n   *\n   * @returns {HTMLElement} A DOM div.\n   */\n  #getNextLayerDiv() {\n    const div = document.createElement('div');\n    div.id = getLayerDivId(this.getDivId(), this.#layers.length);\n    div.className = 'layer';\n    div.style.pointerEvents = 'none';\n    return div;\n  }\n\n  /**\n   * Empty the layer list.\n   */\n  empty() {\n    this.#layers = [];\n    // reset active indices\n    this.#activeViewLayerIndex = null;\n    this.#activeDrawLayerIndex = null;\n    // clean container div\n    const previous = this.#containerDiv.getElementsByClassName('layer');\n    if (previous) {\n      while (previous.length > 0) {\n        previous[0].remove();\n      }\n    }\n  }\n\n  /**\n   * Show a crosshair at a given position.\n   *\n   * @param {Point} position The position where to show the crosshair.\n   */\n  #showCrosshairDiv(position) {\n    if (typeof position === 'undefined') {\n      position = this.#currentPosition;\n    }\n\n    // remove previous\n    this.#removeCrosshairDiv();\n\n    // use first layer as base for calculating position and\n    // line sizes\n    const layer0 = this.#layers[0];\n    const vc = layer0.getViewController();\n    const p2D = vc.getPlanePositionFromPosition(position);\n    const displayPos = layer0.planePosToDisplay(p2D.x, p2D.y);\n\n    const lineH = document.createElement('hr');\n    lineH.id = this.getDivId() + '-scroll-crosshair-horizontal';\n    lineH.className = 'horizontal';\n    lineH.style.width = this.#containerDiv.offsetWidth + 'px';\n    lineH.style.left = '0px';\n    lineH.style.top = displayPos.y + 'px';\n\n    const lineV = document.createElement('hr');\n    lineV.id = this.getDivId() + '-scroll-crosshair-vertical';\n    lineV.className = 'vertical';\n    lineV.style.width = this.#containerDiv.offsetHeight + 'px';\n    lineV.style.left = (displayPos.x) + 'px';\n    lineV.style.top = '0px';\n\n    this.#containerDiv.appendChild(lineH);\n    this.#containerDiv.appendChild(lineV);\n  }\n\n  /**\n   * Remove crosshair divs.\n   */\n  #removeCrosshairDiv() {\n    let div = document.getElementById(\n      this.getDivId() + '-scroll-crosshair-horizontal');\n    if (div) {\n      div.remove();\n    }\n    div = document.getElementById(\n      this.getDivId() + '-scroll-crosshair-vertical');\n    if (div) {\n      div.remove();\n    }\n  }\n\n  /**\n   * Update layers (but not the active view layer) to a position change.\n   *\n   * @param {object} event The position change event.\n   */\n  updateLayersToPositionChange = (event) => {\n    // pause positionchange listeners\n    for (let j = 0; j < this.#layers.length; ++j) {\n      if (this.#layers[j] instanceof ViewLayer) {\n        this.#layers[j].removeEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        this.#layers[j].removeEventListener('positionchange', this.#fireEvent);\n      }\n    }\n\n    const index = new Index(event.value[0]);\n    const position = new Point(event.value[1]);\n\n    // store current position\n    this.#currentPosition = position;\n\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv(position);\n    }\n\n    // origin of the first view layer\n    let baseViewLayerOrigin0 = null;\n    let baseViewLayerOrigin = null;\n    // update position for all layers except the source one\n    for (let i = 0; i < this.#layers.length; ++i) {\n\n      // update base offset (does not trigger redraw)\n      // TODO check draw layers update\n      let hasSetOffset = false;\n      if (this.#layers[i] instanceof ViewLayer) {\n        const vc = this.#layers[i].getViewController();\n        // origin0 should always be there\n        const origin0 = vc.getOrigin();\n        // depending on position, origin could be undefined\n        const origin = vc.getOrigin(position);\n\n        if (!baseViewLayerOrigin) {\n          baseViewLayerOrigin0 = origin0;\n          baseViewLayerOrigin = origin;\n        } else {\n          if (vc.canSetPosition(position) &&\n            typeof origin !== 'undefined') {\n            // TODO: compensate for possible different orientation between views\n\n            const scrollDiff = baseViewLayerOrigin0.minus(origin0);\n            const scrollOffset = new Vector3D(\n              scrollDiff.getX(), scrollDiff.getY(), scrollDiff.getZ());\n\n            const planeDiff = baseViewLayerOrigin.minus(origin);\n            const planeOffset = new Vector3D(\n              planeDiff.getX(), planeDiff.getY(), planeDiff.getZ());\n\n            hasSetOffset =\n              this.#layers[i].setBaseOffset(scrollOffset, planeOffset);\n          }\n        }\n      }\n\n      // update position (triggers redraw)\n      let hasSetPos = false;\n      if (this.#layers[i].getId() !== event.srclayerid) {\n        hasSetPos = this.#layers[i].setCurrentPosition(position, index);\n      }\n\n      // force redraw if needed\n      if (!hasSetPos && hasSetOffset) {\n        this.#layers[i].draw();\n      }\n    }\n\n    // re-start positionchange listeners\n    for (let k = 0; k < this.#layers.length; ++k) {\n      if (this.#layers[k] instanceof ViewLayer) {\n        this.#layers[k].addEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        this.#layers[k].addEventListener('positionchange', this.#fireEvent);\n      }\n    }\n  };\n\n  /**\n   * Calculate the fit scale: the scale that fits the largest data.\n   *\n   * @returns {number|undefined} The fit scale.\n   */\n  calculateFitScale() {\n    // check container\n    if (this.#containerDiv.offsetWidth === 0 &&\n      this.#containerDiv.offsetHeight === 0) {\n      throw new Error('Cannot fit to zero sized container.');\n    }\n    // get max size\n    const maxSize = this.getMaxSize();\n    if (typeof maxSize === 'undefined') {\n      return undefined;\n    }\n    // return best fit\n    return Math.min(\n      this.#containerDiv.offsetWidth / maxSize.x,\n      this.#containerDiv.offsetHeight / maxSize.y\n    );\n  }\n\n  /**\n   * Set the layer group fit scale.\n   *\n   * @param {number} scaleIn The fit scale.\n   */\n  setFitScale(scaleIn) {\n    // get maximum size\n    const maxSize = this.getMaxSize();\n    // exit if none\n    if (typeof maxSize === 'undefined') {\n      return;\n    }\n\n    const containerSize = {\n      x: this.#containerDiv.offsetWidth,\n      y: this.#containerDiv.offsetHeight\n    };\n    // offset to keep data centered\n    const fitOffset = {\n      x: -0.5 * (containerSize.x - Math.floor(maxSize.x * scaleIn)),\n      y: -0.5 * (containerSize.y - Math.floor(maxSize.y * scaleIn))\n    };\n\n    // apply to layers\n    for (let j = 0; j < this.#layers.length; ++j) {\n      this.#layers[j].fitToContainer(scaleIn, containerSize, fitOffset);\n    }\n\n    // update crosshair\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv();\n    }\n  }\n\n  /**\n   * Get the largest data size.\n   *\n   * @returns {object|undefined} The largest size as {x,y}.\n   */\n  getMaxSize() {\n    let maxSize = {x: 0, y: 0};\n    for (let j = 0; j < this.#layers.length; ++j) {\n      if (this.#layers[j] instanceof ViewLayer) {\n        const size = this.#layers[j].getImageWorldSize();\n        if (size.x > maxSize.x) {\n          maxSize.x = size.x;\n        }\n        if (size.y > maxSize.y) {\n          maxSize.y = size.y;\n        }\n      }\n    }\n    if (maxSize.x === 0 && maxSize.y === 0) {\n      maxSize = undefined;\n    }\n    return maxSize;\n  }\n\n  /**\n   * Flip all layers along the Z axis without offset compensation.\n   */\n  flipScaleZ() {\n    this.#baseScale.z *= -1;\n    this.setScale(this.#baseScale);\n  }\n\n  /**\n   * Add scale to the layers. Scale cannot go lower than 0.1.\n   *\n   * @param {number} scaleStep The scale to add.\n   * @param {Point3D} center The scale center Point3D.\n   */\n  addScale(scaleStep, center) {\n    const newScale = {\n      x: this.#scale.x * (1 + scaleStep),\n      y: this.#scale.y * (1 + scaleStep),\n      z: this.#scale.z * (1 + scaleStep)\n    };\n    this.setScale(newScale, center);\n  }\n\n  /**\n   * Set the layers' scale.\n   *\n   * @param {object} newScale The scale to apply as {x,y,z}.\n   * @param {Point3D} center The scale center Point3D.\n   * @fires LayerGroup#zoomchange\n   */\n  setScale(newScale, center) {\n    this.#scale = newScale;\n    // apply to layers\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].setScale(this.#scale, center);\n    }\n\n    // event value\n    const value = [\n      newScale.x,\n      newScale.y,\n      newScale.z\n    ];\n    if (typeof center !== 'undefined') {\n      value.push(center.getX());\n      value.push(center.getY());\n      value.push(center.getZ());\n    }\n\n    /**\n     * Zoom change event.\n     *\n     * @event LayerGroup#zoomchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'zoomchange',\n      value: value\n    });\n  }\n\n  /**\n   * Add translation to the layers.\n   *\n   * @param {object} translation The translation as {x,y,z}.\n   */\n  addTranslation(translation) {\n    this.setOffset({\n      x: this.#offset.x - translation.x,\n      y: this.#offset.y - translation.y,\n      z: this.#offset.z - translation.z\n    });\n  }\n\n  /**\n   * Set the layers' offset.\n   *\n   * @param {object} newOffset The offset as {x,y,z}.\n   * @fires LayerGroup#offsetchange\n   */\n  setOffset(newOffset) {\n    // store\n    this.#offset = newOffset;\n    // apply to layers\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].setOffset(this.#offset);\n    }\n\n    /**\n     * Offset change event.\n     *\n     * @event LayerGroup#offsetchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'offsetchange',\n      value: [\n        this.#offset.x,\n        this.#offset.y,\n        this.#offset.z\n      ]\n    });\n  }\n\n  /**\n   * Reset the stage to its initial scale and no offset.\n   */\n  reset() {\n    this.setScale(this.#baseScale);\n    this.setOffset({x: 0, y: 0, z: 0});\n  }\n\n  /**\n   * Draw the layer.\n   */\n  draw() {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].draw();\n    }\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].display(flag);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // LayerGroup class\n","import {logger} from '../utils/logger';\n\n/**\n * Mask segment helper.\n */\nexport class MaskSegmentHelper {\n\n  /**\n   * The associated mask.\n   *\n   * @private\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segments: array of segment description.\n   *\n   * @private\n   * @type {Array}\n   */\n  #segments;\n\n  /**\n   * List of ids of hidden segments.\n   *\n   * @private\n   * @type {Array}\n   */\n  #hiddenSegments = [];\n\n  /**\n   * @param {Image} mask The associated mask image.\n   */\n  constructor(mask) {\n    this.#mask = mask;\n    this.#segments = mask.getMeta().custom.segments;\n  }\n\n  /**\n   * Check if a segment is part of the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is included.\n   */\n  hasSegment(segmentNumber) {\n    return typeof this.getSegment(segmentNumber) !== 'undefined';\n  }\n\n  /**\n   * Check if a segment is present in a mask image.\n   *\n   * @param {Array} numbers Array of segment numbers.\n   * @returns {Array} Array of boolean set to true\n   *   if the segment is present in the mask.\n   */\n  maskHasSegments(numbers) {\n    // create values using displayValue\n    const values = [];\n    const unknowns = [];\n    for (let i = 0; i < numbers.length; ++i) {\n      const segment = this.getSegment(numbers[i]);\n      if (typeof segment !== 'undefined') {\n        values.push(segment.displayValue);\n      } else {\n        logger.warn('Unknown segment in maskHasSegments: ' + numbers[i]);\n        unknowns.push(i);\n      }\n    }\n    const res = this.#mask.hasValues(values);\n    // insert unknowns as false in result\n    for (let j = 0; j < unknowns.length; ++j) {\n      res.splice(unknowns[j], 0, false);\n    }\n    return res;\n  }\n\n  /**\n   * Get a segment from the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {object} The segment.\n   */\n  getSegment(segmentNumber) {\n    return this.#segments.find(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Get the inner segment list.\n   *\n   * @returns {Array} The list of segments.\n   */\n  getSegments() {\n    return this.#segments;\n  }\n\n  /**\n   * Set the inner segment list.\n   *\n   * @param {Array} list The segment list.\n   */\n  setSegments(list) {\n    this.#segments = list;\n  }\n\n  /**\n   * Set the hidden segment list.\n   * TODO: not sure if needed...\n   *\n   * @param {Array} list The list of hidden segment numbers.\n   */\n  setHiddenSegments(list) {\n    this.#hiddenSegments = list;\n  }\n\n  /**\n   * Get the index of a segment in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {number|undefined} The index in the array.\n   */\n  #getHiddenIndex(segmentNumber) {\n    return this.#hiddenSegments.findIndex(function (item) {\n      return item === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is in the list.\n   */\n  isHidden(segmentNumber) {\n    return this.#getHiddenIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Add a segment to the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  addToHidden(segmentNumber) {\n    if (!this.isHidden(segmentNumber)) {\n      this.#hiddenSegments.push(segmentNumber);\n    } else {\n      logger.warn(\n        'Segment is allready in the hidden list: ' + segmentNumber);\n    }\n  }\n\n  /**\n   * Remove a segment from the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeFromHidden(segmentNumber) {\n    const index = this.#getHiddenIndex(segmentNumber);\n    if (index !== -1) {\n      this.#hiddenSegments.splice(index, 1);\n    } else {\n      logger.warn('Segment is not in the hidden list: ' + segmentNumber);\n    }\n  }\n\n  /**\n   * Get the alpha function to apply hidden colors.\n   *\n   * @returns {Function} The corresponding alpha function.\n   */\n  getAlphaFunc() {\n    // get colours\n    const hiddenColours = [{r: 0, g: 0, b: 0}];\n    for (let i = 0; i < this.#hiddenSegments.length; ++i) {\n      const segment = this.getSegment(this.#hiddenSegments[i]);\n      if (typeof segment !== 'undefined') {\n        hiddenColours.push(segment.displayValue);\n      }\n    }\n\n    // create alpha function\n    return function (value/*, index*/) {\n      for (let i = 0; i < hiddenColours.length; ++i) {\n        if (value[0] === hiddenColours[i].r &&\n          value[1] === hiddenColours[i].g &&\n          value[2] === hiddenColours[i].b) {\n          return 0;\n        }\n      }\n      // default\n      return 255;\n    };\n  }\n\n  /**\n   * Delete a segment.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @param {Function} cmdCallback The command event callback.\n   * @param {Function} exeCallback The post execution callback.\n   */\n  deleteSegment(segmentNumber, cmdCallback, exeCallback) {\n    const delcmd = new DeleteSegmentCommand(\n      this.#mask, this.getSegment(segmentNumber));\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    if (delcmd.isValid()) {\n      delcmd.execute();\n      // callback\n      exeCallback(delcmd);\n      // possibly hidden\n      if (this.isHidden(segmentNumber)) {\n        this.removeFromHidden(segmentNumber);\n      }\n    }\n  }\n\n} // class MaskSegmentHelper\n\n/**\n * Delete segment command.\n */\nexport class DeleteSegmentCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @private\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segment to remove.\n   *\n   * @private\n   * @type {object}\n   */\n  #segment;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @private\n   * @type {Array}\n   */\n  #offsets;\n\n  /**\n   * @param {object} mask The mask image.\n   * @param {object} segment The segment to remove.\n   * @param {boolean} silent Whether to send a creation event or not.\n   */\n  constructor(mask, segment, silent) {\n    this.#mask = mask;\n    this.#segment = segment;\n\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    this.#offsets = mask.getOffsets(segment.displayValue);\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-segment';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    return this.#offsets.length !== 0;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentdelete\n   */\n  execute() {\n    // remove\n    this.#mask.setAtOffsets(this.#offsets, {r: 0, g: 0, b: 0});\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event DeleteSegmentCommand#masksegmentdelete\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'masksegmentdelete',\n        segmentnumber: this.#segment.number\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentredraw\n   */\n  undo() {\n    // re-draw\n    this.#mask.setAtOffsets(this.#offsets, this.#segment.displayValue);\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event DeleteSegmentCommand#masksegmentredraw\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'masksegmentredraw',\n      segmentnumber: this.#segment.number\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteSegmentCommand class\n","import {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {isIdentityMat33} from '../math/matrix';\nimport {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {MaskSegmentHelper} from '../image/maskSegmentHelper';\nimport {\n  getSliceIterator,\n  getIteratorValues,\n  getRegionSliceIterator,\n  getVariableRegionSliceIterator\n} from '../image/iterator';\nimport {lut} from '../image/luts';\nimport {ListenerHandler} from '../utils/listen';\n\n/**\n * View controller.\n */\nexport class ViewController {\n\n  /**\n   * Associated View.\n   *\n   * @type {View}\n   * @private\n   */\n  #view;\n\n  /**\n   * Associated data index.\n   *\n   * @type {number}\n   * @private\n   */\n  #index;\n\n  /**\n   * Plane helper.\n   *\n   * @type {PlaneHelper}\n   * @private\n   */\n  #planeHelper;\n\n  /**\n   * Mask segment helper.\n   *\n   * @type {MaskSegmentHelper}\n   * @private\n   */\n  #maskSegmentHelper;\n\n  // third dimension player ID (created by setInterval)\n  #playerID = null;\n  // associated data index\n  #dataIndex = this.#index;\n\n  /**\n   * @param {View} view The associated view.\n   * @param {number} index The associated data index.\n   */\n  constructor(view, index) {\n    // check view\n    if (typeof view.getImage() === 'undefined') {\n      throw new Error('View does not have an image, cannot setup controller');\n    }\n\n    this.#view = view;\n    this.#index = index;\n\n    // setup the plane helper\n    this.#planeHelper = new PlaneHelper(\n      view.getImage().getGeometry().getRealSpacing(),\n      view.getImage().getGeometry().getOrientation(),\n      view.getOrientation()\n    );\n\n    // mask segment helper\n    if (view.getImage().getMeta().Modality === 'SEG') {\n      this.#maskSegmentHelper =\n        new MaskSegmentHelper(view.getImage());\n    }\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @private\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the plane helper.\n   *\n   * @returns {object} The helper.\n   */\n  getPlaneHelper() {\n    return this.#planeHelper;\n  }\n\n  /**\n   * Check is the associated image is a mask.\n   *\n   * @returns {boolean} True if the associated image is a mask.\n   */\n  isMask() {\n    return typeof maskSegmentHelper !== 'undefined';\n  }\n\n  /**\n   * Get the mask segment helper.\n   *\n   * @returns {object} The helper.\n   */\n  getMaskSegmentHelper() {\n    return this.#maskSegmentHelper;\n  }\n\n  /**\n   * Apply the hidden segments list by setting\n   * the corresponding alpha function.\n   */\n  applyHiddenSegments() {\n    if (this.isMask) {\n      this.setViewAlphaFunction(this.#maskSegmentHelper.getAlphaFunc());\n    }\n  }\n\n  /**\n   * Delete a segment.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @param {Function} exeCallback The post execution callback.\n   */\n  deleteSegment(segmentNumber, exeCallback) {\n    if (this.isMask) {\n      this.#maskSegmentHelper.deleteSegment(\n        segmentNumber, this.#fireEvent, exeCallback);\n    }\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  initialise() {\n    // set window/level to first preset\n    this.setWindowLevelPresetById(0);\n    // default position\n    this.setCurrentPosition(this.getPositionFromPlanePoint(0, 0));\n  }\n\n  /**\n   * Get the window/level presets names.\n   *\n   * @returns {Array} The presets names.\n   */\n  getWindowLevelPresetsNames() {\n    return this.#view.getWindowPresetsNames();\n  }\n\n  /**\n   * Add window/level presets to the view.\n   *\n   * @param {object} presets A preset object.\n   * @returns {object} The list of presets.\n   */\n  addWindowLevelPresets(presets) {\n    return this.#view.addWindowPresets(presets);\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   */\n  setWindowLevelPreset(name) {\n    this.#view.setWindowLevelPreset(name);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   */\n  setWindowLevelPresetById(id) {\n    this.#view.setWindowLevelPresetById(id);\n  }\n\n  /**\n   * Check if the controller is playing.\n   *\n   * @returns {boolean} True if the controler is playing.\n   */\n  isPlaying() {\n    return (this.#playerID !== null);\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The position.\n   */\n  getCurrentPosition() {\n    return this.#view.getCurrentPosition();\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    return this.#view.getCurrentIndex();\n  }\n\n  /**\n   * Get the current oriented index.\n   *\n   * @returns {Index} The index.\n   */\n  getCurrentOrientedIndex() {\n    let res = this.#view.getCurrentIndex();\n    if (typeof this.#view.getOrientation() !== 'undefined') {\n      // view oriented => image de-oriented\n      const vector = this.#planeHelper.getImageDeOrientedVector3D(\n        new Vector3D(res.get(0), res.get(1), res.get(2))\n      );\n      res = new Index([\n        vector.getX(), vector.getY(), vector.getZ()\n      ]);\n    }\n    return res;\n  }\n\n  /**\n   * Get the scroll index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    return this.#view.getScrollIndex();\n  }\n\n  /**\n   * Get the current scroll index value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollIndexValue() {\n    return this.#view.getCurrentIndex().get(this.#view.getScrollIndex());\n  }\n\n  getOrigin(position) {\n    return this.#view.getOrigin(position);\n  }\n\n  /**\n   * Get the current scroll position value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollPosition() {\n    const scrollIndex = this.#view.getScrollIndex();\n    return this.#view.getCurrentPosition().get(scrollIndex);\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {Array} array The array to fill in.\n   * @param {Point} position Optional position at which to generate,\n   *   otherwise generates at current position.\n   */\n  generateImageData(array, position) {\n    this.#view.generateImageData(array, position);\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} img The associated image.\n   * @param {number} index The data index of the image.\n   */\n  setImage(img, index) {\n    this.#view.setImage(img);\n    this.#dataIndex = index;\n  }\n\n  /**\n   * Get the current spacing.\n   *\n   * @returns {Array} The 2D spacing.\n   */\n  get2DSpacing() {\n    const spacing = this.#view.getImage().getGeometry().getSpacing();\n    return [spacing.get(0), spacing.get(1)];\n  }\n\n  /**\n   * Get the image rescaled value at the input position.\n   *\n   * @param {Point} position the input position.\n   * @returns {number|undefined} The image value or undefined if out of bounds\n   *   or no quantifiable (for ex RGB).\n   */\n  getRescaledImageValue(position) {\n    const image = this.#view.getImage();\n    if (!image.canQuantify()) {\n      return;\n    }\n    const geometry = image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    let value;\n    if (geometry.isIndexInBounds(index)) {\n      value = image.getRescaledValueAtIndex(index);\n    }\n    return value;\n  }\n\n  /**\n   * Get the image pixel unit.\n   *\n   * @returns {string} The unit\n   */\n  getPixelUnit() {\n    return this.#view.getImage().getMeta().pixelUnit;\n  }\n\n  /**\n   * Get some values from the associated image in a region.\n   *\n   * @param {Point2D} min Minimum point.\n   * @param {Point2D} max Maximum point.\n   * @returns {Array} A list of values.\n   */\n  getImageRegionValues(min, max) {\n    let image = this.#view.getImage();\n    const orientation = this.#view.getOrientation();\n    let position = this.getCurrentIndex();\n    let rescaled = true;\n\n    // created oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      // generate slice values\n      const sliceIter = getSliceIterator(\n        image,\n        position,\n        rescaled,\n        orientation\n      );\n      const sliceValues = getIteratorValues(sliceIter);\n      // oriented geometry\n      const orientedSize = image.getGeometry().getSize(orientation);\n      const sizeValues = orientedSize.getValues();\n      sizeValues[2] = 1;\n      const sliceSize = new Size(sizeValues);\n      const orientedSpacing = image.getGeometry().getSpacing(orientation);\n      const spacingValues = orientedSpacing.getValues();\n      spacingValues[2] = 1;\n      const sliceSpacing = new Spacing(spacingValues);\n      const sliceOrigin = new Point3D(0, 0, 0);\n      const sliceGeometry =\n        new Geometry(sliceOrigin, sliceSize, sliceSpacing);\n      // slice image\n      image = new Image(sliceGeometry, sliceValues);\n      // update position\n      position = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getRegionSliceIterator(\n      image, position, rescaled, min, max);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Get some values from the associated image in variable regions.\n   *\n   * @param {Array} regions A list of regions.\n   * @returns {Array} A list of values.\n   */\n  getImageVariableRegionValues(regions) {\n    const iter = getVariableRegionSliceIterator(\n      this.#view.getImage(),\n      this.getCurrentIndex(),\n      true, regions\n    );\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canQuantifyImage() {\n    return this.#view.getImage().canQuantify();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canWindowLevel() {\n    return this.#view.getImage().canWindowLevel();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has either the third dimension\n   * or above greater than one.\n   */\n  canScroll() {\n    return this.#view.getImage().canScroll(this.#view.getOrientation());\n  }\n\n  /**\n   * Get the image size.\n   *\n   * @returns {Size} The size.\n   */\n  getImageSize() {\n    return this.#view.getImage().getGeometry().getSize(\n      this.#view.getOrientation());\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {object} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    const geometry = this.#view.getImage().getGeometry();\n    const size = geometry.getSize(this.#view.getOrientation()).get2D();\n    const spacing = geometry.getSpacing(this.#view.getOrientation()).get2D();\n    return {\n      x: size.x * spacing.x,\n      y: size.y * spacing.y\n    };\n  }\n\n  /**\n   * Get the image rescaled data range.\n   *\n   * @returns {object} The range as {min, max}.\n   */\n  getImageRescaledDataRange() {\n    return this.#view.getImage().getRescaledDataRange();\n  }\n\n  /**\n   * Compare the input meta data to the associated image one.\n   *\n   * @param {object} meta The meta data.\n   * @returns {boolean} True if the associated image has equal meta data.\n   */\n  equalImageMeta(meta) {\n    const imageMeta = this.#view.getImage().getMeta();\n    // loop through input meta keys\n    const metaKeys = Object.keys(meta);\n    for (let i = 0; i < metaKeys.length; ++i) {\n      const metaKey = metaKeys[i];\n      if (typeof imageMeta[metaKey] === 'undefined') {\n        return false;\n      }\n      if (imageMeta[metaKey] !== meta[metaKey]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check is the provided position can be set.\n   *\n   * @param {Point} position The position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  canSetPosition(position) {\n    return this.#view.canSetPosition(position);\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} pos The position.\n   * @param {boolean} silent If true, does not fire a positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentPosition(pos, silent) {\n    return this.#view.setCurrentPosition(pos, silent);\n  }\n\n  /**\n   * Get a position from a 2D (x,y) position.\n   *\n   * @param {number} x The column position.\n   * @param {number} y The row position.\n   * @returns {Point} The associated position.\n   */\n  getPositionFromPlanePoint(x, y) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(x, y, k);\n    // de-orient\n    const point = this.#planeHelper.getImageOrientedVector3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const point3D = geometry.pointToWorld(point);\n    // merge with current position to keep extra dimensions\n    return this.getCurrentPosition().mergeWith3D(point3D);\n  }\n\n  /**\n   * Get a 2D (x,y) position from a position.\n   *\n   * @param {Point3D} point3D The 3D position.\n   * @returns {object} The 2D position.\n   */\n  getPlanePositionFromPosition(point3D) {\n    // orient\n    const geometry = this.#view.getImage().getGeometry();\n    // ~worldToIndex to not loose precision\n    const point = geometry.worldToPoint(point3D);\n    const planePoint = this.#planeHelper.getImageDeOrientedVector3D(point);\n    // return\n    return {\n      x: planePoint.getX(),\n      y: planePoint.getY(),\n    };\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The index.\n   * @param {boolean} silent If true, does not fire a positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentIndex(index, silent) {\n    return this.#view.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Get a plane 3D position from a plane 2D position: does not compensate\n   *   for the image origin. Needed for setting the scale center...\n   *\n   * @param {Point2D} point2D The 2D position as {x,y}.\n   * @returns {Point3D} The 3D point.\n   */\n  getPlanePositionFromPlanePoint(point2D) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(point2D.x, point2D.y, k);\n    // de-orient\n    const point = this.#planeHelper.getTargetDeOrientedVector3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const spacing = geometry.getRealSpacing();\n    return new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2));\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {object} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    return this.#planeHelper.getOffset3DFromPlaneOffset(offset2D);\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    return this.#view.incrementIndex(dim, silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    return this.#view.decrementIndex(dim, silent);\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.#view.decrementScrollIndex(silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.#view.incrementScrollIndex(silent);\n  }\n\n  /**\n   * Scroll play: loop through all slices.\n   */\n  play() {\n    // ensure data is scrollable: dim >= 3\n    if (!this.canScroll()) {\n      return;\n    }\n    if (this.#playerID === null) {\n      const image = this.#view.getImage();\n      const recommendedDisplayFrameRate =\n        image.getMeta().RecommendedDisplayFrameRate;\n      const milliseconds = this.#view.getPlaybackMilliseconds(\n        recommendedDisplayFrameRate);\n      const size = image.getGeometry().getSize();\n      const canScroll3D = size.canScroll3D();\n\n      this.#playerID = setInterval(() => {\n        let canDoMore = false;\n        if (canScroll3D) {\n          canDoMore = this.incrementScrollIndex();\n        } else {\n          canDoMore = this.incrementIndex(3);\n        }\n        // end of scroll, loop back\n        if (!canDoMore) {\n          const pos1 = this.getCurrentIndex();\n          const values = pos1.getValues();\n          const orientation = this.#view.getOrientation();\n          if (canScroll3D) {\n            values[orientation.getThirdColMajorDirection()] = 0;\n          } else {\n            values[3] = 0;\n          }\n          const index = new Index(values);\n          const geometry = this.#view.getImage().getGeometry();\n          this.setCurrentPosition(geometry.indexToWorld(index));\n        }\n      }, milliseconds);\n    } else {\n      this.stop();\n    }\n  }\n\n  /**\n   * Stop scroll playing.\n   */\n  stop() {\n    if (this.#playerID !== null) {\n      clearInterval(this.#playerID);\n      this.#playerID = null;\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {object} The window center and width.\n   */\n  getWindowLevel() {\n    return {\n      width: this.#view.getCurrentWindowLut().getWindowLevel().getWidth(),\n      center: this.#view.getCurrentWindowLut().getWindowLevel().getCenter()\n    };\n  }\n\n  /**\n   * Set the window/level.\n   *\n   * @param {number} wc The window center.\n   * @param {number} ww The window width.\n   */\n  setWindowLevel(wc, ww) {\n    this.#view.setWindowLevel(wc, ww);\n  }\n\n  /**\n   * Get the colour map.\n   *\n   * @returns {object} The colour map.\n   */\n  getColourMap() {\n    return this.#view.getColourMap();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {object} colourMap The colour map.\n   */\n  setColourMap(colourMap) {\n    this.#view.setColourMap(colourMap);\n  }\n\n  /**\n   * Set the view per value alpha function.\n   *\n   * @param {Function} func The function.\n   */\n  setViewAlphaFunction(func) {\n    this.#view.setAlphaFunction(func);\n  }\n\n  /**\n   * Set the colour map from a name.\n   *\n   * @param {string} name The name of the colour map to set.\n   */\n  setColourMapFromName(name) {\n    // check if we have it\n    if (!lut[name]) {\n      throw new Error('Unknown colour map: \\'' + name + '\\'');\n    }\n    // enable it\n    this.setColourMap(lut[name]);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class ViewController\n","import {logger} from '../utils/logger';\n\n/**\n * List of interaction event names.\n */\nexport const InteractionEventNames = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'mouseout',\n  'wheel',\n  'dblclick',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n/**\n * Get a HTML element associated to a container div.\n *\n * @param {number} containerDivId The id of the container div.\n * @param {string} name The name or id to find.\n * @returns {object} The found element or null.\n * @deprecated\n */\nexport function getElement(containerDivId, name) {\n  // get by class in the container div\n  const parent = document.getElementById(containerDivId);\n  if (!parent) {\n    return null;\n  }\n  const elements = parent.getElementsByClassName(name);\n  // getting the last element since some libraries (ie jquery-mobile) create\n  // span in front of regular tags (such as select)...\n  let element = elements[elements.length - 1];\n  // if not found get by id with 'containerDivId-className'\n  if (typeof element === 'undefined') {\n    element = document.getElementById(containerDivId + '-' + name);\n  }\n  return element;\n}\n\n/**\n * Prompt the user for some text. Uses window.prompt.\n *\n * @param {string} message The message in front of the input field.\n * @param {string} value The input default value.\n * @returns {string} The new value.\n */\nexport function prompt(message, value) {\n  return prompt(message, value);\n}\n\n/**\n * Custom UI object for client defined UI.\n */\nexport const customUI = {};\n\n/**\n * Get the positions (without the parent offset) of a list of touch events.\n *\n * @param {Array} touches The list of touch events.\n * @returns {Array} The list of positions of the touch events.\n */\nfunction getTouchesPositions(touches) {\n  // get the touch offset from all its parents\n  let offsetLeft = 0;\n  let offsetTop = 0;\n  if (touches.length !== 0 &&\n    typeof touches[0].target !== 'undefined') {\n    let offsetParent = touches[0].target.offsetParent;\n    while (offsetParent) {\n      if (!isNaN(offsetParent.offsetLeft)) {\n        offsetLeft += offsetParent.offsetLeft;\n      }\n      if (!isNaN(offsetParent.offsetTop)) {\n        offsetTop += offsetParent.offsetTop;\n      }\n      offsetParent = offsetParent.offsetParent;\n    }\n  } else {\n    logger.debug('No touch target offset parent.');\n  }\n  // set its position\n  const positions = [];\n  for (let i = 0; i < touches.length; ++i) {\n    positions.push({\n      x: touches[i].pageX - offsetLeft,\n      y: touches[i].pageY - offsetTop\n    });\n  }\n  return positions;\n}\n\n/**\n * Get the offset of an input event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Array} The array of offsets.\n */\nexport function getEventOffset(event) {\n  let positions = [];\n  if (typeof event.targetTouches !== 'undefined' &&\n    event.targetTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/targetTouches\n    positions = getTouchesPositions(event.targetTouches);\n  } else if (typeof event.changedTouches !== 'undefined' &&\n    event.changedTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\n    positions = getTouchesPositions(event.changedTouches);\n  } else {\n    // offsetX/Y: the offset in the X coordinate of the mouse pointer\n    // between that event and the padding edge of the target node\n    // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX\n    // https://caniuse.com/mdn-api_mouseevent_offsetx\n    positions.push({\n      x: event.offsetX,\n      y: event.offsetY\n    });\n  }\n  return positions;\n}\n\n/**\n * Test if a canvas with the input size can be created.\n *\n * @see https://github.com/ivmartel/dwv/issues/902\n * @see https://github.com/jhildenbiddle/canvas-size/blob/v1.2.4/src/canvas-test.js\n * @param {number} width The canvas width.\n * @param {number} height The canvas height.\n * @returns {boolean} True is the canvas can be created.\n */\nexport function canCreateCanvas(width, height) {\n  // test canvas with input size\n  const testCvs = document.createElement('canvas');\n  testCvs.width = width;\n  testCvs.height = height;\n  // crop canvas to speed up test\n  const cropCvs = document.createElement('canvas');\n  cropCvs.width = 1;\n  cropCvs.height = 1;\n  // contexts\n  const testCtx = testCvs.getContext('2d');\n  const cropCtx = cropCvs.getContext('2d');\n  // set data\n  if (testCtx) {\n    testCtx.fillRect(width - 1, height - 1, 1, 1);\n    // Render the test pixel in the bottom-right corner of the\n    // test canvas in the top-left of the 1x1 crop canvas. This\n    // dramatically reducing the time for getImageData to complete.\n    cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\n  }\n  // Verify image data (alpha component, Pass = 255, Fail = 0)\n  return cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\n}\n","import {Index} from '../math/index';\nimport {ListenerHandler} from '../utils/listen';\nimport {viewEventNames} from '../image/view';\nimport {ViewController} from '../app/viewController';\nimport {\n  canCreateCanvas,\n  InteractionEventNames\n} from './generic';\nimport {getScaledOffset} from './layerGroup';\n\n/**\n * View layer.\n */\nexport class ViewLayer {\n\n  /**\n   * Container div.\n   *\n   * @private\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * The view controller.\n   *\n   * @private\n   * @type {object}\n   */\n  #viewController = null;\n\n  /**\n   * The main display canvas.\n   *\n   * @private\n   * @type {object}\n   */\n  #canvas = null;\n\n  /**\n   * The offscreen canvas: used to store the raw, unscaled pixel data.\n   *\n   * @private\n   * @type {object}\n   */\n  #offscreenCanvas = null;\n\n  /**\n   * The associated CanvasRenderingContext2D.\n   *\n   * @private\n   * @type {object}\n   */\n  #context = null;\n\n  /**\n   * Flag to know if the current position is valid.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isValidPosition = true;\n\n  /**\n   * The image data array.\n   *\n   * @private\n   * @type {Array}\n   */\n  #imageData = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @private\n   * @type {object}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @private\n   * @type {object}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer opacity.\n   *\n   * @private\n   * @type {number}\n   */\n  #opacity = 1;\n\n  /**\n   * The layer scale.\n   *\n   * @private\n   * @type {object}\n   */\n  #scale = {x: 1, y: 1};\n\n  /**\n   * The layer fit scale.\n   *\n   * @private\n   * @type {object}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer offset.\n   *\n   * @private\n   * @type {object}\n   */\n  #offset = {x: 0, y: 0};\n\n  /**\n   * The base layer offset.\n   *\n   * @private\n   * @type {object}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @private\n   * @type {object}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @private\n   * @type {object}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @private\n   * @type {object}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * Data update flag.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #needsDataUpdate = null;\n\n  /**\n   * The associated data index.\n   *\n   * @private\n   * @type {number}\n   */\n  #dataIndex = null;\n\n  /**\n   * Listener handler.\n   *\n   * @private\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Image smoothing flag.\n   * see: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\n   *\n   * @private\n   * @type {boolean}\n   */\n  #imageSmoothingEnabled = false;\n\n  /**\n   * @param {HTMLElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' viewLayer';\n  }\n\n  /**\n   * Get the associated data index.\n   *\n   * @returns {number} The index.\n   */\n  getDataIndex() {\n    return this.#dataIndex;\n  }\n\n  /**\n   * Set the imageSmoothingEnabled flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  enableImageSmoothing(flag) {\n    this.#imageSmoothingEnabled = flag;\n  }\n\n  /**\n   * Set the associated view.\n   *\n   * @param {object} view The view.\n   * @param {number} index The associated data index.\n   */\n  setView(view, index) {\n    this.#dataIndex = index;\n    // local listeners\n    view.addEventListener('wlchange', this.#onWLChange);\n    view.addEventListener('colourchange', this.#onColourChange);\n    view.addEventListener('positionchange', this.#onPositionChange);\n    view.addEventListener('alphafuncchange', this.#onAlphaFuncChange);\n    // view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      view.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // create view controller\n    this.#viewController = new ViewController(view, index);\n  }\n\n  /**\n   * Get the view controller.\n   *\n   * @returns {object} The controller.\n   */\n  getViewController() {\n    return this.#viewController;\n  }\n\n  /**\n   * Get the canvas image data.\n   *\n   * @returns {object} The image data.\n   */\n  getImageData() {\n    return this.#imageData;\n  }\n\n  /**\n   * Handle an image set event.\n   *\n   * @param {object} event The event.\n   */\n  onimageset = (event) => {\n    // event.value = [index, image]\n    if (this.#dataIndex === event.dataid) {\n      this.#viewController.setImage(event.value[0], this.#dataIndex);\n      this.#setBaseSize(this.#viewController.getImageSize().get2D());\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  /**\n   * Handle an image change event.\n   *\n   * @param {object} event The event.\n   */\n  onimagechange = (event) => {\n    // event.value = [index]\n    if (this.#dataIndex === event.dataid) {\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {object} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {object} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    return this.#viewController.getImageWorldSize();\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#opacity;\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    if (alpha === this.#opacity) {\n      return;\n    }\n\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    /**\n     * Opacity change event.\n     *\n     * @event App#opacitychange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    const event = {\n      type: 'opacitychange',\n      value: [this.#opacity]\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip scale is handled by layer group\n    // flip offset\n    this.#flipOffset.x += this.#canvas.width / this.#scale.x;\n    this.#offset.x += this.#flipOffset.x;\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip scale is handled by layer group\n    // flip offset\n    this.#flipOffset.y += this.#canvas.height / this.#scale.y;\n    this.#offset.y += this.#flipOffset.y;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {object} newScale The scale as {x,y}.\n   * @param {Point3D} center The scale center.\n   */\n  setScale(newScale, center) {\n    const helper = this.#viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ(newScale);\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: this.#offset.x - this.#zoomOffset.x,\n        y: this.#offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#offset = resetOffset;\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = helper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          this.#offset, this.#scale, finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - this.#offset.x,\n          y: this.#zoomOffset.y + newOffset.y - this.#offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#offset = newOffset;\n      }\n    }\n\n    // store new scale\n    this.#scale = finalNewScale;\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const scrollIndex = helper.getNativeScrollIndex();\n    const newOffset = helper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n    this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      this.#offset = {\n        x: this.#offset.x - this.#baseOffset.x + newOffset.x,\n        y: this.#offset.y - this.#baseOffset.y + newOffset.y\n      };\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {object} newOffset The offset as {x,y}.\n   */\n  setOffset(newOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const planeNewOffset = helper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#offset = {\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    };\n  }\n\n  /**\n   * Transform a display position to an index.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {Index} The equivalent index.\n   */\n  displayToPlaneIndex(x, y) {\n    const planePos = this.displayToPlanePos(x, y);\n    return new Index([\n      Math.floor(planePos.x),\n      Math.floor(planePos.y)\n    ]);\n  }\n\n  /**\n   * Remove scale from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The de-scaled position as {x,y}.\n   */\n  displayToPlaneScale(x, y) {\n    return {\n      x: x / this.#scale.x,\n      y: y / this.#scale.y\n    };\n  }\n\n  /**\n   * Get a plane position from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The plane position as {x,y}.\n   */\n  displayToPlanePos(x, y) {\n    const deScaled = this.displayToPlaneScale(x, y);\n    return {\n      x: deScaled.x + this.#offset.x,\n      y: deScaled.y + this.#offset.y\n    };\n  }\n\n  planePosToDisplay(x, y) {\n    return {\n      x: (x - this.#offset.x + this.#baseOffset.x) * this.#scale.x,\n      y: (y - this.#offset.y + this.#baseOffset.y) * this.#scale.y\n    };\n  }\n\n  /**\n   * Get a main plane position from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The main plane position as {x,y}.\n   */\n  displayToMainPlanePos(x, y) {\n    const planePos = this.displayToPlanePos(x, y);\n    return {\n      x: planePos.x - this.#baseOffset.x,\n      y: planePos.y - this.#baseOffset.y\n    };\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set\n   *\n   * @fires App#renderstart\n   * @fires App#renderend\n   */\n  draw() {\n    // skip for non valid position\n    if (!this.#isValidPosition) {\n      return;\n    }\n\n    /**\n     * Render start event.\n     *\n     * @event App#renderstart\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    let event = {\n      type: 'renderstart',\n      layerid: this.getId(),\n      dataid: this.getDataIndex()\n    };\n    this.#fireEvent(event);\n\n    // update data if needed\n    if (this.#needsDataUpdate) {\n      this.#updateImageData();\n    }\n\n    // context opacity\n    this.#context.globalAlpha = this.#opacity;\n\n    // clear context\n    this.clear();\n\n    // draw the cached canvas on the context\n    // transform takes as input a, b, c, d, e, f to create\n    // the transform matrix (column-major order):\n    // [ a c e ]\n    // [ b d f ]\n    // [ 0 0 1 ]\n    this.#context.setTransform(\n      this.#scale.x,\n      0,\n      0,\n      this.#scale.y,\n      -1 * this.#offset.x * this.#scale.x,\n      -1 * this.#offset.y * this.#scale.y\n    );\n\n    // disable smoothing (set just before draw, could be reset by resize)\n    this.#context.imageSmoothingEnabled = this.#imageSmoothingEnabled;\n    // draw image\n    this.#context.drawImage(this.#offscreenCanvas, 0, 0);\n\n    /**\n     * Render end event.\n     *\n     * @event App#renderend\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    event = {\n      type: 'renderend',\n      layerid: this.getId(),\n      dataid: this.getDataIndex()\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context\n   *\n   * @param {object} size The image size as {x,y}.\n   * @param {object} spacing The image spacing as {x,y}.\n   * @param {number} alpha The initial data opacity.\n   */\n  initialise(size, spacing, alpha) {\n    // set locals\n    this.#baseSpacing = spacing;\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    // create canvas\n    // (canvas size is set in fitToContainer)\n    this.#canvas = document.createElement('canvas');\n    this.#containerDiv.appendChild(this.#canvas);\n\n    // check that the getContext method exists\n    if (!this.#canvas.getContext) {\n      alert('Error: no canvas.getContext method.');\n      return;\n    }\n    // get the 2D context\n    this.#context = this.#canvas.getContext('2d');\n    if (!this.#context) {\n      alert('Error: failed to get the 2D context.');\n      return;\n    }\n\n    // off screen canvas\n    this.#offscreenCanvas = document.createElement('canvas');\n\n    // set base size: needs an existing context and off screen canvas\n    this.#setBaseSize(size);\n\n    // update data on first draw\n    this.#needsDataUpdate = true;\n  }\n\n  /**\n   * Set the base size of the layer.\n   *\n   * @param {object} size The size as {x,y}.\n   */\n  #setBaseSize(size) {\n    // check canvas creation\n    if (!canCreateCanvas(size.x, size.y)) {\n      throw new Error('Cannot create canvas with size ' +\n        size.x + ', ' + size.y);\n    }\n\n    // set local\n    this.#baseSize = size;\n\n    // off screen canvas\n    this.#offscreenCanvas.width = this.#baseSize.x;\n    this.#offscreenCanvas.height = this.#baseSize.y;\n    // original empty image data array\n    this.#context.clearRect(0, 0, this.#baseSize.x, this.#baseSize.y);\n    this.#imageData = this.#context.createImageData(\n      this.#baseSize.x, this.#baseSize.y);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {number} fitScale1D The 1D fit scale.\n   * @param {object} fitSize The fit size as {x,y}.\n   * @param {object} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\n    let needsDraw = false;\n\n    // update canvas size if needed (triggers canvas reset)\n    if (this.#canvas.width !== fitSize.x || this.#canvas.height !== fitSize.y) {\n      if (!canCreateCanvas(fitSize.x, fitSize.y)) {\n        throw new Error('Cannot resize canvas ' + fitSize.x + ', ' + fitSize.y);\n      }\n      // canvas size  change triggers canvas reset\n      this.#canvas.width = fitSize.x;\n      this.#canvas.height = fitSize.y;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // previous scale without fit\n    const previousScale = {\n      x: this.#scale.x / this.#fitScale.x,\n      y: this.#scale.y / this.#fitScale.y\n    };\n    // fit scale\n    const newFitScale = {\n      x: fitScale1D * this.#baseSpacing.x,\n      y: fitScale1D * this.#baseSpacing.y\n    };\n    // scale\n    const newScale = {\n      x: previousScale.x * newFitScale.x,\n      y: previousScale.y * newFitScale.y\n    };\n    // check if different\n    if (previousScale.x !== newScale.x || previousScale.y !== newScale.y) {\n      this.#fitScale = newFitScale;\n      this.#scale = newScale;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / newFitScale.x,\n      y: fitOffset.y / newFitScale.y\n    };\n    // check if different\n    if (this.#viewOffset.x !== newViewOffset.x ||\n      this.#viewOffset.y !== newViewOffset.y) {\n      this.#viewOffset = newViewOffset;\n      this.#offset = {\n        x: this.#viewOffset.x +\n          this.#baseOffset.x +\n          this.#zoomOffset.x +\n          this.#flipOffset.x,\n        y: this.#viewOffset.y +\n          this.#baseOffset.y +\n          this.#zoomOffset.y +\n          this.#flipOffset.y\n      };\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // draw if needed\n    if (needsDraw) {\n      this.draw();\n    }\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(\n        names[i], this.#fireEvent, {passive: true});\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update the canvas image data.\n   */\n  #updateImageData() {\n    // generate image data\n    this.#viewController.generateImageData(this.#imageData);\n    // pass the data to the off screen canvas\n    this.#offscreenCanvas.getContext('2d').putImageData(this.#imageData, 0, 0);\n    // update data flag\n    this.#needsDataUpdate = false;\n  }\n\n  /**\n   * Handle window/level change.\n   *\n   * @param {object} event The event fired when changing the window/level.\n   * @private\n   */\n  #onWLChange = (event) => {\n    // generate and draw if no skip flag\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle colour map change.\n   *\n   * @param {object} event The event fired when changing the colour map.\n   * @private\n   */\n  #onColourChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle position change.\n   *\n   * @param {object} event The event fired when changing the position.\n   * @private\n   */\n  #onPositionChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      let valid = true;\n      if (typeof event.valid !== 'undefined') {\n        valid = event.valid;\n      }\n      // clear for non valid events\n      if (!valid) {\n        // clear only once\n        if (this.#isValidPosition) {\n          this.#isValidPosition = false;\n          this.clear();\n        }\n      } else {\n        // 3D dimensions\n        const dims3D = [0, 1, 2];\n        // remove scroll index\n        const indexScrollIndex =\n          dims3D.indexOf(this.#viewController.getScrollIndex());\n        dims3D.splice(indexScrollIndex, 1);\n        // remove non scroll index from diff dims\n        const diffDims = event.diffDims.filter(function (item) {\n          return dims3D.indexOf(item) === -1;\n        });\n        // update if we have something left\n        if (diffDims.length !== 0 || !this.#isValidPosition) {\n          // reset valid flag\n          this.#isValidPosition = true;\n          // reset update flag\n          this.#needsDataUpdate = true;\n          this.draw();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle alpha function change.\n   *\n   * @param {object} event The event fired when changing the function.\n   * @private\n   */\n  #onAlphaFuncChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} _index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, _index) {\n    return this.#viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Clear the context.\n   */\n  clear() {\n    // clear the context: reset the transform first\n    // store the current transformation matrix\n    this.#context.save();\n    // use the identity matrix while clearing the canvas\n    this.#context.setTransform(1, 0, 0, 1, 0, 0);\n    this.#context.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n    // restore the transform\n    this.#context.restore();\n  }\n\n  /**\n   * Align on another layer.\n   *\n   * @param {ViewLayer} rhs The layer to align on.\n   */\n  align(rhs) {\n    this.#canvas.style.top = rhs.getCanvas().offsetTop;\n    this.#canvas.style.left = rhs.getCanvas().offsetLeft;\n  }\n\n} // ViewLayer class\n","/**\n * Capitalise the first letter of a string.\n *\n * @param {string} string The string to capitalise the first letter.\n * @returns {string} The new string.\n */\nexport function capitaliseFirstLetter(string) {\n  let res = string;\n  if (string) {\n    res = string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return res;\n}\n\n/**\n * Check if a string starts with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched start.\n * @param {number} rawPos The position in this string at which to begin\n *  searching for searchString. Defaults to 0.\n * @returns {boolean} True if the input string starts with the searched string.\n */\nexport function startsWith(str, search, rawPos) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  const pos = rawPos > 0 ? rawPos | 0 : 0;\n  return str.substring(pos, pos + search.length) === search;\n}\n\n/**\n * Check if a string ends with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched ending.\n * @returns {boolean} True if the input string ends with the searched string.\n */\nexport function endsWith(str, search) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  return str.substring(str.length - search.length) === search;\n}\n\n/**\n * Split key/value string:\n *  key0=val00&key0=val01&key1=val10 returns\n *  { key0 : [val00, val01], key1 : val1 }\n *\n * @param {string} inputStr The string to split.\n * @returns {object} The split string.\n */\nexport function splitKeyValueString(inputStr) {\n  // result\n  const result = {};\n  // check input string\n  if (inputStr) {\n    // split key/value pairs\n    const pairs = inputStr.split('&');\n    for (let i = 0; i < pairs.length; ++i) {\n      const pair = pairs[i].split('=');\n      // if the key does not exist, create it\n      if (!result[pair[0]]) {\n        result[pair[0]] = pair[1];\n      } else {\n        // make it an array\n        if (!(result[pair[0]] instanceof Array)) {\n          result[pair[0]] = [result[pair[0]]];\n        }\n        result[pair[0]].push(pair[1]);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Get flags from an input string. Flags are words surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @returns {Array} An array of found flags.\n */\nexport function getFlags(inputStr) {\n  const flags = [];\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return flags;\n  }\n\n  // word surrounded by curly braces\n  const regex = /{(\\w+)}/g;\n\n  let match = regex.exec(inputStr);\n  while (match) {\n    flags.push(match[1]); // first matching group\n    match = regex.exec(inputStr);\n  }\n  return flags;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @param {object} values A object of {value, unit}.\n * @example\n *    const values = {\"length\": { \"value\": 33, \"unit\": \"cm\" } };\n *    const str = \"The length is: {length}.\";\n *    const res = replaceFlags(str, values); // \"The length is: 33 cm.\"\n * @returns {string} The result string.\n */\nexport function replaceFlags(inputStr, values) {\n  let res = '';\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return res;\n  }\n  res = inputStr;\n  // check values\n  if (values === null || typeof values === 'undefined') {\n    return res;\n  }\n\n  // loop through flags\n  const keys = getFlags(inputStr);\n  for (let i = 0; i < keys.length; ++i) {\n    const valueObj = values[keys[i]];\n    if (valueObj !== null && typeof valueObj !== 'undefined' &&\n      valueObj.value !== null && typeof valueObj.value !== 'undefined') {\n      // value string\n      let valueStr = valueObj.value.toPrecision(4);\n      // add unit if available\n      // space or no space? Yes apart from degree...\n      // check: https://en.wikipedia.org/wiki/Space_(punctuation)#Spaces_and_unit_symbols\n      if (valueObj.unit !== null &&\n        typeof valueObj.unit !== 'undefined' &&\n        valueObj.unit.length !== 0) {\n        if (valueObj.unit !== 'degree') {\n          valueStr += ' ';\n        }\n        valueStr += valueObj.unit;\n      }\n      // flag to replace\n      const flag = '{' + keys[i] + '}';\n      // replace\n      res = res.replace(flag, valueStr);\n    }\n  }\n  // return\n  return res;\n}\n\n/**\n * Get the root of an input path.\n * Splits using `/` as separator.\n *\n * @param {string} path The input path\n * @returns {string} The input path without its last part.\n */\nexport function getRootPath(path) {\n  return path.split('/').slice(0, -1).join('/');\n}\n\n/**\n * Get a file extension: anything after the last dot.\n * File name starting with a dot are discarded.\n * Extensions are expected to contain at least one letter.\n *\n * @param {string} filePath The file path containing the file name.\n * @returns {string} The lower case file extension or null for none.\n */\nexport function getFileExtension(filePath) {\n  let ext = null;\n  if (typeof filePath !== 'undefined' &&\n    filePath !== null &&\n    filePath[0] !== '.') {\n    const pathSplit = filePath.toLowerCase().split('.');\n    if (pathSplit.length !== 1) {\n      ext = pathSplit.pop();\n      // extension should contain at least one letter and no slash\n      const regExp = /[a-z]/;\n      if (!regExp.test(ext) || ext.includes('/')) {\n        ext = null;\n      }\n    }\n  }\n  return ext;\n}\n\n/**\n * Convert a string to a Uint8Array.\n *\n * @param {string} str The string to convert.\n * @returns {Uint8Array} The Uint8Array.\n */\nexport function stringToUint8Array(str) {\n  const arr = new Uint8Array(str.length);\n  for (let i = 0, leni = str.length; i < leni; i++) {\n    arr[i] = str.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Round a float number to a given precision.\n * Inspired from https://stackoverflow.com/a/49729715/3639892.\n * Can be a solution to not have trailing zero as when\n * using toFixed or toPrecision.\n * '+number.toFixed(precision)' does not pass all the tests...\n *\n * @param {number} number The number to round.\n * @param {number} precision The rounding precision.\n * @returns {number} The rounded number.\n */\nexport function precisionRound(number, precision) {\n  const factor = Math.pow(10, precision);\n  const delta = 0.01 / factor; // fixes precisionRound(1.005, 2)\n  return Math.round(number * factor + delta) / factor;\n}\n","// external\nimport Konva from 'konva';\n\n/**\n * Get the display name of the input shape.\n *\n * @param {object} shape The Konva shape.\n * @returns {string} The display name.\n */\nexport function getShapeDisplayName(shape) {\n  let displayName = 'shape';\n  if (shape instanceof Konva.Line) {\n    if (shape.points().length === 4) {\n      displayName = 'line';\n    } else if (shape.points().length === 6) {\n      displayName = 'protractor';\n    } else {\n      displayName = 'roi';\n    }\n  } else if (shape instanceof Konva.Rect) {\n    displayName = 'rectangle';\n  } else if (shape instanceof Konva.Ellipse) {\n    displayName = 'ellipse';\n  }\n  // return\n  return displayName;\n}\n\n/**\n * Draw group command.\n */\nexport class DrawGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @private\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @private\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The Konva layer.\n   *\n   * @private\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * Flag to send events.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * The group parent.\n   *\n   * @private\n   * @type {object}\n   */\n  #parent;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {Konva.Layer} layer The layer where to draw the group.\n   * @param {boolean} silent Whether to send a creation event or not.\n   */\n  constructor(group, name, layer, silent) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Draw-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  execute() {\n    // add the group to the parent (in case of undo/redo)\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.draw();\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Draw create event.\n       *\n       * @event DrawGroupCommand#drawcreate\n       * @type {object}\n       * @property {number} id The id of the create draw.\n       */\n      this.onExecute({\n        type: 'drawcreate',\n        id: this.#group.id()\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  undo() {\n    // remove the group from the parent layer\n    this.#group.remove();\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawdelete',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DrawGroupCommand class\n\n\n/**\n * Move group command.\n */\nexport class MoveGroupCommand {\n\n  /**\n   * The group to move.\n   *\n   * @private\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @private\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The 2D translation as {x,y}.\n   *\n   * @private\n   * @type {object}\n   */\n  #translation;\n\n  /**\n   * The Konva layer.\n   *\n   * @private\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {object} translation A 2D translation to move the group by.\n   * @param {Konva.Layer} layer The layer where to move the group.\n   */\n  constructor(group, name, translation, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#translation = translation;\n    this.#layer = layer;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Move-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  execute() {\n    // translate group\n    this.#group.move(this.#translation);\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw move event.\n     *\n     * @event MoveGroupCommand#drawmove\n     * @type {object}\n     * @property {number} id The id of the create draw.\n     */\n    this.onExecute({\n      type: 'drawmove',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  undo() {\n    // invert translate group\n    const minusTrans = {\n      x: -this.#translation.x,\n      y: -this.#translation.y\n    };\n    this.#group.move(minusTrans);\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawmove',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // MoveGroupCommand class\n\n\n/**\n * Change group command.\n */\nexport class ChangeGroupCommand {\n\n  /**\n   * The shape display name.\n   *\n   * @private\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The shape factory.\n   *\n   * @private\n   * @type {object}\n   */\n  #factory;\n\n  /**\n   * The start anchor.\n   *\n   * @private\n   * @type {object}\n   */\n  #startAnchor;\n\n  /**\n   * The end anchor.\n   *\n   * @private\n   * @type {object}\n   */\n  #endAnchor;\n\n  /**\n   * The Konva layer.\n   *\n   * @private\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * The associated view controller.\n   *\n   * @private\n   * @type {ViewController}\n   */\n  #viewController;\n\n  /**\n   * The app style.\n   *\n   * @private\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * @param {string} name The shape display name.\n   * @param {object} factory The shape factory.\n   * @param {object} startAnchor The anchor that starts the change.\n   * @param {object} endAnchor The anchor that ends the change.\n   * @param {Konva.Layer} layer The layer where to change the group.\n   * @param {ViewController} viewController The associated viewController.\n   * @param {Style} style The app style.\n   */\n  constructor(\n    name, factory, startAnchor, endAnchor, layer, viewController, style) {\n    this.#name = name;\n    this.#factory = factory;\n    this.#startAnchor = startAnchor;\n    this.#endAnchor = endAnchor;\n    this.#layer = layer;\n    this.#viewController = viewController;\n    this.#style = style;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Change-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  execute() {\n    // change shape\n    this.#factory.update(\n      this.#endAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw change event.\n     *\n     * @event ChangeGroupCommand#drawchange\n     * @type {object}\n     */\n    this.onExecute({\n      type: 'drawchange',\n      id: this.#endAnchor.getParent().id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  undo() {\n    // invert change shape\n    this.#factory.update(\n      this.#startAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawchange',\n      id: this.#startAnchor.getParent().id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // ChangeGroupCommand class\n\n/**\n * Delete group command.\n */\nexport class DeleteGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @private\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @private\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The Konva layer.\n   *\n   * @private\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * The group parent.\n   *\n   * @private\n   * @type {object}\n   */\n  #parent;\n\n  /**\n   * @param {object} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {object} layer The layer where to delete the group.\n   */\n  constructor(group, name, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  execute() {\n    // remove the group from its parent\n    this.#group.remove();\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw delete event.\n     *\n     * @event DeleteGroupCommand#drawdelete\n     * @type {object}\n     * @property {number} id The id of the create draw.\n     */\n    this.onExecute({\n      type: 'drawdelete',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  undo() {\n    // add the group to its parent\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawcreate',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteGroupCommand class\n","import {getIndexFromStringId} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {getShadowColour} from '../utils/colour';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand\n} from '../tools/drawCommands';\n\n/**\n * Konva.\n *\n * @external Konva\n * @see https://konvajs.org/\n */\nimport Konva from 'konva';\n\n/**\n * Get the draw group id for a given position.\n *\n * @param {Point} currentPosition The current position.\n * @returns {string} The group id.\n * @deprecated Use the index.toStringId instead.\n */\nexport function getDrawPositionGroupId(currentPosition) {\n  const sliceNumber = currentPosition.get(2);\n  const frameNumber = currentPosition.length() === 4\n    ? currentPosition.get(3) : 0;\n  return 'slice-' + sliceNumber + '_frame-' + frameNumber;\n}\n\n/**\n * Get the slice and frame position from a group id.\n *\n * @param {string} groupId The group id.\n * @returns {object} The slice and frame number.\n * @deprecated Use the getVectorFromStringId instead.\n */\nexport function getPositionFromGroupId(groupId) {\n  const sepIndex = groupId.indexOf('_');\n  if (sepIndex === -1) {\n    logger.warn('Badly formed PositionGroupId: ' + groupId);\n  }\n  return {\n    sliceNumber: groupId.substring(6, sepIndex),\n    frameNumber: groupId.substring(sepIndex + 7)\n  };\n}\n\n/**\n * Is an input node's name 'shape'.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'shape'.\n */\nexport function isNodeNameShape(node) {\n  return node.name() === 'shape';\n}\n\n/**\n * Is a node an extra shape associated with a main one.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name starts with 'shape-'.\n */\nexport function isNodeNameShapeExtra(node) {\n  return node.name().startsWith('shape-');\n}\n\n/**\n * Is an input node's name 'label'.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'label'.\n */\nexport function isNodeNameLabel(node) {\n  return node.name() === 'label';\n}\n\n/**\n * Is an input node a position node.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'position-group'.\n */\nexport function isPositionNode(node) {\n  return node.name() === 'position-group';\n}\n\n/**\n * Get a lambda to check a node's id.\n *\n * @param {string} id The id to check.\n * @returns {Function} A function to check a node's id.\n */\nexport function isNodeWithId(id) {\n  return function (node) {\n    return node.id() === id;\n  };\n}\n\n/**\n * Is the input node a node that has the 'stroke' method.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'anchor' and 'label'.\n */\nexport function canNodeChangeColour(node) {\n  return node.name() !== 'anchor' && node.name() !== 'label';\n}\n\n/**\n * Debug function to output the layer hierarchy as text.\n *\n * @param {object} layer The Konva layer.\n * @param {string} prefix A display prefix (used in recursion).\n * @returns {string} A text representation of the hierarchy.\n */\nexport function getHierarchyLog(layer, prefix) {\n  if (typeof prefix === 'undefined') {\n    prefix = '';\n  }\n  const kids = layer.getChildren();\n  let log = prefix + '|__ ' + layer.name() + ': ' + layer.id() + '\\n';\n  for (let i = 0; i < kids.length; ++i) {\n    log += getHierarchyLog(kids[i], prefix + '    ');\n  }\n  return log;\n}\n\n/**\n * Draw controller.\n */\nexport class DrawController {\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #konvaLayer;\n\n  /**\n   * Current position group id.\n   *\n   * @type {string}\n   */\n  #currentPosGroupId = null;\n\n  /**\n   * @param {Konva.Layer} konvaLayer The draw layer.\n   */\n  constructor(konvaLayer) {\n    this.#konvaLayer = konvaLayer;\n  }\n\n  /**\n   * Get the current position group.\n   *\n   * @returns {object} The Konva.Group.\n   */\n  getCurrentPosGroup() {\n    // get position groups\n    const posGroups = this.#konvaLayer.getChildren((node) => {\n      return node.id() === this.#currentPosGroupId;\n    });\n    // if one group, use it\n    // if no group, create one\n    let posGroup = null;\n    if (posGroups.length === 1) {\n      posGroup = posGroups[0];\n    } else if (posGroups.length === 0) {\n      posGroup = new Konva.Group();\n      posGroup.name('position-group');\n      posGroup.id(this.#currentPosGroupId);\n      posGroup.visible(true); // dont inherit\n      // add new group to layer\n      this.#konvaLayer.add(posGroup);\n    } else {\n      logger.warn('Unexpected number of draw position groups.');\n    }\n    // return\n    return posGroup;\n  }\n\n  /**\n   * Reset: clear the layers array.\n   */\n  reset() {\n    this.#konvaLayer = null;\n  }\n\n  /**\n   * Get a Konva group using its id.\n   *\n   * @param {string} id The group id.\n   * @returns {object|undefined} The Konva group.\n   */\n  getGroup(id) {\n    const group = this.#konvaLayer.findOne('#' + id);\n    if (typeof group === 'undefined') {\n      logger.warn('Cannot find node with id: ' + id\n      );\n    }\n    return group;\n  }\n\n  /**\n   * Activate the current draw layer.\n   *\n   * @param {Index} index The current position.\n   * @param {number} scrollIndex The scroll index.\n   */\n  activateDrawLayer(index, scrollIndex) {\n    // TODO: add layer info\n    // get and store the position group id\n    const dims = [scrollIndex];\n    for (let j = 3; j < index.length(); ++j) {\n      dims.push(j);\n    }\n    this.#currentPosGroupId = index.toStringId(dims);\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n    // reset or set the visible property\n    let visible;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      visible = false;\n      if (posGroups[i].id() === this.#currentPosGroupId) {\n        visible = true;\n      }\n      // group members inherit the visible property\n      posGroups[i].visible(visible);\n    }\n\n    // show current draw layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Get a list of drawing display details.\n   *\n   * @returns {Array} A list of draw details as\n   *   {id, position, type, color, meta}\n   */\n  getDrawDisplayDetails() {\n    const list = [];\n    const groups = this.#konvaLayer.getChildren();\n    for (let j = 0, lenj = groups.length; j < lenj; ++j) {\n      const position = getIndexFromStringId(groups[j].id());\n      const collec = groups[j].getChildren();\n      for (let i = 0, leni = collec.length; i < leni; ++i) {\n        const shape = collec[i].getChildren(isNodeNameShape)[0];\n        const label = collec[i].getChildren(isNodeNameLabel)[0];\n        const text = label.getChildren()[0];\n        let type = shape.className;\n        if (type === 'Line') {\n          const shapeExtrakids = collec[i].getChildren(\n            isNodeNameShapeExtra);\n          if (shape.closed()) {\n            type = 'Roi';\n          } else if (shapeExtrakids.length !== 0) {\n            const extraName0 = shapeExtrakids[0].name();\n            if (extraName0.indexOf('triangle') !== -1) {\n              type = 'Arrow';\n            } else if (extraName0.indexOf('arc') !== -1) {\n              type = 'Protractor';\n            } else {\n              type = 'Ruler';\n            }\n          }\n        }\n        if (type === 'Rect') {\n          type = 'Rectangle';\n        }\n        list.push({\n          id: collec[i].id(),\n          position: position.toString(),\n          type: type,\n          color: shape.stroke(),\n          meta: text.meta\n        });\n      }\n    }\n    return list;\n  }\n\n  /**\n   * Get a list of drawing store details. Used in state.\n   *\n   * @returns {object} A list of draw details including id, text, quant...\n   * TODO Unify with getDrawDisplayDetails?\n   */\n  getDrawStoreDetails() {\n    const drawingsDetails = {};\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n\n    let posKids;\n    let group;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      posKids = posGroups[i].getChildren();\n      for (let j = 0, lenj = posKids.length; j < lenj; ++j) {\n        group = posKids[j];\n        // remove anchors\n        const anchors = group.find('.anchor');\n        for (let a = 0; a < anchors.length; ++a) {\n          anchors[a].remove();\n        }\n        // get text\n        const texts = group.find('.text');\n        if (texts.length !== 1) {\n          logger.warn('There should not be more than one text per shape.');\n        }\n        // get meta (non konva vars)\n        drawingsDetails[group.id()] = {\n          meta: texts[0].meta\n        };\n      }\n    }\n    return drawingsDetails;\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   * @param {object} cmdCallback The DrawCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *   DrawCommand has been executed.\n   */\n  setDrawings(\n    drawings, drawingsDetails, cmdCallback, exeCallback) {\n    // regular Konva deserialize\n    const stateLayer = Konva.Node.create(drawings);\n\n    // get all position groups\n    const statePosGroups = stateLayer.getChildren(isPositionNode);\n\n    for (let i = 0, leni = statePosGroups.length; i < leni; ++i) {\n      const statePosGroup = statePosGroups[i];\n\n      // Get or create position-group if it does not exist and\n      // append it to konvaLayer\n      let posGroup = this.#konvaLayer.getChildren(\n        isNodeWithId(statePosGroup.id()))[0];\n      if (typeof posGroup === 'undefined') {\n        posGroup = new Konva.Group({\n          id: statePosGroup.id(),\n          name: 'position-group',\n          visible: false\n        });\n        this.#konvaLayer.add(posGroup);\n      }\n\n      const statePosKids = statePosGroup.getChildren();\n      for (let j = 0, lenj = statePosKids.length; j < lenj; ++j) {\n        // shape group (use first one since it will be removed from\n        // the group when we change it)\n        const stateGroup = statePosKids[0];\n        // add group to posGroup (switches its parent)\n        posGroup.add(stateGroup);\n        // shape\n        const shape = stateGroup.getChildren(isNodeNameShape)[0];\n        // create the draw command\n        const cmd = new DrawGroupCommand(\n          stateGroup, shape.className, this.#konvaLayer);\n        // draw command callbacks\n        cmd.onExecute = cmdCallback;\n        cmd.onUndo = cmdCallback;\n        // details\n        if (drawingsDetails) {\n          const details = drawingsDetails[stateGroup.id()];\n          const label = stateGroup.getChildren(isNodeNameLabel)[0];\n          const text = label.getText();\n          // store details\n          text.meta = details.meta;\n          // reset text (it was not encoded)\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n        }\n        // execute\n        cmd.execute();\n        exeCallback(cmd);\n      }\n    }\n  }\n\n  /**\n   * Update a drawing from its details.\n   *\n   * @param {object} drawDetails Details of the drawing to update.\n   */\n  updateDraw(drawDetails) {\n    // get the group\n    const group = this.#konvaLayer.findOne('#' + drawDetails.id);\n    if (typeof group === 'undefined') {\n      logger.warn(\n        '[updateDraw] Cannot find group with id: ' + drawDetails.id\n      );\n      return;\n    }\n    // shape\n    const shapes = group.getChildren(isNodeNameShape);\n    for (let i = 0; i < shapes.length; ++i) {\n      shapes[i].stroke(drawDetails.color);\n    }\n    // shape extra\n    const shapesExtra = group.getChildren(isNodeNameShapeExtra);\n    for (let j = 0; j < shapesExtra.length; ++j) {\n      if (typeof shapesExtra[j].stroke() !== 'undefined') {\n        shapesExtra[j].stroke(drawDetails.color);\n      } else if (typeof shapesExtra[j].fill() !== 'undefined') {\n        // for example text\n        shapesExtra[j].fill(drawDetails.color);\n      }\n    }\n    // label\n    const label = group.getChildren(isNodeNameLabel)[0];\n    const shadowColor = getShadowColour(drawDetails.color);\n    const kids = label.getChildren();\n    for (let k = 0; k < kids.length; ++k) {\n      const kid = kids[k];\n      kid.fill(drawDetails.color);\n      if (kids[k].className === 'Text') {\n        const text = kids[k];\n        text.shadowColor(shadowColor);\n        if (typeof drawDetails.meta !== 'undefined') {\n          text.meta = drawDetails.meta;\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n          label.setVisible(text.meta.textExpr.length !== 0);\n        }\n      }\n    }\n\n    // udpate current layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {object} group The group to delete.\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDrawGroup(group, cmdCallback, exeCallback) {\n    const shape = group.getChildren(isNodeNameShape)[0];\n    const shapeDisplayName = getShapeDisplayName(shape);\n    const delcmd = new DeleteGroupCommand(\n      group, shapeDisplayName, this.#konvaLayer);\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    delcmd.execute();\n    // callback\n    exeCallback(delcmd);\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  deleteDraw(id, cmdCallback, exeCallback) {\n    // get the group\n    const group = this.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // delete\n    this.deleteDrawGroup(group, cmdCallback, exeCallback);\n\n    return true;\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(cmdCallback, exeCallback) {\n    const groups = this.#konvaLayer.getChildren();\n    while (groups.length) {\n      this.deleteDrawGroup(groups[0], cmdCallback, exeCallback);\n    }\n  }\n\n} // class DrawController\n","import {ListenerHandler} from '../utils/listen';\nimport {DrawController} from '../app/drawController';\nimport {getScaledOffset} from './layerGroup';\nimport {InteractionEventNames} from './generic';\n\n// external\nimport Konva from 'konva';\n\n/**\n * Draw layer.\n */\nexport class DrawLayer {\n\n  /**\n   * The container div.\n   *\n   * @private\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * Konva stage.\n   *\n   * @private\n   * @type {Konva.Stage}\n   */\n  #konvaStage = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @private\n   * @type {object}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @private\n   * @type {object}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer fit scale.\n   *\n   * @private\n   * @type {object}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The base layer offset.\n   *\n   * @private\n   * @type {object}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @private\n   * @type {object}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @private\n   * @type {object}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @private\n   * @type {object}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * The draw controller.\n   *\n   * @private\n   * @type {object}\n   */\n  #drawController = null;\n\n  /**\n   * The plane helper.\n   *\n   * @private\n   * @type {object}\n   */\n  #planeHelper;\n\n  /**\n   * The associated data index.\n   *\n   * @private\n   * @type {number}\n   */\n  #dataIndex = null;\n\n  /**\n   * @param {HTMLElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' drawLayer';\n  }\n\n  /**\n   * Get the associated data index.\n   *\n   * @returns {number} The index.\n   */\n  getDataIndex() {\n    return this.#dataIndex;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the Konva stage.\n   *\n   * @returns {object} The stage.\n   */\n  getKonvaStage() {\n    return this.#konvaStage;\n  }\n\n  /**\n   * Get the Konva layer.\n   *\n   * @returns {object} The layer.\n   */\n  getKonvaLayer() {\n    // there should only be one layer\n    return this.#konvaStage.getLayers()[0];\n  }\n\n  /**\n   * Get the draw controller.\n   *\n   * @returns {object} The controller.\n   */\n  getDrawController() {\n    return this.#drawController;\n  }\n\n  /**\n   * Set the plane helper.\n   *\n   * @param {object} helper The helper.\n   */\n  setPlaneHelper(helper) {\n    this.#planeHelper = helper;\n  }\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {object} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#konvaStage.opacity();\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    this.#konvaStage.opacity(Math.min(Math.max(alpha, 0), 1));\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip scale is handled by layer group\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.x += size.width / scale.x;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.x += this.#flipOffset.x;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip scale is handled by layer group\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.y += size.height / scale.y;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.y += this.#flipOffset.y;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {object} newScale The scale as {x,y}.\n   * @param {Point3D} center The scale center.\n   */\n  setScale(newScale, center) {\n    const orientedNewScale =\n      this.#planeHelper.getTargetOrientedPositiveXYZ(newScale);\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    const offset = this.#konvaStage.offset();\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: offset.x - this.#zoomOffset.x,\n        y: offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#konvaStage.offset(resetOffset);\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = this.#planeHelper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          offset, this.#konvaStage.scale(), finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - offset.x,\n          y: this.#zoomOffset.y + newOffset.y - offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#konvaStage.offset(newOffset);\n      }\n    }\n\n    this.#konvaStage.scale(finalNewScale);\n    // update labels\n    this.#updateLabelScale(finalNewScale);\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {object} newOffset The offset as {x,y}.\n   */\n  setOffset(newOffset) {\n    const planeNewOffset =\n      this.#planeHelper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#konvaStage.offset({\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const scrollIndex = this.#planeHelper.getNativeScrollIndex();\n    const newOffset = this.#planeHelper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n      this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      const offset = this.#konvaStage.offset();\n      this.#konvaStage.offset({\n        x: offset.x - this.#baseOffset.x + newOffset.x,\n        y: offset.y - this.#baseOffset.y + newOffset.y\n      });\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set\n   */\n  draw() {\n    this.#konvaStage.draw();\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context\n   *\n   * @param {object} size The image size as {x,y}.\n   * @param {object} spacing The image spacing as {x,y}.\n   * @param {number} index The associated data index.\n   */\n  initialise(size, spacing, index) {\n    // set locals\n    this.#baseSize = size;\n    this.#baseSpacing = spacing;\n    this.#dataIndex = index;\n\n    // create stage\n    this.#konvaStage = new Konva.Stage({\n      container: this.#containerDiv,\n      width: this.#baseSize.x,\n      height: this.#baseSize.y,\n      listening: false\n    });\n    // reset style\n    // (avoids a not needed vertical scrollbar)\n    this.#konvaStage.getContent().setAttribute('style', '');\n\n    // create layer\n    const konvaLayer = new Konva.Layer({\n      listening: false,\n      visible: true\n    });\n    this.#konvaStage.add(konvaLayer);\n\n    // create draw controller\n    this.#drawController = new DrawController(konvaLayer);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {number} fitScale1D The 1D fit scale.\n   * @param {object} fitSize The fit size as {x,y}.\n   * @param {object} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\n    // update konva\n    this.#konvaStage.setWidth(fitSize.x);\n    this.#konvaStage.setHeight(fitSize.y);\n\n    // previous scale without fit\n    const previousScale = {\n      x: this.#konvaStage.scale().x / this.#fitScale.x,\n      y: this.#konvaStage.scale().y / this.#fitScale.y\n    };\n    // update fit scale\n    this.#fitScale = {\n      x: fitScale1D * this.#baseSpacing.x,\n      y: fitScale1D * this.#baseSpacing.y\n    };\n    // update scale\n    this.#konvaStage.scale({\n      x: previousScale.x * this.#fitScale.x,\n      y: previousScale.y * this.#fitScale.y\n    });\n\n    // update offsets\n    this.#viewOffset = {\n      x: fitOffset.x / this.#fitScale.x,\n      y: fitOffset.y / this.#fitScale.y\n    };\n    this.#konvaStage.offset({\n      x: this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Check the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} True if the group is visible.\n   */\n  isGroupVisible(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // get visibility\n    return group.isVisible();\n  }\n\n  /**\n   * Toggle the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  toogleGroupVisibility(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // toggle visible\n    group.visible(!group.isVisible());\n\n    // udpate\n    this.draw();\n\n    return true;\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraw(id, exeCallback) {\n    this.#drawController.deleteDraw(id, this.#fireEvent, exeCallback);\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(exeCallback) {\n    this.#drawController.deleteDraws(this.#fireEvent, exeCallback);\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    this.#konvaStage.listening(true);\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    this.#konvaStage.listening(false);\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, index) {\n    this.getDrawController().activateDrawLayer(\n      index, this.#planeHelper.getScrollIndex());\n    // TODO: add check\n    return true;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update label scale: compensate for it so\n   *   that label size stays visually the same.\n   *\n   * @param {object} scale The scale to compensate for as {x,y}.\n   */\n  #updateLabelScale(scale) {\n    // same formula as in style::applyZoomScale:\n    // compensate for scale and times 2 so that font 10 looks like a 10\n    const ratioX = 2 / scale.x;\n    const ratioY = 2 / scale.y;\n    // compensate scale for labels\n    const labels = this.#konvaStage.find('Label');\n    for (let i = 0; i < labels.length; ++i) {\n      labels[i].scale({x: ratioX, y: ratioY});\n    }\n  }\n\n} // DrawLayer class\n","import {Point, Point3D} from '../math/point';\nimport {LayerGroup} from './layerGroup';\n\n/**\n * Window/level binder.\n */\nexport class WindowLevelBinder {\n  getEventType = function () {\n    return 'wlchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataIndex(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        vc.setWindowLevel(event.value[0], event.value[1]);\n      }\n    };\n  };\n}\n\n/**\n * Position binder.\n */\nexport class PositionBinder {\n  getEventType = function () {\n    return 'positionchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const pointValues = event.value[1];\n      const vc = layerGroup.getActiveViewLayer().getViewController();\n      // handle different number of dimensions\n      const currentPos = vc.getCurrentPosition();\n      const currentDims = currentPos.length();\n      const inputDims = pointValues.length;\n      if (inputDims !== currentDims) {\n        if (inputDims === currentDims - 1) {\n          // add missing dim, for ex: input 3D -> current 4D\n          pointValues.push(currentPos.get(currentDims - 1));\n        } else if (inputDims === currentDims + 1) {\n          // remove extra dim, for ex: input 4D -> current 3D\n          pointValues.pop();\n        }\n      }\n      vc.setCurrentPosition(new Point(pointValues));\n    };\n  };\n}\n\n/**\n * Zoom binder.\n */\nexport class ZoomBinder {\n  getEventType = function () {\n    return 'zoomchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const scale = {\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      };\n      let center;\n      if (event.value.length === 6) {\n        center = new Point3D(\n          event.value[3],\n          event.value[4],\n          event.value[5]\n        );\n      }\n      layerGroup.setScale(scale, center);\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Offset binder.\n */\nexport class OffsetBinder {\n  getEventType = function () {\n    return 'offsetchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      layerGroup.setOffset({\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      });\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Opacity binder. Only propagates to view layers of the same data.\n */\nexport class OpacityBinder {\n  getEventType = function () {\n    return 'opacitychange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      // exit if no data index\n      if (typeof event.dataid === 'undefined') {\n        return;\n      }\n      // propagate to first view layer\n      const viewLayers = layerGroup.getViewLayersByDataIndex(event.dataid);\n      if (viewLayers.length !== 0) {\n        viewLayers[0].setOpacity(event.value);\n        viewLayers[0].draw();\n      }\n    };\n  };\n}\n\n/**\n * List of binders.\n */\nexport const binderList = {\n  WindowLevelBinder,\n  PositionBinder,\n  ZoomBinder,\n  OffsetBinder,\n  OpacityBinder\n};\n\n/**\n * Stage: controls a list of layer groups and their\n * synchronisation.\n */\nexport class Stage {\n\n  // associated layer groups\n  #layerGroups = [];\n  // active layer group index\n  #activeLayerGroupIndex = null;\n\n  // layer group binders\n  #binders = [];\n  // binder callbacks\n  #callbackStore = null;\n\n  /**\n   * Get the layer group at the given index.\n   *\n   * @param {number} index The index.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroup(index) {\n    return this.#layerGroups[index];\n  }\n\n  /**\n   * Get the number of layer groups that form the stage.\n   *\n   * @returns {number} The number of layer groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#layerGroups.length;\n  }\n\n  /**\n   * Get the active layer group.\n   *\n   * @returns {LayerGroup} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.getLayerGroup(this.#activeLayerGroupIndex);\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getViewLayersByDataIndex(index));\n    }\n    return res;\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getDrawLayersByDataIndex(index));\n    }\n    return res;\n  }\n\n  /**\n   * Add a layer group to the list.\n   *\n   * @param {object} htmlElement The HTML element of the layer group.\n   * @returns {LayerGroup} The newly created layer group.\n   */\n  addLayerGroup(htmlElement) {\n    this.#activeLayerGroupIndex = this.#layerGroups.length;\n    const layerGroup = new LayerGroup(htmlElement);\n    // add to storage\n    const isBound = this.#callbackStore && this.#callbackStore.length !== 0;\n    if (isBound) {\n      this.unbindLayerGroups();\n    }\n    this.#layerGroups.push(layerGroup);\n    if (isBound) {\n      this.bindLayerGroups();\n    }\n    // return created group\n    return layerGroup;\n  }\n\n  /**\n   * Get a layer group from an HTML element id.\n   *\n   * @param {string} id The element id to find.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(id) {\n    return this.#layerGroups.find(function (item) {\n      return item.getDivId() === id;\n    });\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder objects.\n   */\n  setBinders(list) {\n    if (typeof list === 'undefined' || list === null) {\n      throw new Error('Cannot set null or undefined binders');\n    }\n    if (this.#binders.length !== 0) {\n      this.unbindLayerGroups();\n    }\n    this.#binders = list.slice();\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Empty the layer group list.\n   */\n  empty() {\n    this.unbindLayerGroups();\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].empty();\n    }\n    this.#layerGroups = [];\n    this.#activeLayerGroupIndex = null;\n  }\n\n  /**\n   * Reset the stage: calls reset on all layer groups.\n   */\n  reset() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].reset();\n    }\n  }\n\n  /**\n   * Draw the stage: calls draw on all layer groups.\n   */\n  draw() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].draw();\n    }\n  }\n\n  /**\n   * Synchronise the fit scale of the group layers.\n   */\n  syncLayerGroupScale() {\n    let minScale;\n    const hasScale = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      const scale = this.#layerGroups[i].calculateFitScale();\n      if (typeof scale !== 'undefined') {\n        hasScale.push(i);\n        if (typeof minScale === 'undefined' || scale < minScale) {\n          minScale = scale;\n        }\n      }\n    }\n    // exit if no scale\n    if (typeof minScale === 'undefined') {\n      return;\n    }\n    // apply min scale to layers\n    for (let j = 0; j < this.#layerGroups.length; ++j) {\n      if (hasScale.includes(j)) {\n        this.#layerGroups[j].setFitScale(minScale);\n      }\n    }\n  }\n\n  /**\n   * Bind the layer groups of the stage.\n   */\n  bindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0) {\n      return;\n    }\n    // create callback store\n    this.#callbackStore = new Array(this.#layerGroups.length);\n    // add listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#addEventListeners(i, this.#binders[j]);\n      }\n    }\n  }\n\n  /**\n   * Unbind the layer groups of the stage.\n   */\n  unbindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0 ||\n      !this.#callbackStore) {\n      return;\n    }\n    // remove listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#removeEventListeners(i, this.#binders[j]);\n      }\n    }\n    // clear callback store\n    this.#callbackStore = null;\n  }\n\n  /**\n   * Get the binder callback function for a given layer group index.\n   * The function is created if not yet stored.\n   *\n   * @param {object} binder The layer binder.\n   * @param {number} index The index of the associated layer group.\n   * @returns {Function} The binder function.\n   */\n  #getBinderCallback(binder, index) {\n    if (typeof this.#callbackStore[index] === 'undefined') {\n      this.#callbackStore[index] = [];\n    }\n    const store = this.#callbackStore[index];\n    let binderObj = store.find(function (elem) {\n      return elem.binder === binder;\n    });\n    if (typeof binderObj === 'undefined') {\n      // create new callback object\n      binderObj = {\n        binder: binder,\n        callback: (event) => {\n          // stop listeners\n          this.#removeEventListeners(index, binder);\n          // apply binder\n          binder.getCallback(this.#layerGroups[index])(event);\n          // re-start listeners\n          this.#addEventListeners(index, binder);\n        }\n      };\n      this.#callbackStore[index].push(binderObj);\n    }\n    return binderObj.callback;\n  }\n\n  /**\n   * Add event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #addEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].addEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n  /**\n   * Remove event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #removeEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].removeEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n} // class Stage\n","import {getShadowColour} from '../utils/colour';\n\n/**\n * Style class.\n */\nexport class Style {\n  /**\n   * Font size.\n   *\n   * @private\n   * @type {number}\n   */\n  #fontSize = 10;\n\n  /**\n   * Font family.\n   *\n   * @private\n   * @type {string}\n   */\n  #fontFamily = 'Verdana';\n\n  /**\n   * Text colour.\n   *\n   * @private\n   * @type {string}\n   */\n  #textColour = '#fff';\n\n  /**\n   * Line colour.\n   *\n   * @private\n   * @type {string}\n   */\n  #lineColour = '#ffff80';\n\n  /**\n   * Base scale.\n   *\n   * @private\n   * @type {object}\n   */\n  #baseScale = {x: 1, y: 1};\n\n  /**\n   * Zoom scale.\n   *\n   * @private\n   * @type {object}\n   */\n  #zoomScale = {x: 1, y: 1};\n\n  /**\n   * Stroke width.\n   *\n   * @private\n   * @type {number}\n   */\n  #strokeWidth = 2;\n\n  /**\n   * Shadow offset.\n   *\n   * @private\n   * @type {object}\n   */\n  #shadowOffset = {x: 0.25, y: 0.25};\n\n  /**\n   * Tag opacity.\n   *\n   * @private\n   * @type {number}\n   */\n  #tagOpacity = 0.2;\n\n  /**\n   * Text padding.\n   *\n   * @private\n   * @type {number}\n   */\n  #textPadding = 3;\n\n  /**\n   * Get the font family.\n   *\n   * @returns {string} The font family.\n   */\n  getFontFamily() {\n    return this.#fontFamily;\n  }\n\n  /**\n   * Get the font size.\n   *\n   * @returns {number} The font size.\n   */\n  getFontSize() {\n    return this.#fontSize;\n  }\n\n  /**\n   * Get the stroke width.\n   *\n   * @returns {number} The stroke width.\n   */\n  getStrokeWidth() {\n    return this.#strokeWidth;\n  }\n\n  /**\n   * Get the text colour.\n   *\n   * @returns {string} The text colour.\n   */\n  getTextColour() {\n    return this.#textColour;\n  }\n\n  /**\n   * Get the line colour.\n   *\n   * @returns {string} The line colour.\n   */\n  getLineColour() {\n    return this.#lineColour;\n  }\n\n  /**\n   * Set the line colour.\n   *\n   * @param {string} colour The line colour.\n   */\n  setLineColour(colour) {\n    this.#lineColour = colour;\n  }\n\n  /**\n   * Set the base scale.\n   *\n   * @param {number} scale The scale as {x,y}.\n   */\n  setBaseScale(scale) {\n    this.#baseScale = scale;\n  }\n\n  /**\n   * Set the zoom scale.\n   *\n   * @param {object} scale The scale as {x,y}.\n   */\n  setZoomScale(scale) {\n    this.#zoomScale = scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {number} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the zoom scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getZoomScale() {\n    return this.#zoomScale;\n  }\n\n  /**\n   * Scale an input value using the base scale.\n   *\n   * @param {number} value The value to scale.\n   * @returns {number} The scaled value.\n   */\n  scale(value) {\n    // TODO: 2D?\n    return value / this.#baseScale.x;\n  }\n\n  /**\n   * Apply zoom scale on an input value.\n   *\n   * @param {number} value The value to scale.\n   * @returns {object} The scaled value as {x,y}.\n   */\n  applyZoomScale(value) {\n    // times 2 so that the font size 10 looks like a 10...\n    // (same logic as in the DrawController::updateLabelScale)\n    return {\n      x: 2 * value / this.#zoomScale.x,\n      y: 2 * value / this.#zoomScale.y\n    };\n  }\n\n  /**\n   * Get the shadow offset.\n   *\n   * @returns {object} The offset as {x,y}.\n   */\n  getShadowOffset() {\n    return this.#shadowOffset;\n  }\n\n  /**\n   * Get the tag opacity.\n   *\n   * @returns {number} The opacity.\n   */\n  getTagOpacity() {\n    return this.#tagOpacity;\n  }\n\n  /**\n   * Get the text padding.\n   *\n   * @returns {number} The padding.\n   */\n  getTextPadding() {\n    return this.#textPadding;\n  }\n\n  /**\n   * Get the font definition string.\n   *\n   * @returns {string} The font definition string.\n   */\n  getFontStr() {\n    return ('normal ' + this.getFontSize() + 'px sans-serif');\n  }\n\n  /**\n   * Get the line height.\n   *\n   * @returns {number} The line height.\n   */\n  getLineHeight() {\n    return (this.getFontSize() + this.getFontSize() / 5);\n  }\n\n  /**\n   * Get the font size scaled to the display.\n   *\n   * @returns {number} The scaled font size.\n   */\n  getScaledFontSize() {\n    return this.scale(this.getFontSize());\n  }\n\n  /**\n   * Get the stroke width scaled to the display.\n   *\n   * @returns {number} The scaled stroke width.\n   */\n  getScaledStrokeWidth() {\n    return this.scale(this.getStrokeWidth());\n  }\n\n  /**\n   * Get the shadow line colour.\n   *\n   * @returns {string} The shadow line colour.\n   */\n  getShadowLineColour() {\n    return getShadowColour(this.getLineColour());\n  }\n\n} // class Style\n","import {Index} from '../math/index';\nimport {colourNameToHex} from '../utils/colour';\nimport {getDrawPositionGroupId} from '../app/drawController';\n\n// external\nimport Konva from 'konva';\n\n/**\n * State class.\n * Saves: data url/path, display info.\n *\n * History:\n * - v0.5 (dwv 0.30.0, 12/2021)\n *   - store position as array\n *   - new draw position group key\n * - v0.4 (dwv 0.29.0, 06/2021)\n *   - move drawing details into meta property\n *   - remove scale center and translation, add offset\n * - v0.3 (dwv v0.23.0, 03/2018)\n *   - new drawing structure, drawings are now the full layer object and\n *     using toObject to avoid saving a string representation\n *   - new details structure: simple array of objects referenced by draw ids\n * - v0.2 (dwv v0.17.0, 12/2016)\n *   - adds draw details: array [nslices][nframes] of detail objects\n * - v0.1 (dwv v0.15.0, 07/2016)\n *   - adds version\n *   - drawings: array [nslices][nframes] with all groups\n * - initial release (dwv v0.10.0, 05/2015), no version number...\n *   - content: window-center, window-width, position, scale,\n *       scaleCenter, translation, drawings\n *   - drawings: array [nslices] with all groups\n */\nexport class State {\n  /**\n   * Save the application state as JSON.\n   *\n   * @param {object} app The associated application.\n   * @returns {string} The state as a JSON string.\n   */\n  toJSON(app) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const position = viewController.getCurrentIndex();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n    // return a JSON string\n    return JSON.stringify({\n      version: '0.5',\n      'window-center': viewController.getWindowLevel().center,\n      'window-width': viewController.getWindowLevel().width,\n      position: position.getValues(),\n      scale: app.getAddedScale(),\n      offset: app.getOffset(),\n      drawings: drawLayer.getKonvaLayer().toObject(),\n      drawingsDetails: drawController.getDrawStoreDetails()\n    });\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {string} json The JSON representation of the state.\n   * @returns {object} The state object.\n   */\n  fromJSON(json) {\n    const data = JSON.parse(json);\n    let res = null;\n    if (data.version === '0.1') {\n      res = this.#readV01(data);\n    } else if (data.version === '0.2') {\n      res = this.#readV02(data);\n    } else if (data.version === '0.3') {\n      res = this.#readV03(data);\n    } else if (data.version === '0.4') {\n      res = this.#readV04(data);\n    } else if (data.version === '0.5') {\n      res = this.#readV05(data);\n    } else {\n      throw new Error('Unknown state file format version: \\'' +\n        data.version + '\\'.');\n    }\n    return res;\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {object} app The app to apply the state to.\n   * @param {object} data The state data.\n   */\n  apply(app, data) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    // display\n    viewController.setWindowLevel(\n      data['window-center'], data['window-width']);\n    // position is index...\n    viewController.setCurrentIndex(new Index(data.position));\n    // apply saved scale on top of current base one\n    const baseScale = app.getActiveLayerGroup().getBaseScale();\n    let scale = null;\n    let offset = null;\n    if (typeof data.scaleCenter !== 'undefined') {\n      scale = {\n        x: data.scale * baseScale.x,\n        y: data.scale * baseScale.y,\n        z: 1\n      };\n      // ---- transform translation (now) ----\n      // Tx = -offset.x * scale.x\n      // => offset.x = -Tx / scale.x\n      // ---- transform translation (before) ----\n      // origin.x = centerX - (centerX - origin.x) * (newZoomX / zoom.x);\n      // (zoom.x -> initial zoom = base scale, origin.x = 0)\n      // Tx = origin.x + (trans.x * zoom.x)\n      const originX = data.scaleCenter.x - data.scaleCenter.x * data.scale;\n      const originY = data.scaleCenter.y - data.scaleCenter.y * data.scale;\n      const oldTx = originX + data.translation.x * scale.x;\n      const oldTy = originY + data.translation.y * scale.y;\n      offset = {\n        x: -oldTx / scale.x,\n        y: -oldTy / scale.y,\n        z: 0\n      };\n    } else {\n      scale = {\n        x: data.scale.x * baseScale.x,\n        y: data.scale.y * baseScale.y,\n        z: baseScale.z\n      };\n      offset = {\n        x: data.offset.x,\n        y: data.offset.y,\n        z: 0\n      };\n    }\n    app.getActiveLayerGroup().setScale(scale);\n    app.getActiveLayerGroup().setOffset(offset);\n    // render to draw the view layer\n    app.render(0); //todo: fix\n    // drawings (will draw the draw layer)\n    app.setDrawings(data.drawings, data.drawingsDetails);\n  }\n\n  /**\n   * Read an application state from an Object in v0.1 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   * @private\n   */\n  #readV01(data) {\n    // v0.1 -> v0.2\n    const v02DAndD = v01Tov02DrawingsAndDetails(data.drawings);\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(v02DAndD.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02DAndD.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.2 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   * @private\n   */\n  #readV02(data) {\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(data.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02Tov03DrawingsDetails(data.drawingsDetails));\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.3 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   * @private\n   */\n  #readV03(data) {\n    // v0.3 -> v0.4\n    data.drawingsDetails = v03Tov04DrawingsDetails(data.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.4 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   * @private\n   */\n  #readV04(data) {\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n  /**\n   * Read an application state from an Object in v0.5 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   * @private\n   */\n  #readV05(data) {\n    return data;\n  }\n\n} // State class\n\n/**\n * Convert drawings from v0.2 to v0.3.\n * v0.2: one layer per slice/frame\n * v0.3: one layer, one group per slice. setDrawing expects the full stage\n *\n * @param {Array} drawings An array of drawings.\n * @returns {object} The layer with the converted drawings.\n */\nfunction v02Tov03Drawings(drawings) {\n  // Auxiliar variables\n  let group, groupShapes, parentGroup;\n  // Avoid errors when dropping multiple states\n  //drawLayer.getChildren().each(function(node){\n  //    node.visible(false);\n  //});\n\n  const drawLayer = new Konva.Layer({\n    listening: false,\n    visible: true\n  });\n\n  // Get the positions-groups data\n  const groupDrawings = typeof drawings === 'string'\n    ? JSON.parse(drawings) : drawings;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDrawings.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDrawings[k].length; f < lenf; ++f) {\n      groupShapes = groupDrawings[k][f];\n      if (groupShapes.length !== 0) {\n        // Create position-group set as visible and append it to drawLayer\n        parentGroup = new Konva.Group({\n          id: getDrawPositionGroupId(new Index([1, 1, k, f])),\n          name: 'position-group',\n          visible: false\n        });\n\n        // Iterate over shapes-group\n        for (let g = 0, leng = groupShapes.length; g < leng; ++g) {\n          // create the konva group\n          group = Konva.Node.create(groupShapes[g]);\n          // enforce draggable: only the shape was draggable in v0.2,\n          // now the whole group is.\n          group.draggable(true);\n          group.getChildren().forEach(function (gnode) {\n            gnode.draggable(false);\n          });\n          // add to position group\n          parentGroup.add(group);\n        }\n        // add to layer\n        drawLayer.add(parentGroup);\n      }\n    }\n  }\n\n  return drawLayer;\n}\n\n/**\n * Convert drawings from v0.1 to v0.2.\n * v0.1: text on its own\n * v0.2: text as part of label\n *\n * @param {Array} inputDrawings An array of drawings.\n * @returns {object} The converted drawings.\n */\nfunction v01Tov02DrawingsAndDetails(inputDrawings) {\n  const newDrawings = [];\n  const drawingsDetails = {};\n\n  let drawGroups;\n  let drawGroup;\n  // loop over each slice\n  for (let k = 0, lenk = inputDrawings.length; k < lenk; ++k) {\n    // loop over each frame\n    newDrawings[k] = [];\n    for (let f = 0, lenf = inputDrawings[k].length; f < lenf; ++f) {\n      // draw group\n      drawGroups = inputDrawings[k][f];\n      const newFrameDrawings = [];\n      // Iterate over shapes-group\n      for (let g = 0, leng = drawGroups.length; g < leng; ++g) {\n        // create konva group from input\n        drawGroup = Konva.Node.create(drawGroups[g]);\n        // force visible (not set in state)\n        drawGroup.visible(true);\n        // label position\n        let pos = {x: 0, y: 0};\n        // update shape colour\n        const kshape = drawGroup.getChildren(function (node) {\n          return node.name() === 'shape';\n        })[0];\n        kshape.stroke(colourNameToHex(kshape.stroke()));\n        // special line case\n        if (drawGroup.name() === 'line-group') {\n          // update name\n          drawGroup.name('ruler-group');\n          // add ticks\n          const ktick0 = new Konva.Line({\n            points: [kshape.points()[0],\n              kshape.points()[1],\n              kshape.points()[0],\n              kshape.points()[1]],\n            name: 'shape-tick0'\n          });\n          drawGroup.add(ktick0);\n          const ktick1 = new Konva.Line({\n            points: [kshape.points()[2],\n              kshape.points()[3],\n              kshape.points()[2],\n              kshape.points()[3]],\n            name: 'shape-tick1'\n          });\n          drawGroup.add(ktick1);\n        }\n        // special protractor case: update arc name\n        const karcs = drawGroup.getChildren(function (node) {\n          return node.name() === 'arc';\n        });\n        if (karcs.length === 1) {\n          karcs[0].name('shape-arc');\n        }\n        // get its text\n        const ktexts = drawGroup.getChildren(function (node) {\n          return node.name() === 'text';\n        });\n        // update text: move it into a label\n        let ktext = new Konva.Text({\n          name: 'text',\n          text: ''\n        });\n        if (ktexts.length === 1) {\n          pos.x = ktexts[0].x();\n          pos.y = ktexts[0].y();\n          // remove it from the group\n          ktexts[0].remove();\n          // use it\n          ktext = ktexts[0];\n        } else {\n          // use shape position if no text\n          if (kshape.points().length !== 0) {\n            pos = {x: kshape.points()[0],\n              y: kshape.points()[1]};\n          }\n        }\n        // create new label with text and tag\n        const klabel = new Konva.Label({\n          x: pos.x,\n          y: pos.y,\n          name: 'label'\n        });\n        klabel.add(ktext);\n        klabel.add(new Konva.Tag());\n        // add label to group\n        drawGroup.add(klabel);\n        // add group to list\n        newFrameDrawings.push(JSON.stringify(drawGroup.toObject()));\n\n        // create details (v0.3 format)\n        let textExpr = ktext.text();\n        const txtLen = textExpr.length;\n        let quant = null;\n        // adapt to text with flag\n        if (drawGroup.name() === 'ruler-group') {\n          quant = {\n            length: {\n              value: parseFloat(textExpr.substring(0, txtLen - 2)),\n              unit: textExpr.substring(-2)\n            }\n          };\n          textExpr = '{length}';\n        } else if (drawGroup.name() === 'ellipse-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            surface: {\n              value: parseFloat(textExpr.substring(0, txtLen - 3)),\n              unit: textExpr.substring(-3)\n            }\n          };\n          textExpr = '{surface}';\n        } else if (drawGroup.name() === 'protractor-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            angle: {\n              value: parseFloat(textExpr.substring(0, txtLen - 1)),\n              unit: textExpr.substring(-1)\n            }\n          };\n          textExpr = '{angle}';\n        }\n        // set details\n        drawingsDetails[drawGroup.id()] = {\n          textExpr: textExpr,\n          longText: '',\n          quant: quant\n        };\n\n      }\n      newDrawings[k].push(newFrameDrawings);\n    }\n  }\n\n  return {drawings: newDrawings, drawingsDetails: drawingsDetails};\n}\n\n/**\n * Convert drawing details from v0.2 to v0.3.\n * - v0.2: array [nslices][nframes] with all\n * - v0.3: simple array of objects referenced by draw ids\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v02Tov03DrawingsDetails(details) {\n  const res = {};\n  // Get the positions-groups data\n  const groupDetails = typeof details === 'string'\n    ? JSON.parse(details) : details;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDetails.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDetails[k].length; f < lenf; ++f) {\n      // Iterate over shapes-group\n      for (let g = 0, leng = groupDetails[k][f].length; g < leng; ++g) {\n        const group = groupDetails[k][f][g];\n        res[group.id] = {\n          textExpr: group.textExpr,\n          longText: group.longText,\n          quant: group.quant\n        };\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Convert drawing details from v0.3 to v0.4.\n * - v0.3: properties at group root\n * - v0.4: properties in group meta object\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v03Tov04DrawingsDetails(details) {\n  const res = {};\n  const keys = Object.keys(details);\n  // Iterate over each position-groups\n  for (let k = 0, lenk = keys.length; k < lenk; ++k) {\n    const detail = details[keys[k]];\n    res[keys[k]] = {\n      meta: {\n        textExpr: detail.textExpr,\n        longText: detail.longText,\n        quantification: detail.quant\n      }\n    };\n  }\n  return res;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5.\n * - v0.4: position as object\n * - v0.5: position as array\n *\n * @param {Array} data An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Data(data) {\n  const pos = data.position;\n  data.position = [pos.i, pos.j, pos.k];\n  return data;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5.\n * - v0.4: draw id as 'slice-0_frame-1'\n * - v0.5: draw id as '#2-0_#3-1''\n *\n * @param {Array} inputDrawings An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Drawings(inputDrawings) {\n  // Iterate over each position-groups\n  const posGroups = inputDrawings.children;\n  for (let k = 0, lenk = posGroups.length; k < lenk; ++k) {\n    const posGroup = posGroups[k];\n    const id = posGroup.attrs.id;\n    const ids = id.split('_');\n    const sliceNumber = parseInt(ids[0].substring(6), 10); // 'slice-0'\n    const frameNumber = parseInt(ids[1].substring(6), 10); // 'frame-0'\n    let newId = '#2-';\n    if (sliceNumber === 0 && frameNumber !== 0) {\n      newId += frameNumber;\n    } else {\n      newId += sliceNumber;\n    }\n    posGroup.attrs.id = newId;\n  }\n  return inputDrawings;\n}\n","import {ListenerHandler} from '../utils/listen';\n\n/**\n * UndoStack class.\n */\nexport class UndoStack {\n  /**\n   * Array of commands.\n   *\n   * @private\n   * @type {Array}\n   */\n  #stack = [];\n\n  /**\n   * Current command index.\n   *\n   * @private\n   * @type {number}\n   */\n  #curCmdIndex = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#stack.length;\n  }\n\n  /**\n   * Get the current stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#curCmdIndex;\n  }\n\n  /**\n   * Add a command to the stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  add(cmd) {\n    // clear commands after current index\n    this.#stack = this.#stack.slice(0, this.#curCmdIndex);\n    // store command\n    this.#stack.push(cmd);\n    // increment index\n    ++this.#curCmdIndex;\n    /**\n     * Command add to undo stack event.\n     *\n     * @event UndoStack#undoadd\n     * @type {object}\n     * @property {string} command The name of the command added to the\n     *   undo stack.\n     */\n    this.#fireEvent({\n      type: 'undoadd',\n      command: cmd.getName()\n    });\n  }\n\n  /**\n   * Undo the last command.\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    // a bit inefficient...\n    if (this.#curCmdIndex > 0) {\n      // decrement command index\n      --this.#curCmdIndex;\n      // undo last command\n      this.#stack[this.#curCmdIndex].undo();\n      /**\n       * Command undo event.\n       *\n       * @event UndoStack#undo\n       * @type {object}\n       * @property {string} command The name of the undone command.\n       */\n      this.#fireEvent({\n        type: 'undo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n    }\n  }\n\n  /**\n   * Redo the last command.\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    if (this.#curCmdIndex < this.#stack.length) {\n      // run last command\n      this.#stack[this.#curCmdIndex].execute();\n      /**\n       * Command redo event.\n       *\n       * @event UndoStack#redo\n       * @type {object}\n       * @property {string} command The name of the redone command.\n       */\n      this.#fireEvent({\n        type: 'redo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n      // increment command index\n      ++this.#curCmdIndex;\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // UndoStack class\n","import {InteractionEventNames, getEventOffset} from '../gui/generic';\n\n/**\n * Toolbox controller.\n */\nexport class ToolboxController {\n\n  /**\n   * List of tools to control.\n   *\n   * @type {Array}\n   * @private\n   */\n  #toolList;\n\n  /**\n   * Selected tool.\n   *\n   * @type {object}\n   * @private\n   */\n  #selectedTool = null;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   * @private\n   */\n  #callbackStore = [];\n\n  /**\n   * Current layers bound to tool.\n   *\n   * @type {object}\n   * @private\n   */\n  #boundLayers = {};\n\n  /**\n   * @param {Array} toolList The list of tool objects.\n   */\n  constructor(toolList) {\n    this.#toolList = toolList;\n  }\n\n  /**\n   * Initialise.\n   */\n  init() {\n    for (const key in this.#toolList) {\n      this.#toolList[key].init();\n    }\n    // keydown listener\n    window.addEventListener('keydown',\n      this.#getOnMouch('window', 'keydown'), true);\n  }\n\n  /**\n   * Get the tool list.\n   *\n   * @returns {Array} The list of tool objects.\n   */\n  getToolList() {\n    return this.#toolList;\n  }\n\n  /**\n   * Check if a tool is in the tool list.\n   *\n   * @param {string} name The name to check.\n   * @returns {string} The tool list element for the given name.\n   */\n  hasTool(name) {\n    return typeof this.getToolList()[name] !== 'undefined';\n  }\n\n  /**\n   * Get the selected tool.\n   *\n   * @returns {object} The selected tool.\n   */\n  getSelectedTool() {\n    return this.#selectedTool;\n  }\n\n  /**\n   * Get the selected tool event handler.\n   *\n   * @param {string} eventType The event type, for example\n   *   mousedown, touchstart...\n   * @returns {Function} The event handler.\n   */\n  getSelectedToolEventHandler(eventType) {\n    return this.getSelectedTool()[eventType];\n  }\n\n  /**\n   * Set the selected tool.\n   *\n   * @param {string} name The name of the tool.\n   */\n  setSelectedTool(name) {\n    // check if we have it\n    if (!this.hasTool(name)) {\n      throw new Error('Unknown tool: \\'' + name + '\\'');\n    }\n    // de-activate previous\n    if (this.#selectedTool) {\n      this.#selectedTool.activate(false);\n    }\n    // set internal var\n    this.#selectedTool = this.#toolList[name];\n    // activate new tool\n    this.#selectedTool.activate(true);\n  }\n\n  /**\n   * Set the selected tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    if (this.getSelectedTool()) {\n      this.getSelectedTool().setFeatures(list);\n    }\n  }\n\n  /**\n   * Listen to layer interaction events.\n   *\n   * @param {object} layer The layer to listen to.\n   * @param {string} layerGroupDivId The associated layer group div id.\n   */\n  bindLayer(layer, layerGroupDivId) {\n    if (typeof this.#boundLayers[layerGroupDivId] !== 'undefined') {\n      this.#unbindLayer(this.#boundLayers[layerGroupDivId]);\n    }\n    layer.bindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.addEventListener(names[i],\n        this.#getOnMouch(layer.getId(), names[i]));\n    }\n    // update class var\n    this.#boundLayers[layerGroupDivId] = layer;\n  }\n\n  /**\n   * Remove canvas mouse and touch listeners.\n   *\n   * @param {object} layer The layer to stop listening to.\n   */\n  #unbindLayer(layer) {\n    layer.unbindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.removeEventListener(names[i],\n        this.#getOnMouch(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Mou(se) and (T)ouch event handler. This function just determines\n   * the mouse/touch position relative to the canvas element.\n   * It then passes it to the current tool.\n   *\n   * @param {string} layerId The layer id.\n   * @param {string} eventType The event type.\n   * @returns {object} A callback for the provided layer and event.\n   * @private\n   */\n  #getOnMouch(layerId, eventType) {\n    // augment event with converted offsets\n    const augmentEventOffsets = function (event) {\n      // event offset(s)\n      const offsets = getEventOffset(event);\n      // should have at least one offset\n      event._x = offsets[0].x;\n      event._y = offsets[0].y;\n      // possible second\n      if (offsets.length === 2) {\n        event._x1 = offsets[1].x;\n        event._y1 = offsets[1].y;\n      }\n    };\n\n    const applySelectedTool = (event) => {\n      // make sure we have a tool\n      if (this.#selectedTool) {\n        const func = this.#selectedTool[event.type];\n        if (func) {\n          func(event);\n        }\n      }\n    };\n\n    if (typeof this.#callbackStore[layerId] === 'undefined') {\n      this.#callbackStore[layerId] = [];\n    }\n\n    if (typeof this.#callbackStore[layerId][eventType] === 'undefined') {\n      let callback = null;\n      if (eventType === 'keydown') {\n        callback = function (event) {\n          applySelectedTool(event);\n        };\n      } else if (eventType === 'touchend') {\n        callback = function (event) {\n          applySelectedTool(event);\n        };\n      } else {\n        // mouse or touch events\n        callback = function (event) {\n          augmentEventOffsets(event);\n          applySelectedTool(event);\n        };\n      }\n      // store callback\n      this.#callbackStore[layerId][eventType] = callback;\n    }\n\n    return this.#callbackStore[layerId][eventType];\n  }\n\n} // class ToolboxController\n","/**\n * Multiple progresses handler.\n * Stores a multi dimensional list of progresses to allow to\n * calculate a global progress.\n *\n */\nexport class MultiProgressHandler {\n\n  /**\n   * List of progresses.\n   * First dimension is a list of item for which the progress is recorded,\n   *   for example file names.\n   * Second dimension is a list of possible progresses, for example\n   *   the progress of the download and the progress of the decoding.\n   *\n   * @private\n   * @type {Array}\n   */\n  #progresses = [];\n\n  /**\n   * Number of dimensions.\n   *\n   * @private\n   * @type {number}\n   */\n  #numberOfDimensions = 2;\n\n  /**\n   * Progress callback.\n   *\n   * @private\n   * @type {Function}\n   */\n  #callback;\n\n  /**\n   * @param {Function} callback The function to pass the global progress to.\n   */\n  constructor(callback) {\n    this.#callback = callback;\n  }\n\n  /**\n   * Set the number of dimensions.\n   *\n   * @param {number} num The number.\n   */\n  setNumberOfDimensions(num) {\n    this.#numberOfDimensions = num;\n  }\n\n  /**\n   * Set the number of data to load.\n   *\n   * @param {number} n The number of data to load.\n   */\n  setNToLoad(n) {\n    for (let i = 0; i < n; ++i) {\n      this.#progresses[i] = [];\n      for (let j = 0; j < this.#numberOfDimensions; ++j) {\n        this.#progresses[i][j] = 0;\n      }\n    }\n  }\n\n  /**\n   * Handle a load progress.\n   * Call the member callback with a global event.\n   *\n   * @param {object} event The progress event.\n   */\n  onprogress = (event) => {\n    // check event\n    if (!event.lengthComputable) {\n      return;\n    }\n    if (typeof event.subindex === 'undefined') {\n      return;\n    }\n    if (typeof event.index === 'undefined') {\n      return;\n    }\n    // calculate percent\n    const percent = (event.loaded * 100) / event.total;\n    // set percent for index\n    this.#progresses[event.index][event.subindex] = percent;\n\n    // item progress\n    let item = null;\n    if (typeof event.item !== 'undefined') {\n      item = event.item;\n    } else {\n      item = {\n        loaded: this.#getItemProgress(event.index),\n        total: 100,\n        source: event.source\n      };\n    }\n\n    // call callback with a global event\n    this.#callback({\n      lengthComputable: true,\n      loaded: this.#getGlobalPercent(),\n      total: 100,\n      item: item\n    });\n  };\n\n  /**\n   * Get the item load percent.\n   *\n   * @param {number} index The index of the item.\n   * @returns {number} The load percentage.\n   * @private\n   */\n  #getItemProgress(index) {\n    let sum = 0;\n    for (let j = 0; j < this.#numberOfDimensions; ++j) {\n      sum += this.#progresses[index][j];\n    }\n    return sum / this.#numberOfDimensions;\n  }\n\n  /**\n   * Get the global load percent including the provided one.\n   *\n   * @returns {number} The accumulated percentage.\n   * @private\n   */\n  #getGlobalPercent() {\n    let sum = 0;\n    const lenprog = this.#progresses.length;\n    for (let i = 0; i < lenprog; ++i) {\n      sum += this.#getItemProgress(i);\n    }\n    return Math.round(sum / lenprog);\n  }\n\n  /**\n   * Create a mono progress event handler.\n   *\n   * @param {number} index The index of the data.\n   * @param {number} subindex The sub-index of the data.\n   * @returns {Function} A progress handler function.\n   */\n  getMonoProgressHandler(index, subindex) {\n    return (event) => {\n      event.index = index;\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n\n  /**\n   * Create a mono progress event handler with an undefined index.\n   * Warning: The caller handles the progress index.\n   *\n   * @param {number} subindex The sub-index of the data.\n   * @returns {Function} A progress handler function.\n   */\n  getUndefinedMonoProgressHandler(subindex) {\n    return (event) => {\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n}\n","import {logger} from './logger';\nimport {splitKeyValueString} from './string';\n\n/**\n * Get an full object URL from a string uri.\n *\n * @param {string} uri A string representing the url.\n * @returns {URL} A URL object.\n */\nexport function getUrlFromUri(uri) {\n  // add base to allow for relative urls\n  // (base is not used for absolute urls)\n  return new URL(uri, window.location.origin);\n}\n\n/**\n * Split an input URI:\n * 'root?key0=val00&key0=val01&key1=val10' returns\n * { base : root, query : [ key0 : [val00, val01], key1 : val1 ] }\n * Returns an empty object if the input string is not correct (null, empty...)\n * or if it is not a query string (no question mark).\n *\n * @param {string} uri The string to split.\n * @returns {object} The split string.\n */\nexport function splitUri(uri) {\n  // result\n  const result = {};\n  // check if query string\n  let sepIndex = null;\n  if (uri && (sepIndex = uri.indexOf('?')) !== -1) {\n    // base: before the '?'\n    result.base = uri.substring(0, sepIndex);\n    // query : after the '?' and until possible '#'\n    let hashIndex = uri.indexOf('#');\n    if (hashIndex === -1) {\n      hashIndex = uri.length;\n    }\n    const query = uri.substring(sepIndex + 1, hashIndex);\n    // split key/value pairs of the query\n    result.query = splitKeyValueString(query);\n  }\n  // return\n  return result;\n}\n\n/**\n * Get the query part, split into an array, of an input URI.\n * The URI scheme is: 'base?query#fragment'\n *\n * @param {string} uri The input URI.\n * @returns {object} The query part, split into an array, of the input URI.\n */\nexport function getUriQuery(uri) {\n  // split\n  const parts = splitUri(uri);\n  // check not empty\n  if (Object.keys(parts).length === 0) {\n    return null;\n  }\n  // return query\n  return parts.query;\n}\n\n/**\n * Generic URI query decoder.\n * Supports manifest:\n *   [dwv root]?input=encodeURIComponent('[manifest file]')&type=manifest\n * or encoded URI with base and key value/pairs:\n *   [dwv root]?input=encodeURIComponent([root]?key0=value0&key1=value1)\n *\n * @param {string} query The query part to the input URI.\n * @param {Function} callback The function to call with the decoded file urls.\n * @param {object} options Optional url request options.\n */\nfunction decodeQuery(query, callback, options) {\n  // manifest\n  if (query.type && query.type === 'manifest') {\n    decodeManifestQuery(query, callback);\n  } else {\n    // default case: encoded URI with base and key/value pairs\n    callback(\n      decodeKeyValueUri(query.input, query.dwvReplaceMode),\n      options);\n  }\n}\n\n/**\n * Decode a Key/Value pair URI. If a key is repeated, the result\n * be an array of base + each key.\n *\n * @param {string} uri The URI to decode.\n * @param {string} replaceMode The key replace more.\n *   replaceMode can be:\n *   - key (default): keep the key\n *   - other than key: do not use the key\n *   'file' is a special case where the '?' of the query is not kept.\n * @returns {Array} The list of input file urls.\n */\nexport function decodeKeyValueUri(uri, replaceMode) {\n  const result = [];\n\n  // repeat key replace mode (default to keep key)\n  let repeatKeyReplaceMode = 'key';\n  if (replaceMode) {\n    repeatKeyReplaceMode = replaceMode;\n  }\n\n  // decode input URI\n  const queryUri = decodeURIComponent(uri);\n  // get key/value pairs from input URI\n  const inputQueryPairs = splitUri(queryUri);\n  if (Object.keys(inputQueryPairs).length === 0) {\n    result.push(queryUri);\n  } else {\n    const keys = Object.keys(inputQueryPairs.query);\n    // find repeat key\n    let repeatKey = null;\n    for (let i = 0; i < keys.length; ++i) {\n      if (inputQueryPairs.query[keys[i]] instanceof Array) {\n        repeatKey = keys[i];\n        break;\n      }\n    }\n\n    if (!repeatKey) {\n      result.push(queryUri);\n    } else {\n      const repeatList = inputQueryPairs.query[repeatKey];\n      // build base uri\n      let baseUrl = inputQueryPairs.base;\n      // add '?' when:\n      // - base is not empty\n      // - the repeatKey is not 'file'\n      // root/path/to/?file=0.jpg&file=1.jpg\n      if (baseUrl !== '' && repeatKey !== 'file') {\n        baseUrl += '?';\n      }\n      let gotOneArg = false;\n      for (let j = 0; j < keys.length; ++j) {\n        if (keys[j] !== repeatKey) {\n          if (gotOneArg) {\n            baseUrl += '&';\n          }\n          baseUrl += keys[j] + '=' + inputQueryPairs.query[keys[j]];\n          gotOneArg = true;\n        }\n      }\n      // append built urls to result\n      let url;\n      for (let k = 0; k < repeatList.length; ++k) {\n        url = baseUrl;\n        if (gotOneArg) {\n          url += '&';\n        }\n        if (repeatKeyReplaceMode === 'key') {\n          url += repeatKey + '=';\n        }\n        // other than 'key' mode: do nothing\n        url += repeatList[k];\n        result.push(url);\n      }\n    }\n  }\n  // return\n  return result;\n}\n\n/**\n * Decode a manifest query.\n *\n * @external XMLHttpRequest\n * @param {object} query The manifest query: {input, nslices},\n * with input the input URI and nslices the number of slices.\n * @param {Function} callback The function to call with the decoded urls.\n */\nfunction decodeManifestQuery(query, callback) {\n  let uri = '';\n  if (query.input[0] === '/') {\n    uri = window.location.protocol + '//' + window.location.host;\n  }\n  // TODO: needs to be decoded (decodeURIComponent?\n  uri += query.input;\n\n  /**\n   * Handle error.\n   */\n  function onError(/*event*/) {\n    logger.warn('RequestError while receiving manifest: ' + this.status);\n  }\n\n  /**\n   * Handle load.\n   */\n  function onLoad(/*event*/) {\n    callback(decodeManifest(this.responseXML, query.nslices));\n  }\n\n  const request = new XMLHttpRequest();\n  request.open('GET', decodeURIComponent(uri), true);\n  request.responseType = 'document';\n  request.onload = onLoad;\n  request.onerror = onError;\n  request.send(null);\n}\n\n/**\n * Decode an XML manifest.\n *\n * @param {object} manifest The manifest to decode.\n * @param {number} nslices The number of slices to load.\n * @returns {Array} The decoded manifest.\n */\nexport function decodeManifest(manifest, nslices) {\n  const result = [];\n  // wado url\n  const wadoElement = manifest.getElementsByTagName('wado_query');\n  const wadoURL = wadoElement[0].getAttribute('wadoURL');\n  const rootURL = wadoURL + '?requestType=WADO&contentType=application/dicom&';\n  // patient list\n  const patientList = manifest.getElementsByTagName('Patient');\n  if (patientList.length > 1) {\n    logger.warn('More than one patient, loading first one.');\n  }\n  // study list\n  const studyList = patientList[0].getElementsByTagName('Study');\n  if (studyList.length > 1) {\n    logger.warn('More than one study, loading first one.');\n  }\n  const studyUID = studyList[0].getAttribute('StudyInstanceUID');\n  // series list\n  const seriesList = studyList[0].getElementsByTagName('Series');\n  if (seriesList.length > 1) {\n    logger.warn('More than one series, loading first one.');\n  }\n  const seriesUID = seriesList[0].getAttribute('SeriesInstanceUID');\n  // instance list\n  const instanceList = seriesList[0].getElementsByTagName('Instance');\n  // loop on instances and push links\n  let max = instanceList.length;\n  if (nslices < max) {\n    max = nslices;\n  }\n  for (let i = 0; i < max; ++i) {\n    const sopInstanceUID = instanceList[i].getAttribute('SOPInstanceUID');\n    const link = rootURL +\n        '&studyUID=' + studyUID +\n        '&seriesUID=' + seriesUID +\n        '&objectUID=' + sopInstanceUID;\n    result.push(link);\n  }\n  // return\n  return result;\n}\n\n/**\n * Load from an input uri\n *\n * @param {string} uri The input uri, for example: 'window.location.href'.\n * @param {App} app The associated app that handles the load.\n * @param {object} options Optional url request options.\n */\nexport function loadFromUri(uri, app, options) {\n  const query = getUriQuery(uri);\n  // check query\n  if (query && typeof query.input !== 'undefined') {\n    loadFromQuery(query, app, options);\n  }\n  // no else to allow for empty uris\n}\n\n/**\n * Load from an input query\n *\n * @param {object} query A query derived from an uri.\n * @param {object} app The associated app that handles the load.\n * @param {object} options Optional url request options.\n */\nfunction loadFromQuery(query, app, options) {\n  /**\n   * Load end callback.\n   */\n  function onLoadEnd(/*event*/) {\n    app.removeEventListener('loadend', onLoadEnd);\n    app.loadURLs([query.state]);\n  }\n  // load base\n  decodeQuery(query, app.loadURLs, options);\n  // optional display state\n  if (typeof query.state !== 'undefined') {\n    // queue after main data load\n    app.addEventListener('loadend', onLoadEnd);\n  }\n}\n","import {endsWith, getRootPath} from '../utils/string';\nimport {MultiProgressHandler} from '../utils/progress';\nimport {getFileListFromDicomDir} from '../dicom/dicomElementsWrapper';\nimport {loaderList} from './loaderList';\n\n// url content types\nexport const urlContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1\n};\n\n/**\n * Urls loader.\n */\nexport class UrlsLoader {\n\n  /**\n   * Input data.\n   *\n   * @private\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched requests.\n   *\n   * @private\n   * @type {Array}\n   */\n  #requests = [];\n\n  /**\n   * Data loader.\n   *\n   * @private\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @private\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @private\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * Flag to know if the load is aborting.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #aborting;\n\n  /**\n   * The default character set (optional).\n   *\n   * @private\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   * @private\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // reset flag\n    this.#aborting = false;\n    // clear storage\n    this.#clearStoredRequests();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched request.\n   *\n   * @param {object} request The launched request.\n   * @private\n   */\n  #storeRequest(request) {\n    this.#requests.push(request);\n  }\n\n  /**\n   * Clear the stored requests.\n   *\n   * @private\n   */\n  #clearStoredRequests() {\n    this.#requests = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   * @private\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   * @private\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Launch a load item event and call addLoad.\n   *\n   * @param {object} event The load data event.\n   * @private\n   */\n  #addLoadItem = (event) => {\n    this.onloaditem(event);\n    this.#addLoad();\n  };\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   * @private\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   * @private\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    // x2 to count for request + load\n    if (this.#nLoadend === 2 * this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {Function} The augmented callback.\n   * @private\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Load a list of URLs or a DICOMDIR.\n   *\n   * @param {Array} data The list of urls to load.\n   * @param {object} options Load options.\n   */\n  load(data, options) {\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // check if DICOMDIR case\n    if (data.length === 1 &&\n      (endsWith(data[0], 'DICOMDIR') ||\n      endsWith(data[0], '.dcmdir'))) {\n      this.#loadDicomDir(data[0], options);\n    } else {\n      this.#loadUrls(data, options);\n    }\n  }\n\n  /**\n   * Load a list of urls.\n   *\n   * @param {Array} data The list of urls to load.\n   * @param {object} options The options object, can contain:\n   *  - requestHeaders: an array of {name, value} to use as request headers\n   *  - withCredentials: boolean xhr.withCredentials flag to pass\n   *    to the request\n   *  - batchSize: the size of the request url batch\n   * @private\n   */\n  #loadUrls(data, options) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadUrl(dataElement, options)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        if (typeof loader.onloaditem === 'undefined') {\n          // handle loaditem locally\n          loader.onload = this.#addLoadItem;\n        } else {\n          loader.onloaditem = this.onloaditem;\n          loader.onload = this.#addLoad;\n        }\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for url: ' + dataElement);\n    }\n\n    const getLoadHandler = function (loader, dataElement, i) {\n      return (event) => {\n        // check response status\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\n        // status 200: \"OK\"; status 0: \"debug\"\n        const status = event.target.status;\n        if (status !== 200 && status !== 0) {\n          this.onerror({\n            source: dataElement,\n            error: 'GET ' + event.target.responseURL +\n              ' ' + event.target.status +\n              ' (' + event.target.statusText + ')',\n            target: event.target\n          });\n          this.#addLoadend();\n        } else {\n          loader.load(event.target.response, dataElement, i);\n        }\n      };\n    };\n\n    // store last run request index\n    let lastRunRequestIndex = 0;\n    const requestOnLoadEnd = () => {\n      this.#addLoadend();\n      // launch next in queue\n      if (lastRunRequestIndex < this.#requests.length - 1 && !this.#aborting) {\n        ++lastRunRequestIndex;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    };\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadUrl(dataElement, options)) {\n        throw new Error('Input url of different type: ' + dataElement);\n      }\n      /**\n       * The http request.\n       *\n       * @external XMLHttpRequest\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n       */\n      const request = new XMLHttpRequest();\n      request.open('GET', dataElement, true);\n\n      // request options\n      if (typeof options !== 'undefined') {\n        // optional request headers\n        if (typeof options.requestHeaders !== 'undefined') {\n          const requestHeaders = options.requestHeaders;\n          for (let j = 0; j < requestHeaders.length; ++j) {\n            if (typeof requestHeaders[j].name !== 'undefined' &&\n              typeof requestHeaders[j].value !== 'undefined') {\n              request.setRequestHeader(\n                requestHeaders[j].name, requestHeaders[j].value);\n            }\n          }\n        }\n        // optional withCredentials\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n        if (typeof options.withCredentials !== 'undefined') {\n          request.withCredentials = options.withCredentials;\n        }\n      }\n\n      // set request callbacks\n      // request.onloadstart: nothing to do\n      request.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      request.onload = getLoadHandler(loader, dataElement, i);\n      request.onloadend = requestOnLoadEnd;\n      request.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\n      request.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\n      // response type (default is 'text')\n      if (loader.loadUrlAs() === urlContentTypes.ArrayBuffer) {\n        request.responseType = 'arraybuffer';\n      }\n\n      // store request\n      this.#storeRequest(request);\n    }\n\n    // launch requests in batch\n    let batchSize = this.#requests.length;\n    if (typeof options !== 'undefined') {\n      // optional request batch size\n      if (typeof options.batchSize !== 'undefined' && batchSize !== 0) {\n        batchSize = Math.min(options.batchSize, this.#requests.length);\n      }\n    }\n    for (let r = 0; r < batchSize; ++r) {\n      if (!this.#aborting) {\n        lastRunRequestIndex = r;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    }\n  }\n\n  /**\n   * Load a DICOMDIR.\n   *\n   * @param {string} dicomDirUrl The DICOMDIR url.\n   * @param {object} options Load options.\n   * @private\n   */\n  #loadDicomDir(dicomDirUrl, options) {\n    // read DICOMDIR\n    const request = new XMLHttpRequest();\n    request.open('GET', dicomDirUrl, true);\n    request.responseType = 'arraybuffer';\n    // request.onloadstart: nothing to do\n    request.onload = (event) => {\n      // check status\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dicomDirUrl,\n          error: 'GET ' + event.target.responseURL +\n                        ' ' + event.target.status +\n                        ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.onloadend({});\n        return;\n      }\n      // get the file list\n      const list = getFileListFromDicomDir(event.target.response);\n      // use the first list\n      const urls = list[0][0];\n      // append root url\n      const rootUrl = getRootPath(dicomDirUrl);\n      const fullUrls = [];\n      for (let i = 0; i < urls.length; ++i) {\n        fullUrls.push(rootUrl + '/' + urls[i]);\n      }\n      // load urls\n      this.#loadUrls(fullUrls, options);\n    };\n    request.onerror = (event) => {\n      this.#augmentCallbackEvent(this.onerror, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    request.onabort = (event) => {\n      this.#augmentCallbackEvent(this.onabort, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    // request.onloadend: nothing to do\n    // send request\n    request.send(null);\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    this.#aborting = true;\n    // abort non finished requests\n    for (let i = 0; i < this.#requests.length; ++i) {\n      // 0: UNSENT, 1: OPENED, 2: HEADERS_RECEIVED (send()), 3: LOADING, 4: DONE\n      if (this.#requests[i].readyState !== 4) {\n        this.#requests[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class UrlsLoader\n","import {Size} from './size';\nimport {Geometry} from './geometry';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {WindowLevel} from './windowLevel';\nimport {Image} from './image';\nimport {\n  cleanString,\n  isJpeg2000TransferSyntax,\n  isJpegBaselineTransferSyntax,\n  isJpegLosslessTransferSyntax\n} from '../dicom/dicomParser';\nimport {Vector3D} from '../math/vector';\nimport {Matrix33} from '../math/matrix';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\n\n/**\n * {@link Image} factory.\n */\nexport class ImageFactory {\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   */\n  checkElements(dicomElements) {\n    // columns\n    const columns = dicomElements.getFromKey('x00280011');\n    if (!columns) {\n      throw new Error('Missing or empty DICOM image number of columns');\n    }\n    // rows\n    const rows = dicomElements.getFromKey('x00280010');\n    if (!rows) {\n      throw new Error('Missing or empty DICOM image number of rows');\n    }\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {number} numberOfFiles The input number of files.\n   * @returns {Image} A new Image.\n   */\n  create(\n    dicomElements, pixelBuffer, numberOfFiles) {\n    // columns\n    const columns = dicomElements.getFromKey('x00280011');\n    if (!columns) {\n      throw new Error('Missing or empty DICOM image number of columns');\n    }\n    // rows\n    const rows = dicomElements.getFromKey('x00280010');\n    if (!rows) {\n      throw new Error('Missing or empty DICOM image number of rows');\n    }\n\n    const sizeValues = [columns, rows, 1];\n\n    // frames\n    const frames = dicomElements.getFromKey('x00280008');\n    if (frames) {\n      sizeValues.push(frames);\n    }\n\n    // image size\n    const size = new Size(sizeValues);\n\n    // image spacing\n    const spacing = dicomElements.getPixelSpacing();\n\n    // TransferSyntaxUID\n    const transferSyntaxUID = dicomElements.getFromKey('x00020010');\n    const syntax = cleanString(transferSyntaxUID);\n    const jpeg2000 = isJpeg2000TransferSyntax(syntax);\n    const jpegBase = isJpegBaselineTransferSyntax(syntax);\n    const jpegLoss = isJpegLosslessTransferSyntax(syntax);\n\n    // ImagePositionPatient\n    const imagePositionPatient = dicomElements.getFromKey('x00200032');\n    // slice position\n    let slicePosition = new Array(0, 0, 0);\n    if (imagePositionPatient) {\n      slicePosition = [parseFloat(imagePositionPatient[0]),\n        parseFloat(imagePositionPatient[1]),\n        parseFloat(imagePositionPatient[2])];\n    }\n\n    // slice orientation (cosines are matrices' columns)\n    // http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.6.2.html#sect_C.7.6.2.1.1\n    const imageOrientationPatient = dicomElements.getFromKey('x00200037');\n    let orientationMatrix;\n    if (imageOrientationPatient) {\n      const rowCosines = new Vector3D(\n        parseFloat(imageOrientationPatient[0]),\n        parseFloat(imageOrientationPatient[1]),\n        parseFloat(imageOrientationPatient[2]));\n      const colCosines = new Vector3D(\n        parseFloat(imageOrientationPatient[3]),\n        parseFloat(imageOrientationPatient[4]),\n        parseFloat(imageOrientationPatient[5]));\n      const normal = rowCosines.crossProduct(colCosines);\n      /* eslint-disable array-element-newline */\n      orientationMatrix = new Matrix33([\n        rowCosines.getX(), colCosines.getX(), normal.getX(),\n        rowCosines.getY(), colCosines.getY(), normal.getY(),\n        rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n      ]);\n      /* eslint-enable array-element-newline */\n    }\n\n    // geometry\n    const origin = new Point3D(\n      slicePosition[0], slicePosition[1], slicePosition[2]);\n    const time = dicomElements.getTime();\n    const geometry = new Geometry(\n      origin, size, spacing, orientationMatrix, time);\n\n    // sop instance UID\n    const sopInstanceUid = cleanString(\n      dicomElements.getFromKey('x00080018'));\n\n    // Sample per pixels\n    let samplesPerPixel = dicomElements.getFromKey('x00280002');\n    if (!samplesPerPixel) {\n      samplesPerPixel = 1;\n    }\n\n    // check buffer size\n    const bufferSize = size.getTotalSize() * samplesPerPixel;\n    if (bufferSize !== pixelBuffer.length) {\n      logger.warn('Badly sized pixel buffer: ' +\n        pixelBuffer.length + ' != ' + bufferSize);\n      if (bufferSize < pixelBuffer.length) {\n        pixelBuffer = pixelBuffer.slice(0, size.getTotalSize());\n      } else {\n        throw new Error('Underestimated buffer size, can\\'t fix it...');\n      }\n    }\n\n    // image\n    const image = new Image(geometry, pixelBuffer, [sopInstanceUid]);\n    // PhotometricInterpretation\n    const photometricInterpretation = dicomElements.getFromKey('x00280004');\n    if (photometricInterpretation) {\n      let photo = cleanString(photometricInterpretation)\n        .toUpperCase();\n      // jpeg decoders output RGB data\n      if ((jpeg2000 || jpegBase || jpegLoss) &&\n        (photo !== 'MONOCHROME1' && photo !== 'MONOCHROME2')) {\n        photo = 'RGB';\n      }\n      // check samples per pixels\n      if (photo === 'RGB' && samplesPerPixel === 1) {\n        photo = 'PALETTE COLOR';\n      }\n      image.setPhotometricInterpretation(photo);\n    }\n    // PlanarConfiguration\n    const planarConfiguration = dicomElements.getFromKey('x00280006');\n    if (planarConfiguration) {\n      image.setPlanarConfiguration(planarConfiguration);\n    }\n\n    // rescale slope and intercept\n    let slope = 1;\n    // RescaleSlope\n    const rescaleSlope = dicomElements.getFromKey('x00281053');\n    if (rescaleSlope) {\n      slope = parseFloat(rescaleSlope);\n    }\n    let intercept = 0;\n    // RescaleIntercept\n    const rescaleIntercept = dicomElements.getFromKey('x00281052');\n    if (rescaleIntercept) {\n      intercept = parseFloat(rescaleIntercept);\n    }\n    const rsi = new RescaleSlopeAndIntercept(slope, intercept);\n    image.setRescaleSlopeAndIntercept(rsi);\n\n    // meta information\n    const meta = {\n      numberOfFiles: numberOfFiles,\n      Modality: dicomElements.getFromKey('x00080060'),\n      SOPClassUID: dicomElements.getFromKey('x00080016'),\n      StudyInstanceUID: dicomElements.getFromKey('x0020000D'),\n      SeriesInstanceUID: dicomElements.getFromKey('x0020000E'),\n      BitsStored: dicomElements.getFromKey('x00280101'),\n      PixelRepresentation: dicomElements.getFromKey('x00280103')\n    };\n    // PixelRepresentation -> is signed\n    meta.IsSigned = meta.PixelRepresentation === 1;\n    // local pixel unit\n    const pixelUnit = dicomElements.getPixelUnit();\n    if (pixelUnit) {\n      meta.pixelUnit = pixelUnit;\n    }\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dicomElements.getFromKey('x00200052');\n    if (frameOfReferenceUID) {\n      meta.FrameOfReferenceUID = frameOfReferenceUID;\n    }\n    // window level presets\n    const windowPresets = {};\n    const windowCenter = dicomElements.getFromKey('x00281050', true);\n    const windowWidth = dicomElements.getFromKey('x00281051', true);\n    const windowCWExplanation = dicomElements.getFromKey('x00281055', true);\n    if (windowCenter && windowWidth) {\n      let name;\n      for (let j = 0; j < windowCenter.length; ++j) {\n        const center = parseFloat(windowCenter[j], 10);\n        const width = parseFloat(windowWidth[j], 10);\n        if (center && width && width !== 0) {\n          name = '';\n          if (windowCWExplanation) {\n            name = cleanString(windowCWExplanation[j]);\n          }\n          if (name === '') {\n            name = 'Default' + j;\n          }\n          windowPresets[name] = {\n            wl: [new WindowLevel(center, width)],\n            name: name\n          };\n        }\n        if (width === 0) {\n          logger.warn('Zero window width found in DICOM.');\n        }\n      }\n    }\n    meta.windowPresets = windowPresets;\n\n    // PALETTE COLOR luts\n    if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      let redLut = dicomElements.getFromKey('x00281201');\n      let greenLut = dicomElements.getFromKey('x00281202');\n      let blueLut = dicomElements.getFromKey('x00281203');\n      // check red palette descriptor (should all be equal)\n      const descriptor = dicomElements.getFromKey('x00281101');\n      if (typeof descriptor !== 'undefined' &&\n              descriptor.length === 3) {\n        if (descriptor[2] === 16) {\n          let doScale = false;\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // Some implementations have encoded 8 bit entries with 16 bits\n          // allocated, padding the high bits;\n          let descSize = descriptor[0];\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // The first Palette Color Lookup Table Descriptor value is the\n          // number of entries in the lookup table. When the number of table\n          // entries is equal to 216 then this value shall be 0.\n          if (descSize === 0) {\n            descSize = 65536;\n          }\n          // red palette VL\n          const redLutDE = dicomElements.getDEFromKey('x00281201');\n          const vlSize = redLutDE.vl;\n          // check double size\n          if (vlSize !== 2 * descSize) {\n            doScale = true;\n            logger.info('16bits lut but size is not double. desc: ' +\n              descSize + ' vl: ' + vlSize);\n          }\n          // (C.7.6.3.1.6 Palette Color Lookup Table Data)\n          // Palette color values must always be scaled across the full\n          // range of available intensities\n          const bitsAllocated = parseInt(\n            dicomElements.getFromKey('x00280100'), 10);\n          if (bitsAllocated === 8) {\n            doScale = true;\n            logger.info(\n              'Scaling 16bits color lut since bits allocated is 8.');\n          }\n\n          if (doScale) {\n            const scaleTo8 = function (value) {\n              return value >> 8;\n            };\n\n            redLut = redLut.map(scaleTo8);\n            greenLut = greenLut.map(scaleTo8);\n            blueLut = blueLut.map(scaleTo8);\n          }\n        } else if (descriptor[2] === 8) {\n          // lut with vr=OW was read as Uint16, convert it to Uint8\n          logger.info(\n            'Scaling 16bits color lut since the lut descriptor is 8.');\n          let clone = redLut.slice(0);\n          redLut = new Uint8Array(clone.buffer);\n          clone = greenLut.slice(0);\n          greenLut = new Uint8Array(clone.buffer);\n          clone = blueLut.slice(0);\n          blueLut = new Uint8Array(clone.buffer);\n        }\n      }\n      // set the palette\n      meta.paletteLut = {\n        red: redLut,\n        green: greenLut,\n        blue: blueLut\n      };\n    }\n\n    // RecommendedDisplayFrameRate\n    const recommendedDisplayFrameRate = dicomElements.getFromKey('x00082144');\n    if (recommendedDisplayFrameRate) {\n      meta.RecommendedDisplayFrameRate = parseInt(\n        recommendedDisplayFrameRate, 10);\n    }\n\n    // store the meta data\n    image.setMeta(meta);\n\n    return image;\n  }\n\n}","import {stringToUint8Array} from './string';\n\n/**\n * Check for array equality after sorting.\n *\n * @param {Array} arr0 First array.\n * @param {*} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arraySortEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  const arr0sorted = arr0.slice().sort();\n  const arr1sorted = arr1.slice().sort();\n  return arrayEquals(arr0sorted, arr1sorted);\n}\n\n/**\n * Check for array equality.\n *\n * @param {Array} arr0 First array.\n * @param {*} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arrayEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length !== arr1.length) {\n    return false;\n  }\n  return arr0.every(function (element, index) {\n    return element === arr1[index];\n  });\n}\n\n/**\n * Convert a Uint8Array to a string.\n *\n * @param {Uint8Array} arr The array to convert.\n * @returns {string} The array as string.\n */\nexport function uint8ArrayToString(arr) {\n  return String.fromCharCode.apply(String, arr);\n}\n\n/**\n * Array find in a subset of the input array.\n * Equivalent to: arr.slice(start, end).find(callbackFn)\n *\n * @param {Array} arr The input array to search.\n * @param {Function} callbackFn The find function.\n * @param {number} start The array start index.\n * @param {number} end The array end index.\n * @returns {number|undefined} The index where the element was found.\n */\nexport function findInArraySubset(arr, callbackFn, start, end) {\n  // check inputs\n  if (typeof start === 'undefined' ||\n    start < 0 ||\n    start >= arr.length\n  ) {\n    start = 0;\n  }\n  if (typeof end === 'undefined' ||\n    end <= start ||\n    end > arr.length) {\n    end = arr.length;\n  }\n  // run\n  for (let i = start; i < end; ++i) {\n    if (callbackFn(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get a find in array callback.\n *\n * @param {Array} arr1 The array to find.\n * @returns {Function} The find callback function.\n */\nexport function getFindArrayInArrayCallback(arr1) {\n  return function (element, index, arr0) {\n    for (let i = 0; i < arr1.length; ++i) {\n      if (arr0[index + i] !== arr1[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\n\n/**\n * Extract each element of a multipart ArrayBuffer.\n * https://en.wikipedia.org/wiki/MIME#Multipart_messages\n *\n * @param {ArrayBuffer} arr The multipart array.\n * @returns {Array} The multipart parts as an array of object as\n *  {'Content-Type', ..., data} (depending on header tags)\n */\nexport function parseMultipart(arr) {\n  const u8Array = new Uint8Array(arr);\n\n  const parts = [];\n  // check input\n  if (u8Array.length === 0) {\n    return parts;\n  }\n\n  // \\r\\n\\r\\n\n  const doubleReturnNew = new Uint8Array([0x0d, 0x0a, 0x0d, 0x0a]);\n  const partHeaderEndCb = getFindArrayInArrayCallback(doubleReturnNew);\n\n  // look for boundary in first part header\n  let partHeaderEndIndex = findInArraySubset(\n    u8Array, partHeaderEndCb, 0\n  );\n  if (typeof partHeaderEndIndex === 'undefined') {\n    throw new Error('Can\\'t find the end of the first multipart header');\n  }\n  const firstPartHeader = u8Array.slice(0, partHeaderEndIndex);\n  // switch to string to use split\n  const lines = uint8ArrayToString(firstPartHeader).split('\\r\\n');\n  // boundary should start with '--'\n  let boundaryStr;\n  for (let i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '-' && lines[i][1] === '-') {\n      boundaryStr = lines[i];\n      break;\n    }\n  }\n  if (typeof boundaryStr === 'undefined') {\n    throw new Error('Can\\'t find the boundary between multi-parts');\n  }\n  const boundary = stringToUint8Array(boundaryStr);\n  const boundaryCb = getFindArrayInArrayCallback(boundary);\n  const boundaryLen = boundaryStr.length;\n\n  // skip mime header\n  let nextBoundaryIndex = findInArraySubset(\n    u8Array, boundaryCb, 0\n  );\n\n  // loop through content\n  while (typeof partHeaderEndIndex !== 'undefined') {\n    const part = {};\n\n    // header\n    const partHeader = u8Array.slice(\n      nextBoundaryIndex + boundaryLen, partHeaderEndIndex);\n    // split into object\n    const partHeaderLines =\n      uint8ArrayToString(partHeader).split('\\r\\n');\n    for (let l = 0; l < partHeaderLines.length; ++l) {\n      const line = partHeaderLines[l];\n      const semiColonIndex = line.indexOf(':');\n      if (semiColonIndex !== -1) {\n        const key = line.substring(0, semiColonIndex).trim();\n        const val = line.substring(semiColonIndex + 1).trim();\n        part[key] = val;\n      }\n    }\n\n    // find next boundary\n    nextBoundaryIndex = findInArraySubset(\n      u8Array, boundaryCb, partHeaderEndIndex\n    );\n    // exit if none\n    if (typeof nextBoundaryIndex === 'undefined') {\n      break;\n    }\n\n    // get part\n    // partHeaderEndIndex plus the size of the '\\r\\n\\r\\n' separator\n    const dataBeginIndex = partHeaderEndIndex + 4;\n    // nextBoundaryIndex minus the previous '\\r\\n'\n    const dataEndIndex = nextBoundaryIndex - 2;\n    if (dataBeginIndex < dataEndIndex) {\n      part.data = u8Array.slice(dataBeginIndex, dataEndIndex).buffer;\n    } else {\n      part.data = new Uint8Array();\n    }\n\n    // store part\n    parts.push(part);\n\n    // find next part header end\n    partHeaderEndIndex = findInArraySubset(\n      u8Array, partHeaderEndCb,\n      nextBoundaryIndex + boundaryLen\n    );\n  }\n\n  return parts;\n}\n\n/**\n * Build a multipart message.\n * See: https://en.wikipedia.org/wiki/MIME#Multipart_messages\n * See: https://hg.orthanc-server.com/orthanc-dicomweb/file/tip/Resources/Samples/JavaScript/stow-rs.js\n *\n * @param {Array} parts The message parts as an array of object containing\n *   content headers and messages as the data property (as returned by parse).\n * @param {string} boundary The message boundary.\n * @returns {Uint8Array} The full multipart message.\n */\nexport function buildMultipart(parts, boundary) {\n  const lineBreak = '\\r\\n';\n  // build headers and calculate size\n  let partsSize = 0;\n  const headers = [];\n  for (let i = 0; i < parts.length; ++i) {\n    let headerStr = '';\n    if (i !== 0) {\n      headerStr += lineBreak;\n    }\n    headerStr += '--' + boundary + lineBreak;\n    const partKeys = Object.keys(parts[i]);\n    for (let k = 0; k < partKeys.length; ++k) {\n      const key = partKeys[k];\n      if (key !== 'data') {\n        headerStr += key + ': ' + parts[i][key] + lineBreak;\n      }\n    }\n    headerStr += lineBreak;\n    const header = stringToUint8Array(headerStr);\n    headers.push(header);\n    partsSize += header.byteLength + parts[i].data.byteLength;\n  }\n  // build trailer\n  const trailerStr = lineBreak + '--' + boundary + '--' + lineBreak;\n  const trailer = stringToUint8Array(trailerStr);\n\n  // final buffer\n  const buffer = new Uint8Array(partsSize + trailer.byteLength);\n  let offset = 0;\n  // concatenate parts\n  for (let j = 0; j < parts.length; ++j) {\n    buffer.set(headers[j], offset);\n    offset += headers[j].byteLength;\n    buffer.set(new Uint8Array(parts[j].data), offset);\n    offset += parts[j].data.byteLength;\n  }\n  // end buffer with trailer\n  buffer.set(trailer, offset);\n\n  // return\n  return buffer;\n}\n","import {cleanString} from '../dicom/dicomParser';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry, getSliceGeometrySpacing} from '../image/geometry';\nimport {Point3D} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {Matrix33, REAL_WORLD_EPSILON} from '../math/matrix';\nimport {logger} from '../utils/logger';\nimport {arraySortEquals} from '../utils/array';\nimport {\n  isEqualRgb,\n  cielabToSrgb,\n  uintLabToLab\n} from '../utils/colour';\n\n/**\n * Check two position patients for equality.\n *\n * @param {*} pos1 The first position patient.\n * @param {*} pos2 The second position patient.\n * @returns {boolean} True is equal.\n */\nfunction equalPosPat(pos1, pos2) {\n  return JSON.stringify(pos1) === JSON.stringify(pos2);\n}\n\n/**\n * Get a position patient compare function accroding to an\n * input orientation.\n *\n * @param {Matrix33} orientation The orientation matrix.\n * @returns {Function} The position compare function.\n */\nfunction getComparePosPat(orientation) {\n  const invOrientation = orientation.getInverse();\n  return function (pos1, pos2) {\n    const p1 = invOrientation.multiplyArray3D(pos1);\n    const p2 = invOrientation.multiplyArray3D(pos2);\n    return p1[2] - p2[2];\n  };\n}\n\n/**\n * Check that a DICOM tag definition is present in a parsed element.\n *\n * @param {object} rootElement The root dicom element.\n * @param {object} tagDefinition The tag definition as {name, tag, type, enum}.\n */\nfunction checkTag(rootElement, tagDefinition) {\n  let tagValue = rootElement.getFromKey(tagDefinition.tag);\n  // check null and undefined\n  if (tagDefinition.type === 1 || tagDefinition.type === 2) {\n    if (tagValue === null || typeof tagValue === 'undefined') {\n      throw new Error('Missing or empty ' + tagDefinition.name);\n    }\n  } else {\n    if (tagValue === null || typeof tagValue === 'undefined') {\n      // non mandatory value, exit\n      return;\n    }\n  }\n  let includes = false;\n  if (Array.isArray(tagValue)) {\n    // trim\n    tagValue = tagValue.map(function (item) {\n      return cleanString(item);\n    });\n    for (let i = 0; i < tagDefinition.enum.length; ++i) {\n      if (!Array.isArray(tagDefinition.enum[i])) {\n        throw new Error('Cannot compare array and non array tag value.');\n      }\n      if (arraySortEquals(tagDefinition.enum[i], tagValue)) {\n        includes = true;\n        break;\n      }\n    }\n  } else {\n    // trim\n    if (typeof tagValue === 'string') {\n      tagValue = cleanString(tagValue);\n    }\n\n    includes = tagDefinition.enum.includes(tagValue);\n  }\n  if (!includes) {\n    throw new Error(\n      'Unsupported ' + tagDefinition.name + ' value: ' + tagValue);\n  }\n}\n\n/**\n * List of DICOM Seg required tags.\n */\nconst RequiredDicomSegTags = [\n  {\n    name: 'TransferSyntaxUID',\n    tag: 'x00020010',\n    type: '1',\n    enum: ['1.2.840.10008.1.2.1']\n  },\n  {\n    name: 'MediaStorageSOPClassUID',\n    tag: 'x00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'SOPClassUID',\n    tag: 'x00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'Modality',\n    tag: 'x00080060',\n    type: '1',\n    enum: ['SEG']\n  },\n  {\n    name: 'SegmentationType',\n    tag: 'x00620001',\n    type: '1',\n    enum: ['BINARY']\n  },\n  {\n    name: 'DimensionOrganizationType',\n    tag: 'x00209311',\n    type: '3',\n    enum: ['3D']\n  },\n  {\n    name: 'ImageType',\n    tag: 'x00080008',\n    type: '1',\n    enum: [['DERIVED', 'PRIMARY']]\n  },\n  {\n    name: 'SamplesPerPixel',\n    tag: 'x00280002',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'PhotometricInterpretation',\n    tag: 'x00280004',\n    type: '1',\n    enum: ['MONOCHROME2']\n  },\n  {\n    name: 'PixelRepresentation',\n    tag: 'x00280103',\n    type: '1',\n    enum: [0]\n  },\n  {\n    name: 'BitsAllocated',\n    tag: 'x00280100',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'BitsStored',\n    tag: 'x00280101',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'HighBit',\n    tag: 'x00280102',\n    type: '1',\n    enum: [0]\n  },\n];\n\n/**\n * Get the default DICOM seg tags as an object.\n *\n * @returns {object} The default tags.\n */\nfunction getDefaultDicomSegJson() {\n  const tags = {};\n  for (let i = 0; i < RequiredDicomSegTags.length; ++i) {\n    const reqTag = RequiredDicomSegTags[i];\n    tags[reqTag.name] = reqTag.enum[0];\n  }\n  return tags;\n}\n\n/**\n * Check the dimension organization from a dicom element.\n *\n * @param {object} rootElement The root dicom element.\n * @returns {object} The dimension organizations and indices.\n */\nfunction getDimensionOrganization(rootElement) {\n  // Dimension Organization Sequence (required)\n  const orgSq = rootElement.getFromKey('x00209221', true);\n  if (!orgSq || orgSq.length !== 1) {\n    throw new Error('Unsupported dimension organization sequence length');\n  }\n  // Dimension Organization UID\n  const orgUID = cleanString(orgSq[0].x00209164.value[0]);\n\n  // Dimension Index Sequence (conditionally required)\n  const indices = [];\n  const indexSq = rootElement.getFromKey('x00209222', true);\n  if (indexSq) {\n    // expecting 2D index\n    if (indexSq.length !== 2) {\n      throw new Error('Unsupported dimension index sequence length');\n    }\n    let indexPointer;\n    for (let i = 0; i < indexSq.length; ++i) {\n      // Dimension Organization UID (required)\n      const indexOrg = cleanString(indexSq[i].x00209164.value[0]);\n      if (indexOrg !== orgUID) {\n        throw new Error(\n          'Dimension Index Sequence contains a unknown Dimension Organization');\n      }\n      // Dimension Index Pointer (required)\n      indexPointer = cleanString(indexSq[i].x00209165.value[0]);\n\n      const index = {\n        DimensionOrganizationUID: indexOrg,\n        DimensionIndexPointer: indexPointer\n      };\n      // Dimension Description Label (optional)\n      if (typeof indexSq[i].x00209421 !== 'undefined') {\n        index.DimensionDescriptionLabel =\n          cleanString(indexSq[i].x00209421.value[0]);\n      }\n      // store\n      indices.push(index);\n    }\n    // expecting Image Position at last position\n    if (indexPointer !== '(0020,0032)') {\n      throw new Error('Unsupported non image position as last index');\n    }\n  }\n\n  return {\n    organizations: {\n      value: [\n        {\n          DimensionOrganizationUID: orgUID\n        }\n      ]\n    },\n    indices: {\n      value: indices\n    }\n  };\n}\n\n/**\n * Get a code object from a dicom element.\n *\n * @param {object} element The dicom element.\n * @returns {object} A code object.\n */\nfunction getCode(element) {\n  // meaning -> CodeMeaning (type1)\n  const code = {\n    meaning: cleanString(element.x00080104.value[0])\n  };\n  // value -> CodeValue (type1C)\n  // longValue -> LongCodeValue (type1C)\n  // urnValue -> URNCodeValue (type1C)\n  if (element.x00080100) {\n    code.value = element.x00080100.value[0];\n  } else if (element.x00080119) {\n    code.longValue = element.x00080119.value[0];\n  } else if (element.x00080120) {\n    code.urnValue = element.x00080120.value[0];\n  } else {\n    throw Error('Invalid code with no value, no long value and no urn value.');\n  }\n  // schemeDesignator -> CodingSchemeDesignator (type1C)\n  if (typeof code.value !== 'undefined' ||\n    typeof code.longValue !== 'undefined') {\n    if (element.x00080102) {\n      code.schemeDesignator = element.x00080102.value[0];\n    } else {\n      throw Error(\n        'No coding sheme designator when code value or long value is present');\n    }\n  }\n  return code;\n}\n\n/**\n * Get a segment object from a dicom element.\n *\n * @param {object} element The dicom element.\n * @returns {object} A segment object.\n */\nfunction getSegment(element) {\n  // number -> SegmentNumber (type1)\n  // label -> SegmentLabel (type1)\n  // algorithmType -> SegmentAlgorithmType (type1)\n  const segment = {\n    number: element.x00620004.value[0],\n    label: cleanString(element.x00620005.value[0]),\n    algorithmType: cleanString(element.x00620008.value[0])\n  };\n  // algorithmName -> SegmentAlgorithmName (type1C)\n  if (element.x00620009) {\n    segment.algorithmName =\n      cleanString(element.x00620009.value[0]);\n  }\n  // // required if type is not MANUAL\n  // if (segment.algorithmType !== 'MANUAL' &&\n  //   (typeof segment.algorithmName === 'undefined' ||\n  //   segment.algorithmName.length === 0)) {\n  //   throw new Error('Empty algorithm name for non MANUAL algorithm type.');\n  // }\n  // displayValue ->\n  // - RecommendedDisplayGrayscaleValue\n  // - RecommendedDisplayCIELabValue converted to RGB\n  if (typeof element.x0062000C !== 'undefined') {\n    segment.displayValue = element.x006200C.value;\n  } else if (typeof element.x0062000D !== 'undefined') {\n    const cielabElement = element.x0062000D.value;\n    const rgb = cielabToSrgb(uintLabToLab({\n      l: cielabElement[0],\n      a: cielabElement[1],\n      b: cielabElement[2]\n    }));\n    segment.displayValue = rgb;\n  }\n  // Segmented Property Category Code Sequence (type1, only one)\n  if (typeof element.x00620003 !== 'undefined') {\n    segment.propertyCategoryCode =\n      getCode(element.x00620003.value[0]);\n  } else {\n    throw Error('Missing Segmented Property Category Code Sequence.');\n  }\n  // Segmented Property Type Code Sequence (type1)\n  if (typeof element.x0062000F !== 'undefined') {\n    segment.propertyTypeCode =\n      getCode(element.x0062000F.value[0]);\n  } else {\n    throw Error('Missing Segmented Property Type Code Sequence.');\n  }\n  // tracking Id and UID (type1C)\n  if (typeof element.x00620020 !== 'undefined') {\n    segment.trackingId = element.x00620020.value[0];\n    segment.trackingUid = element.x00620021.value[0];\n  }\n\n  return segment;\n}\n\n/**\n * Check if two segment objects are equal.\n *\n * @param {object} seg1 The first segment.\n * @param {object} seg2 The second segment.\n * @returns {boolean} True if both segment are equal.\n */\nexport function isEqualSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isEqual = seg1.number === seg2.number &&\n    seg1.label === seg2.label &&\n    seg1.algorithmType === seg2.algorithmType;\n  // rgb\n  if (typeof seg1.displayValue.r !== 'undefined') {\n    if (typeof seg2.displayValue.r === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\n    }\n  } else {\n    isEqual = isEqual &&\n      seg1.displayValue === seg2.displayValue;\n  }\n  // algorithmName\n  if (typeof seg1.algorithmName !== 'undefined') {\n    if (typeof seg2.algorithmName === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        seg1.algorithmName === seg2.algorithmName;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Check if two segment objects are similar: either the\n * number or the displayValue are equal.\n *\n * @param {object} seg1 The first segment.\n * @param {object} seg2 The second segment.\n * @returns {boolean} True if both segment are similar.\n */\nexport function isSimilarSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isSimilar = seg1.number === seg2.number;\n  // rgb\n  if (typeof seg1.displayValue.r !== 'undefined') {\n    if (typeof seg2.displayValue.r === 'undefined') {\n      isSimilar = false;\n    } else {\n      isSimilar = isSimilar ||\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\n    }\n  } else {\n    isSimilar = isSimilar ||\n      seg1.displayValue === seg2.displayValue;\n  }\n\n  return isSimilar;\n}\n\n/**\n * Get a spacing object from a dicom measure element.\n *\n * @param {object} measure The dicom element.\n * @returns {Spacing} A spacing object.\n */\nfunction getSpacingFromMeasure(measure) {\n  // Pixel Spacing\n  if (typeof measure.x00280030 === 'undefined') {\n    return null;\n  }\n  const pixelSpacing = measure.x00280030;\n  const spacingValues = [\n    parseFloat(pixelSpacing.value[0]),\n    parseFloat(pixelSpacing.value[1])\n  ];\n  // Slice Thickness\n  if (typeof measure.x00180050 !== 'undefined') {\n    spacingValues.push(parseFloat(measure.x00180050.value[0]));\n  } else if (typeof measure.x00180088 !== 'undefined') {\n    // Spacing Between Slices\n    spacingValues.push(parseFloat(measure.x00180088.value[0]));\n  }\n  return new Spacing(spacingValues);\n}\n\n/**\n * Get a frame information object from a dicom element.\n *\n * @param {object} groupItem The dicom element.\n * @returns {object} A frame information object.\n */\nfunction getSegmentFrameInfo(groupItem) {\n  // Derivation Image Sequence\n  const derivationImages = [];\n  if (typeof groupItem.x00089124 !== 'undefined') {\n    const derivationImageSq = groupItem.x00089124.value;\n    // Source Image Sequence\n    for (let i = 0; i < derivationImageSq.length; ++i) {\n      const sourceImages = [];\n      if (typeof derivationImageSq[i].x00082112 !== 'undefined') {\n        const sourceImageSq = derivationImageSq[i].x00082112.value;\n        for (let j = 0; j < sourceImageSq.length; ++j) {\n          const sourceImage = {};\n          // Referenced SOP Class UID\n          if (typeof sourceImageSq[j].x00081150 !== 'undefined') {\n            sourceImage.referencedSOPClassUID =\n              sourceImageSq[j].x00081150.value[0];\n          }\n          // Referenced SOP Instance UID\n          if (typeof sourceImageSq[j].x00081155 !== 'undefined') {\n            sourceImage.referencedSOPInstanceUID =\n              sourceImageSq[j].x00081155.value[0];\n          }\n          sourceImages.push(sourceImage);\n        }\n      }\n      derivationImages.push(sourceImages);\n    }\n  }\n  // Frame Content Sequence (required, only one)\n  const frameContentSq = groupItem.x00209111.value;\n  // Dimension Index Value\n  const dimIndex = frameContentSq[0].x00209157.value;\n  // Segment Identification Sequence (required, only one)\n  const segmentIdSq = groupItem.x0062000A.value;\n  // Referenced Segment Number\n  const refSegmentNumber = segmentIdSq[0].x0062000B.value[0];\n  // Plane Position Sequence (required, only one)\n  const planePosSq = groupItem.x00209113.value;\n  // Image Position (Patient) (conditionally required)\n  const imagePosPat = planePosSq[0].x00200032.value;\n  for (let p = 0; p < imagePosPat.length; ++p) {\n    imagePosPat[p] = parseFloat(imagePosPat[p], 10);\n  }\n  const frameInfo = {\n    dimIndex: dimIndex,\n    imagePosPat: imagePosPat,\n    derivationImages: derivationImages,\n    refSegmentNumber: refSegmentNumber\n  };\n  // Plane Orientation Sequence\n  if (typeof groupItem.x00209116 !== 'undefined') {\n    const framePlaneOrientationSeq = groupItem.x00209116;\n    if (framePlaneOrientationSeq.value.length !== 0) {\n      // should only be one Image Orientation (Patient)\n      const frameImageOrientation =\n        framePlaneOrientationSeq.value[0].x00200037.value;\n      if (typeof frameImageOrientation !== 'undefined') {\n        frameInfo.imageOrientationPatient = frameImageOrientation;\n      }\n    }\n  }\n  // Pixel Measures Sequence\n  if (typeof groupItem.x00289110 !== 'undefined') {\n    const framePixelMeasuresSeq = groupItem.x00289110;\n    if (framePixelMeasuresSeq.value.length !== 0) {\n      // should only be one\n      const frameSpacing =\n        getSpacingFromMeasure(framePixelMeasuresSeq.value[0]);\n      if (typeof frameSpacing !== 'undefined') {\n        frameInfo.spacing = frameSpacing;\n      }\n    } else {\n      logger.warn(\n        'No shared functional group pixel measure sequence items.');\n    }\n  }\n\n  return frameInfo;\n}\n\n/**\n * Mask {@link Image} factory.\n */\nexport class MaskFactory {\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @returns {Image} A new Image.\n   */\n  create(\n    dicomElements, pixelBuffer) {\n    // check required and supported tags\n    for (let d = 0; d < RequiredDicomSegTags.length; ++d) {\n      checkTag(dicomElements, RequiredDicomSegTags[d]);\n    }\n\n    // columns\n    const columns = dicomElements.getFromKey('x00280011');\n    if (!columns) {\n      throw new Error('Missing or empty DICOM image number of columns');\n    }\n    // rows\n    const rows = dicomElements.getFromKey('x00280010');\n    if (!rows) {\n      throw new Error('Missing or empty DICOM image number of rows');\n    }\n    const sliceSize = columns * rows;\n\n    // frames\n    let frames = dicomElements.getFromKey('x00280008');\n    if (!frames) {\n      frames = 1;\n    } else {\n      frames = parseInt(frames, 10);\n    }\n\n    if (frames !== pixelBuffer.length / sliceSize) {\n      throw new Error(\n        'Buffer and numberOfFrames meta are not equal.' +\n        frames + ' ' + pixelBuffer.length / sliceSize);\n    }\n\n    // Dimension Organization and Index\n    const dimension = getDimensionOrganization(dicomElements);\n\n    // Segment Sequence\n    const segSequence = dicomElements.getFromKey('x00620002', true);\n    if (!segSequence || typeof segSequence === 'undefined') {\n      throw new Error('Missing or empty segmentation sequence');\n    }\n    const segments = [];\n    let storeAsRGB = false;\n    for (let i = 0; i < segSequence.length; ++i) {\n      const segment = getSegment(segSequence[i]);\n      if (typeof segment.displayValue.r !== 'undefined' &&\n        typeof segment.displayValue.g !== 'undefined' &&\n        typeof segment.displayValue.b !== 'undefined') {\n        // create rgb image\n        storeAsRGB = true;\n      }\n      // store\n      segments.push(segment);\n    }\n\n    // image size\n    const size = dicomElements.getImageSize();\n\n    // Shared Functional Groups Sequence\n    let spacing;\n    let imageOrientationPatient;\n    const sharedFunctionalGroupsSeq =\n      dicomElements.getFromKey('x52009229', true);\n    if (sharedFunctionalGroupsSeq && sharedFunctionalGroupsSeq.length !== 0) {\n      // should be only one\n      const funcGroup0 = sharedFunctionalGroupsSeq[0];\n      // Plane Orientation Sequence\n      if (typeof funcGroup0.x00209116 !== 'undefined') {\n        const planeOrientationSeq = funcGroup0.x00209116;\n        if (planeOrientationSeq.value.length !== 0) {\n          // should be only one\n          imageOrientationPatient =\n            planeOrientationSeq.value[0].x00200037.value;\n        } else {\n          logger.warn(\n            'No shared functional group plane orientation sequence items.');\n        }\n      }\n      // Pixel Measures Sequence\n      if (typeof funcGroup0.x00289110 !== 'undefined') {\n        const pixelMeasuresSeq = funcGroup0.x00289110;\n        if (pixelMeasuresSeq.value.length !== 0) {\n          // should be only one\n          spacing = getSpacingFromMeasure(pixelMeasuresSeq.value[0]);\n        } else {\n          logger.warn(\n            'No shared functional group pixel measure sequence items.');\n        }\n      }\n    }\n\n    const includesPosPat = function (arr, val) {\n      return arr.some(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    const findIndexPosPat = function (arr, val) {\n      return arr.findIndex(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    // Per-frame Functional Groups Sequence\n    const perFrameFuncGroupSequence =\n      dicomElements.getFromKey('x52009230', true);\n    if (!perFrameFuncGroupSequence ||\n      typeof perFrameFuncGroupSequence === 'undefined') {\n      throw new Error('Missing or empty per frame functional sequence');\n    }\n    if (frames !== perFrameFuncGroupSequence.length) {\n      throw new Error(\n        'perFrameFuncGroupSequence meta and numberOfFrames are not equal.');\n    }\n    // create frame info object from per frame func\n    const frameInfos = [];\n    for (let j = 0; j < perFrameFuncGroupSequence.length; ++j) {\n      frameInfos.push(\n        getSegmentFrameInfo(perFrameFuncGroupSequence[j]));\n    }\n\n    // check frame infos\n    const framePosPats = [];\n    for (let ii = 0; ii < frameInfos.length; ++ii) {\n      if (!includesPosPat(framePosPats, frameInfos[ii].imagePosPat)) {\n        framePosPats.push(frameInfos[ii].imagePosPat);\n      }\n      // store orientation if needed, avoid multi\n      if (typeof frameInfos[ii].imageOrientationPatient !== 'undefined') {\n        if (typeof imageOrientationPatient === 'undefined') {\n          imageOrientationPatient = frameInfos[ii].imageOrientationPatient;\n        } else {\n          if (!arraySortEquals(\n            imageOrientationPatient, frameInfos[ii].imageOrientationPatient)) {\n            throw new Error('Unsupported multi orientation dicom seg.');\n          }\n        }\n      }\n      // store spacing if needed, avoid multi\n      if (typeof frameInfos[ii].spacing !== 'undefined') {\n        if (typeof spacing === 'undefined') {\n          spacing = frameInfos[ii].spacing;\n        } else {\n          if (!spacing.equals(frameInfos[ii].spacing)) {\n            throw new Error('Unsupported multi resolution dicom seg.');\n          }\n        }\n      }\n    }\n\n    // check spacing and orientation\n    if (typeof spacing === 'undefined') {\n      throw new Error('No spacing found for DICOM SEG');\n    }\n    if (typeof imageOrientationPatient === 'undefined') {\n      throw new Error('No imageOrientationPatient found for DICOM SEG');\n    }\n\n    // orientation\n    const rowCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[0]),\n      parseFloat(imageOrientationPatient[1]),\n      parseFloat(imageOrientationPatient[2]));\n    const colCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[3]),\n      parseFloat(imageOrientationPatient[4]),\n      parseFloat(imageOrientationPatient[5]));\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable array-element-newline */\n    const orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n\n    // sort positions patient\n    framePosPats.sort(getComparePosPat(orientationMatrix));\n\n    const point3DFromArray = function (arr) {\n      return new Point3D(arr[0], arr[1], arr[2]);\n    };\n\n    // frame origins\n    const frameOrigins = [];\n    for (let n = 0; n < framePosPats.length; ++n) {\n      frameOrigins.push(point3DFromArray(framePosPats[n]));\n    }\n\n    // use calculated spacing\n    let newSpacing = spacing;\n    const geoSliceSpacing = getSliceGeometrySpacing(\n      frameOrigins, orientationMatrix, false);\n    const spacingValues = spacing.getValues();\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      geoSliceSpacing !== spacingValues[2]) {\n      spacingValues[2] = geoSliceSpacing;\n      newSpacing = new Spacing(spacingValues);\n    }\n\n    // tmp geometry with correct spacing but only one slice\n    const tmpGeometry = new Geometry(\n      frameOrigins[0], size, newSpacing, orientationMatrix);\n\n    // origin distance test\n    const isNotSmall = function (value) {\n      let res = value > REAL_WORLD_EPSILON;\n      if (res) {\n        // try larger epsilon\n        res = value > REAL_WORLD_EPSILON * 10;\n        if (!res) {\n          // warn if epsilon < value < epsilon * 10\n          logger.warn(\n            'Using larger real world epsilon in SEG pos pat adding'\n          );\n        }\n      }\n      return res;\n    };\n\n    // add possibly missing posPats\n    const posPats = [];\n    posPats.push(framePosPats[0]);\n    let sliceIndex = 0;\n    for (let g = 1; g < framePosPats.length; ++g) {\n      ++sliceIndex;\n      let index = new Index([0, 0, sliceIndex]);\n      let point = tmpGeometry.indexToWorld(index).get3D();\n      const frameOrigin = frameOrigins[g];\n      // check if more pos pats are needed\n      let dist = frameOrigin.getDistance(point);\n      const distPrevious = dist;\n      // TODO: good threshold?\n      while (isNotSmall(dist)) {\n        logger.debug('Adding intermediate pos pats for DICOM seg at ' +\n          point.toString());\n        posPats.push([point.getX(), point.getY(), point.getZ()]);\n        ++sliceIndex;\n        index = new Index([0, 0, sliceIndex]);\n        point = tmpGeometry.indexToWorld(index).get3D();\n        dist = frameOrigin.getDistance(point);\n        if (dist > distPrevious) {\n          throw new Error(\n            'Test distance is increasing when adding intermediate pos pats');\n        }\n      }\n      // add frame pos pat\n      posPats.push(framePosPats[g]);\n    }\n\n    // as many slices as posPats\n    const numberOfSlices = posPats.length;\n\n    // final geometry\n    const geometry = new Geometry(\n      frameOrigins[0], size, newSpacing, orientationMatrix);\n    const uids = [0];\n    for (let m = 1; m < numberOfSlices; ++m) {\n      geometry.appendOrigin(point3DFromArray(posPats[m]), m);\n      uids.push(m);\n    }\n\n    const getFindSegmentFunc = function (number) {\n      return function (item) {\n        return item.number === number;\n      };\n    };\n\n    // create output buffer\n    const mul = storeAsRGB ? 3 : 1;\n    const buffer =\n      new pixelBuffer.constructor(mul * sliceSize * numberOfSlices);\n    buffer.fill(0);\n    // merge frame buffers\n    let sliceOffset = null;\n    let frameOffset = null;\n    for (let f = 0; f < frameInfos.length; ++f) {\n      // get the slice index from the position in the posPat array\n      sliceIndex = findIndexPosPat(posPats, frameInfos[f].imagePosPat);\n      frameOffset = sliceSize * f;\n      sliceOffset = sliceSize * sliceIndex;\n      // get the frame display value\n      const frameSegment = segments.find(\n        getFindSegmentFunc(frameInfos[f].refSegmentNumber)\n      );\n      const pixelValue = frameSegment.displayValue;\n      for (let l = 0; l < sliceSize; ++l) {\n        if (pixelBuffer[frameOffset + l] !== 0) {\n          const offset = mul * (sliceOffset + l);\n          if (storeAsRGB) {\n            buffer[offset] = pixelValue.r;\n            buffer[offset + 1] = pixelValue.g;\n            buffer[offset + 2] = pixelValue.b;\n          } else {\n            buffer[offset] = pixelValue;\n          }\n        }\n      }\n    }\n\n    // create image\n    const image = new Image(geometry, buffer, uids);\n    if (storeAsRGB) {\n      image.setPhotometricInterpretation('RGB');\n    }\n    // meta information\n    const meta = getDefaultDicomSegJson();\n    // Study\n    meta.StudyDate = dicomElements.getFromKey('x00080020');\n    meta.StudyTime = dicomElements.getFromKey('x00080030');\n    meta.StudyInstanceUID = dicomElements.getFromKey('x0020000D');\n    meta.StudyID = dicomElements.getFromKey('x00200010');\n    // Series\n    meta.SeriesInstanceUID = dicomElements.getFromKey('x0020000E');\n    meta.SeriesNumber = dicomElements.getFromKey('x00200011');\n    // ReferringPhysicianName\n    meta.ReferringPhysicianName = dicomElements.getFromKey('x00080090');\n    // patient info\n    meta.PatientName =\n      cleanString(dicomElements.getFromKey('x00100010'));\n    meta.PatientID = cleanString(dicomElements.getFromKey('x00100020'));\n    meta.PatientBirthDate = dicomElements.getFromKey('x00100030');\n    meta.PatientSex =\n      cleanString(dicomElements.getFromKey('x00100040'));\n    // Enhanced General Equipment Module\n    meta.Manufacturer = dicomElements.getFromKey('x00080070');\n    meta.ManufacturerModelName = dicomElements.getFromKey('x00081090');\n    meta.DeviceSerialNumber = dicomElements.getFromKey('x00181000');\n    meta.SoftwareVersions = dicomElements.getFromKey('x00181020');\n    // dicom seg dimension\n    meta.DimensionOrganizationSequence = dimension.organizations;\n    meta.DimensionIndexSequence = dimension.indices;\n    // custom\n    meta.custom = {\n      segments: segments,\n      frameInfos: frameInfos,\n      SOPInstanceUID: dicomElements.getFromKey('x00080018')\n    };\n\n    // number of files: in this case equal to number slices,\n    //   used to calculate buffer size\n    meta.numberOfFiles = numberOfSlices;\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dicomElements.getFromKey('x00200052');\n    if (frameOfReferenceUID) {\n      meta.FrameOfReferenceUID = frameOfReferenceUID;\n    }\n    // LossyImageCompression (optional)\n    const lossyImageCompression = dicomElements.getFromKey('x00282110');\n    if (lossyImageCompression) {\n      meta.LossyImageCompression = lossyImageCompression;\n    }\n\n    image.setMeta(meta);\n\n    return image;\n  }\n\n} // class MaskFactory\n","/**\n * Thread Pool.\n * Highly inspired from {@link http://www.smartjava.org/content/html5-easily-parallelize-jobs-using-web-workers-and-threadpool}.\n */\nexport class ThreadPool {\n\n  /**\n   * @param {number} poolSize The size of the pool.\n   */\n  constructor(poolSize) {\n    this.poolSize = poolSize;\n    // task queue\n    this.taskQueue = [];\n    // lsit of available threads\n    this.freeThreads = [];\n    // create 'poolSize' number of worker threads\n    for (let i = 0; i < poolSize; ++i) {\n      this.freeThreads.push(new WorkerThread(this));\n    }\n    // list of running threads (unsed in abort)\n    this.runningThreads = [];\n  }\n\n  /**\n   * Add a worker task to the queue.\n   * Will be run when a thread is made available.\n   *\n   * @param {object} workerTask The task to add to the queue.\n   */\n  addWorkerTask(workerTask) {\n    // send work start if first task\n    if (this.freeThreads.length === this.poolSize) {\n      this.onworkstart({type: 'work-start'});\n    }\n    // launch task or queue\n    if (this.freeThreads.length > 0) {\n      // get the first free worker thread\n      const workerThread = this.freeThreads.shift();\n      // add the thread to the runnning list\n      this.runningThreads.push(workerThread);\n      // run the input task\n      workerThread.run(workerTask);\n    } else {\n      // no free thread, add task to queue\n      this.taskQueue.push(workerTask);\n    }\n  }\n\n  /**\n   * Abort all threads.\n   */\n  abort() {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onabort({type: 'work-abort'});\n    this.onworkend({type: 'work-end'});\n  }\n\n  /**\n   * Handle a task end.\n   *\n   * @param {object} workerThread The thread to free.\n   */\n  onTaskEnd(workerThread) {\n    // launch next task in queue or finish\n    if (this.taskQueue.length > 0) {\n      // get waiting task\n      const workerTask = this.taskQueue.shift();\n      // use input thread to run the waiting task\n      workerThread.run(workerTask);\n    } else {\n      // stop the worker\n      workerThread.stop();\n      // no task to run, add to free list\n      this.freeThreads.push(workerThread);\n      // remove from running list\n      for (let i = 0; i < this.runningThreads.length; ++i) {\n        if (this.runningThreads[i].getId() === workerThread.getId()) {\n          this.runningThreads.splice(i, 1);\n        }\n      }\n      // the work is done when the queue is back to its initial size\n      if (this.freeThreads.length === this.poolSize) {\n        this.onwork({type: 'work'});\n        this.onworkend({type: 'work-end'});\n      }\n    }\n  }\n\n  /**\n   * Handle an error message from a worker.\n   *\n   * @param {object} event The error event.\n   */\n  handleWorkerError = (event) => {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onerror({error: event});\n    this.onworkend({type: 'work-end'});\n  };\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Stop the pool: stop all running threads.\n   *\n   * @private\n   */\n  #stop() {\n    // clear tasks\n    this.taskQueue = [];\n    // cancel running workers\n    for (let i = 0; i < this.runningThreads.length; ++i) {\n      this.runningThreads[i].stop();\n    }\n    this.runningThreads = [];\n  }\n\n\n  /**\n   * Handle a work start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work start event.\n   */\n  onworkstart(_event) {}\n\n  /**\n   * Handle a work item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work item event fired\n   *   when a work item ended successfully.\n   */\n  onworkitem(_event) {}\n\n  /**\n   * Handle a work event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work event fired\n   *   when a work ended successfully.\n   */\n  onwork(_event) {}\n\n  /**\n   * Handle a work end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work end event fired\n   *  when a work has completed, successfully or not.\n   */\n  onworkend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // ThreadPool\n\n/**\n * Worker background task.\n *\n * @external Worker\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Worker\n */\n\n/**\n * Worker thread.\n */\nclass WorkerThread {\n\n  /**\n   * @param {object} parentPool The parent pool.\n   */\n  constructor(parentPool) {\n    this.parentPool = parentPool;\n    // thread ID\n    this.id = Math.random().toString(36).substring(2, 15);\n    // running task\n    this.runningTask = null;\n    // worker used to run task\n    this.worker;\n  }\n\n  /**\n   * Get the thread ID.\n   *\n   * @returns {string} The thread ID (alphanumeric).\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Run a worker task\n   *\n   * @param {object} workerTask The task to run.\n   */\n  run(workerTask) {\n    // store task\n    this.runningTask = workerTask;\n    // create a new web worker if not done yet\n    if (typeof worker === 'undefined') {\n      this.worker = new Worker(this.runningTask.script);\n      // set callbacks\n      this.worker.onmessage = this.onmessage;\n      this.worker.onerror = this.onerror;\n    }\n    // launch the worker\n    this.worker.postMessage(this.runningTask.startMessage);\n  }\n\n  /**\n   * Finish a task and tell the parent.\n   */\n  stop() {\n    // stop the worker\n    this.worker.terminate();\n  }\n\n  /**\n   * Message event handler.\n   * For now assume we only get a single callback from a worker\n   * which also indicates the end of this worker.\n   *\n   * @param {object} event The message event.\n   * @private\n   */\n  onmessage = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.dataIndex = this.runningTask.info.dataIndex;\n    // send event\n    this.parentPool.onworkitem(event);\n    // tell the parent pool the task is done\n    this.parentPool.onTaskEnd(this);\n  };\n\n  /**\n   * Error event handler.\n   *\n   * @param {object} event The error event.\n   * @private\n   */\n  onerror = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.dataIndex = this.runningTask.info.dataIndex;\n    // pass to parent\n    this.parentPool.handleWorkerError(event);\n    // stop the worker and free the thread\n    this.stop();\n  };\n} // class WorkerThread\n\n/**\n * Worker task.\n */\nexport class WorkerTask {\n  /**\n   * @param {string} script The worker script.\n   * @param {object} message The data to pass to the worker.\n   * @param {object} info Information object about the input data.\n   */\n  constructor(script, message, info) {\n    // worker script\n    this.script = script;\n    // worker start message\n    this.startMessage = message;\n    // information about the work data\n    this.info = info;\n  }\n}\n","import {ThreadPool, WorkerTask} from '../utils/thread';\n\n/**\n * The JPEG baseline decoder.\n *\n * @external JpegImage\n * @see https://github.com/mozilla/pdf.js/blob/master/src/core/jpg.js\n */\n/* global JpegImage */\nconst hasJpegBaselineDecoder = (typeof JpegImage !== 'undefined');\n\n/**\n * The JPEG decoder namespace.\n *\n * @external jpeg\n * @see https://github.com/rii-mango/JPEGLosslessDecoderJS\n */\n/* global jpeg */\nconst hasJpegLosslessDecoder = (typeof jpeg !== 'undefined') &&\n    (typeof jpeg.lossless !== 'undefined');\n\n/**\n * The JPEG 2000 decoder.\n *\n * @external JpxImage\n * @see https://github.com/jpambrun/jpx-medical/blob/master/jpx.js\n */\n/* global JpxImage */\nconst hasJpeg2000Decoder = (typeof JpxImage !== 'undefined');\n\nexport const decoderScripts = {};\n\n/**\n * Asynchronous pixel buffer decoder.\n */\nclass AsynchPixelBufferDecoder {\n\n  /**\n   * The associated worker script.\n   *\n   * @private\n   * @type {string}\n   */\n  #script;\n\n  /**\n   * Associated thread pool.\n   *\n   * @private\n   * @type {ThreadPool}\n   */\n  #pool = new ThreadPool(10);\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * @param {string} script The path to the decoder script to be used\n   *   by the web worker.\n   * @param {number} _numberOfData The anticipated number of data to decode.\n   */\n  constructor(script, _numberOfData) {\n    this.#script = script;\n  }\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set event handlers\n      this.#pool.onworkstart = this.ondecodestart;\n      this.#pool.onworkitem = this.ondecodeditem;\n      this.#pool.onwork = this.ondecoded;\n      this.#pool.onworkend = this.ondecodeend;\n      this.#pool.onerror = this.onerror;\n      this.#pool.onabort = this.onabort;\n    }\n    // create worker task\n    const workerTask = new WorkerTask(\n      this.#script,\n      {\n        buffer: pixelBuffer,\n        meta: pixelMeta\n      },\n      info\n    );\n    // add it the queue and run it\n    this.#pool.addWorkerTask(workerTask);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // abort the thread pool, will trigger pool.onabort\n    this.#pool.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class AsynchPixelBufferDecoder\n\n/**\n * Synchronous pixel buffer decoder.\n */\nclass SynchPixelBufferDecoder {\n\n  /**\n   * Name of the compression algorithm.\n   *\n   * @private\n   * @type {string}\n   */\n  #algoName;\n\n  /**\n   * Number of data.\n   *\n   * @private\n   * @type {number}\n   */\n  #numberOfData;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    this.#algoName = algoName;\n    this.#numberOfData = numberOfData;\n  }\n\n  // decode count\n  #decodeCount = 0;\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   * @external jpeg\n   * @external JpegImage\n   * @external JpxImage\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    ++this.#decodeCount;\n\n    let decoder = null;\n    let decodedBuffer = null;\n    if (this.#algoName === 'jpeg-lossless') {\n      if (!hasJpegLosslessDecoder) {\n        throw new Error('No JPEG Lossless decoder provided');\n      }\n      // bytes per element\n      const bpe = pixelMeta.bitsAllocated / 8;\n      const buf = new Uint8Array(pixelBuffer);\n      decoder = new jpeg.lossless.Decoder();\n      const decoded = decoder.decode(buf.buffer, 0, buf.buffer.byteLength, bpe);\n      if (pixelMeta.bitsAllocated === 8) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int8Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint8Array(decoded.buffer);\n        }\n      } else if (pixelMeta.bitsAllocated === 16) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int16Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint16Array(decoded.buffer);\n        }\n      }\n    } else if (this.#algoName === 'jpeg-baseline') {\n      if (!hasJpegBaselineDecoder) {\n        throw new Error('No JPEG Baseline decoder provided');\n      }\n      decoder = new JpegImage();\n      decoder.parse(pixelBuffer);\n      decodedBuffer = decoder.getData(decoder.width, decoder.height);\n    } else if (this.#algoName === 'jpeg2000') {\n      if (!hasJpeg2000Decoder) {\n        throw new Error('No JPEG 2000 decoder provided');\n      }\n      // decompress pixel buffer into Int16 image\n      decoder = new JpxImage();\n      decoder.parse(pixelBuffer);\n      // set the pixel buffer\n      decodedBuffer = decoder.tiles[0].items;\n    } else if (this.#algoName === 'rle') {\n      // decode DICOM buffer\n      // eslint-disable-next-line no-undef\n      decoder = new dwvdecoder.RleDecoder();\n      // set the pixel buffer\n      decodedBuffer = decoder.decode(\n        pixelBuffer,\n        pixelMeta.bitsAllocated,\n        pixelMeta.isSigned,\n        pixelMeta.sliceSize,\n        pixelMeta.samplesPerPixel,\n        pixelMeta.planarConfiguration);\n    }\n    // send decode events\n    this.ondecodeditem({\n      data: [decodedBuffer],\n      dataIndex: info.dataIndex,\n      numberOfItems: info.numberOfItems,\n      itemNumber: info.itemNumber\n    });\n    // decode end?\n    if (this.#decodeCount === this.#numberOfData) {\n      this.ondecoded({});\n      this.ondecodeend({});\n    }\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // nothing to do in the synchronous case.\n    // callback\n    this.onabort({});\n    this.ondecodeend({});\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class SynchPixelBufferDecoder\n\n/**\n * Decode a pixel buffer.\n *\n * If the 'decoderScripts' variable does not contain the desired,\n * algorythm the decoder will switch to the synchronous mode.\n */\nexport class PixelBufferDecoder {\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * Pixel decoder.\n   * Defined only once.\n   *\n   * @private\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    // initialise the asynch decoder (if possible)\n    if (typeof decoderScripts !== 'undefined' &&\n      typeof decoderScripts[algoName] !== 'undefined') {\n      this.#pixelDecoder = new AsynchPixelBufferDecoder(\n        decoderScripts[algoName], numberOfData);\n    } else {\n      this.#pixelDecoder = new SynchPixelBufferDecoder(\n        algoName, numberOfData);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {Array} pixelBuffer The input data buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set callbacks\n      this.#pixelDecoder.ondecodestart = this.ondecodestart;\n      this.#pixelDecoder.ondecodeditem = this.ondecodeditem;\n      this.#pixelDecoder.ondecoded = this.ondecoded;\n      this.#pixelDecoder.ondecodeend = this.ondecodeend;\n      this.#pixelDecoder.onerror = this.onerror;\n      this.#pixelDecoder.onabort = this.onabort;\n    }\n    // decode and call the callback\n    this.#pixelDecoder.decode(pixelBuffer, pixelMeta, info);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // decoder classes should define an abort\n    this.#pixelDecoder.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class PixelBufferDecoder\n","import {logger} from '../utils/logger';\nimport {\n  DicomParser,\n  cleanString,\n  getSyntaxDecompressionName\n} from '../dicom/dicomParser';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\nimport {PixelBufferDecoder} from './decoder';\n\n/**\n * Create a View from a DICOM buffer.\n */\nexport class DicomBufferToView {\n\n  /**\n   * Converter options.\n   *\n   * @private\n   * @type {object}\n   */\n  #options;\n\n  /**\n   * Set the converter options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Pixel buffer decoder.\n   * Define only once to allow optional asynchronous mode.\n   *\n   * @private\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  // local tmp storage\n  #dicomParserStore = [];\n  #finalBufferStore = [];\n  #decompressedSizes = [];\n\n  /**\n   * Generate the image object.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #generateImage(index, origin) {\n    const dicomElements = this.#dicomParserStore[index].getDicomElements();\n\n    const modality = cleanString(dicomElements.getFromKey('x00080060'));\n    let factory;\n    if (modality && modality === 'SEG') {\n      factory = new MaskFactory();\n    } else {\n      factory = new ImageFactory();\n    }\n\n    // create the image\n    try {\n      const image = factory.create(\n        dicomElements,\n        this.#finalBufferStore[index],\n        this.#options.numberOfFiles);\n      // call onloaditem\n      this.onloaditem({\n        data: {\n          image: image,\n          info: this.#dicomParserStore[index].getRawDicomElements()\n        },\n        source: origin\n      });\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Handle a decoded item event.\n   *\n   * @param {object} event The decoded item event.\n   */\n  #onDecodedItem(event) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: event.itemNumber + 1,\n      total: event.numberOfItems,\n      index: event.dataIndex,\n      source: origin\n    });\n\n    const dataIndex = event.dataIndex;\n\n    // store decoded data\n    const decodedData = event.data[0];\n    if (event.numberOfItems !== 1) {\n      // allocate buffer if not done yet\n      if (typeof this.#decompressedSizes[dataIndex] === 'undefined') {\n        this.#decompressedSizes[dataIndex] = decodedData.length;\n        const fullSize = event.numberOfItems *\n          this.#decompressedSizes[dataIndex];\n        try {\n          this.#finalBufferStore[dataIndex] =\n            new decodedData.constructor(fullSize);\n        } catch (error) {\n          if (error instanceof RangeError) {\n            const powerOf2 = Math.floor(Math.log(fullSize) / Math.log(2));\n            logger.error('Cannot allocate ' +\n              decodedData.constructor.name +\n              ' of size: ' +\n              fullSize + ' (>2^' + powerOf2 + ') for decompressed data.');\n          }\n          // abort\n          this.#pixelDecoder.abort();\n          // send events\n          this.onerror({\n            error: error,\n            source: origin\n          });\n          this.onloadend({\n            source: origin\n          });\n          // exit\n          return;\n        }\n      }\n      // hoping for all items to have the same size...\n      if (decodedData.length !== this.#decompressedSizes[dataIndex]) {\n        logger.warn('Unsupported varying decompressed data size: ' +\n          decodedData.length + ' != ' + this.#decompressedSizes[dataIndex]);\n      }\n      // set buffer item data\n      this.#finalBufferStore[dataIndex].set(\n        decodedData, this.#decompressedSizes[dataIndex] * event.itemNumber);\n    } else {\n      this.#finalBufferStore[dataIndex] = decodedData;\n    }\n\n    // create image for the first item\n    if (event.itemNumber === 0) {\n      this.#generateImage(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {Array} buffer The input data buffer.\n   * @param {string} origin The data origin.\n   * @param {number} dataIndex The data index.\n   */\n  convert(buffer, origin, dataIndex) {\n\n    this.onloadstart({\n      source: origin,\n      dataIndex: dataIndex\n    });\n\n    // DICOM parser\n    const dicomParser = new DicomParser();\n    const imageFactory = new ImageFactory();\n\n    if (typeof this.#options.defaultCharacterSet !== 'undefined') {\n      dicomParser.setDefaultCharacterSet(this.#options.defaultCharacterSet);\n    }\n    // parse the buffer\n    try {\n      dicomParser.parse(buffer);\n      // check elements are good for image\n      imageFactory.checkElements(dicomParser.getDicomElements());\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n      return;\n    }\n\n    const pixelBuffer = dicomParser.getRawDicomElements().x7FE00010.value;\n    // help GC: discard pixel buffer from elements\n    dicomParser.getRawDicomElements().x7FE00010.value = [];\n    const syntax = cleanString(\n      dicomParser.getRawDicomElements().x00020010.value[0]);\n    const algoName = getSyntaxDecompressionName(syntax);\n    const needDecompression = (algoName !== null);\n\n    // store\n    this.#dicomParserStore[dataIndex] = dicomParser;\n    this.#finalBufferStore[dataIndex] = pixelBuffer[0];\n\n    if (needDecompression) {\n      // gather pixel buffer meta data\n      const bitsAllocated =\n        dicomParser.getRawDicomElements().x00280100.value[0];\n      const pixelRepresentation =\n        dicomParser.getRawDicomElements().x00280103.value[0];\n      const pixelMeta = {\n        bitsAllocated: bitsAllocated,\n        isSigned: (pixelRepresentation === 1)\n      };\n      const columnsElement = dicomParser.getRawDicomElements().x00280011;\n      const rowsElement = dicomParser.getRawDicomElements().x00280010;\n      if (typeof columnsElement !== 'undefined' &&\n        typeof rowsElement !== 'undefined') {\n        pixelMeta.sliceSize = columnsElement.value[0] * rowsElement.value[0];\n      }\n      const samplesPerPixelElement =\n        dicomParser.getRawDicomElements().x00280002;\n      if (typeof samplesPerPixelElement !== 'undefined') {\n        pixelMeta.samplesPerPixel = samplesPerPixelElement.value[0];\n      }\n      const planarConfigurationElement =\n        dicomParser.getRawDicomElements().x00280006;\n      if (typeof planarConfigurationElement !== 'undefined') {\n        pixelMeta.planarConfiguration = planarConfigurationElement.value[0];\n      }\n\n      // number of items\n      const numberOfItems = pixelBuffer.length;\n\n      // setup the decoder (one decoder per all converts)\n      if (this.#pixelDecoder === null) {\n        this.#pixelDecoder = new PixelBufferDecoder(\n          algoName, numberOfItems);\n        // callbacks\n        // pixelDecoder.ondecodestart: nothing to do\n        this.#pixelDecoder.ondecodeditem = (event) => {\n          this.#onDecodedItem(event);\n          // send onload and onloadend when all items have been decoded\n          if (event.itemNumber + 1 === event.numberOfItems) {\n            this.onload(event);\n            this.onloadend(event);\n          }\n        };\n        // pixelDecoder.ondecoded: nothing to do\n        // pixelDecoder.ondecodeend: nothing to do\n        this.#pixelDecoder.onerror = this.onerror;\n        this.#pixelDecoder.onabort = this.onabort;\n      }\n\n      // launch decode\n      for (let i = 0; i < numberOfItems; ++i) {\n        this.#pixelDecoder.decode(pixelBuffer[i], pixelMeta,\n          {\n            itemNumber: i,\n            numberOfItems: numberOfItems,\n            dataIndex: dataIndex\n          }\n        );\n      }\n    } else {\n      // no decompression\n      // send progress\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: dataIndex,\n        source: origin\n      });\n      // generate image\n      this.#generateImage(dataIndex, origin);\n      // send load events\n      this.onload({\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort a conversion.\n   */\n  abort() {\n    // abort decoding, will trigger pixelDecoder.onabort\n    if (this.#pixelDecoder) {\n      this.#pixelDecoder.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomBufferToView\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {DicomBufferToView} from '../image/dicomBufferToView';\n\n/**\n * DICOM data loader.\n */\nexport class DicomDataLoader {\n\n  /**\n   * Loader options.\n   *\n   * @private\n   * @type {object}\n   */\n  #options = {};\n\n  /**\n   * Loading flag.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * DICOM buffer to View (asynchronous)\n   *\n   * @private\n   */\n  #db2v = new DicomBufferToView();\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // setup db2v ony once\n    if (!this.#isLoading) {\n      // pass options\n      this.#db2v.setOptions(this.#options);\n      // connect handlers\n      this.#db2v.onloadstart = this.onloadstart;\n      this.#db2v.onprogress = this.onprogress;\n      this.#db2v.onloaditem = this.onloaditem;\n      this.#db2v.onload = this.onload;\n      this.#db2v.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      this.#db2v.onerror = this.onerror;\n      this.#db2v.onabort = this.onabort;\n    }\n\n    // set loading flag\n    this.#isLoading = true;\n    // convert\n    this.#db2v.convert(buffer, origin, index);\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // abort conversion, will trigger db2v.onabort\n    this.#db2v.abort();\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    return hasNoExt || hasDcmExt;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if:\n   *  - the url has a 'contentType' and it is 'application/dicom'\n   *    (as in wado urls)\n   *  - the url has no 'contentType' and no extension or the extension is 'dcm'\n   *\n   * @param {string} url The url to check.\n   * @param {object} options Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/dicom'\n      const isDicom = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/dicom') &&\n          element.value[18] !== '+';\n      };\n      return typeof options.requestHeaders.find(isDicom) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasDicomContentType = (contentType === 'application/dicom');\n\n    return hasContentType ? hasDicomContentType : (hasNoExt || hasDcmExt);\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined' &&\n      mem['Content-Type'] === 'application/dicom') {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * JSON text loader.\n */\nexport class JSONTextLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} text The input text.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(text, origin, index) {\n    // set loading flag\n    this.#isLoading = true;\n    this.onloadstart({\n      source: origin\n    });\n\n    try {\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: index,\n        source: origin\n      });\n      this.onload({\n        data: text,\n        source: origin\n      });\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n    } finally {\n      // reset loading flag\n      this.#isLoading = false;\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} options Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeader, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/json' or 'application/dicom+json\n      const isJson = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/json') &&\n          startsWith(element.value, 'application/dicom+json');\n      };\n      return typeof options.requestHeaders.find(isJson) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined') {\n      if (mem['Content-Type'].includes('json')) {\n        return true;\n      }\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.Text;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.Text;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class JSONTextLoader\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n/**\n * Memory loader.\n */\nexport class MemoryLoader {\n\n  /**\n   * Input data.\n   *\n   * @private\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Data loader.\n   *\n   * @private\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @private\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @private\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @private\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   * @private\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   * @private\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   * @private\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Launch a load item event and call addLoad.\n   *\n   * @param {object} event The load data event.\n   * @private\n   */\n  #addLoadItem(event) {\n    this.onloaditem(event);\n    this.#addLoad();\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   * @private\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   * @private\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Load a list of buffers.\n   *\n   * @param {Array} data The list of buffers to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n    mproghandler.setNumberOfDimensions(1);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadMemory(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(0);\n        if (typeof loader.onloaditem === 'undefined') {\n          // handle loaditem locally\n          loader.onload = this.#addLoadItem;\n        } else {\n          loader.onloaditem = this.onloaditem;\n          loader.onload = this.#addLoad;\n        }\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for data: ' + dataElement.filename);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n      // check loader\n      if (!loader.canLoadMemory(dataElement)) {\n        throw new Error('Input data of different type: ' +\n          dataElement.filename);\n      }\n      // read\n      loader.load(dataElement.data, dataElement.filename, i);\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MemoryLoader\n","import {startsWith} from '../utils/string';\nimport {parseMultipart} from '../utils/array';\nimport {MemoryLoader} from './memoryLoader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Multipart data loader.\n */\nexport class MultipartLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    const memoryIO = new MemoryLoader();\n    // memoryIO.onloadstart: nothing to do\n    memoryIO.onprogress = (progress) => {\n      // add 50% to take into account the un-Multipartping\n      progress.loaded = 50 + progress.loaded / 2;\n      // set data index\n      progress.index = index;\n      this.onprogress(progress);\n    };\n    memoryIO.onloaditem = this.onloaditem;\n    memoryIO.onload = this.onload;\n    memoryIO.onloadend = (event) => {\n      // reset loading flag\n      this.#isLoading = false;\n      // call listeners\n      this.onloadend(event);\n    };\n    memoryIO.onerror = this.onerror;\n    memoryIO.onabort = this.onabort;\n    // launch\n    memoryIO.load(parseMultipart(buffer));\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} _file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(_file) {\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} options The url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      const isMultipart = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'multipart/related');\n      };\n      return typeof options.requestHeaders.find(isMultipart) !== 'undefined';\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} _mem The memory object.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadMemory(_mem) {\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MultipartLoader\n","import {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Geometry} from '../image/geometry';\nimport {Image} from '../image/image';\nimport {Point3D} from '../math/point';\n\n/**\n * Create a simple array buffer from an ImageData buffer.\n *\n * @param {object} imageData The ImageData taken from a context.\n * @returns {Array} The image buffer.\n */\nfunction imageDataToBuffer(imageData) {\n  // remove alpha\n  // TODO support passing the full image data\n  const dataLen = imageData.data.length;\n  const buffer = new Uint8Array((dataLen / 4) * 3);\n  let j = 0;\n  for (let i = 0; i < dataLen; i += 4) {\n    buffer[j] = imageData.data[i];\n    buffer[j + 1] = imageData.data[i + 1];\n    buffer[j + 2] = imageData.data[i + 2];\n    j += 3;\n  }\n  return buffer;\n}\n\n/**\n * Get an image from an input context imageData.\n *\n * @param {number} width The width of the coresponding image.\n * @param {number} height The height of the coresponding image.\n * @param {number} sliceIndex The slice index of the imageData.\n * @param {object} imageBuffer The image buffer.\n * @param {number} numberOfFrames The final number of frames.\n * @param {string} imageUid The image UID.\n * @returns {object} The corresponding view.\n */\nfunction getDefaultImage(\n  width, height, sliceIndex,\n  imageBuffer, numberOfFrames,\n  imageUid) {\n  // image size\n  const imageSize = new Size([width, height, 1]);\n  // default spacing\n  // TODO: misleading...\n  const imageSpacing = new Spacing([1, 1, 1]);\n  // default origin\n  const origin = new Point3D(0, 0, sliceIndex);\n  // create image\n  const geometry = new Geometry(origin, imageSize, imageSpacing);\n  const image = new Image(geometry, imageBuffer, [imageUid]);\n  image.setPhotometricInterpretation('RGB');\n  // meta information\n  const meta = {};\n  meta.BitsStored = 8;\n  if (typeof numberOfFrames !== 'undefined') {\n    meta.numberOfFiles = numberOfFrames;\n  }\n  image.setMeta(meta);\n  // return\n  return image;\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {object} domImage The DOM Image.\n * @param {object} origin The data origin.\n * @returns {object} A load data event.\n */\nexport function getViewFromDOMImage(domImage, origin) {\n  // image size\n  const width = domImage.width;\n  const height = domImage.height;\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(domImage, 0, 0);\n  // get the image data\n  const imageData = ctx.getImageData(0, 0, width, height);\n\n  // image properties\n  const info = {};\n  if (typeof domImage.origin === 'string') {\n    info['origin'] = {value: domImage.origin};\n  } else {\n    info['fileName'] = {value: domImage.origin.name};\n    info['fileType'] = {value: domImage.origin.type};\n    info['fileLastModifiedDate'] = {value: domImage.origin.lastModifiedDate};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n\n  const sliceIndex = domImage.index ? domImage.index : 0;\n  info['imageUid'] = {value: sliceIndex};\n\n  // create view\n  const imageBuffer = imageDataToBuffer(imageData);\n  const image = getDefaultImage(\n    width, height, sliceIndex, imageBuffer, 1, sliceIndex);\n\n  // return\n  return {\n    data: {\n      image: image,\n      info: info\n    },\n    source: origin\n  };\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {object} video The DOM Video.\n * @param {Function} onloaditem On load callback.\n * @param {object} onload The function to call once the data is loaded.\n * @param {object} onprogress The function to call to report progress.\n * @param {object} onloadend The function to call to report load end.\n * @param {number} dataIndex The data index.\n * @param {object} origin The data origin.\n */\nexport function getViewFromDOMVideo(\n  video, onloaditem, onload, onprogress, onloadend,\n  dataIndex, origin) {\n  // video size\n  const width = video.videoWidth;\n  const height = video.videoHeight;\n\n  // default frame rate...\n  const frameRate = 30;\n  // number of frames\n  const numberOfFrames = Math.ceil(video.duration * frameRate);\n\n  // video properties\n  const info = {};\n  if (video.file) {\n    info['fileName'] = {value: video.file.name};\n    info['fileType'] = {value: video.file.type};\n    info['fileLastModifiedDate'] = {value: video.file.lastModifiedDate};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n  info['numberOfFrames'] = {value: numberOfFrames};\n  info['imageUid'] = {value: 0};\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n\n  // using seeked to loop through all video frames\n  video.addEventListener('seeked', onseeked, false);\n\n  // current frame index\n  let frameIndex = 0;\n  // video image\n  let image = null;\n\n  /**\n   * Draw the context and store it as a frame\n   */\n  function storeFrame() {\n    // send progress\n    onprogress({\n      lengthComputable: true,\n      loaded: frameIndex,\n      total: numberOfFrames,\n      index: dataIndex,\n      source: origin\n    });\n    // draw image\n    ctx.drawImage(video, 0, 0);\n    // context to image buffer\n    const imgBuffer = imageDataToBuffer(\n      ctx.getImageData(0, 0, width, height));\n    if (frameIndex === 0) {\n      // create view\n      image = getDefaultImage(\n        width, height, 1, imgBuffer, numberOfFrames, dataIndex);\n      // call callback\n      onloaditem({\n        data: {\n          image: image,\n          info: info\n        },\n        source: origin\n      });\n    } else {\n      image.appendFrameBuffer(imgBuffer, frameIndex);\n    }\n    // increment index\n    ++frameIndex;\n  }\n\n  let nextTime = 0;\n\n  /**\n   * Handle seeked event\n   */\n  function onseeked(/*event*/) {\n    // store\n    storeFrame();\n    // set the next time\n    // (not using currentTime, it seems to get offseted)\n    nextTime += 1 / frameRate;\n    if (nextTime <= this.duration) {\n      this.currentTime = nextTime;\n    } else {\n      onload({\n        source: origin\n      });\n      onloadend({\n        source: origin\n      });\n      // stop listening\n      video.removeEventListener('seeked', onseeked);\n    }\n  }\n\n  // trigger the first seek\n  video.currentTime = nextTime;\n}\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMImage} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw image loader.\n */\nexport class RawImageLoader {\n\n  /**\n   * if abort is triggered, all image.onload callbacks have to be cancelled\n   *\n   * @type {boolean}\n   * @private\n   */\n  #aborted = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {object} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   * @private\n   */\n  #createDataUri(response, dataType) {\n    // image type\n    let imageType = dataType;\n    if (!imageType || imageType === 'jpg') {\n      imageType = 'jpeg';\n    }\n    // create uri\n    const file = new Blob([response], {type: 'image/' + imageType});\n    return window.URL.createObjectURL(file);\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The read data.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    this.#aborted = false;\n    // create a DOM image\n    const image = new Image();\n    // triggered by ctx.drawImage\n    image.onload = (event) => {\n      try {\n        if (!this.#aborted) {\n          this.onprogress({\n            lengthComputable: true,\n            loaded: 100,\n            total: 100,\n            index: index,\n            source: origin\n          });\n          this.onload(getViewFromDOMImage(event.target, origin));\n        }\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n      } finally {\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n    // storing values to pass them on\n    image.origin = origin;\n    image.index = index;\n    if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      image.src = this.#createDataUri(buffer, ext);\n    } else {\n      image.src = buffer;\n    }\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.#aborted = true;\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('image.*'));\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} options Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'image/'\n      const isImage = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'image/');\n      };\n      return typeof options.requestHeaders.find(isImage) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasImageExt = (ext === 'jpeg') || (ext === 'jpg') ||\n      (ext === 'png') || (ext === 'gif');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasImageContentType = (contentType === 'image/jpeg') ||\n      (contentType === 'image/png') ||\n      (contentType === 'image/gif');\n\n    return hasContentType ? hasImageContentType : hasImageExt;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawImageLoader","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMVideo} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw video loader.\n * url example (cors enabled):\n *   https://raw.githubusercontent.com/clappr/clappr/master/test/fixtures/SampleVideo_360x240_1mb.mp4\n */\nexport class RawVideoLoader {\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {object} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   * @private\n   */\n  #createDataUri(response, dataType) {\n    // image data as string\n    const bytes = new Uint8Array(response);\n    let videoDataStr = '';\n    for (let i = 0; i < bytes.byteLength; ++i) {\n      videoDataStr += String.fromCharCode(bytes[i]);\n    }\n    // create uri\n    const uri = 'data:video/' + dataType +\n      ';base64,' + window.btoa(videoDataStr);\n    return uri;\n  }\n\n  /**\n   * Internal Data URI load.\n   *\n   * @param {object} buffer The read data.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // create a DOM video\n    const video = document.createElement('video');\n    if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      video.src = this.#createDataUri(buffer, ext);\n    } else {\n      video.src = buffer;\n    }\n    // storing values to pass them on\n    video.file = origin;\n    video.index = index;\n    // onload handler\n    video.onloadedmetadata = (event) => {\n      try {\n        getViewFromDOMVideo(event.target,\n          this.onloaditem, this.onload,\n          this.onprogress, this.onloadend,\n          index, origin);\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('video.*'));\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} options Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'video/'\n      const isVideo = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'video/');\n      };\n      return typeof options.requestHeaders.find(isVideo) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'mp4') ||\n      (ext === 'ogg') ||\n      (ext === 'webm');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   * when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   * when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawVideoLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {MemoryLoader} from './memoryLoader';\n\n/**\n * The zip library.\n *\n * @external JSZip\n * @see https://github.com/Stuk/jszip\n */\nimport JSZip from 'jszip';\n\n/**\n * ZIP data loader.\n */\nexport class ZipLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  #filename = '';\n  #files = [];\n  #zobjs = null;\n\n  /**\n   * JSZip.async callback\n   *\n   * @param {ArrayBuffer} content unzipped file image\n   * @param {object} origin The origin of the file.\n   * @param {number} index The data index.\n   * @private\n   */\n  #zipAsyncCallback(content, origin, index) {\n    this.#files.push({filename: this.#filename, data: content});\n\n    // sent un-ziped progress with the data index\n    // (max 50% to take into account the memory loading)\n    const unzipPercent = this.#files.length * 100 / this.#zobjs.length;\n    this.onprogress({\n      lengthComputable: true,\n      loaded: (unzipPercent / 2),\n      total: 100,\n      index: index,\n      item: {\n        loaded: unzipPercent,\n        total: 100,\n        source: origin\n      }\n    });\n\n    // recursively call until we have all the files\n    if (this.#files.length < this.#zobjs.length) {\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    } else {\n      const memoryIO = new MemoryLoader();\n      // memoryIO.onloadstart: nothing to do\n      memoryIO.onprogress = (progress) => {\n        // add 50% to take into account the un-zipping\n        progress.loaded = 50 + progress.loaded / 2;\n        // set data index\n        progress.index = index;\n        this.onprogress(progress);\n      };\n      memoryIO.onloaditem = this.onloaditem;\n      memoryIO.onload = this.onload;\n      memoryIO.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      memoryIO.onerror = this.onerror;\n      memoryIO.onabort = this.onabort;\n      // launch\n      memoryIO.load(this.#files);\n    }\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    JSZip.loadAsync(buffer).then((zip) => {\n      this.#files = [];\n      this.#zobjs = zip.file(/.*\\.dcm/);\n      // recursively load zip files into the files array\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    });\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} options Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/zip'\n      const isZip = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/zip');\n      };\n      return typeof options.requestHeaders.find(isZip) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined') {\n      if (mem['Content-Type'].includes('zip')) {\n        return true;\n      }\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {DicomDataLoader} from './dicomDataLoader';\nimport {JSONTextLoader} from './jsonTextLoader';\nimport {MultipartLoader} from './multipartLoader';\nimport {RawImageLoader} from './rawImageLoader';\nimport {RawVideoLoader} from './rawVideoLoader';\nimport {ZipLoader} from './zipLoader';\n\nexport const loaderList = [\n  DicomDataLoader,\n  JSONTextLoader,\n  MultipartLoader,\n  RawImageLoader,\n  RawVideoLoader,\n  ZipLoader\n];\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n// file content types\nexport const fileContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1,\n  DataURL: 2\n};\n\n/**\n * Files loader.\n */\nexport class FilesLoader {\n\n  /**\n   * Input data.\n   *\n   * @private\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched file readers.\n   *\n   * @private\n   * @type {Array}\n   */\n  #readers = [];\n\n  /**\n   * Data loader.\n   *\n   * @private\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @private\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @private\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @private\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   * @private\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredReaders();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched reader.\n   *\n   * @param {object} reader The launched reader.\n   * @private\n   */\n  #storeReader(reader) {\n    this.#readers.push(reader);\n  }\n\n  /**\n   * Clear the stored readers.\n   *\n   * @private\n   */\n  #clearStoredReaders() {\n    this.#readers = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   * @private\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   * @private\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Launch a load item event and call addLoad.\n   *\n   * @param {object} event The load data event.\n   * @private\n   */\n  #addLoadItem = (event) => {\n    this.onloaditem(event);\n    this.#addLoad();\n  };\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   * @private\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   * @private\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    // x2 to count for reader + load\n    if (this.#nLoadend === 2 * this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {Function} The augmented callback.\n   * @private\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Load a list of files.\n   *\n   * @param {Array} data The list of files to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadFile(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        if (typeof loader.onloaditem === 'undefined') {\n          // handle loaditem locally\n          loader.onload = this.#addLoadItem;\n        } else {\n          loader.onloaditem = this.onloaditem;\n          loader.onload = this.#addLoad;\n        }\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for file: ' + dataElement.name);\n    }\n\n    const getLoadHandler = function (loader, dataElement, i) {\n      return (event) => {\n        loader.load(event.target.result, dataElement, i);\n      };\n    };\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadFile(dataElement)) {\n        throw new Error('Input file of different type: ' + dataElement);\n      }\n\n      /**\n       * The file reader.\n       *\n       * @external FileReader\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n       */\n      const reader = new FileReader();\n      // store reader\n      this.#storeReader(reader);\n\n      // set reader callbacks\n      // reader.onloadstart: nothing to do\n      reader.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      reader.onload = getLoadHandler(loader, dataElement, i);\n      reader.onloadend = this.#addLoadend;\n      reader.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\n      reader.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\n      // read\n      if (loader.loadFileAs() === fileContentTypes.Text) {\n        reader.readAsText(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.DataURL) {\n        reader.readAsDataURL(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.ArrayBuffer) {\n        reader.readAsArrayBuffer(dataElement);\n      }\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort readers\n    for (let i = 0; i < this.#readers.length; ++i) {\n      // 0: EMPTY, 1: LOADING, 2: DONE\n      if (this.#readers[i].readyState === 1) {\n        this.#readers[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class FilesLoader\n","import {FilesLoader} from '../io/filesLoader';\nimport {MemoryLoader} from '../io/memoryLoader';\nimport {UrlsLoader} from '../io/urlsLoader';\n\n/**\n * Load controller.\n */\nexport class LoadController {\n\n  /**\n   * The default character set.\n   *\n   * @type {string}\n   * @private\n   */\n  #defaultCharacterSet;\n\n  /**\n   * List of current loaders.\n   *\n   * @type {object}\n   * @private\n   */\n  #currentLoaders = {};\n\n  /**\n   * load counter.\n   *\n   * @type {number}\n   * @private\n   */\n  #counter = -1;\n\n  /**\n   * @param {string} defaultCharacterSet The default character set.\n   */\n  constructor(defaultCharacterSet) {\n    this.#defaultCharacterSet = defaultCharacterSet;\n  }\n\n  /**\n   * Get the next load id.\n   *\n   * @returns {number} The next id.\n   */\n  #getNextLoadId() {\n    ++this.#counter;\n    return this.#counter;\n  }\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {Array} files The list of files to load.\n   */\n  loadFiles(files) {\n    // has been checked for emptiness.\n    const ext = files[0].name.split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateFile(files[0]);\n    } else {\n      this.#loadImageFiles(files);\n    }\n  }\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} options The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  loadURLs(urls, options) {\n    // has been checked for emptiness.\n    const ext = urls[0].split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateUrl(urls[0], options);\n    } else {\n      this.#loadImageUrls(urls, options);\n    }\n  }\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   */\n  loadImageObject(data) {\n    // create IO\n    const memoryIO = new MemoryLoader();\n    // load data\n    this.#loadData(data, memoryIO, 'image');\n  }\n\n  /**\n   * Abort the current loaders.\n   */\n  abort() {\n    const keys = Object.keys(this.#currentLoaders);\n    for (let i = 0; i < keys.length; ++i) {\n      this.#currentLoaders[i].loader.abort();\n      delete this.#currentLoaders[i];\n    }\n  }\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Load a list of image files.\n   *\n   * @param {Array} files The list of image files to load.\n   * @private\n   */\n  #loadImageFiles(files) {\n    // create IO\n    const fileIO = new FilesLoader();\n    fileIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(files, fileIO, 'image');\n  }\n\n  /**\n   * Load a list of image URLs.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} options The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   * @private\n   */\n  #loadImageUrls(urls, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    urlIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(urls, urlIO, 'image', options);\n  }\n\n  /**\n   * Load a State file.\n   *\n   * @param {string} file The state file to load.\n   * @private\n   */\n  #loadStateFile(file) {\n    // create IO\n    const fileIO = new FilesLoader();\n    // load data\n    this.#loadData([file], fileIO, 'state');\n  }\n\n  /**\n   * Load a State url.\n   *\n   * @param {string} url The state url to load.\n   * @param {object} options The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   * @private\n   */\n  #loadStateUrl(url, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    // load data\n    this.#loadData([url], urlIO, 'state', options);\n  }\n\n  /**\n   * Load a list of data.\n   *\n   * @param {Array} data Array of data to load.\n   * @param {object} loader The data loader.\n   * @param {string} loadType The data load type: 'image' or 'state'.\n   * @param {object} options Options passed to the final loader.\n   * @private\n   */\n  #loadData(data, loader, loadType, options) {\n    const eventInfo = {\n      loadtype: loadType,\n    };\n\n    // load id\n    const loadId = this.#getNextLoadId();\n    eventInfo.loadid = loadId;\n\n    // set callbacks\n    loader.onloadstart = (event) => {\n      // store loader to allow abort\n      this.#currentLoaders[loadId] = {\n        loader: loader,\n        isFirstItem: true\n      };\n      // callback\n      this.#augmentCallbackEvent(this.onloadstart, eventInfo)(event);\n    };\n    loader.onprogress = this.#augmentCallbackEvent(this.onprogress, eventInfo);\n    loader.onloaditem = (event) => {\n      const eventInfoItem = {\n        loadtype: loadType,\n        loadid: loadId\n      };\n      if (typeof this.#currentLoaders[loadId] !== 'undefined') {\n        eventInfoItem.isfirstitem = this.#currentLoaders[loadId].isFirstItem;\n      }\n      // callback\n      this.#augmentCallbackEvent(this.onloaditem, eventInfoItem)(event);\n      // update loader\n      if (typeof this.#currentLoaders[loadId] !== 'undefined' &&\n        this.#currentLoaders[loadId].isFirstItem) {\n        this.#currentLoaders[loadId].isFirstItem = false;\n      }\n    };\n    loader.onload = this.#augmentCallbackEvent(this.onload, eventInfo);\n    loader.onloadend = (event) => {\n      // reset current loader\n      delete this.#currentLoaders[loadId];\n      // callback\n      this.#augmentCallbackEvent(this.onloadend, eventInfo)(event);\n    };\n    loader.onerror = this.#augmentCallbackEvent(this.onerror, eventInfo);\n    loader.onabort = this.#augmentCallbackEvent(this.onabort, eventInfo);\n    // launch load\n    try {\n      loader.load(data, options);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        loadid: loadId\n      });\n      this.onloadend({\n        loadid: loadId\n      });\n      return;\n    }\n  }\n\n  /**\n   * Augment a callback event: adds loadtype to the event\n   *  passed to a callback.\n   *\n   * @param {object} callback The callback to update.\n   * @param {object} info Info object to append to the event.\n   * @returns {object} A function representing the modified callback.\n   */\n  #augmentCallbackEvent(callback, info) {\n    return function (event) {\n      const keys = Object.keys(info);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        event[key] = info[key];\n      }\n      callback(event);\n    };\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class LoadController\n","/**\n * Check if the input is a generic object, including arrays.\n *\n * @param {*} unknown The input to check.\n * @returns {boolean} True if the input is an object.\n * ref: https://github.com/jashkenas/underscore/blob/1.9.1/underscore.js#L1319-L1323\n */\nexport function isObject(unknown) {\n  const type = typeof unknown;\n  return type === 'function' || type === 'object' && !!unknown;\n}\n\n/**\n * Check if the input is an array.\n *\n * @param {*} unknown The input to check.\n * @returns {boolean} True if the input is an array.\n * ref: https://github.com/jashkenas/underscore/blob/1.9.1/underscore.js#L1313-L1317\n */\nexport function isArray(unknown) {\n  return Array.isArray(unknown);\n}\n\n/**\n * Dump an object to an array.\n *\n * @param {object} obj The input object as: {key0: {}, key1: {}}\n * @returns {Array} The corresponding array:\n *   [{name: key0, {}}, {name: key1, {}}]\n */\nexport function objectToArray(obj) {\n  const array = [];\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    const row = {name: key};\n    const innerKeys = Object.keys(obj[key]);\n    for (let j = 0; j < innerKeys.length; ++j) {\n      const innerKey = innerKeys[j];\n      let value = obj[key][innerKey];\n      if (isArray(value)) {\n        const arrayValues = [];\n        for (let k = 0; k < value.length; ++k) {\n          if (isObject(value[k])) {\n            arrayValues.push(objectToArray(value[k]));\n          } else {\n            arrayValues.push(value[k]);\n          }\n        }\n        value = arrayValues;\n      } else if (isObject(value)) {\n        value = objectToArray(value);\n      }\n      row[innerKey] = value;\n    }\n    array.push(row);\n  }\n  return array;\n}\n\n/**\n * Merge two similar objects.\n * Objects need to be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: 0},\n *   key0: {valueKey: \"abc\"},\n *   key1: {valueKey: 33}\n * }\n * </code>\n * Merged objects will be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0,1,2], merged: true},\n *   key0: {valueKey: {\n *     0: {valueKey: \"abc\"},\n *     1: {valueKey: \"def\"},\n *     2: {valueKey: \"ghi\"}\n *   }},\n *   key1: {valueKey: {\n *     0: {valueKey: 33},\n *     1: {valueKey: 44},\n *     2: {valueKey: 55}\n *   }}\n * }\n * </code>\n *\n * @param {object} obj1 The first object, can be the result of a previous merge.\n * @param {object} obj2 The second object.\n * @param {string} idKey The key to use as index for duplicate values.\n * @param {string} valueKey The key to use to access object values.\n * @returns {object} The merged object.\n */\nexport function mergeObjects(obj1, obj2, idKey, valueKey) {\n  const res = {};\n  // check id key\n  if (!idKey) {\n    throw new Error('Cannot merge object with an undefined id key: ' + idKey);\n  } else {\n    if (!Object.prototype.hasOwnProperty.call(obj1, idKey)) {\n      throw new Error('Id key not found in first object while merging: ' +\n                idKey + ', obj: ' + obj1);\n    }\n    if (!Object.prototype.hasOwnProperty.call(obj2, idKey)) {\n      throw new Error('Id key not found in second object while merging: ' +\n                idKey + ', obj: ' + obj2);\n    }\n  }\n  // check value key\n  if (!valueKey) {\n    throw new Error('Cannot merge object with an undefined value key: ' +\n      valueKey);\n  }\n\n  // check if merged object\n  let mergedObj1 = false;\n  if (Object.prototype.hasOwnProperty.call(obj1[idKey], 'merged') &&\n    obj1[idKey].merged) {\n    mergedObj1 = true;\n  }\n  // handle the id part\n  if (!Object.prototype.hasOwnProperty.call(obj1[idKey], valueKey)) {\n    throw new Error('Id value not found in first object while merging: ' +\n            idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj1);\n  }\n  if (!Object.prototype.hasOwnProperty.call(obj2[idKey], valueKey)) {\n    throw new Error('Id value not found in second object while merging: ' +\n            idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj2);\n  }\n  const id1 = obj1[idKey][valueKey];\n  const id2 = obj2[idKey][valueKey];\n  // for merged object, id1 is an array\n  if (mergedObj1) {\n    // check if array does not include id2\n    for (let k = 0; k < id1.length; ++k) {\n      if (id1[k] === id2) {\n        throw new Error('The first object already contains id2: ' +\n                    id2 + ', id1: ' + id1);\n      }\n    }\n    res[idKey] = obj1[idKey];\n    res[idKey][valueKey].push(id2);\n  } else {\n    if (id1 === id2) {\n      throw new Error('Cannot merge object with same ids: ' +\n                id1 + ', id2: ' + id2);\n    }\n    // create merge object\n    res[idKey] = {value: [id1, id2], merged: true};\n  }\n\n  // get keys\n  const keys1 = Object.keys(obj1);\n  // keys2 without duplicates of keys1\n  const keys2 = Object.keys(obj2).filter(function (item) {\n    return keys1.indexOf(item) < 0;\n  });\n  const keys = keys1.concat(keys2);\n\n  // loop through keys\n  for (let i = 0, leni = keys.length; i < leni; ++i) {\n    const key = keys[i];\n    if (key !== idKey) {\n      // first\n      let value1 = null;\n      let subValue1 = null;\n      if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n        value1 = obj1[key];\n        if (Object.prototype.hasOwnProperty.call(value1, valueKey)) {\n          subValue1 = value1[valueKey];\n        }\n      }\n      // second\n      let value2 = null;\n      let subValue2 = null;\n      if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n        value2 = obj2[key];\n        if (Object.prototype.hasOwnProperty.call(value2, valueKey)) {\n          subValue2 = value2[valueKey];\n        }\n      }\n      // result value\n      let value;\n      // create merge object if different values\n      if (subValue2 !== subValue1) {\n        value = {};\n        // add to merged object or create new\n        if (mergedObj1) {\n          if (isObject(subValue1)) {\n            value[valueKey] = subValue1;\n          } else {\n            // merged object with repeated value\n            // copy it with the index list\n            value[valueKey] = {};\n            for (let j = 0; j < id1.length; j++) {\n              value[valueKey][id1[j]] = value1;\n            }\n          }\n          // add obj2 value\n          value[valueKey][id2] = value2;\n        } else {\n          // create merge object\n          const newValue = {};\n          newValue[id1] = value1;\n          newValue[id2] = value2;\n          value[valueKey] = newValue;\n        }\n      } else {\n        value = value1;\n      }\n      // store value in result object\n      res[key] = value;\n    }\n  }\n  return res;\n}\n","import {ListenerHandler} from '../utils/listen';\nimport {mergeObjects} from '../utils/operator';\nimport {DicomElementsWrapper} from '../dicom/dicomElementsWrapper';\n\n/*\n * Data (list of {image, meta}) controller.\n */\nexport class DataController {\n\n  /**\n   * List of {image, meta}.\n   *\n   * @private\n   * @type {object}\n   */\n  #data = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the length of the data storage.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return Object.keys(this.#data).length;\n  }\n\n  /**\n   * Reset the class: empty the data storage.\n   */\n  reset() {\n    this.#data = [];\n  }\n\n  /**\n   * Get a data at a given index.\n   *\n   * @param {number} index The index of the data.\n   * @returns {object} The data.\n   */\n  get(index) {\n    return this.#data[index];\n  }\n\n  /**\n   * Set the image at a given index.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image to set.\n   */\n  setImage(index, image) {\n    this.#data[index].image = image;\n    // fire image set\n    this.#fireEvent({\n      type: 'imageset',\n      value: [image],\n      dataid: index\n    });\n    // listen to image change\n    image.addEventListener('imagechange', this.#getFireEvent(index));\n  }\n\n  /**\n   * Add a new data.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  addNew(index, image, meta) {\n    if (typeof this.#data[index] !== 'undefined') {\n      throw new Error('Index already used in storage: ' + index);\n    }\n    // store the new image\n    this.#data[index] = {\n      image: image,\n      meta: this.#getMetaObject(meta)\n    };\n    // listen to image change\n    image.addEventListener('imagechange', this.#getFireEvent(index));\n  }\n\n  /**\n   * Update the current data.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  update(index, image, meta) {\n    const dataToUpdate = this.#data[index];\n\n    // add slice to current image\n    dataToUpdate.image.appendSlice(image);\n\n    // update meta data\n    // TODO add time support\n    let idKey = '';\n    if (typeof meta.x00020010 !== 'undefined') {\n      // dicom case\n      idKey = 'InstanceNumber';\n    } else {\n      idKey = 'imageUid';\n    }\n    dataToUpdate.meta = mergeObjects(\n      dataToUpdate.meta,\n      this.#getMetaObject(meta),\n      idKey,\n      'value');\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get a fireEvent function that adds the input index\n   * to the event value.\n   *\n   * @param {number} index The data index.\n   * @returns {Function} A fireEvent function.\n   */\n  #getFireEvent(index) {\n    return (event) => {\n      event.dataid = index;\n      this.#fireEvent(event);\n    };\n  }\n\n  /**\n   * Get a meta data object.\n   *\n   * @param {*} meta The meta data to convert.\n   * @returns {*} object for DICOM, array for DOM image.\n   */\n  #getMetaObject(meta) {\n    let metaObj = null;\n    // wrap meta if dicom (x00020010: transfer syntax)\n    if (typeof meta.x00020010 !== 'undefined') {\n      const newDcmMetaData = new DicomElementsWrapper(meta);\n      metaObj = newDcmMetaData.dumpToObject();\n    } else {\n      metaObj = meta;\n    }\n    return metaObj;\n  }\n\n} // ImageController class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n/**\n * Scroll wheel class: provides a wheel event handler\n *   that scroll the corresponding data.\n */\nexport class ScrollWheel {\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Accumulated wheel event deltaY.\n   *\n   * @private\n   * @type {number}\n   */\n  #wheelDeltaY = 0;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel(event) {\n    // deltaMode (deltaY values on my machine...):\n    // - 0 (DOM_DELTA_PIXEL): chrome, deltaY mouse scroll = 53\n    // - 1 (DOM_DELTA_LINE): firefox, deltaY mouse scroll = 6\n    // - 2 (DOM_DELTA_PAGE): ??\n    // TODO: check scroll event\n    let scrollMin = 52;\n    if (event.deltaMode === 1) {\n      scrollMin = 5.99;\n    }\n    this.#wheelDeltaY += event.deltaY;\n    if (Math.abs(this.#wheelDeltaY) < scrollMin) {\n      return;\n    } else {\n      this.#wheelDeltaY = 0;\n    }\n\n    const up = event.deltaY < 0 ? true : false;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const imageSize = viewController.getImageSize();\n    if (imageSize.canScroll3D()) {\n      if (up) {\n        viewController.incrementScrollIndex();\n      } else {\n        viewController.decrementScrollIndex();\n      }\n    } else if (imageSize.moreThanOne(3)) {\n      if (up) {\n        viewController.incrementIndex(3);\n      } else {\n        viewController.decrementIndex(3);\n      }\n    }\n  }\n\n} // ScrollWheel class\n","import {ScrollWheel} from './scrollWheel';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {WindowLevel as WL, validateWindowWidth} from '../image/windowLevel';\n\n/**\n * WindowLevel tool: handle window/level related events.\n *\n * @example\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {WindowLevel: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('WindowLevel');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class WindowLevel {\n\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @private\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // set start flag\n    this.#started = true;\n    // store initial position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // check start flag\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    // difference to last position\n    const diffX = event._x - this.x0;\n    const diffY = this.y0 - event._y;\n    // data range\n    const range = viewController.getImageRescaledDataRange();\n    // 1/1000 seems to give reasonable results...\n    const pixelToIntensity = (range.max - range.min) * 0.01;\n\n    // calculate new window level\n    const center = parseInt(viewController.getWindowLevel().center, 10);\n    const width = parseInt(viewController.getWindowLevel().width, 10);\n    const windowCenter = center + Math.round(diffY * pixelToIntensity);\n    let windowWidth = width + Math.round(diffX * pixelToIntensity);\n    // bound window width\n    windowWidth = validateWindowWidth(windowWidth);\n\n    // add the manual preset to the view\n    viewController.addWindowLevelPresets({\n      manual: {\n        wl: [new WL(windowCenter, windowWidth)],\n        name: 'manual'\n      }\n    });\n    viewController.setWindowLevelPreset('manual');\n\n    // store position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    // set start flag\n    if (this.#started) {\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n    const viewController = viewLayer.getViewController();\n    const image = this.#app.getImage(viewLayer.getDataIndex());\n\n    // update view controller\n    viewController.setWindowLevel(\n      parseInt(image.getRescaledValueAtIndex(\n        viewController.getCurrentIndex().getWithNew2D(\n          index.get(0),\n          index.get(1)\n        )\n      ), 10),\n      parseInt(viewController.getWindowLevel().width, 10));\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'WindowLevel';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // WindowLevel class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {precisionRound} from '../utils/string';\nimport {ScrollWheel} from './scrollWheel';\n\n/**\n * Scroll class.\n *\n * @example\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Scroll: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n * @example <caption>Example with slider</caption>\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Scroll: {}}\n * });\n * // create range\n * const range = document.createElement('input');\n * range.type = 'range';\n * range.min = 0;\n * range.id = 'sliceRange';\n * document.body.appendChild(range);\n * // update app on slider change\n * range.oninput = function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   const index = vc.getCurrentIndex();\n *   const values = index.getValues();\n *   values[2] = this.value;\n *   vc.setCurrentIndex(new math.Index(values));\n * }\n * // activate tool and update range max on load\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n *   const size = app.getImage(0).getGeometry().getSize();\n *   range.max = size.get(2) - 1;\n * });\n * // update slider on slice change (for ex via mouse wheel)\n * app.addEventListener('positionchange', function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   range.value = vc.getCurrentIndex().get(2);\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n */\nexport class Scroll {\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @private\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Touch timer ID (created by setTimeout).\n   *\n   * @private\n   * @type {number}\n   */\n  #touchTimerID = null;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Option to show or not a value tooltip on mousemove.\n   *\n   * @type {boolean}\n   */\n  #displayTooltip = false;\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // optional tooltip\n    this.#removeTooltipDiv();\n\n    // stop viewer if playing\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    if (viewController.isPlaying()) {\n      viewController.stop();\n    }\n    // start flag\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n\n    // update controller position\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\n    const position = viewController.getPositionFromPlanePoint(\n      planePos.x, planePos.y);\n    viewController.setCurrentPosition(position);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      // optional tooltip\n      if (this.#displayTooltip) {\n        this.#showTooltip(event);\n      }\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    // difference to last Y position\n    const diffY = event._y - this.y0;\n    const yMove = (Math.abs(diffY) > 15);\n    // do not trigger for small moves\n    if (yMove && viewController.canScroll()) {\n      // update view controller\n      if (diffY > 0) {\n        viewController.decrementScrollIndex();\n      } else {\n        viewController.incrementScrollIndex();\n      }\n    }\n\n    // difference to last X position\n    const diffX = event._x - this.x0;\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    const imageSize = viewController.getImageSize();\n    if (xMove && imageSize.moreThanOne(3)) {\n      // update view controller\n      if (diffX > 0) {\n        viewController.incrementIndex(3);\n      } else {\n        viewController.decrementIndex(3);\n      }\n    }\n\n    // reset origin point\n    if (xMove) {\n      this.x0 = event._x;\n    }\n    if (yMove) {\n      this.y0 = event._y;\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n    // remove possible tooltip div\n    this.#removeTooltipDiv();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // long touch triggers the dblclick\n    this.#touchTimerID = setTimeout(this.dblclick, 500);\n    // call mouse equivalent\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // abort timer if move\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // abort timer\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Scroll';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Handle double click.\n   *\n   * @param {object} event The key down event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    viewController.play();\n  };\n\n  /**\n   * Displays a tooltip in a temparary `span`.\n   * Works with css to hide/show the span only on mouse hover.\n   *\n   * @param {object} event The mouse move event.\n   */\n  #showTooltip(event) {\n    // remove previous div\n    this.#removeTooltipDiv();\n\n    // get image value at position\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\n    const position = viewController.getPositionFromPlanePoint(\n      planePos.x, planePos.y);\n    const value = viewController.getRescaledImageValue(position);\n\n    // create\n    if (typeof value !== 'undefined') {\n      const span = document.createElement('span');\n      span.id = 'scroll-tooltip';\n      // place span in layer group to avoid upper layer opacity\n      const layerDiv = document.getElementById(viewLayer.getId());\n      layerDiv.parentElement.appendChild(span);\n      // position tooltip\n      span.style.left = (event._x + 10) + 'px';\n      span.style.top = (event._y + 10) + 'px';\n      let text = precisionRound(value, 3);\n      if (typeof viewController.getPixelUnit() !== 'undefined') {\n        text += ' ' + viewController.getPixelUnit();\n      }\n      span.appendChild(document.createTextNode(text));\n    }\n  }\n\n  /**\n   * Remove the tooltip html div.\n   */\n  #removeTooltipDiv() {\n    const div = document.getElementById('scroll-tooltip');\n    if (div) {\n      div.remove();\n    }\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // remove tooltip html when deactivating\n    if (!_bool) {\n      this.#removeTooltipDiv();\n    }\n  }\n\n  /**\n   * Set the tool live features: disaply tooltip.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.displayTooltip !== 'undefined') {\n      this.#displayTooltip = features.displayTooltip;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Scroll class\n","/**\n * Get the translated text.\n *\n * @param {string} key The key to the text entry.\n * @param {object} _options The translation options such as plural, context...\n * @returns {string|undefined} The translated text.\n */\nexport function i18n(key, _options) {\n  // defaut expects something like 'unit.cm2'\n  const unit = {\n    mm: 'mm',\n    cm2: 'cm²',\n    degree: '°'\n  };\n  const props = key.split('.');\n  if (props.length !== 2) {\n    throw new Error('Unexpected translation key length.');\n  }\n  if (props[0] !== 'unit') {\n    throw new Error('Unexpected translation key prefix.');\n  }\n  return unit[props[1]];\n}\n","import {Point2D} from './point';\nimport {i18n} from '../utils/i18n';\n\n/**\n * Line shape.\n */\nexport class Line {\n\n  /**\n   * Line begin point.\n   *\n   * @private\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Line end point.\n   *\n   * @private\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the line.\n   * @param {Point2D} end A Point2D representing the end of the line.\n   */\n  constructor(begin, end) {\n    this.#begin = begin;\n    this.#end = end;\n  }\n\n  /**\n   * Get the begin point of the line.\n   *\n   * @returns {Point2D} The beginning point of the line.\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the line.\n   *\n   * @returns {Point2D} The ending point of the line.\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Line} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the line delta in the X direction.\n   *\n   * @returns {number} The delta in the X direction.\n   */\n  getDeltaX() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the line delta in the Y direction.\n   *\n   * @returns {number} The delta in the Y direction.\n   */\n  getDeltaY() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the length of the line.\n   *\n   * @returns {number} The length of the line.\n   */\n  getLength() {\n    return Math.sqrt(\n      this.getDeltaX() * this.getDeltaX() +\n      this.getDeltaY() * this.getDeltaY()\n    );\n  }\n\n  /**\n   * Get the length of the line according to a  spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The length of the line with spacing\n   *  or null for null spacings.\n   */\n  getWorldLength(spacingX, spacingY) {\n    let wlen = null;\n    if (spacingX !== null && spacingY !== null) {\n      const dxs = this.getDeltaX() * spacingX;\n      const dys = this.getDeltaY() * spacingY;\n      wlen = Math.sqrt(dxs * dxs + dys * dys);\n    }\n    return wlen;\n  }\n\n  /**\n   * Get the mid point of the line.\n   *\n   * @returns {Point2D} The mid point of the line.\n   */\n  getMidpoint() {\n    return new Point2D(\n      parseInt((this.getBegin().getX() + this.getEnd().getX()) / 2, 10),\n      parseInt((this.getBegin().getY() + this.getEnd().getY()) / 2, 10)\n    );\n  }\n\n  /**\n   * Get the slope of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getSlope() {\n    return this.getDeltaY() / this.getDeltaX();\n  }\n\n  /**\n   * Get the intercept of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getIntercept() {\n    return (\n      this.getEnd().getX() * this.getBegin().getY() -\n      this.getBegin().getX() * this.getEnd().getY()\n    ) / this.getDeltaX();\n  }\n\n  /**\n   * Get the inclination of the line.\n   *\n   * @returns {number} The inclination of the line.\n   */\n  getInclination() {\n    // tan(theta) = slope\n    const angle =\n      Math.atan2(this.getDeltaY(), this.getDeltaX()) * 180 / Math.PI;\n    // shift?\n    return 180 - angle;\n  }\n\n  /**\n   * Quantify a line according to view information.\n   *\n   * @param {object} viewController The associated view controller.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController) {\n    const quant = {};\n    // length\n    const spacing = viewController.get2DSpacing();\n    const length = this.getWorldLength(spacing[0], spacing[1]);\n    if (length !== null) {\n      quant.length = {value: length, unit: i18n('unit.mm')};\n    }\n    // return\n    return quant;\n  }\n\n} // Line class\n\n/**\n * Get the angle between two lines in degree.\n *\n * @param {Line} line0 The first line.\n * @param {Line} line1 The second line.\n * @returns {number} The angle.\n */\nexport function getAngle(line0, line1) {\n  const dx0 = line0.getDeltaX();\n  const dy0 = line0.getDeltaY();\n  const dx1 = line1.getDeltaX();\n  const dy1 = line1.getDeltaY();\n  // dot = ||a||*||b||*cos(theta)\n  const dot = dx0 * dx1 + dy0 * dy1;\n  // cross = ||a||*||b||*sin(theta)\n  const det = dx0 * dy1 - dy0 * dx1;\n  // tan = sin / cos\n  const angle = Math.atan2(det, dot) * 180 / Math.PI;\n  // complementary angle\n  // shift?\n  return 360 - (180 - angle);\n}\n\n/**\n * Get a perpendicular line to an input one.\n *\n * @param {Line} line The line to be perpendicular to.\n * @param {Point2D} point The middle point of the perpendicular line.\n * @param {number} length The length of the perpendicular line.\n * @returns {object} A perpendicular line.\n */\nexport function getPerpendicularLine(line, point, length) {\n  // begin point\n  let beginX = 0;\n  let beginY = 0;\n  // end point\n  let endX = 0;\n  let endY = 0;\n\n  // check slope:\n  // 0 -> horizontal\n  // Infinite -> vertical (a/Infinite = 0)\n  if (line.getSlope() !== 0) {\n    // a0 * a1 = -1\n    const slope = -1 / line.getSlope();\n    // y0 = a1*x0 + b1 -> b1 = y0 - a1*x0\n    const intercept = point.getY() - slope * point.getX();\n\n    // 1. (x - x0)^2 + (y - y0)^2 = d^2\n    // 2. a = (y - y0) / (x - x0) -> y = a*(x - x0) + y0\n    // ->  (x - x0)^2 + m^2 * (x - x0)^2 = d^2\n    // -> x = x0 +- d / sqrt(1+m^2)\n\n    // length is the distance between begin and end,\n    // point is half way between both -> d = length / 2\n    const dx = length / (2 * Math.sqrt(1 + slope * slope));\n\n    // begin point\n    beginX = point.getX() - dx;\n    beginY = slope * beginX + intercept;\n    // end point\n    endX = point.getX() + dx;\n    endY = slope * endX + intercept;\n  } else {\n    // horizontal input line -> perpendicular is vertical!\n    // begin point\n    beginX = point.getX();\n    beginY = point.getY() - length / 2;\n    // end point\n    endX = point.getX();\n    endY = point.getY() + length / 2;\n  }\n  // perpendicalar line\n  return new Line(\n    new Point2D(beginX, beginY),\n    new Point2D(endX, endY));\n}\n","import {Point2D} from '../math/point';\nimport {Line} from '../math/line';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n/**\n * ZoomAndPan class.\n *\n * @example\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {ZoomAndPan: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('ZoomAndPan');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class ZoomAndPan {\n\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle two touch down event.\n   *\n   * @param {object} event The touch down event.\n   */\n  twotouchdown = (event) => {\n    this.#started = true;\n    // store first point\n    this.x0 = event._x;\n    this.y0 = event._y;\n    // first line\n    const point0 = new Point2D(event._x, event._y);\n    const point1 = new Point2D(event._x1, event._y1);\n    this.line0 = new Line(point0, point1);\n    this.midPoint = this.line0.getMidpoint();\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    // calculate translation\n    const tx = event._x - this.x0;\n    const ty = event._y - this.y0;\n    // apply translation\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planeOffset = viewLayer.displayToPlaneScale(tx, ty);\n    const offset3D = viewController.getOffset3DFromPlaneOffset(planeOffset);\n    layerGroup.addTranslation({\n      x: offset3D.getX(),\n      y: offset3D.getY(),\n      z: offset3D.getZ()\n    });\n    layerGroup.draw();\n    // reset origin point\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle two touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  twotouchmove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const point0 = new Point2D(event._x, event._y);\n    const point1 = new Point2D(event._x1, event._y1);\n    const newLine = new Line(point0, point1);\n    const lineRatio = newLine.getLength() / this.line0.getLength();\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    if (lineRatio === 1) {\n      // scroll mode\n      // difference  to last position\n      const diffY = event._y - this.y0;\n      // do not trigger for small moves\n      if (Math.abs(diffY) < 15) {\n        return;\n      }\n      const imageSize = viewController.getImageSize();\n      // update view controller\n      if (imageSize.canScroll(2)) {\n        if (diffY > 0) {\n          viewController.incrementIndex(2);\n        } else {\n          viewController.decrementIndex(2);\n        }\n      }\n    } else {\n      // zoom mode\n      const zoom = (lineRatio - 1) / 10;\n      if (Math.abs(zoom) % 0.1 <= 0.05) {\n        const planePos = viewLayer.displayToMainPlanePos(\n          this.midPoint.getX(), this.midPoint.getY());\n        const center = viewController.getPlanePositionFromPlanePoint(planePos);\n        layerGroup.addScale(zoom, center);\n        layerGroup.draw();\n      }\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touches = event.targetTouches;\n    if (touches.length === 1) {\n      this.mousedown(event);\n    } else if (touches.length === 2) {\n      this.twotouchdown(event);\n    }\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touches = event.targetTouches;\n    if (touches.length === 1) {\n      this.mousemove(event);\n    } else if (touches.length === 2) {\n      this.twotouchmove(event);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    const step = -event.deltaY / 500;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToMainPlanePos(event._x, event._y);\n    const center = viewController.getPlanePositionFromPlanePoint(planePos);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'ZoomAndPan';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // ZoomAndPan class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ScrollWheel} from './scrollWheel';\n\n/**\n * Opacity class.\n *\n * @example\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Opacity: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Opacity');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class Opacity {\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // start flag\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n\n    // difference to last X position\n    const diffX = event._x - this.x0;\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove) {\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const op = viewLayer.getOpacity();\n      viewLayer.setOpacity(op + (diffX / 200));\n      viewLayer.draw();\n\n      // reset origin point\n      this.x0 = event._x;\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // call mouse equivalent\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // call mouse equivalent\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // call mouse equivalent\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Opacity';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Opacity class\n","/**\n * Get the minimum, maximum, mean and standard deviation\n * of an array of values.\n * Note: could use {@link https://github.com/tmcw/simple-statistics}.\n *\n * @param {Array} array The array of values to extract stats from.\n * @param {Array} flags A list of stat values to calculate.\n * @returns {object} A stats object.\n */\nexport function getStats(array, flags) {\n  if (includesFullStatsFlags(flags)) {\n    return getFullStats(array);\n  } else {\n    return getSimpleStats(array);\n  }\n}\n\n/**\n * Does the input flag list contain a full stat element?\n *\n * @param {Array} flags A list of stat values to calculate.\n * @returns {boolean} True if one of the flags is a full start flag.\n */\nfunction includesFullStatsFlags(flags) {\n  return typeof flags !== 'undefined' &&\n    flags !== null &&\n    flags.includes('median', 'p25', 'p75');\n}\n\n/**\n * Get simple stats: minimum, maximum, mean and standard deviation\n * of an array of values.\n *\n * @param {Array} array The array of values to extract stats from.\n * @returns {object} A simple stats object.\n */\nfunction getSimpleStats(array) {\n  let min = array[0];\n  let max = min;\n  let sum = 0;\n  let sumSqr = 0;\n  let val = 0;\n  const length = array.length;\n  for (let i = 0; i < length; ++i) {\n    val = array[i];\n    if (val < min) {\n      min = val;\n    } else if (val > max) {\n      max = val;\n    }\n    sum += val;\n    sumSqr += val * val;\n  }\n\n  const mean = sum / length;\n  // see http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n  const variance = sumSqr / length - mean * mean;\n  const stdDev = Math.sqrt(variance);\n\n  return {\n    min: min,\n    max: max,\n    mean: mean,\n    stdDev: stdDev\n  };\n}\n\n/**\n * Get full stats: minimum, maximum, mean, standard deviation, median, 25%\n * and 75% percentile of an array of values.\n *\n * @param {Array} array The array of values to extract stats from.\n * @returns {object} A full stats object.\n */\nfunction getFullStats(array) {\n  // get simple stats\n  const stats = getSimpleStats(array);\n\n  // sort array... can get slow...\n  array.sort(function (a, b) {\n    return a - b;\n  });\n\n  stats.median = getPercentile(array, 0.5);\n  stats.p25 = getPercentile(array, 0.25);\n  stats.p75 = getPercentile(array, 0.75);\n\n  return stats;\n}\n\n/**\n * Get an arrays' percentile. Uses linear interpolation for percentiles\n * that lie between data points.\n * see https://en.wikipedia.org/wiki/Percentile (second variant interpolation)\n *\n * @param {Array} array The sorted array of values.\n * @param {number} ratio The percentile ratio [0-1].\n * @returns {number} The percentile,\n */\nfunction getPercentile(array, ratio) {\n  // check input\n  if (array.length === 0) {\n    throw new Error('Empty array provided for percentile calculation.');\n  }\n  if (ratio < 0 || ratio > 1) {\n    throw new Error(\n      'Invalid ratio provided for percentile calculation: ' + ratio);\n  }\n  // return min for ratio=0 amd max for ratio=1\n  if (ratio === 0) {\n    return array[0];\n  } else if (ratio === 1) {\n    return array[array.length - 1];\n  }\n  // general case: interpolate between indices if needed\n  const i = (array.length - 1) * ratio;\n  const i0 = Math.floor(i);\n  const v0 = array[i0];\n  const v1 = array[i0 + 1];\n  return v0 + (v1 - v0) * (i - i0);\n}\n\n/**\n * Unique ID generator.\n * See {@link http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript}\n * and this {@link http://stackoverflow.com/a/13403498 answer}.\n *\n * @returns {string} A unique ID.\n */\nexport function guid() {\n  return Math.random().toString(36).substring(2, 15);\n}\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {logger} from '../utils/logger';\nimport {getShapeDisplayName, ChangeGroupCommand} from './drawCommands';\nimport {validateAnchorPosition} from './draw';\n// external\nimport Konva from 'konva';\n\n/**\n * Get the default anchor shape.\n *\n * @param {number} x The X position.\n * @param {number} y The Y position.\n * @param {string} id The shape id.\n * @param {object} style The application style.\n * @returns {object} The default anchor shape.\n */\nexport function getDefaultAnchor(x, y, id, style) {\n  const radius = style.applyZoomScale(3);\n  return new Konva.Ellipse({\n    x: x,\n    y: y,\n    stroke: '#999',\n    fill: 'rgba(100,100,100,0.7',\n    strokeWidth: style.getStrokeWidth(),\n    strokeScaleEnabled: false,\n    radius: {\n      x: Math.abs(radius.x),\n      y: Math.abs(radius.y)\n    },\n    name: 'anchor',\n    id: id.toString(),\n    dragOnTop: false,\n    draggable: true,\n    visible: false\n  });\n}\n\n/**\n * Shape editor.\n */\nexport class ShapeEditor {\n\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Shape factory list\n   *\n   * @type {object}\n   * @private\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   * @private\n   */\n  #currentFactory = null;\n\n  /**\n   * Edited shape.\n   *\n   * @private\n   * @type {object}\n   */\n  #shape = null;\n\n  /**\n   * Edited view controller. Used for quantification update.\n   *\n   * @private\n   * @type {object}\n   */\n  #viewController = null;\n\n  /**\n   * Active flag.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #isActive = false;\n\n  /**\n   * Draw event callback.\n   *\n   * @private\n   * @type {Function}\n   */\n  #drawEventCallback = null;\n\n  /**\n   * Set the tool options.\n   *\n   * @param {Array} list The list of shape classes.\n   */\n  setFactoryList(list) {\n    this.#shapeFactoryList = list;\n  }\n\n  /**\n   * Set the shape to edit.\n   *\n   * @param {object} inshape The shape to edit.\n   */\n  setShape(inshape) {\n    this.#shape = inshape;\n    if (this.#shape) {\n      // remove old anchors\n      this.#removeAnchors();\n      // find a factory for the input shape\n      const group = this.#shape.getParent();\n      const keys = Object.keys(this.#shapeFactoryList);\n      this.#currentFactory = null;\n      for (let i = 0; i < keys.length; ++i) {\n        const factory = new this.#shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(group)) {\n          this.#currentFactory = factory;\n          // stop at first find\n          break;\n        }\n      }\n      if (this.#currentFactory === null) {\n        throw new Error('Could not find a factory to update shape.');\n      }\n      // add new anchors\n      this.#addAnchors();\n    }\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {object} vc The associated view controller.\n   */\n  setViewController(vc) {\n    this.#viewController = vc;\n  }\n\n  /**\n   * Get the edited shape.\n   *\n   * @returns {object} The edited shape.\n   */\n  getShape() {\n    return this.#shape;\n  }\n\n  /**\n   * Get the active flag.\n   *\n   * @returns {boolean} The active flag.\n   */\n  isActive() {\n    return this.#isActive;\n  }\n\n  /**\n   * Set the draw event callback.\n   *\n   * @param {object} callback The callback.\n   */\n  setDrawEventCallback(callback) {\n    this.#drawEventCallback = callback;\n  }\n\n  /**\n   * Enable the editor. Redraws the layer.\n   */\n  enable() {\n    this.#isActive = true;\n    if (this.#shape) {\n      this.#setAnchorsVisible(true);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Disable the editor. Redraws the layer.\n   */\n  disable() {\n    this.#isActive = false;\n    if (this.#shape) {\n      this.#setAnchorsVisible(false);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Reset the anchors.\n   */\n  resetAnchors() {\n    // remove previous controls\n    this.#removeAnchors();\n    // add anchors\n    this.#addAnchors();\n    // set them visible\n    this.#setAnchorsVisible(true);\n  }\n\n  /**\n   * Apply a function on all anchors.\n   *\n   * @param {object} func A f(shape) function.\n   * @private\n   */\n  #applyFuncToAnchors(func) {\n    if (this.#shape && this.#shape.getParent()) {\n      const anchors = this.#shape.getParent().find('.anchor');\n      anchors.forEach(func);\n    }\n  }\n\n  /**\n   * Set anchors visibility.\n   *\n   * @param {boolean} flag The visible flag.\n   * @private\n   */\n  #setAnchorsVisible(flag) {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.visible(flag);\n    });\n  }\n\n  /**\n   * Set anchors active.\n   *\n   * @param {boolean} flag The active (on/off) flag.\n   */\n  setAnchorsActive(flag) {\n    let func = null;\n    if (flag) {\n      func = (anchor) => {\n        this.#setAnchorOn(anchor);\n      };\n    } else {\n      func = (anchor) => {\n        this.#setAnchorOff(anchor);\n      };\n    }\n    this.#applyFuncToAnchors(func);\n  }\n\n  /**\n   * Remove anchors.\n   *\n   * @private\n   */\n  #removeAnchors() {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.remove();\n    });\n  }\n\n  /**\n   * Add the shape anchors.\n   *\n   * @private\n   */\n  #addAnchors() {\n    // exit if no shape or no layer\n    if (!this.#shape || !this.#shape.getLayer()) {\n      return;\n    }\n    // get shape group\n    const group = this.#shape.getParent();\n\n    // activate and add anchors to group\n    const anchors =\n      this.#currentFactory.getAnchors(this.#shape, this.#app.getStyle());\n    for (let i = 0; i < anchors.length; ++i) {\n      // set anchor on\n      this.#setAnchorOn(anchors[i]);\n      // add the anchor to the group\n      group.add(anchors[i]);\n    }\n  }\n\n  /**\n   * Get a simple clone of the input anchor.\n   *\n   * @param {object} anchor The anchor to clone.\n   * @returns {object} A clone of the input anchor.\n   * @private\n   */\n  #getClone(anchor) {\n    // create closure to properties\n    const parent = anchor.getParent();\n    const id = anchor.id();\n    const x = anchor.x();\n    const y = anchor.y();\n    // create clone object\n    const clone = {};\n    clone.getParent = function () {\n      return parent;\n    };\n    clone.id = function () {\n      return id;\n    };\n    clone.x = function () {\n      return x;\n    };\n    clone.y = function () {\n      return y;\n    };\n    return clone;\n  }\n\n  /**\n   * Set the anchor on listeners.\n   *\n   * @param {object} anchor The anchor to set on.\n   * @private\n   */\n  #setAnchorOn(anchor) {\n    let startAnchor = null;\n\n    // command name based on shape type\n    const shapeDisplayName = getShapeDisplayName(this.#shape);\n\n    // drag start listener\n    anchor.on('dragstart.edit', (event) => {\n      const anchor = event.target;\n      startAnchor = this.#getClone(anchor);\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag move listener\n    anchor.on('dragmove.edit', (event) => {\n      const anchor = event.target;\n      const layerDetails = getLayerDetailsFromEvent(event.evt);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      // validate the anchor position\n      validateAnchorPosition(drawLayer.getBaseSize(), anchor);\n      // update shape\n      this.#currentFactory.update(\n        anchor, this.#app.getStyle(), this.#viewController);\n      // redraw\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag end listener\n    anchor.on('dragend.edit', (event) => {\n      const anchor = event.target;\n      const endAnchor = this.#getClone(anchor);\n      // store the change command\n      const chgcmd = new ChangeGroupCommand(\n        shapeDisplayName,\n        this.#currentFactory,\n        startAnchor,\n        endAnchor,\n        anchor.getLayer(),\n        this.#viewController,\n        this.#app.getStyle()\n      );\n      chgcmd.onExecute = this.#drawEventCallback;\n      chgcmd.onUndo = this.#drawEventCallback;\n      chgcmd.execute();\n      this.#app.addToUndoStack(chgcmd);\n      // reset start anchor\n      startAnchor = endAnchor;\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // mouse down listener\n    anchor.on('mousedown touchstart', (event) => {\n      const anchor = event.target;\n      anchor.moveToTop();\n    });\n    // mouse over styling\n    anchor.on('mouseover.edit', (event) => {\n      const anchor = event.target;\n      // style is handled by the group\n      anchor.stroke('#ddd');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n    // mouse out styling\n    anchor.on('mouseout.edit', (event) => {\n      const anchor = event.target;\n      // style is handled by the group\n      anchor.stroke('#999');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n  }\n\n  /**\n   * Set the anchor off listeners.\n   *\n   * @param {object} anchor The anchor to set off.\n   * @private\n   */\n  #setAnchorOff(anchor) {\n    anchor.off('dragstart.edit');\n    anchor.off('dragmove.edit');\n    anchor.off('dragend.edit');\n    anchor.off('mousedown touchstart');\n    anchor.off('mouseover.edit');\n    anchor.off('mouseout.edit');\n  }\n\n} // class Editor\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getEventOffset,\n  prompt,\n  customUI\n} from '../gui/generic';\nimport {Point2D} from '../math/point';\nimport {guid} from '../math/stats';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand,\n  MoveGroupCommand\n} from './drawCommands';\nimport {\n  canNodeChangeColour,\n  isNodeNameShape\n} from '../app/drawController';\nimport {ScrollWheel} from './scrollWheel';\nimport {ShapeEditor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Draw Debug flag.\n */\nexport const DRAW_DEBUG = false;\n\n/**\n * Drawing tool.\n *\n * This tool is responsible for the draw layer group structure. The layout is:\n *\n * drawLayer\n * |_ positionGroup: name=\"position-group\", id=\"#2-0#_#3-1\"\"\n *    |_ shapeGroup: name=\"{shape name}-group\", id=\"#\"\n *       |_ shape: name=\"shape\"\n *       |_ label: name=\"label\"\n *       |_ extra: line tick, protractor arc...\n *\n * Discussion:\n * - posGroup > shapeGroup\n *    pro: slice/frame display: 1 loop\n *    cons: multi-slice shape splitted in positionGroups\n * - shapeGroup > posGroup\n *    pros: more logical\n *    cons: slice/frame display: 2 loops\n */\nexport class Draw {\n\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @private\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Shape editor.\n   *\n   * @private\n   * @type {object}\n   */\n  #shapeEditor;\n\n  /**\n   * Trash draw: a cross.\n   *\n   * @private\n   * @type {object}\n   */\n  #trash;\n\n  /**\n   * Drawing style.\n   *\n   * @private\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n    this.#shapeEditor = new ShapeEditor(app);\n    // associate the event listeners of the editor\n    //  with those of the draw tool\n    this.#shapeEditor.setDrawEventCallback(this.#fireEvent);\n\n    this.#style = app.getStyle();\n\n    // trash cross\n    this.#trash = new Konva.Group();\n    // first line of the cross\n    const trashLine1 = new Konva.Line({\n      points: [-10, -10, 10, 10],\n      stroke: 'red'\n    });\n    // second line of the cross\n    const trashLine2 = new Konva.Line({\n      points: [10, -10, -10, 10],\n      stroke: 'red'\n    });\n    this.#trash.width(20);\n    this.#trash.height(20);\n    this.#trash.add(trashLine1);\n    this.#trash.add(trashLine2);\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Shape factory list\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   * @private\n   */\n  #currentFactory = null;\n\n  /**\n   * Draw command.\n   *\n   * @private\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @private\n   * @type {object}\n   */\n  #tmpShapeGroup = null;\n\n  /**\n   * Shape name.\n   *\n   * @type {string}\n   */\n  #shapeName = 0;\n\n  /**\n   * List of points.\n   *\n   * @private\n   * @type {Array}\n   */\n  #points = [];\n\n  /**\n   * Last selected point.\n   *\n   * @private\n   * @type {object}\n   */\n  #lastPoint = null;\n\n  /**\n   * Active shape, ie shape with mouse over.\n   *\n   * @private\n   * @type {object}\n   */\n  #activeShapeGroup;\n\n  /**\n   * Original mouse cursor.\n   *\n   * @private\n   * @type {string}\n   */\n  #originalCursor;\n\n  /**\n   * Mouse cursor.\n   *\n   * @private\n   * @type {string}\n   */\n  #mouseOverCursor = 'pointer';\n\n  /**\n   * Event listeners.\n   *\n   * @private\n   */\n  #listeners = {};\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // exit if a draw was started (handle at mouse move or up)\n    if (this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    // determine if the click happened in an existing shape\n    const stage = drawLayer.getKonvaStage();\n    const kshape = stage.getIntersection({\n      x: event._x,\n      y: event._y\n    });\n\n    // update scale\n    this.#style.setZoomScale(stage.scale());\n\n    if (kshape) {\n      const group = kshape.getParent();\n      const selectedShape = group.find('.shape')[0];\n      // reset editor if click on other shape\n      // (and avoid anchors mouse down)\n      if (selectedShape && selectedShape !== this.#shapeEditor.getShape()) {\n        this.#shapeEditor.disable();\n        this.#shapeEditor.setShape(selectedShape);\n        const viewController =\n          layerGroup.getActiveViewLayer().getViewController();\n        this.#shapeEditor.setViewController(viewController);\n        this.#shapeEditor.enable();\n      }\n    } else {\n      // disable edition\n      this.#shapeEditor.disable();\n      this.#shapeEditor.setShape(null);\n      this.#shapeEditor.setViewController(null);\n      // start storing points\n      this.#started = true;\n      // set factory\n      this.#currentFactory = new this.#shapeFactoryList[this.#shapeName]();\n      // clear array\n      this.#points = [];\n      // store point\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const pos = viewLayer.displayToPlanePos(event._x, event._y);\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      this.#points.push(this.#lastPoint);\n    }\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\n\n    // draw line to current pos\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      // if it was marked as temporary\n      if (this.#points.length !== 1 &&\n        typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      // mark it as temporary\n      this.#lastPoint.tmp = true;\n      // add it to the list\n      this.#points.push(this.#lastPoint);\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw mouseup but no points...');\n      return;\n    }\n\n    // do we have all the needed points\n    if (this.#points.length === this.#currentFactory.getNPoints()) {\n      // store points\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      this.#onFinalPoints(this.#points, layerGroup);\n      // reset flag\n      this.#started = false;\n    } else {\n      // remove temporary flag\n      if (typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\n        delete this.#points[this.#points.length - 1].tmp;\n      }\n    }\n  };\n\n  /**\n   * Handle double click event: some tools use it to finish interaction.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    // only end by double click undefined NPoints\n    if (typeof this.#currentFactory.getNPoints() !== 'undefined') {\n      return;\n    }\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw dblclick but no points...');\n      return;\n    }\n\n    // store points\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    this.#onFinalPoints(this.#points, layerGroup);\n    // reset flag\n    this.#started = false;\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\n\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      if (this.#points.length !== 1) {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      // add current one to the list\n      this.#points.push(this.#lastPoint);\n      // allow for anchor points\n      if (this.#points.length < this.#currentFactory.getNPoints()) {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(function () {\n          this.#points.push(this.#lastPoint);\n        }, this.#currentFactory.getTimeout());\n      }\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.dblclick(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    // call app handler if we are not in the middle of a draw\n    if (!this.#started) {\n      event.context = 'Draw';\n      this.#app.onKeydown(event);\n    }\n    let konvaLayer;\n\n    // press delete or backspace key\n    if ((event.key === 'Delete' ||\n      event.key === 'Backspace') &&\n      this.#shapeEditor.isActive()) {\n      // get shape\n      const shapeGroup = this.#shapeEditor.getShape().getParent();\n      konvaLayer = shapeGroup.getLayer();\n      const shapeDisplayName = getShapeDisplayName(\n        shapeGroup.getChildren(isNodeNameShape)[0]);\n      // delete command\n      const delcmd = new DeleteGroupCommand(shapeGroup,\n        shapeDisplayName, konvaLayer);\n      delcmd.onExecute = this.#fireEvent;\n      delcmd.onUndo = this.#fireEvent;\n      delcmd.execute();\n      this.#app.addToUndoStack(delcmd);\n    }\n\n    // escape key: exit shape creation\n    if (event.key === 'Escape' && this.#tmpShapeGroup !== null) {\n      konvaLayer = this.#tmpShapeGroup.getLayer();\n      // reset temporary shape group\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n      // reset flag and points\n      this.#started = false;\n      this.#points = [];\n      // redraw\n      konvaLayer.draw();\n    }\n  };\n\n  /**\n   * Update the current draw with new points.\n   *\n   * @param {Array} tmpPoints The array of new points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onNewPoints(tmpPoints, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // remove temporary shape draw\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    // create shape group\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    this.#tmpShapeGroup = this.#currentFactory.create(\n      tmpPoints, this.#style, viewController);\n    // do not listen during creation\n    const shape = this.#tmpShapeGroup.getChildren(isNodeNameShape)[0];\n    shape.listening(false);\n    konvaLayer.listening(false);\n    // draw shape\n    konvaLayer.add(this.#tmpShapeGroup);\n    konvaLayer.draw();\n  }\n\n  /**\n   * Create the final shape from a point list.\n   *\n   * @param {Array} finalPoints The array of points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onFinalPoints(finalPoints, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // reset temporary shape group\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    // create final shape\n    const finalShapeGroup = this.#currentFactory.create(\n      finalPoints, this.#style, viewController);\n    finalShapeGroup.id(guid());\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(finalShapeGroup);\n\n    // re-activate layer\n    konvaLayer.listening(true);\n    // draw shape command\n    this.#command = new DrawGroupCommand(\n      finalShapeGroup, this.#shapeName, konvaLayer);\n    this.#command.onExecute = this.#fireEvent;\n    this.#command.onUndo = this.#fireEvent;\n    // execute it\n    this.#command.execute();\n    // save it in undo stack\n    this.#app.addToUndoStack(this.#command);\n\n    // activate shape listeners\n    this.setShapeOn(finalShapeGroup, layerGroup);\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} flag The flag to activate or not.\n   */\n  activate(flag) {\n    // reset shape display properties\n    this.#shapeEditor.disable();\n    this.#shapeEditor.setShape(null);\n    this.#shapeEditor.setViewController(null);\n    // get the current draw layer\n    const layerGroup = this.#app.getActiveLayerGroup();\n    this.#activateCurrentPositionShapes(flag, layerGroup);\n    // listen to app change to update the draw layer\n    if (flag) {\n      // store cursor\n      this.#originalCursor = document.body.style.cursor;\n      // TODO: merge with drawController.activateDrawLayer?\n      this.#app.addEventListener('positionchange', () => {\n        this.#updateDrawLayer(layerGroup);\n      });\n      // same for colour\n      this.setFeatures({lineColour: this.#style.getLineColour()});\n    } else {\n      // reset shape and cursor\n      this.#resetActiveShapeGroup();\n      // reset local var\n      this.#originalCursor = undefined;\n      // remove listeners\n      this.#app.removeEventListener('positionchange', () => {\n        this.#updateDrawLayer(layerGroup);\n      });\n    }\n  }\n\n  /**\n   * Update the draw layer.\n   *\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #updateDrawLayer(layerGroup) {\n    // activate the shape at current position\n    this.#activateCurrentPositionShapes(true, layerGroup);\n  }\n\n  /**\n   * Activate shapes at current position.\n   *\n   * @param {boolean} visible Set the draw layer visible or not.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #activateCurrentPositionShapes(visible, layerGroup) {\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    // get shape groups at the current position\n    const shapeGroups =\n      drawController.getCurrentPosGroup().getChildren();\n\n    // set shape display properties\n    if (visible) {\n      // activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.setShapeOn(group, layerGroup);\n      });\n    } else {\n      // de-activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.#setShapeOff(group);\n      });\n    }\n    // draw\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    if (shapeGroups.length !== 0) {\n      konvaLayer.listening(true);\n    }\n    konvaLayer.draw();\n  }\n\n  /**\n   * Set shape group off properties.\n   *\n   * @param {object} shapeGroup The shape group to set off.\n   */\n  #setShapeOff(shapeGroup) {\n    // mouse styling\n    shapeGroup.off('mouseover');\n    shapeGroup.off('mouseout');\n    // drag\n    shapeGroup.draggable(false);\n    shapeGroup.off('dragstart.draw');\n    shapeGroup.off('dragmove.draw');\n    shapeGroup.off('dragend.draw');\n    shapeGroup.off('dblclick');\n  }\n\n  /**\n   * Get the real position from an event.\n   * TODO: use layer method?\n   *\n   * @param {object} index The input index as {x,y}.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {object} The real position in the image as {x,y}.\n   * @private\n   */\n  #getRealPosition(index, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const stage = drawLayer.getKonvaStage();\n    return {\n      x: stage.offset().x + index.x / stage.scale().x,\n      y: stage.offset().y + index.y / stage.scale().y\n    };\n  }\n\n  /**\n   * Reset the active shape group and mouse cursor to their original state.\n   */\n  #resetActiveShapeGroup() {\n    if (typeof this.#originalCursor !== 'undefined') {\n      document.body.style.cursor = this.#originalCursor;\n    }\n    if (typeof this.#activeShapeGroup !== 'undefined') {\n      this.#activeShapeGroup.opacity(1);\n      const colour = this.#style.getLineColour();\n      this.#activeShapeGroup.getChildren(canNodeChangeColour).forEach(\n        function (ashape) {\n          ashape.stroke(colour);\n        }\n      );\n    }\n  }\n\n  /**\n   * Set shape group on properties.\n   *\n   * @param {object} shapeGroup The shape group to set on.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  setShapeOn(shapeGroup, layerGroup) {\n    // adapt shape and cursor when mouse over\n    const mouseOnShape = () => {\n      document.body.style.cursor = this.#mouseOverCursor;\n      shapeGroup.opacity(0.75);\n    };\n    // mouse over event hanlding\n    shapeGroup.on('mouseover', () => {\n      // save local vars\n      this.#activeShapeGroup = shapeGroup;\n      // adapt shape\n      mouseOnShape();\n    });\n    // mouse out event hanlding\n    shapeGroup.on('mouseout', () => {\n      // reset shape\n      this.#resetActiveShapeGroup();\n      // reset local vars\n      this.#activeShapeGroup = undefined;\n    });\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // make it draggable\n    shapeGroup.draggable(true);\n    // cache drag start position\n    let dragStartPos = {x: shapeGroup.x(), y: shapeGroup.y()};\n\n    // command name based on shape type\n    const shapeDisplayName = getShapeDisplayName(\n      shapeGroup.getChildren(isNodeNameShape)[0]);\n\n    let colour = null;\n\n    // drag start event handling\n    shapeGroup.on('dragstart.draw', (/*event*/) => {\n      // store colour\n      colour = shapeGroup.getChildren(isNodeNameShape)[0].stroke();\n      // display trash\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const stage = drawLayer.getKonvaStage();\n      const scale = stage.scale();\n      const invscale = {x: 1 / scale.x, y: 1 / scale.y};\n      this.#trash.x(stage.offset().x + (stage.width() / (2 * scale.x)));\n      this.#trash.y(stage.offset().y + (stage.height() / (15 * scale.y)));\n      this.#trash.scale(invscale);\n      konvaLayer.add(this.#trash);\n      // deactivate anchors to avoid events on null shape\n      this.#shapeEditor.setAnchorsActive(false);\n      // draw\n      konvaLayer.draw();\n    });\n    // drag move event handling\n    shapeGroup.on('dragmove.draw', (event) => {\n      const group = event.target;\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      // validate the group position\n      validateGroupPosition(drawLayer.getBaseSize(), group);\n      // get appropriate factory\n      let factory;\n      const keys = Object.keys(this.#shapeFactoryList);\n      for (let i = 0; i < keys.length; ++i) {\n        factory = new this.#shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(shapeGroup)) {\n          // stop at first find\n          break;\n        }\n      }\n      if (typeof factory === 'undefined') {\n        throw new Error('Cannot find factory to update quantification.');\n      }\n      // update quantification if possible\n      if (typeof factory.updateQuantification !== 'undefined') {\n        const vc = layerGroup.getActiveViewLayer().getViewController();\n        factory.updateQuantification(group, vc);\n      }\n      // highlight trash when on it\n      const offset = getEventOffset(event.evt)[0];\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      const trashHalfWidth = this.#trash.width() * this.#trash.scaleX() / 2;\n      const trashHalfHeight = this.#trash.height() * this.#trash.scaleY() / 2;\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\n        this.#trash.getChildren().forEach(function (tshape) {\n          tshape.stroke('orange');\n        });\n        // change the group shapes colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            ashape.stroke('red');\n          });\n      } else {\n        this.#trash.getChildren().forEach(function (tshape) {\n          tshape.stroke('red');\n        });\n        // reset the group shapes colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            if (typeof ashape.stroke !== 'undefined') {\n              ashape.stroke(colour);\n            }\n          });\n      }\n      // draw\n      konvaLayer.draw();\n    });\n    // drag end event handling\n    shapeGroup.on('dragend.draw', (event) => {\n      const group = event.target;\n      // remove trash\n      this.#trash.remove();\n      // activate(false) will also trigger a dragend.draw\n      if (typeof event === 'undefined' ||\n        typeof event.evt === 'undefined') {\n        return;\n      }\n      const pos = {x: group.x(), y: group.y()};\n      // delete case\n      const offset = getEventOffset(event.evt)[0];\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      const trashHalfWidth = this.#trash.width() * this.#trash.scaleX() / 2;\n      const trashHalfHeight = this.#trash.height() * this.#trash.scaleY() / 2;\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\n        // compensate for the drag translation\n        group.x(dragStartPos.x);\n        group.y(dragStartPos.y);\n        // disable editor\n        this.#shapeEditor.disable();\n        this.#shapeEditor.setShape(null);\n        this.#shapeEditor.setViewController(null);\n        // reset colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            ashape.stroke(colour);\n          });\n        // reset cursor\n        document.body.style.cursor = this.#originalCursor;\n        // delete command\n        const delcmd = new DeleteGroupCommand(group,\n          shapeDisplayName, konvaLayer);\n        delcmd.onExecute = this.#fireEvent;\n        delcmd.onUndo = this.#fireEvent;\n        delcmd.execute();\n        this.#app.addToUndoStack(delcmd);\n      } else {\n        // save drag move\n        const translation = {\n          x: pos.x - dragStartPos.x,\n          y: pos.y - dragStartPos.y\n        };\n        if (translation.x !== 0 || translation.y !== 0) {\n          const mvcmd = new MoveGroupCommand(group,\n            shapeDisplayName, translation, konvaLayer);\n          mvcmd.onExecute = this.#fireEvent;\n          mvcmd.onUndo = this.#fireEvent;\n          this.#app.addToUndoStack(mvcmd);\n\n          // the move is handled by Konva, trigger an event manually\n          this.#fireEvent({\n            type: 'drawmove',\n            id: group.id()\n          });\n        }\n        // reset anchors\n        this.#shapeEditor.setAnchorsActive(true);\n        this.#shapeEditor.resetAnchors();\n      }\n      // draw\n      konvaLayer.draw();\n      // reset start position\n      dragStartPos = {x: group.x(), y: group.y()};\n    });\n    // double click handling: update label\n    shapeGroup.on('dblclick', (event) => {\n      const group = event.target;\n      // get the label object for this shape\n      const label = group.findOne('Label');\n      // should just be one\n      if (typeof label === 'undefined') {\n        throw new Error('Could not find the shape label.');\n      }\n      const ktext = label.getText();\n      // id for event\n      const groupId = group.id();\n\n      const onSaveCallback = function (meta) {\n        // store meta\n        ktext.meta = meta;\n        // update text expression\n        ktext.setText(replaceFlags(\n          ktext.meta.textExpr, ktext.meta.quantification));\n        label.setVisible(ktext.meta.textExpr.length !== 0);\n\n        // trigger event\n        this.#fireEvent({\n          type: 'drawchange',\n          id: groupId\n        });\n        // draw\n        konvaLayer.draw();\n      };\n\n      // call client dialog if defined\n      if (typeof customUI.openRoiDialog !== 'undefined') {\n        /**\n         * Open a dialogue to edit roi data. Defaults to undefined.\n         *\n         * @param {object} data The roi data.\n         * @param {Function} callback The callback to launch on dialogue exit.\n         */\n        customUI.openRoiDialog(ktext.meta, onSaveCallback);\n      } else {\n        // simple prompt for the text expression\n        const textExpr = prompt('Label', ktext.meta.textExpr);\n        if (textExpr !== null) {\n          ktext.meta.textExpr = textExpr;\n          onSaveCallback(ktext.meta);\n        }\n      }\n    });\n  }\n\n  /**\n   * Set the tool configuration options.\n   *\n   * @param {object} options The list of shape names amd classes.\n   */\n  setOptions(options) {\n    // save the options as the shape factory list\n    this.#shapeFactoryList = options;\n    // pass them to the editor\n    this.#shapeEditor.setFactoryList(options);\n  }\n\n  /**\n   * Get the type of tool options: here 'factory' since the shape\n   * list contains factories to create each possible shape.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'factory';\n  }\n\n  /**\n   * Set the tool live features: shape colour and shape name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n    if (typeof features.shapeName !== 'undefined') {\n      // check if we have it\n      if (!this.hasShape(features.shapeName)) {\n        throw new Error('Unknown shape: \\'' + features.shapeName + '\\'');\n      }\n      this.#shapeName = features.shapeName;\n    }\n    if (typeof features.mouseOverCursor !== 'undefined') {\n      this.#mouseOverCursor = features.mouseOverCursor;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return [\n      'drawcreate', 'drawchange', 'drawmove', 'drawdelete', 'drawlabelchange'\n    ];\n  }\n\n  /**\n   * Add an event listener on the app.\n   *\n   * @param {string} type The event type.\n   * @param {object} listener The method associated with the provided\n   *   event type.\n   */\n  addEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    this.#listeners[type].push(listener);\n  }\n\n  /**\n   * Remove an event listener from the app.\n   *\n   * @param {string} type The event type.\n   * @param {object} listener The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === listener) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[event.type].length; ++i) {\n      this.#listeners[event.type][i](event);\n    }\n  };\n\n  /**\n   * Check if the shape is in the shape list.\n   *\n   * @param {string} name The name of the shape.\n   * @returns {boolean} True if there is a factory for the shape.\n   */\n  hasShape(name) {\n    return typeof this.#shapeFactoryList[name] !== 'undefined';\n  }\n\n} // Draw class\n\n/**\n * Get the minimum position in a groups' anchors.\n *\n * @param {object} group The group that contains anchors.\n * @returns {object|undefined} The minimum position as {x,y}.\n */\nfunction getAnchorMin(group) {\n  const anchors = group.find('.anchor');\n  if (anchors.length === 0) {\n    return undefined;\n  }\n  let minX = anchors[0].x();\n  let minY = anchors[0].y();\n  for (let i = 0; i < anchors.length; ++i) {\n    minX = Math.min(minX, anchors[i].x());\n    minY = Math.min(minY, anchors[i].y());\n  }\n\n  return {x: minX, y: minY};\n}\n\n/**\n * Bound a node position.\n *\n * @param {object} node The node to bound the position.\n * @param {object} min The minimum position as {x,y}.\n * @param {object} max The maximum position as {x,y}.\n * @returns {boolean} True if the position was corrected.\n */\nfunction boundNodePosition(node, min, max) {\n  let changed = false;\n  if (node.x() < min.x) {\n    node.x(min.x);\n    changed = true;\n  } else if (node.x() > max.x) {\n    node.x(max.x);\n    changed = true;\n  }\n  if (node.y() < min.y) {\n    node.y(min.y);\n    changed = true;\n  } else if (node.y() > max.y) {\n    node.y(max.y);\n    changed = true;\n  }\n  return changed;\n}\n\n/**\n * Validate a group position.\n *\n * @param {object} stageSize The stage size {x,y}.\n * @param {object} group The group to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nfunction validateGroupPosition(stageSize, group) {\n  // if anchors get mixed, width/height can be negative\n  const shape = group.getChildren(isNodeNameShape)[0];\n  const anchorMin = getAnchorMin(group);\n  // handle no anchor: when dragging the label, the editor does\n  //   not activate\n  if (typeof anchorMin === 'undefined') {\n    return null;\n  }\n\n  const min = {\n    x: -anchorMin.x,\n    y: -anchorMin.y\n  };\n  const max = {\n    x: stageSize.x -\n      (anchorMin.x + Math.abs(shape.width())),\n    y: stageSize.y -\n      (anchorMin.y + Math.abs(shape.height()))\n  };\n\n  return boundNodePosition(group, min, max);\n}\n\n/**\n * Validate an anchor position.\n *\n * @param {object} stageSize The stage size {x,y}.\n * @param {object} anchor The anchor to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nexport function validateAnchorPosition(stageSize, anchor) {\n  const group = anchor.getParent();\n\n  const min = {\n    x: -group.x(),\n    y: -group.y()\n  };\n  const max = {\n    x: stageSize.x - group.x(),\n    y: stageSize.y - group.y()\n  };\n\n  return boundNodePosition(anchor, min, max);\n}\n","/**\n * Region Of Interest shape.\n * Note: should be a closed path.\n */\nexport class ROI {\n\n  /**\n   * List of points.\n   *\n   * @private\n   * @type {Array}\n   */\n  #points = [];\n\n  /**\n   * Get a point of the list at a given index.\n   *\n   * @param {number} index The index of the point to get\n   *   (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.#points[index];\n  }\n\n  /**\n   * Get the length of the point list.\n   *\n   * @returns {number} The length of the point list.\n   */\n  getLength() {\n    return this.#points.length;\n  }\n\n  /**\n   * Add a point to the ROI.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.#points.push(point);\n  }\n\n  /**\n   * Add points to the ROI.\n   *\n   * @param {Array} rhs The array of POints2D to add.\n   */\n  addPoints(rhs) {\n    this.#points = this.#points.concat(rhs);\n  }\n\n} // ROI class\n","import {ROI} from '../math/roi';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultRoiLabelText = '';\n\n/**\n * ROI factory.\n */\nexport class RoiFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'roi-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 100;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, _viewController) {\n    // physical shape\n    const roi = new ROI();\n    // add input points to the ROI\n    roi.addPoints(points);\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < roi.getLength(); ++i) {\n      arr.push(roi.getPoint(i).getX());\n      arr.push(roi.getPoint(i).getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      closed: true\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // todo: allow overrride?\n    // if (typeof roiLabelText !== 'undefined') {\n    //   textExpr = roiLabelText;\n    // } else {\n    textExpr = defaultRoiLabelText;\n    // }\n    ktext.setText(textExpr);\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: roi.getPoint(0).getX(),\n      y: roi.getPoint(0).getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a roi shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i;\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a roi shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kroi = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kroi.points();\n    points[anchor.id()] = anchor.x() - kroi.x();\n    points[anchor.id() + 1] = anchor.y() - kroi.y();\n    kroi.points(points);\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kroi.x(),\n      y: points[1] + kroi.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class RoiFactory\n","import {DrawGroupCommand} from '../tools/drawCommands';\nimport {RoiFactory} from '../tools/roi';\nimport {guid} from '../math/stats';\nimport {Point2D} from '../math/point';\nimport {Style} from '../gui/style';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n/**\n * The magic wand namespace.\n *\n * @external MagicWand\n * @see https://github.com/Tamersoul/magic-wand-js\n */\nimport MagicWand from 'magic-wand-tool';\n\n/**\n * Floodfill painting tool.\n */\nexport class Floodfill {\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @private\n   * @type {number}\n   */\n  #blurRadius = 5;\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @private\n   * @type {number}\n   */\n  #simplifyTolerant = 0;\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @private\n   * @type {number}\n   */\n  #simplifyCount = 2000;\n\n  /**\n   * Canvas info\n   *\n   * @private\n   * @type {object}\n   */\n  #imageInfo = null;\n\n  /**\n   * Object created by MagicWand lib containing border points\n   *\n   * @private\n   * @type {object}\n   */\n  #mask = null;\n\n  /**\n   * threshold default tolerance of the tool border\n   *\n   * @private\n   * @type {number}\n   */\n  #initialthreshold = 10;\n\n  /**\n   * threshold tolerance of the tool border\n   *\n   * @private\n   * @type {number}\n   */\n  #currentthreshold = null;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n  /**\n   * Draw command.\n   *\n   * @private\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @private\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Coordinates of the fist mousedown event.\n   *\n   * @private\n   * @type {object}\n   */\n  #initialpoint;\n\n  /**\n   * Floodfill border.\n   *\n   * @private\n   * @type {object}\n   */\n  #border = null;\n\n  /**\n   * List of parent points.\n   *\n   * @private\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Assistant variable to paint border on all slices.\n   *\n   * @private\n   * @type {boolean}\n   */\n  #extender = false;\n\n  /**\n   * Timeout for painting on mousemove.\n   *\n   * @private\n   */\n  #painterTimeout;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Set extend option for painting border on all slices.\n   *\n   * @param {boolean} bool The option to set\n   */\n  setExtend(bool) {\n    this.#extender = bool;\n  }\n\n  /**\n   * Get extend option for painting border on all slices.\n   *\n   * @returns {boolean} The actual value of of the variable to use Floodfill\n   *   on museup.\n   */\n  getExtend() {\n    return this.#extender;\n  }\n\n  /**\n   * Get (x, y) coordinates referenced to the canvas\n   *\n   * @param {object} event The original event.\n   * @returns {object} The coordinates as a {x,y}.\n   * @private\n   */\n  #getCoord = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n    return {\n      x: index.get(0),\n      y: index.get(1)\n    };\n  };\n\n  /**\n   * Calculate border.\n   *\n   * @private\n   * @param {object} points The input points.\n   * @param {number} threshold The threshold of the floodfill.\n   * @param {boolean} simple Return first points or a list.\n   * @returns {Array} The parent points.\n   */\n  #calcBorder(points, threshold, simple) {\n\n    this.#parentPoints = [];\n    const image = {\n      data: this.#imageInfo.data,\n      width: this.#imageInfo.width,\n      height: this.#imageInfo.height,\n      bytes: 4\n    };\n\n    this.#mask = MagicWand.floodFill(image, points.x, points.y, threshold);\n    this.#mask = MagicWand.gaussBlurOnlyBorder(this.#mask, this.#blurRadius);\n\n    let cs = MagicWand.traceContours(this.#mask);\n    cs = MagicWand.simplifyContours(\n      cs, this.#simplifyTolerant, this.#simplifyCount);\n\n    if (cs.length > 0 && cs[0].points[0].x) {\n      if (simple) {\n        return cs[0].points;\n      }\n      for (let j = 0, icsl = cs[0].points.length; j < icsl; j++) {\n        this.#parentPoints.push(new Point2D(\n          cs[0].points[j].x,\n          cs[0].points[j].y\n        ));\n      }\n      return this.#parentPoints;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Paint Floodfill.\n   *\n   * @private\n   * @param {object} point The start point.\n   * @param {number} threshold The border threshold.\n   * @param {object} layerGroup The origin layer group.\n   * @returns {boolean} False if no border.\n   */\n  #paintBorder(point, threshold, layerGroup) {\n    // Calculate the border\n    this.#border = this.#calcBorder(point, threshold);\n    // Paint the border\n    if (this.#border) {\n      const factory = new RoiFactory();\n      this.#shapeGroup = factory.create(this.#border, this.#style);\n      this.#shapeGroup.id(guid());\n\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const drawController = drawLayer.getDrawController();\n\n      // get the position group\n      const posGroup = drawController.getCurrentPosGroup();\n      // add shape group to position group\n      posGroup.add(this.#shapeGroup);\n\n      // draw shape command\n      this.#command = new DrawGroupCommand(this.#shapeGroup, 'floodfill',\n        drawLayer.getKonvaLayer());\n      this.#command.onExecute = this.#fireEvent;\n      this.#command.onUndo = this.#fireEvent;\n      // // draw\n      this.#command.execute();\n      // save it in undo stack\n      this.#app.addToUndoStack(this.#command);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Create Floodfill in all the prev and next slices while border is found\n   *\n   * @param {number} ini The first slice to extend to.\n   * @param {number} end The last slice to extend to.\n   * @param {object} layerGroup The origin layer group.\n   */\n  extend(ini, end, layerGroup) {\n    //avoid errors\n    if (!this.#initialpoint) {\n      throw '\\'initialpoint\\' not found. User must click before use extend!';\n    }\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    const pos = viewController.getCurrentIndex();\n    const imageSize = viewController.getImageSize();\n    const threshold = this.#currentthreshold || this.#initialthreshold;\n\n    // Iterate over the next images and paint border on each slice.\n    for (let i = pos.get(2),\n      len = end\n        ? end : imageSize.get(2);\n      i < len; i++) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.incrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n\n    // Iterate over the prev images and paint border on each slice.\n    for (let j = pos.get(2), jl = ini ? ini : 0; j > jl; j--) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.decrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n  }\n\n  /**\n   * Modify tolerance threshold and redraw ROI.\n   *\n   * @param {number} modifyThreshold The new threshold.\n   * @param {shape} shape The shape to update.\n   */\n  modifyThreshold(modifyThreshold, shape) {\n\n    if (!shape && this.#shapeGroup) {\n      shape = this.#shapeGroup.getChildren(function (node) {\n        return node.name() === 'shape';\n      })[0];\n    } else {\n      throw 'No shape found';\n    }\n\n    clearTimeout(this.#painterTimeout);\n    this.#painterTimeout = setTimeout(() => {\n      this.#border = this.#calcBorder(\n        this.#initialpoint, modifyThreshold, true);\n      if (!this.#border) {\n        return false;\n      }\n      const arr = [];\n      for (let i = 0, bl = this.#border.length; i < bl; ++i) {\n        arr.push(this.#border[i].x);\n        arr.push(this.#border[i].y);\n      }\n      shape.setPoints(arr);\n      const shapeLayer = shape.getLayer();\n      shapeLayer.draw();\n      this.onThresholdChange(modifyThreshold);\n    }, 100);\n  }\n\n  /**\n   * Event fired when threshold change\n   *\n   * @param {number} _value Current threshold\n   */\n  onThresholdChange(_value) {\n    // Defaults do nothing\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    this.#imageInfo = viewLayer.getImageData();\n    if (!this.#imageInfo) {\n      logger.error('No image found');\n      return;\n    }\n\n    // update zoom scale\n    this.#style.setZoomScale(\n      drawLayer.getKonvaLayer().getAbsoluteScale());\n\n    this.#started = true;\n    this.#initialpoint = this.#getCoord(event);\n    this.#paintBorder(this.#initialpoint, this.#initialthreshold, layerGroup);\n    this.onThresholdChange(this.#initialthreshold);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const movedpoint = this.#getCoord(event);\n    this.#currentthreshold = Math.round(Math.sqrt(\n      Math.pow((this.#initialpoint.x - movedpoint.x), 2) +\n      Math.pow((this.#initialpoint.y - movedpoint.y), 2)) / 2);\n    this.#currentthreshold = this.#currentthreshold < this.#initialthreshold\n      ? this.#initialthreshold\n      : this.#currentthreshold - this.#initialthreshold;\n    this.modifyThreshold(this.#currentthreshold);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    this.#started = false;\n    if (this.#extender) {\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      this.extend(layerGroup);\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // treat as mouse down\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // treat as mouse move\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Floodfill';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    if (bool) {\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Floodfill class\n","/**\n * Path shape.\n */\nexport class Path {\n\n  /**\n   * @param {Array} inputPointArray The list of Point2D that make\n   *   the path (optional).\n   * @param {Array} inputControlPointIndexArray The list of control\n   *  point of path, as indexes (optional).\n   * Note: first and last point do not need to be equal.\n   */\n  constructor(inputPointArray, inputControlPointIndexArray) {\n    /**\n     * List of points.\n     *\n     * @type {Array}\n     */\n    this.pointArray = inputPointArray ? inputPointArray.slice() : [];\n    /**\n     * List of control points.\n     *\n     * @type {Array}\n     */\n    this.controlPointIndexArray = inputControlPointIndexArray\n      ? inputControlPointIndexArray.slice() : [];\n  }\n\n  /**\n   * Get a point of the list.\n   *\n   * @param {number} index The index of the point\n   *   to get (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.pointArray[index];\n  }\n\n  /**\n   * Is the given point a control point.\n   *\n   * @param {Point2D} point The Point2D to check.\n   * @returns {boolean} True if a control point.\n   */\n  isControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      return this.controlPointIndexArray.indexOf(index) !== -1;\n    } else {\n      throw new Error('Error: isControlPoint called with not in list point.');\n    }\n  }\n\n  /**\n   * Get the length of the path.\n   *\n   * @returns {number} The length of the path.\n   */\n  getLength() {\n    return this.pointArray.length;\n  }\n\n  /**\n   * Add a point to the path.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.pointArray.push(point);\n  }\n\n  /**\n   * Add a control point to the path.\n   *\n   * @param {Point2D} point The Point2D to make a control point.\n   */\n  addControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      this.controlPointIndexArray.push(index);\n    } else {\n      throw new Error(\n        'Cannot mark a non registered point as control point.');\n    }\n  }\n\n  /**\n   * Add points to the path.\n   *\n   * @param {Array} newPointArray The list of Point2D to add.\n   */\n  addPoints(newPointArray) {\n    this.pointArray = this.pointArray.concat(newPointArray);\n  }\n\n  /**\n   * Append a Path to this one.\n   *\n   * @param {Path} other The Path to append.\n   */\n  appenPath(other) {\n    const oldSize = this.pointArray.length;\n    this.pointArray = this.pointArray.concat(other.pointArray);\n    const indexArray = [];\n    for (let i = 0; i < other.controlPointIndexArray.length; ++i) {\n      indexArray[i] = other.controlPointIndexArray[i] + oldSize;\n    }\n    this.controlPointIndexArray =\n      this.controlPointIndexArray.concat(indexArray);\n  }\n\n} // Path class\n","/**\n * Circular Bucket Queue.\n *\n * Returns input'd points in sorted order. All operations run in roughly O(1)\n * time (for input with small cost values), but it has a strict requirement:\n *\n * If the most recent point had a cost of c, any points added should have a cost\n * c' in the range c <= c' <= c + (capacity - 1).\n */\nexport class BucketQueue {\n\n  /**\n   * @param {number} bits Number of bits.\n   * @param {Function} cost_functor The cost functor.\n   */\n  constructor(bits, cost_functor) {\n    this.bucketCount = 1 << bits; // # of buckets = 2^bits\n    this.mask = this.bucketCount - 1; // 2^bits - 1 = index mask\n    this.size = 0;\n\n    this.loc = 0; // Current index in bucket list\n    // Cost defaults to item value\n    this.cost = (typeof (cost_functor) !== 'undefined')\n      ? cost_functor : function (item) {\n        return item;\n      };\n    this.buckets = this.buildArray(this.bucketCount);\n  }\n\n  push(item) {\n    // Prepend item to the list in the appropriate bucket\n    const bucket = this.getBucket(item);\n    item.next = this.buckets[bucket];\n    this.buckets[bucket] = item;\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size === 0) {\n      throw new Error('Cannot pop, bucketQueue is empty.');\n    }\n\n    // Find first empty bucket\n    while (this.buckets[this.loc] === null) {\n      this.loc = (this.loc + 1) % this.bucketCount;\n    }\n\n    // All items in bucket have same cost, return the first one\n    const ret = this.buckets[this.loc];\n    this.buckets[this.loc] = ret.next;\n    ret.next = null;\n\n    this.size--;\n    return ret;\n  }\n\n  // TODO: needs at least two items...\n  remove(item) {\n    // Tries to remove item from queue. Returns true on success, false otherwise\n    if (!item) {\n      return false;\n    }\n\n    // To find node, go to bucket and search through unsorted list.\n    const bucket = this.getBucket(item);\n    let node = this.buckets[bucket];\n\n    while (node !== null &&\n      !(node.next !== null &&\n      item.x === node.next.x &&\n      item.y === node.next.y)) {\n      node = node.next;\n    }\n\n    if (node === null) {\n      // Item not in list, ergo item not in queue\n      return false;\n    } else {\n      // Found item, do standard list node deletion\n      node.next = node.next.next;\n\n      this.size--;\n      return true;\n    }\n  }\n\n  isEmpty() {\n    return this.size === 0;\n  }\n\n  getBucket(item) {\n    // Bucket index is the masked cost\n    return this.cost(item) & this.mask;\n  }\n\n  buildArray(newSize) {\n    // Create array and initialze pointers to null\n    const buckets = new Array(newSize);\n\n    for (let i = 0; i < buckets.length; i++) {\n      buckets[i] = null;\n    }\n\n    return buckets;\n  }\n\n} // class BucketQueue\n","import {BucketQueue} from './bucketQueue';\n\n// Pre-created to reduce allocation in inner loops\nconst __twothirdpi = (2 / (3 * Math.PI));\n\n/**\n * @param {Array} data The input data.\n * @param {number} width The width of the output.\n * @param {number} height The height of the output.\n * @returns {Array} A greyscale object\n */\nfunction computeGreyscale(data, width, height) {\n  // Returns 2D augmented array containing greyscale data\n  // Greyscale values found by averaging colour channels\n  // Input should be in a flat RGBA array, with values between 0 and 255\n  const greyscale = [];\n\n  // Compute actual values\n  for (let y = 0; y < height; y++) {\n    greyscale[y] = [];\n\n    for (let x = 0; x < width; x++) {\n      const p = (y * width + x) * 4;\n      greyscale[y][x] = (data[p] + data[p + 1] + data[p + 2]) / (3 * 255);\n    }\n  }\n\n  // Augment with convenience functions\n  greyscale.dx = function (x, y) {\n    if (x + 1 === this[y].length) {\n      // If we're at the end, back up one\n      x--;\n    }\n    return this[y][x + 1] - this[y][x];\n  };\n\n  greyscale.dy = function (x, y) {\n    if (y + 1 === this.length) {\n      // If we're at the end, back up one\n      y--;\n    }\n    return this[y][x] - this[y + 1][x];\n  };\n\n  greyscale.gradMagnitude = function (x, y) {\n    const dx = this.dx(x, y);\n    const dy = this.dy(x, y);\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  greyscale.laplace = function (x, y) {\n    // Laplacian of Gaussian\n    let lap = -16 * this[y][x];\n    lap += this[y - 2][x];\n    lap += this[y - 1][x - 1] + 2 * this[y - 1][x] + this[y - 1][x + 1];\n    lap += this[y][x - 2] +\n      2 * this[y][x - 1] + 2 * this[y][x + 1] + this[y][x + 2];\n    lap += this[y + 1][x - 1] + 2 * this[y + 1][x] + this[y + 1][x + 1];\n    lap += this[y + 2][x];\n\n    return lap;\n  };\n\n  return greyscale;\n}\n\n/**\n * @param {object} greyscale The input greyscale-\n * @returns {object} A gradient object\n */\nfunction computeGradient(greyscale) {\n  // Returns a 2D array of gradient magnitude values for greyscale. The values\n  // are scaled between 0 and 1, and then flipped, so that it works as a cost\n  // function.\n  const gradient = [];\n\n  let max = 0; // Maximum gradient found, for scaling purposes\n\n  let x = 0;\n  let y = 0;\n\n  for (y = 0; y < greyscale.length - 1; y++) {\n    gradient[y] = [];\n\n    for (x = 0; x < greyscale[y].length - 1; x++) {\n      gradient[y][x] = greyscale.gradMagnitude(x, y);\n      max = Math.max(gradient[y][x], max);\n    }\n\n    gradient[y][greyscale[y].length - 1] = gradient[y][greyscale.length - 2];\n  }\n\n  gradient[greyscale.length - 1] = [];\n  for (let i = 0; i < gradient[0].length; i++) {\n    gradient[greyscale.length - 1][i] = gradient[greyscale.length - 2][i];\n  }\n\n  // Flip and scale.\n  for (y = 0; y < gradient.length; y++) {\n    for (x = 0; x < gradient[y].length; x++) {\n      gradient[y][x] = 1 - (gradient[y][x] / max);\n    }\n  }\n\n  return gradient;\n}\n\n/**\n * @param {object} greyscale The input greyscale.\n * @returns {object} A laplace object.\n */\nfunction computeLaplace(greyscale) {\n  // Returns a 2D array of Laplacian of Gaussian values\n  const laplace = [];\n\n  // Make the edges low cost here.\n\n  laplace[0] = [];\n  laplace[1] = [];\n  for (let i = 1; i < greyscale.length; i++) {\n    // Pad top, since we can't compute Laplacian\n    laplace[0][i] = 1;\n    laplace[1][i] = 1;\n  }\n\n  for (let y = 2; y < greyscale.length - 2; y++) {\n    laplace[y] = [];\n    // Pad left, ditto\n    laplace[y][0] = 1;\n    laplace[y][1] = 1;\n\n    for (let x = 2; x < greyscale[y].length - 2; x++) {\n      // Threshold needed to get rid of clutter.\n      laplace[y][x] = (greyscale.laplace(x, y) > 0.33) ? 0 : 1;\n    }\n\n    // Pad right, ditto\n    laplace[y][greyscale[y].length - 2] = 1;\n    laplace[y][greyscale[y].length - 1] = 1;\n  }\n\n  laplace[greyscale.length - 2] = [];\n  laplace[greyscale.length - 1] = [];\n  for (let j = 1; j < greyscale.length; j++) {\n    // Pad bottom, ditto\n    laplace[greyscale.length - 2][j] = 1;\n    laplace[greyscale.length - 1][j] = 1;\n  }\n\n  return laplace;\n}\n\n/**\n * Compute the X gradient.\n *\n * @param {Array} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradX(greyscale) {\n  // Returns 2D array of x-gradient values for greyscale\n  const gradX = [];\n\n  for (let y = 0; y < greyscale.length; y++) {\n    gradX[y] = [];\n\n    for (let x = 0; x < greyscale[y].length - 1; x++) {\n      gradX[y][x] = greyscale.dx(x, y);\n    }\n\n    gradX[y][greyscale[y].length - 1] = gradX[y][greyscale[y].length - 2];\n  }\n\n  return gradX;\n}\n\n/**\n * Compute the Y gradient.\n *\n * @param {Array} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradY(greyscale) {\n  // Returns 2D array of y-gradient values for greyscale\n  const gradY = [];\n\n  for (let y = 0; y < greyscale.length - 1; y++) {\n    gradY[y] = [];\n\n    for (let x = 0; x < greyscale[y].length; x++) {\n      gradY[y][x] = greyscale.dy(x, y);\n    }\n  }\n\n  gradY[greyscale.length - 1] = [];\n  for (let i = 0; i < greyscale[0].length; i++) {\n    gradY[greyscale.length - 1][i] = gradY[greyscale.length - 2][i];\n  }\n\n  return gradY;\n}\n\n/**\n * Compute the gradient unit vector.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {object} out The result.\n */\nfunction gradUnitVector(gradX, gradY, px, py, out) {\n  // Returns the gradient vector at (px,py), scaled to a magnitude of 1\n  const ox = gradX[py][px];\n  const oy = gradY[py][px];\n\n  let gvm = Math.sqrt(ox * ox + oy * oy);\n  gvm = Math.max(gvm, 1e-100); // To avoid possible divide-by-0 errors\n\n  out.x = ox / gvm;\n  out.y = oy / gvm;\n}\n\n/**\n * Compute the gradient direction.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {number} qx The q X.\n * @param {number} qy The q Y.\n * @returns {number} The direction.\n */\nfunction gradDirection(gradX, gradY, px, py, qx, qy) {\n  const __dgpuv = {x: -1, y: -1};\n  const __gdquv = {x: -1, y: -1};\n  // Compute the gradiant direction, in radians, between to points\n  gradUnitVector(gradX, gradY, px, py, __dgpuv);\n  gradUnitVector(gradX, gradY, qx, qy, __gdquv);\n\n  let dp = __dgpuv.y * (qx - px) - __dgpuv.x * (qy - py);\n  let dq = __gdquv.y * (qx - px) - __gdquv.x * (qy - py);\n\n  // Make sure dp is positive, to keep things consistant\n  if (dp < 0) {\n    dp = -dp;\n    dq = -dq;\n  }\n\n  if (px !== qx && py !== qy) {\n    // We're going diagonally between pixels\n    dp *= Math.SQRT1_2;\n    dq *= Math.SQRT1_2;\n  }\n\n  return __twothirdpi * (Math.acos(dp) + Math.acos(dq));\n}\n\n/**\n * Compute the sides.\n *\n * @param {number} dist The distance.\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} greyscale The value.\n * @returns {object} The sides.\n */\nfunction computeSides(dist, gradX, gradY, greyscale) {\n  // Returns 2 2D arrays, containing inside and outside greyscale values.\n  // These greyscale values are the intensity just a little bit along the\n  // gradient vector, in either direction, from the supplied point. These\n  // values are used when using active-learning Intelligent Scissors\n\n  const sides = {};\n  sides.inside = [];\n  sides.outside = [];\n\n  const guv = {x: -1, y: -1}; // Current gradient unit vector\n\n  for (let y = 0; y < gradX.length; y++) {\n    sides.inside[y] = [];\n    sides.outside[y] = [];\n\n    for (let x = 0; x < gradX[y].length; x++) {\n      gradUnitVector(gradX, gradY, x, y, guv);\n\n      //(x, y) rotated 90 = (y, -x)\n\n      let ix = Math.round(x + dist * guv.y);\n      let iy = Math.round(y - dist * guv.x);\n      let ox = Math.round(x - dist * guv.y);\n      let oy = Math.round(y + dist * guv.x);\n\n      ix = Math.max(Math.min(ix, gradX[y].length - 1), 0);\n      ox = Math.max(Math.min(ox, gradX[y].length - 1), 0);\n      iy = Math.max(Math.min(iy, gradX.length - 1), 0);\n      oy = Math.max(Math.min(oy, gradX.length - 1), 0);\n\n      sides.inside[y][x] = greyscale[iy][ix];\n      sides.outside[y][x] = greyscale[oy][ox];\n    }\n  }\n\n  return sides;\n}\n\n/**\n * Gaussian blur an input buffer.\n *\n * @param {Array} buffer The input buffer.\n * @param {Array} out The result.\n */\nfunction gaussianBlur(buffer, out) {\n  // Smooth values over to fill in gaps in the mapping\n  out[0] = 0.4 * buffer[0] + 0.5 * buffer[1] + 0.1 * buffer[1];\n  out[1] = 0.25 * buffer[0] + 0.4 * buffer[1] + 0.25 * buffer[2] +\n    0.1 * buffer[3];\n\n  for (let i = 2; i < buffer.length - 2; i++) {\n    out[i] = 0.05 * buffer[i - 2] + 0.25 * buffer[i - 1] +\n      0.4 * buffer[i] + 0.25 * buffer[i + 1] + 0.05 * buffer[i + 2];\n  }\n\n  const len = buffer.length;\n  out[len - 2] = 0.25 * buffer[len - 1] + 0.4 * buffer[len - 2] +\n    0.25 * buffer[len - 3] + 0.1 * buffer[len - 4];\n  out[len - 1] = 0.4 * buffer[len - 1] + 0.5 * buffer[len - 2] +\n    0.1 * buffer[len - 3];\n}\n\n/**\n * Scissors\n *\n * Ref: Eric N. Mortensen, William A. Barrett, Interactive Segmentation with\n *   Intelligent Scissors, Graphical Models and Image Processing, Volume 60,\n *   Issue 5, September 1998, Pages 349-384, ISSN 1077-3169,\n *   DOI: 10.1006/gmip.1998.0480.\n *\n * {@link http://www.sciencedirect.com/science/article/B6WG4-45JB8WN-9/2/6fe59d8089fd1892c2bfb82283065579}\n *\n * Highly inspired from {@link http://code.google.com/p/livewire-javascript/}\n */\nexport class Scissors {\n\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n\n    this.curPoint = null; // Corrent point we're searching on.\n    this.searchGranBits = 8; // Bits of resolution for BucketQueue.\n    this.searchGran = 1 << this.earchGranBits; //bits.\n    this.pointsPerPost = 500;\n\n    // Precomputed image data. All in ranges 0 >= x >= 1 and\n    //   all inverted (1 - x).\n    this.greyscale = null; // Greyscale of image\n    this.laplace = null; // Laplace zero-crossings (either 0 or 1).\n    this.gradient = null; // Gradient magnitudes.\n    this.gradX = null; // X-differences.\n    this.gradY = null; // Y-differences.\n\n    // Matrix mapping point => parent along shortest-path to root.\n    this.parents = null;\n\n    this.working = false; // Currently computing shortest paths?\n\n    // Begin Training:\n    this.trained = false;\n    this.trainingPoints = null;\n\n    this.edgeWidth = 2;\n    this.trainingLength = 32;\n\n    this.edgeGran = 256;\n    this.edgeTraining = null;\n\n    this.gradPointsNeeded = 32;\n    this.gradGran = 1024;\n    this.gradTraining = null;\n\n    this.insideGran = 256;\n    this.insideTraining = null;\n\n    this.outsideGran = 256;\n    this.outsideTraining = null;\n  }\n  // End Training\n\n\n  // Begin training methods //\n  getTrainingIdx(granularity, value) {\n    return Math.round((granularity - 1) * value);\n  }\n\n  getTrainedEdge(edge) {\n    return this.edgeTraining[this.getTrainingIdx(this.edgeGran, edge)];\n  }\n\n  getTrainedGrad(grad) {\n    return this.gradTraining[this.getTrainingIdx(this.gradGran, grad)];\n  }\n\n  getTrainedInside(inside) {\n    return this.insideTraining[this.getTrainingIdx(this.insideGran, inside)];\n  }\n\n  getTrainedOutside(outside) {\n    return this.outsideTraining[this.getTrainingIdx(this.outsideGran, outside)];\n  }\n  // End training methods //\n\n  setWorking(working) {\n    // Sets working flag\n    this.working = working;\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setData(data) {\n    if (this.width === -1 || this.height === -1) {\n      // The width and height should have already been set\n      throw new Error('Dimensions have not been set.');\n    }\n\n    this.greyscale = computeGreyscale(data, this.width, this.height);\n    this.laplace = computeLaplace(this.greyscale);\n    this.gradient = computeGradient(this.greyscale);\n    this.gradX = computeGradX(this.greyscale);\n    this.gradY = computeGradY(this.greyscale);\n\n    const sides = computeSides(\n      this.edgeWidth, this.gradX, this.gradY, this.greyscale);\n    this.inside = sides.inside;\n    this.outside = sides.outside;\n    this.edgeTraining = [];\n    this.gradTraining = [];\n    this.insideTraining = [];\n    this.outsideTraining = [];\n  }\n\n  findTrainingPoints(p) {\n    // Grab the last handful of points for training\n    const points = [];\n\n    if (this.parents !== null) {\n      for (let i = 0; i < this.trainingLength && p; i++) {\n        points.push(p);\n        p = this.parents[p.y][p.x];\n      }\n    }\n\n    return points;\n  }\n\n  resetTraining() {\n    this.trained = false; // Training is ignored with this flag set\n  }\n\n  doTraining(p) {\n    // Compute training weights and measures\n    this.trainingPoints = this.findTrainingPoints(p);\n\n    if (this.trainingPoints.length < 8) {\n      return; // Not enough points, I think. It might crash if length = 0.\n    }\n\n    const buffer = [];\n    this.calculateTraining(\n      buffer, this.edgeGran, this.greyscale, this.edgeTraining);\n    this.calculateTraining(\n      buffer, this.gradGran, this.gradient, this.gradTraining);\n    this.calculateTraining(\n      buffer, this.insideGran, this.inside, this.insideTraining);\n    this.calculateTraining(\n      buffer, this.outsideGran, this.outside, this.outsideTraining);\n\n    if (this.trainingPoints.length < this.gradPointsNeeded) {\n      // If we have two few training points, the gradient weight map might not\n      // be smooth enough, so average with normal weights.\n      this.addInStaticGrad(this.trainingPoints.length, this.gradPointsNeeded);\n    }\n\n    this.trained = true;\n  }\n\n  calculateTraining(\n    buffer, granularity, input, output) {\n    let i = 0;\n    // Build a map of raw-weights to trained-weights by favoring input values\n    buffer.length = granularity;\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 0;\n    }\n\n    let maxVal = 1;\n    for (i = 0; i < this.trainingPoints.length; i++) {\n      const p = this.trainingPoints[i];\n      const idx = this.getTrainingIdx(granularity, input[p.y][p.x]);\n      buffer[idx] += 1;\n\n      maxVal = Math.max(maxVal, buffer[idx]);\n    }\n\n    // Invert and scale.\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 1 - buffer[i] / maxVal;\n    }\n\n    // Blur it, as suggested. Gets rid of static.\n    gaussianBlur(buffer, output);\n  }\n\n  addInStaticGrad(have, need) {\n    // Average gradient raw-weights to trained-weights map with standard weight\n    // map so that we don't end up with something to spiky\n    for (let i = 0; i < this.gradGran; i++) {\n      this.gradTraining[i] = Math.min(\n        this.gradTraining[i],\n        1 - i * (need - have) / (need * this.gradGran)\n      );\n    }\n  }\n\n  gradDirection(px, py, qx, qy) {\n    return gradDirection(this.gradX, this.gradY, px, py, qx, qy);\n  }\n\n  dist(px, py, qx, qy) {\n    // The grand culmunation of most of the code: the weighted distance function\n    let grad = this.gradient[qy][qx];\n\n    if (px === qx || py === qy) {\n      // The distance is Euclidean-ish; non-diagonal edges should be shorter\n      grad *= Math.SQRT1_2;\n    }\n\n    const lap = this.laplace[qy][qx];\n    const dir = this.gradDirection(px, py, qx, qy);\n\n    if (this.trained) {\n      // Apply training magic\n      const gradT = this.getTrainedGrad(grad);\n      const edgeT = this.getTrainedEdge(this.greyscale[py][px]);\n      const insideT = this.getTrainedInside(this.inside[py][px]);\n      const outsideT = this.getTrainedOutside(this.outside[py][px]);\n\n      return 0.3 * gradT + 0.3 * lap + 0.1 * (dir + edgeT + insideT + outsideT);\n    } else {\n      // Normal weights\n      return 0.43 * grad + 0.43 * lap + 0.11 * dir;\n    }\n  }\n\n  adj(p) {\n    const list = [];\n\n    const sx = Math.max(p.x - 1, 0);\n    const sy = Math.max(p.y - 1, 0);\n    const ex = Math.min(p.x + 1, this.greyscale[0].length - 1);\n    const ey = Math.min(p.y + 1, this.greyscale.length - 1);\n\n    let idx = 0;\n    for (let y = sy; y <= ey; y++) {\n      for (let x = sx; x <= ex; x++) {\n        if (x !== p.x || y !== p.y) {\n          list[idx++] = {x: x, y: y};\n        }\n      }\n    }\n\n    return list;\n  }\n\n  setPoint(sp) {\n    this.setWorking(true);\n\n    this.curPoint = sp;\n\n    let x = 0;\n    let y = 0;\n\n    this.visited = [];\n    for (y = 0; y < this.height; y++) {\n      this.visited[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.visited[y][x] = false;\n      }\n    }\n\n    this.parents = [];\n    for (y = 0; y < this.height; y++) {\n      this.parents[y] = [];\n    }\n\n    this.cost = [];\n    for (y = 0; y < this.height; y++) {\n      this.cost[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.cost[y][x] = Number.MAX_VALUE;\n      }\n    }\n\n    this.pq = new BucketQueue(this.searchGranBits, function (p) {\n      return Math.round(this.searchGran * this.costArr[p.y][p.x]);\n    });\n    this.pq.searchGran = this.searchGran;\n    this.pq.costArr = this.cost;\n\n    this.pq.push(sp);\n    this.cost[sp.y][sp.x] = 0;\n  }\n\n  doWork() {\n    if (!this.working) {\n      return;\n    }\n\n    this.timeout = null;\n\n    let pointCount = 0;\n    const newPoints = [];\n    while (!this.pq.isEmpty() && pointCount < this.pointsPerPost) {\n      const p = this.pq.pop();\n      newPoints.push(p);\n      newPoints.push(this.parents[p.y][p.x]);\n\n      this.visited[p.y][p.x] = true;\n\n      const adjList = this.adj(p);\n      for (let i = 0; i < adjList.length; i++) {\n        const q = adjList[i];\n\n        const pqCost = this.cost[p.y][p.x] + this.dist(p.x, p.y, q.x, q.y);\n\n        if (pqCost < this.cost[q.y][q.x]) {\n          if (this.cost[q.y][q.x] !== Number.MAX_VALUE) {\n            // Already in PQ, must remove it so we can re-add it.\n            this.pq.remove(q);\n          }\n\n          this.cost[q.y][q.x] = pqCost;\n          this.parents[q.y][q.x] = p;\n          this.pq.push(q);\n        }\n      }\n\n      pointCount++;\n    }\n\n    return newPoints;\n  }\n\n} // Scissors class\n","import {Style} from '../gui/style';\nimport {Point2D} from '../math/point';\nimport {Path} from '../math/path';\nimport {Scissors} from '../math/scissors';\nimport {guid} from '../math/stats';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {RoiFactory} from '../tools/roi';\nimport {DrawGroupCommand} from '../tools/drawCommands';\n\n/**\n * Livewire painting tool.\n */\nexport class Livewire {\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Draw command.\n   *\n   * @private\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @private\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Path storage. Paths are stored in reverse order.\n   *\n   * @private\n   * @type {Path}\n   */\n  #path = new Path();\n\n  /**\n   * Current path storage. Paths are stored in reverse order.\n   *\n   * @private\n   * @type {Path}\n   */\n  #currentPath = new Path();\n\n  /**\n   * List of parent points.\n   *\n   * @private\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Tolerance.\n   *\n   * @private\n   * @type {number}\n   */\n  #tolerance = 5;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Clear the parent points list.\n   *\n   * @param {object} imageSize The image size.\n   * @private\n   */\n  #clearParentPoints(imageSize) {\n    const nrows = imageSize.get(1);\n    for (let i = 0; i < nrows; ++i) {\n      this.#parentPoints[i] = [];\n    }\n  }\n\n  /**\n   * Clear the stored paths.\n   *\n   * @private\n   */\n  #clearPaths() {\n    this.#path = new Path();\n    this.#currentPath = new Path();\n  }\n\n  /**\n   * Scissor representation.\n   *\n   * @private\n   * @type {Scissors}\n   */\n  #scissors = new Scissors();\n\n  /**\n   * Finish a livewire (roi) shape.\n   */\n  #finishShape() {\n    // fire creation event (was not propagated during draw)\n    this.#fireEvent({\n      type: 'drawcreate',\n      id: this.#shapeGroup.id()\n    });\n    // listen\n    this.#command.onExecute = this.#fireEvent;\n    this.#command.onUndo = this.#fireEvent;\n    // save command in undo stack\n    this.#app.addToUndoStack(this.#command);\n    // set flag\n    this.#started = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const imageSize = viewLayer.getViewController().getImageSize();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n\n    // first time\n    if (!this.#started) {\n      this.#started = true;\n      this.x0 = index.get(0);\n      this.y0 = index.get(1);\n      // clear vars\n      this.#clearPaths();\n      this.#clearParentPoints(imageSize);\n      this.#shapeGroup = null;\n      // update zoom scale\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      this.#style.setZoomScale(\n        drawLayer.getKonvaLayer().getAbsoluteScale());\n      // do the training from the first point\n      const p = {x: index.get(0), y: index.get(1)};\n      this.#scissors.doTraining(p);\n      // add the initial point to the path\n      const p0 = new Point2D(index.get(0), index.get(1));\n      this.#path.addPoint(p0);\n      this.#path.addControlPoint(p0);\n    } else {\n      // final point: at 'tolerance' of the initial point\n      if ((Math.abs(index.get(0) - this.x0) < this.#tolerance) &&\n        (Math.abs(index.get(1) - this.y0) < this.#tolerance)) {\n        // finish\n        this.#finishShape();\n      } else {\n        // anchor point\n        this.#path = this.#currentPath;\n        this.#clearParentPoints(imageSize);\n        const pn = {x: index.get(0), y: index.get(1)};\n        this.#scissors.doTraining(pn);\n        this.#path.addControlPoint(this.#currentPath.getPoint(0));\n      }\n    }\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n\n    // set the point to find the path to\n    let p = {x: index.get(0), y: index.get(1)};\n    this.#scissors.setPoint(p);\n    // do the work\n    let results = 0;\n    let stop = false;\n    while (!this.#parentPoints[p.y][p.x] && !stop) {\n      results = this.#scissors.doWork();\n\n      if (results.length === 0) {\n        stop = true;\n      } else {\n        // fill parents\n        for (let i = 0; i < results.length - 1; i += 2) {\n          const _p = results[i];\n          const _q = results[i + 1];\n          this.#parentPoints[_p.y][_p.x] = _q;\n        }\n      }\n    }\n\n    // get the path\n    this.#currentPath = new Path();\n    stop = false;\n    while (p && !stop) {\n      this.#currentPath.addPoint(new Point2D(p.x, p.y));\n      if (!this.#parentPoints[p.y]) {\n        stop = true;\n      } else {\n        if (!this.#parentPoints[p.y][p.x]) {\n          stop = true;\n        } else {\n          p = this.#parentPoints[p.y][p.x];\n        }\n      }\n    }\n    this.#currentPath.appenPath(this.#path);\n\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n    // create shape\n    const factory = new RoiFactory();\n    this.#shapeGroup = factory.create(\n      this.#currentPath.pointArray, this.#style);\n    this.#shapeGroup.id(guid());\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(this.#shapeGroup);\n\n    // draw shape command\n    this.#command = new DrawGroupCommand(this.#shapeGroup, 'livewire',\n      drawLayer.getKonvaLayer());\n    // draw\n    this.#command.execute();\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup(_event) {\n    // nothing to do\n  }\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} _event The double click event.\n   */\n  dblclick = (_event) => {\n    this.#finishShape();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // treat as mouse down\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // treat as mouse move\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Livewire';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    // start scissors if displayed\n    if (bool) {\n      const layerGroup = this.#app.getActiveLayerGroup();\n      const viewLayer = layerGroup.getActiveViewLayer();\n\n      //scissors = new Scissors();\n      const imageSize = viewLayer.getViewController().getImageSize();\n      this.#scissors.setDimensions(\n        imageSize.get(0),\n        imageSize.get(1));\n      this.#scissors.setData(viewLayer.getImageData().data);\n\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Livewire class\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Circle shape.\n */\nexport class Circle {\n\n  /**\n   * Circle centre.\n   *\n   * @private\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Circle radius.\n   *\n   * @private\n   * @type {number}\n   */\n  #radius;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the circle.\n   * @param {number} radius The radius of the circle.\n   */\n  constructor(centre, radius) {\n    this.#centre = centre;\n    this.#radius = radius;\n  }\n\n  /**\n   * Get the centre (point) of the circle.\n   *\n   * @returns {Point2D} The center (point) of the circle.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the circle.\n   *\n   * @returns {number} The radius of the circle.\n   */\n  getRadius() {\n    return this.#radius;\n  }\n\n\n  /**\n   * Check for equality.\n   *\n   * @param {Circle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getRadius() === rhs.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle.\n   *\n   * @returns {number} The surface of the circle.\n   */\n  getSurface() {\n    return Math.PI * this.getRadius() * this.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the circle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the rounded limits of the circle.\n   * (see https://en.wikipedia.org/wiki/Circle#Equations)\n   * Circle formula: x*x + y*y = r*r\n   * => y = (+-) sqrt(r*r - x*x)\n   *\n   * @returns {Array} The rounded limits.\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radius = this.getRadius();\n    const rSquare = Math.pow(radius, 2);\n    // Y bounds\n    const minY = centerY - radius;\n    const maxY = centerY + radius;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rSquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an circle according to view information.\n   *\n   * @param {ViewController} viewController The associated view\n   *   controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: ''};\n        quant.max = {value: quantif.max, unit: ''};\n        quant.mean = {value: quantif.mean, unit: ''};\n        quant.stdDev = {value: quantif.stdDev, unit: ''};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: ''};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: ''};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: ''};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Circle class\n","import {Circle} from '../math/circle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultCircleLabelText = '{surface}';\n\n/**\n * Circle factory.\n */\nexport class CircleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'circle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a circle shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the circle.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(\n    points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    const radius = Math.round(Math.sqrt(a * a + b * b));\n    // physical shape\n    const circle = new Circle(points[0], radius);\n    // draw shape\n    const kshape = new Konva.Circle({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      radius: circle.getRadius(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof circleLabelText !== 'undefined') {\n    //   textExpr = circleLabelText;\n    // } else {\n    textExpr = defaultCircleLabelText;\n    // }\n    const quant = circle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowCircle(circle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a circle shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      centerX - radius, centerY, 'left', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX + radius, centerY, 'right', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY - radius, 'bottom', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY + radius, 'top', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a circle shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} _style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    // find special points\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // circle center\n    const center = {\n      x: kcircle.x(),\n      y: kcircle.y()\n    };\n\n    let radius;\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      radius = center.x - anchor.x();\n      // force y\n      left.y(right.y());\n      // update others\n      right.x(center.x + radius);\n      bottom.y(center.y - radius);\n      top.y(center.y + radius);\n      break;\n    case 'right':\n      radius = anchor.x() - center.x;\n      // force y\n      right.y(left.y());\n      // update others\n      left.x(center.x - radius);\n      bottom.y(center.y - radius);\n      top.y(center.y + radius);\n      break;\n    case 'bottom':\n      radius = center.y - anchor.y();\n      // force x\n      bottom.x(top.x());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      top.y(center.y + radius);\n      break;\n    case 'top':\n      radius = anchor.y() - center.y;\n      // force x\n      top.x(bottom.x());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      bottom.y(center.y - radius);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    // update shape: just update the radius\n    kcircle.radius(Math.abs(radius));\n    // new circle\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const circle = new Circle(centerPoint, radius);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowCircle(circle, group));\n    }\n\n    // update label position\n    const textPos = {x: center.x, y: center.y};\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateCircleQuantification(\n    group, viewController) {\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kcircle.x(),\n      group.y() + kcircle.y()\n    );\n    // circle\n    const circle = new Circle(centerPoint, kcircle.radius());\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = circle.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Circle} circle The circle to shadow.\n   * @param {object} group The associated group.\n   * @returns {object} The shadow konva group.\n   */\n  #getShadowCircle(circle, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = circle.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class CircleFactory\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\nimport {Index} from './index';\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Ellipse shape.\n */\nexport class Ellipse {\n\n  /**\n   * Ellipse centre.\n   *\n   * @private\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Ellipse horizontal radius.\n   *\n   * @private\n   * @type {number}\n   */\n  #a;\n\n  /**\n   * Ellipse vertical radius.\n   *\n   * @private\n   * @type {number}\n   */\n  #b;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the ellipse.\n   * @param {number} a The radius of the ellipse on the horizontal axe.\n   * @param {number} b The radius of the ellipse on the vertical axe.\n   */\n  constructor(centre, a, b) {\n    this.#centre = centre;\n    this.#a = a;\n    this.#b = b;\n  }\n\n  /**\n   * Get the centre (point) of the ellipse.\n   *\n   * @returns {Point2D} The center (point) of the ellipse.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the ellipse on the horizontal axe.\n   *\n   * @returns {number} The radius of the ellipse on the horizontal axe.\n   */\n  getA() {\n    return this.#a;\n  }\n\n  /**\n   * Get the radius of the ellipse on the vertical axe.\n   *\n   * @returns {number} The radius of the ellipse on the vertical axe.\n   */\n  getB() {\n    return this.#b;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Ellipse} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getA() === rhs.getA() &&\n      this.getB() === rhs.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse.\n   *\n   * @returns {number} The surface of the ellipse.\n   */\n  getSurface() {\n    return Math.PI * this.getA() * this.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the ellipse multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the rounded limits of the ellipse.\n   * (see https://en.wikipedia.org/wiki/Ellipse#Standard_equation)\n   * Ellipse formula: x*x / a*a + y*y / b*b = 1\n   * => y = (+-)(b/a) * sqrt(a*a - x*x)\n   *\n   * @returns {Array} The rounded limits.\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radiusX = this.getA();\n    const radiusY = this.getB();\n    const radiusRatio = radiusX / radiusY;\n    const rySquare = Math.pow(radiusY, 2);\n    // Y bounds\n    const minY = centerY - radiusY;\n    const maxY = centerY + radiusY;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rySquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = radiusRatio * Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an ellipse according to view information.\n   *\n   * @param {ViewController} viewController The associated view\n   *   controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: ''};\n        quant.max = {value: quantif.max, unit: ''};\n        quant.mean = {value: quantif.mean, unit: ''};\n        quant.stdDev = {value: quantif.stdDev, unit: ''};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: ''};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: ''};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: ''};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Ellipse class\n\n/**\n * Get the indices that form a ellpise.\n *\n * @param {Index} center The ellipse center.\n * @param {Array} radius The 2 ellipse radiuses.\n * @param {Array} dir The 2 ellipse directions.\n * @returns {Array} The indices of the ellipse.\n */\nexport function getEllipseIndices(center, radius, dir) {\n  const centerValues = center.getValues();\n  // keep all values for possible extra dimensions\n  const values = centerValues.slice();\n  const indices = [];\n  const radiusI = radius[0];\n  const radiusJ = radius[1];\n  const radiusRatio = radiusI / radiusJ;\n  const radiusJ2 = Math.pow(radiusJ, 2);\n  const di = dir[0];\n  const dj = dir[1];\n  // deduce 4 positions from top right\n  for (let j = 0; j < radiusJ; ++j) {\n    // right triangle formed by radiuses, j and len\n    // ellipse: i*i / a*a + j*j / b*b = 1\n    // -> i = a/b * sqrt(b*b - j*j)\n    const len = Math.round(\n      radiusRatio * Math.sqrt(radiusJ2 - Math.pow(j, 2)));\n    const jmax = centerValues[dj] + j;\n    const jmin = centerValues[dj] - j;\n    for (let i = 0; i < len; ++i) {\n      const imax = centerValues[di] + i;\n      const imin = centerValues[di] - i;\n\n      // right\n      values[di] = imax;\n      // right - top\n      values[dj] = jmax;\n      indices.push(new Index(values.slice()));\n      // right - bottom\n      if (jmin !== jmax) {\n        values[dj] = jmin;\n        indices.push(new Index(values.slice()));\n      }\n\n      // left\n      if (imin !== imax) {\n        values[di] = imin;\n        // left - top\n        values[dj] = jmax;\n        indices.push(new Index(values.slice()));\n        // left - bottom\n        if (jmin !== jmax) {\n          values[dj] = jmin;\n          indices.push(new Index(values.slice()));\n        }\n      }\n    }\n  }\n  return indices;\n}\n","import {DRAW_DEBUG} from './draw';\nimport {getDefaultAnchor} from './editor';\nimport {Ellipse} from '../math/ellipse';\nimport {Point2D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {getFlags, replaceFlags} from '../utils/string';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultEllipseLabelText = '{surface}';\n\n/**\n * Ellipse factory.\n */\nexport class EllipseFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ellipse-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an ellipse shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the ellipse.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(\n    points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    // physical shape\n    const ellipse = new Ellipse(points[0], a, b);\n    // draw shape\n    const kshape = new Konva.Ellipse({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      radius: {x: ellipse.getA(), y: ellipse.getB()},\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof ellipseLabelText !== 'undefined') {\n    //   textExpr = ellipseLabelText;\n    // } else {\n    textExpr = defaultEllipseLabelText;\n    // }\n    const quant = ellipse.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowEllipse(ellipse);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an ellipse shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const ellipseX = shape.x();\n    const ellipseY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY - radius.y, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY - radius.y, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY + radius.y, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY + radius.y, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an ellipse shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} _style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    const radiusX = (topRight.x() - topLeft.x()) / 2;\n    const radiusY = (bottomRight.y() - topRight.y()) / 2;\n    const center = {\n      x: topLeft.x() + radiusX,\n      y: topRight.y() + radiusY\n    };\n    kellipse.position(center);\n    const radiusAbs = {x: Math.abs(radiusX), y: Math.abs(radiusY)};\n    if (radiusAbs) {\n      kellipse.radius(radiusAbs);\n    }\n    // new ellipse\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const ellipse = new Ellipse(centerPoint, radiusAbs.x, radiusAbs.y);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowEllipse(ellipse, group));\n    }\n\n    // update label position\n    const textPos = {x: center.x, y: center.y};\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateEllipseQuantification(group, viewController) {\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kellipse.x(),\n      group.y() + kellipse.y()\n    );\n    // circle\n    const ellipse = new Ellipse(\n      centerPoint, kellipse.radius().x, kellipse.radius().y);\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = ellipse.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Ellipse} ellipse The ellipse to shadow.\n   * @param {object} group The associated group.\n   * @returns {object} The shadow konva group.\n   */\n  #getShadowEllipse(ellipse, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = ellipse.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class EllipseFactory\n","import {Point2D} from './point';\nimport {getStats} from './stats';\nimport {i18n} from '../utils/i18n';\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Rectangle shape.\n */\nexport class Rectangle {\n\n  /**\n   * Rectangle begin point.\n   *\n   * @private\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Rectangle end point.\n   *\n   * @private\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the rectangle.\n   * @param {Point2D} end A Point2D representing the end\n   *   of the rectangle.\n   */\n  constructor(begin, end) {\n    this.#begin = new Point2D(\n      Math.min(begin.getX(), end.getX()),\n      Math.min(begin.getY(), end.getY())\n    );\n    this.#end = new Point2D(\n      Math.max(begin.getX(), end.getX()),\n      Math.max(begin.getY(), end.getY())\n    );\n  }\n\n  /**\n   * Get the begin point of the rectangle.\n   *\n   * @returns {Point2D} The begin point of the rectangle\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the rectangle.\n   *\n   * @returns {Point2D} The end point of the rectangle\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Rectangle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the surface of the rectangle.\n   *\n   * @returns {number} The surface of the rectangle.\n   */\n  getSurface() {\n    const begin = this.getBegin();\n    const end = this.getEnd();\n    return Math.abs(end.getX() - begin.getX()) *\n      Math.abs(end.getY() - begin.getY());\n  }\n\n  /**\n   * Get the surface of the rectangle according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the rectangle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the real width of the rectangle.\n   *\n   * @returns {number} The real width of the rectangle.\n   */\n  getRealWidth() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the real height of the rectangle.\n   *\n   * @returns {number} The real height of the rectangle.\n   */\n  getRealHeight() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the width of the rectangle.\n   *\n   * @returns {number} The width of the rectangle.\n   */\n  getWidth() {\n    return Math.abs(this.getRealWidth());\n  }\n\n  /**\n   * Get the height of the rectangle.\n   *\n   * @returns {number} The height of the rectangle.\n   */\n  getHeight() {\n    return Math.abs(this.getRealHeight());\n  }\n\n  /**\n   * Get the rounded limits of the rectangle.\n   *\n   * @returns {object} The rounded limits.\n   */\n  getRound() {\n    return {\n      min: this.getBegin().getRound(),\n      max: this.getEnd().getRound()\n    };\n  }\n\n  /**\n   * Quantify a rectangle according to view information.\n   *\n   * @param {object} viewController The associated view controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const round = this.getRound();\n      const values = viewController.getImageRegionValues(round.min, round.max);\n      const quantif = getStats(values, flags);\n      quant.min = {value: quantif.min, unit: ''};\n      quant.max = {value: quantif.max, unit: ''};\n      quant.mean = {value: quantif.mean, unit: ''};\n      quant.stdDev = {value: quantif.stdDev, unit: ''};\n      if (typeof quantif.median !== 'undefined') {\n        quant.median = {value: quantif.median, unit: ''};\n      }\n      if (typeof quantif.p25 !== 'undefined') {\n        quant.p25 = {value: quantif.p25, unit: ''};\n      }\n      if (typeof quantif.p75 !== 'undefined') {\n        quant.p75 = {value: quantif.p75, unit: ''};\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Rectangle class\n","import {Rectangle} from '../math/rectangle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {DRAW_DEBUG} from './draw';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultRectangleLabelText = '{surface}';\n\n/**\n * Rectangle factory.\n */\nexport class RectangleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'rectangle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a rectangle shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the rectangle.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const rectangle = new Rectangle(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Rect({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getBegin().getY(),\n      width: rectangle.getWidth(),\n      height: rectangle.getHeight(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // label text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof rectangleLabelText !== 'undefined') {\n    //   textExpr = rectangleLabelText;\n    // } else {\n    textExpr = defaultRectangleLabelText;\n    // }\n    const quant = rectangle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getEnd().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowRectangle(rectangle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a rectangle shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const rectX = shape.x();\n    const rectY = shape.y();\n    const rectWidth = shape.width();\n    const rectHeight = shape.height();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      rectX, rectY, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY + rectHeight, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX, rectY + rectHeight, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a rectangle shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    krect.position(topLeft.position());\n    const width = topRight.x() - topLeft.x();\n    const height = bottomLeft.y() - topLeft.y();\n    if (width && height) {\n      krect.size({width: width, height: height});\n    }\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + topLeft.x(),\n      group.y() + topLeft.y()\n    );\n    const p2d1 = new Point2D(\n      group.x() + bottomRight.x(),\n      group.y() + bottomRight.y()\n    );\n    // new rect\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // debug shadow based on round (used in quantification)\n    if (kshadow) {\n      const round = rect.getRound();\n      const rWidth = round.max.getX() - round.min.getX();\n      const rHeight = round.max.getY() - round.min.getY();\n      kshadow.position({\n        x: round.min.getX() - group.x(),\n        y: round.min.getY() - group.y()\n      });\n      kshadow.size({width: rWidth, height: rHeight});\n    }\n\n    // update label position\n    const textPos = {\n      x: rect.getBegin().getX() - group.x(),\n      y: rect.getEnd().getY() - group.y()\n    };\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateRectangleQuantification(group, viewController) {\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + krect.x(),\n      group.y() + krect.y()\n    );\n    const p2d1 = new Point2D(\n      p2d0.getX() + krect.width(),\n      p2d0.getY() + krect.height()\n    );\n    // rectangle\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = rect.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {object} rectangle The rectangle to shadow.\n   * @returns {object} The shadow konva shape.\n   */\n  #getShadowRectangle(rectangle) {\n    const round = rectangle.getRound();\n    const rWidth = round.max.getX() - round.min.getX();\n    const rHeight = round.max.getY() - round.min.getY();\n    return new Konva.Rect({\n      x: round.min.getX(),\n      y: round.min.getY(),\n      width: rWidth,\n      height: rHeight,\n      fill: 'grey',\n      strokeWidth: 0,\n      strokeScaleEnabled: false,\n      opacity: 0.3,\n      name: 'shadow'\n    });\n  }\n\n} // class RectangleFactory\n","/**\n * Threshold an image between an input minimum and maximum.\n */\nexport class Threshold {\n  /**\n   * Threshold minimum.\n   *\n   * @private\n   * @type {number}\n   */\n  #min = 0;\n\n  /**\n   * Threshold maximum.\n   *\n   * @private\n   * @type {number}\n   */\n  #max = 0;\n\n  /**\n   * Get the threshold minimum.\n   *\n   * @returns {number} The threshold minimum.\n   */\n  getMin() {\n    return this.#min;\n  }\n\n  /**\n   * Set the threshold minimum.\n   *\n   * @param {number} val The threshold minimum.\n   */\n  setMin(val) {\n    this.#min = val;\n  }\n\n  /**\n   * Get the threshold maximum.\n   *\n   * @returns {number} The threshold maximum.\n   */\n  getMax() {\n    return this.#max;\n  }\n\n  /**\n   * Set the threshold maximum.\n   *\n   * @param {number} val The threshold maximum.\n   */\n  setMax(val) {\n    this.#max = val;\n  }\n\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Threshold';\n  }\n\n  /**\n   * Original image.\n   *\n   * @private\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    const imageMin = image.getDataRange().min;\n    const threshFunction = (value) => {\n      if (value < this.getMin() || value > this.getMax()) {\n        return imageMin;\n      } else {\n        return value;\n      }\n    };\n    return image.transform(threshFunction);\n  }\n\n} // class Threshold\n\n/**\n * Sharpen an image using a sharpen convolution matrix.\n */\nexport class Sharpen {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sharpen';\n  }\n\n  /**\n   * Original image.\n   *\n   * @private\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable array-element-newline */\n    return image.convolute2D([\n      0, -1, 0,\n      -1, 5, -1,\n      0, -1, 0\n    ]);\n    /* eslint-enable array-element-newline */\n  }\n\n} // class Sharpen\n\n/**\n * Apply a Sobel filter to an image.\n */\nexport class Sobel {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sobel';\n  }\n\n  /**\n   * Original image.\n   *\n   * @private\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable array-element-newline */\n    const gradX = image.convolute2D([\n      1, 0, -1,\n      2, 0, -2,\n      1, 0, -1\n    ]);\n    const gradY = image.convolute2D([\n      1, 2, 1,\n      0, 0, 0,\n      -1, -2, -1\n    ]);\n    /* eslint-enable array-element-newline */\n    return gradX.compose(gradY, function (x, y) {\n      return Math.sqrt(x * x + y * y);\n    });\n  }\n\n} // class Sobel\n","import {ListenerHandler} from '../utils/listen';\nimport {\n  Threshold as ThresholdFilter,\n  Sobel as SobelFilter,\n  Sharpen as SharpenFilter\n} from '../image/filter';\n\n/**\n * Filter tool.\n */\nexport class Filter {\n\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Filter list\n   *\n   * @type {object}\n   */\n  #filterList = null;\n\n  /**\n   * Selected filter.\n   *\n   * @type {object}\n   */\n  #selectedFilter = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // setup event listening\n    for (const key in this.filterList) {\n      if (bool) {\n        this.filterList[key].addEventListener('filterrun', this.#fireEvent);\n        this.filterList[key].addEventListener('filter-undo', this.#fireEvent);\n      } else {\n        this.filterList[key].removeEventListener(\n          'filterrun', this.#fireEvent);\n        this.filterList[key].removeEventListener(\n          'filter-undo', this.#fireEvent);\n      }\n    }\n  }\n\n  /**\n   * Set the tool options.\n   *\n   * @param {object} options The list of filter names amd classes.\n   */\n  setOptions(options) {\n    this.#filterList = {};\n    // try to instanciate filters from the options\n    for (const key in options) {\n      this.#filterList[key] = new options[key](this.#app);\n    }\n  }\n\n  /**\n   * Get the type of tool options: here 'instance' since the filter\n   * list contains instances of each possible filter.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'instance';\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // setup event listening\n    for (const key in this.#filterList) {\n      this.#filterList[key].init();\n    }\n  }\n\n  /**\n   * Handle keydown event.\n   *\n   * @param {object} event The keydown event.\n   */\n  keydown = (event) => {\n    event.context = 'Filter';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['filterrun', 'filterundo'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the selected filter.\n   *\n   * @returns {object} The selected filter.\n   */\n  getSelectedFilter() {\n    return this.#selectedFilter;\n  }\n\n  /**\n   * Set the tool live features: filter name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.filterName !== 'undefined') {\n      // check if we have it\n      if (!this.hasFilter(features.filterName)) {\n        throw new Error('Unknown filter: \\'' + features.filterName + '\\'');\n      }\n      // de-activate last selected\n      if (this.#selectedFilter) {\n        this.#selectedFilter.activate(false);\n      }\n      // enable new one\n      this.#selectedFilter = this.filterList[features.filterName];\n      // activate the selected filter\n      this.#selectedFilter.activate(true);\n    }\n    if (typeof features.run !== 'undefined' && features.run) {\n      let args = {};\n      if (typeof features.runArgs !== 'undefined') {\n        args = features.runArgs;\n      }\n      this.getSelectedFilter().run(args);\n    }\n  }\n\n  /**\n   * Get the list of filters.\n   *\n   * @returns {Array} The list of filter objects.\n   */\n  getFilterList() {\n    return this.filterList;\n  }\n\n  /**\n   * Check if a filter is in the filter list.\n   *\n   * @param {string} name The name to check.\n   * @returns {string} The filter list element for the given name.\n   */\n  hasFilter(name) {\n    return this.filterList[name];\n  }\n\n} // class Filter\n\n/**\n * Threshold filter tool.\n */\nexport class Threshold {\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Flag to know wether to reset the image or not.\n   *\n   * @type {boolean}\n   * @private\n   */\n  #resetImage = true;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // reset the image when the tool is activated\n    if (bool) {\n      this.#resetImage = true;\n    }\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    const filter = new ThresholdFilter();\n    filter.setMin(args.min);\n    filter.setMax(args.max);\n    // reset the image if asked\n    if (this.#resetImage) {\n      filter.setOriginalImage(this.#app.getLastImage());\n      this.#resetImage = false;\n    }\n    const command = new RunFilterCommand(filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class Threshold\n\n/**\n * Sharpen filter tool.\n */\nexport class Sharpen {\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} _args The filter arguments.\n   */\n  run(_args) {\n    const filter = new SharpenFilter();\n    filter.setOriginalImage(this.#app.getLastImage());\n    const command = new RunFilterCommand(filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // filter.Sharpen\n\n/**\n * Sobel filter tool.\n */\nexport class Sobel {\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} _args The filter arguments.\n   */\n  run(_args) {\n    const filter = new SobelFilter();\n    filter.setOriginalImage(this.#app.getLastImage());\n    const command = new RunFilterCommand(filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class filter.Sobel\n\n/**\n * Run filter command.\n */\nexport class RunFilterCommand {\n\n  /**\n   * The filter to run.\n   *\n   * @private\n   * @type {object}\n   */\n  #filter;\n\n  /**\n   * Associated app.\n   *\n   * @private\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {object} filter The filter to run.\n   * @param {App} app The associated application.\n   */\n  constructor(filter, app) {\n    this.#filter = filter;\n    this.#app = app;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Filter-' + this.#filter.getName();\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires RunFilterCommand#filterrun\n   */\n  execute() {\n    // run filter and set app image\n    this.#app.setLastImage(this.#filter.update());\n    // update display\n    this.#app.render(0); //todo: fix\n    /**\n     * Filter run event.\n     *\n     * @event RunFilterCommand#filterrun\n     * @type {object}\n     * @property {string} type The event type: filterrun.\n     * @property {number} id The id of the run command.\n     */\n    const event = {\n      type: 'filterrun',\n      id: this.getName()\n    };\n    // callback\n    this.onExecute(event);\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires RunFilterCommand#filterundo\n   */\n  undo() {\n    // reset the image\n    this.#app.setLastImage(this.#filter.getOriginalImage());\n    // update display\n    this.#app.render(0); //todo: fix\n    /**\n     * Filter undo event.\n     *\n     * @event RunFilterCommand#filterundo\n     * @type {object}\n     * @property {string} type The event type: filterundo.\n     * @property {number} id The id of the undone run command.\n     */\n    const event = {\n      type: 'filterundo',\n      id: this.getName()\n    }; // callback\n    this.onUndo(event);\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // RunFilterCommand class\n","import {WindowLevel} from './windowLevel';\nimport {Scroll} from './scroll';\nimport {ZoomAndPan} from './zoomPan';\nimport {Opacity} from './opacity';\nimport {Draw} from './draw';\nimport {Floodfill} from './floodfill';\nimport {Livewire} from './livewire';\n\nimport {ArrowFactory} from './arrow';\nimport {CircleFactory} from './circle';\nimport {EllipseFactory} from './ellipse';\nimport {FreeHandFactory} from './freeHand';\nimport {ProtractorFactory} from './protractor';\nimport {RectangleFactory} from './rectangle';\nimport {RoiFactory} from './roi';\nimport {RulerFactory} from './ruler';\n\nimport {Threshold, Sobel, Sharpen} from './filter';\n\nexport const toolList = {\n  WindowLevel,\n  Scroll,\n  ZoomAndPan,\n  Opacity,\n  Draw,\n  Floodfill,\n  Livewire\n};\n\nexport const toolOptions = {\n  draw: {\n    ArrowFactory,\n    CircleFactory,\n    EllipseFactory,\n    FreeHandFactory,\n    ProtractorFactory,\n    RectangleFactory,\n    RoiFactory,\n    RulerFactory\n  },\n  filter: {\n    Threshold,\n    Sobel,\n    Sharpen\n  }\n};","import {Point2D} from '../math/point';\nimport {Line, getPerpendicularLine, getAngle} from '../math/line';\nimport {getDefaultAnchor} from './editor';\n\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultArrowLabelText = '';\n\n/**\n * Arrow factory.\n */\nexport class ArrowFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'line-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an arrow shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva object.\n   */\n  create(points, style, _viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // larger hitfunc\n    const linePerp0 = getPerpendicularLine(\n      line, points[0], style.scale(10));\n    const linePerp1 = getPerpendicularLine(\n      line, points[1], style.scale(10));\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(this);\n    });\n    // triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    const radius = 5 * style.getScaledStrokeWidth();\n    const kpoly = new Konva.RegularPolygon({\n      x: line.getBegin().getX() + radius * Math.sin(angleRad),\n      y: line.getBegin().getY() + radius * Math.cos(angleRad),\n      sides: 3,\n      radius: radius,\n      rotation: -angle,\n      fill: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-triangle'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof arrowLabelText !== 'undefined') {\n    //   textExpr = arrowLabelText;\n    // } else {\n    textExpr = defaultArrowLabelText;\n    // }\n    ktext.setText(textExpr);\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kpoly);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an arrow shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an arrow shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated triangle shape\n    const ktriangle = group.getChildren(function (node) {\n      return node.name() === 'shape-triangle';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // larger hitfunc\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, 10);\n    const linePerp1 = getPerpendicularLine(line, p2e, 10);\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(this);\n    });\n    // udate triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    ktriangle.x(\n      line.getBegin().getX() + ktriangle.radius() * Math.sin(angleRad));\n    ktriangle.y(\n      line.getBegin().getY() + ktriangle.radius() * Math.cos(angleRad));\n    ktriangle.rotation(-angle);\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class ArrowFactory\n","import {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultFreeHandLabelText = '';\n\n/**\n * FreeHand factory.\n */\nexport class FreeHandFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'freeHand-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 25;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(\n    points, style, _viewController) {\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < points.length; ++i) {\n      arr.push(points[i].getX());\n      arr.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      tension: 0.5\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof freeHandLabelText !== 'undefined') {\n    //   textExpr = freeHandLabelText;\n    // } else {\n    textExpr = defaultFreeHandLabelText;\n    // }\n    ktext.setText(textExpr);\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: points[0].getX(),\n      y: points[0].getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a free hand shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i;\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a FreeHand shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kline.points();\n    points[anchor.id()] = anchor.x() - kline.x();\n    points[anchor.id() + 1] = anchor.y() - kline.y();\n    // concat to make Konva think it is a new array\n    kline.points(points.concat());\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kline.x(),\n      y: points[1] + kline.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class FreeHandFactory\n","import {Line, getAngle} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {i18n} from '../utils/i18n';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultProtractorLabelText = '{angle}';\n\n/**\n * Protractor factory.\n */\nexport class ProtractorFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'protractor-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 3;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 500;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a protractor shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the protractor.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, _viewController) {\n    // physical shape\n    const line0 = new Line(points[0], points[1]);\n    // points stored the Konvajs way\n    const pointsArray = [];\n    for (let i = 0; i < points.length; ++i) {\n      pointsArray.push(points[i].getX());\n      pointsArray.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: pointsArray,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    // text and decoration\n    if (points.length === 3) {\n      const line1 = new Line(points[1], points[2]);\n      // larger hitfunc\n      kshape.hitFunc(function (context) {\n        context.beginPath();\n        context.moveTo(points[0].getX(), points[0].getY());\n        context.lineTo(points[1].getX(), points[1].getY());\n        context.lineTo(points[2].getX(), points[2].getY());\n        context.closePath();\n        context.fillStrokeShape(this);\n      });\n      // quantification\n      let angle = getAngle(line0, line1);\n      let inclination = line0.getInclination();\n      if (angle > 180) {\n        angle = 360 - angle;\n        inclination += angle;\n      }\n\n      // quantification\n      const ktext = new Konva.Text({\n        fontSize: style.getFontSize(),\n        fontFamily: style.getFontFamily(),\n        fill: style.getLineColour(),\n        padding: style.getTextPadding(),\n        shadowColor: style.getShadowLineColour(),\n        shadowOffset: style.getShadowOffset(),\n        name: 'text'\n      });\n      let textExpr = '';\n      // TODO: allow override?\n      // if (typeof protractorLabelText !== 'undefined') {\n      //   textExpr = protractorLabelText;\n      // } else {\n      textExpr = defaultProtractorLabelText;\n      // }\n      const quant = {\n        angle: {\n          value: angle,\n          unit: i18n('unit.degree')\n        }\n      };\n      ktext.setText(replaceFlags(textExpr, quant));\n      // meta data\n      ktext.meta = {\n        textExpr: textExpr,\n        quantification: quant\n      };\n\n      // label\n      const midX =\n        (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n      const midY =\n        (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n      const klabel = new Konva.Label({\n        x: midX,\n        y: midY - style.applyZoomScale(15).y,\n        scale: style.applyZoomScale(1),\n        visible: textExpr.length !== 0,\n        name: 'label'\n      });\n      klabel.add(ktext);\n      klabel.add(new Konva.Tag({\n        fill: style.getLineColour(),\n        opacity: style.getTagOpacity()\n      }));\n\n      // arc\n      const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n      const karc = new Konva.Arc({\n        innerRadius: radius,\n        outerRadius: radius,\n        stroke: style.getLineColour(),\n        strokeWidth: style.getStrokeWidth(),\n        strokeScaleEnabled: false,\n        angle: angle,\n        rotation: -inclination,\n        x: points[1].getX(),\n        y: points[1].getY(),\n        name: 'shape-arc'\n      });\n      // add to group\n      group.add(klabel);\n      group.add(karc);\n    }\n    // add shape to group\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    // return group\n    return group;\n  }\n\n  /**\n   * Get anchors to update a protractor shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'mid', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[4] + shape.x(), points[5] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a protractor shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // associated arc\n    const karc = group.getChildren(function (node) {\n      return node.name() === 'shape-arc';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const mid = group.getChildren(function (node) {\n      return node.id() === 'mid';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'mid':\n      mid.x(anchor.x());\n      mid.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const mx = mid.x() - kline.x();\n    const my = mid.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, mx, my, ex, ey]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(bx, by);\n      context.lineTo(mx, my);\n      context.lineTo(ex, ey);\n      context.closePath();\n      context.fillStrokeShape(this);\n    });\n    // update text\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(mid.x(), mid.y());\n    const p2d2 = new Point2D(end.x(), end.y());\n    const line0 = new Line(p2d0, p2d1);\n    const line1 = new Line(p2d1, p2d2);\n    let angle = getAngle(line0, line1);\n    let inclination = line0.getInclination();\n    if (angle > 180) {\n      angle = 360 - angle;\n      inclination += angle;\n    }\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = {\n      angle: {value: angle, unit: i18n('unit.degree')}\n    };\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n    // update position\n    const midX = (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n    const midY = (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n    const textPos = {\n      x: midX,\n      y: midY - style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n\n    // arc\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n    karc.innerRadius(radius);\n    karc.outerRadius(radius);\n    karc.angle(angle);\n    karc.rotation(-inclination);\n    const arcPos = {x: mid.x(), y: mid.y()};\n    karc.position(arcPos);\n  }\n\n} // class ProtractorFactory\n","import {Line, getPerpendicularLine} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultRulerLabelText = '{length}';\n\n/**\n * Ruler factory.\n */\nexport class RulerFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ruler-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a ruler shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    const tickLen = style.scale(10);\n\n    // tick begin\n    const linePerp0 = getPerpendicularLine(line, points[0], tickLen);\n    const ktick0 = new Konva.Line({\n      points: [linePerp0.getBegin().getX(),\n        linePerp0.getBegin().getY(),\n        linePerp0.getEnd().getX(),\n        linePerp0.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick0'\n    });\n\n    // tick end\n    const linePerp1 = getPerpendicularLine(line, points[1], tickLen);\n    const ktick1 = new Konva.Line({\n      points: [linePerp1.getBegin().getX(),\n        linePerp1.getBegin().getY(),\n        linePerp1.getEnd().getX(),\n        linePerp1.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick1'\n    });\n\n    // larger hitfunc\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(this);\n    });\n\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof rulerLabelText !== 'undefined') {\n    //   textExpr = rulerLabelText;\n    // } else {\n    textExpr = defaultRulerLabelText;\n    // }\n    const quant = line.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(ktick0);\n    group.add(ktick1);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a ruler shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a ruler shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated tick0\n    const ktick0 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick0';\n    })[0];\n      // associated tick1\n    const ktick1 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick1';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // tick\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, style.scale(10));\n    ktick0.points([linePerp0.getBegin().getX(),\n      linePerp0.getBegin().getY(),\n      linePerp0.getEnd().getX(),\n      linePerp0.getEnd().getY()]);\n    const linePerp1 = getPerpendicularLine(line, p2e, style.scale(10));\n    ktick1.points([linePerp1.getBegin().getX(),\n      linePerp1.getBegin().getY(),\n      linePerp1.getEnd().getX(),\n      linePerp1.getEnd().getY()]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(this);\n    });\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = line.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class RulerFactory\n","import {viewEventNames} from '../image/view';\nimport {ViewFactory} from '../image/viewFactory';\nimport {lut} from '../image/luts';\nimport {getMatrixFromName} from '../math/matrix';\nimport {Point3D} from '../math/point';\nimport {Stage} from '../gui/stage';\nimport {Style} from '../gui/style';\nimport {getViewOrientation} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {State} from '../io/state';\nimport {logger} from '../utils/logger';\nimport {UndoStack} from '../tools/undo';\nimport {ToolboxController} from './toolboxController';\nimport {LoadController} from './loadController';\nimport {DataController} from './dataController';\n\nimport {toolList, toolOptions} from '../tools';\nimport {binderList} from '../gui/stage';\n\n/**\n * Main application class.\n *\n * @example\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]}\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class App {\n\n  // app options\n  #options = null;\n\n  // data controller\n  #dataController = null;\n\n  // toolbox controller\n  #toolboxController = null;\n\n  // load controller\n  #loadController = null;\n\n  // stage\n  #stage = null;\n\n  // UndoStack\n  #undoStack = null;\n\n  // Generic style\n  #style = new Style();\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   * @private\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the image.\n   *\n   * @param {number} index The data index.\n   * @returns {Image} The associated image.\n   */\n  getImage(index) {\n    return this.#dataController.get(index).image;\n  }\n\n  /**\n   * Get the last loaded image.\n   *\n   * @returns {Image} The image.\n   */\n  getLastImage() {\n    return this.#dataController.get(this.#dataController.length() - 1).image;\n  }\n\n  /**\n   * Set the image at the given index.\n   *\n   * @param {number} index The data index.\n   * @param {Image} img The associated image.\n   */\n  setImage(index, img) {\n    this.#dataController.setImage(index, img);\n  }\n\n  /**\n   * Set the last image.\n   *\n   * @param {Image} img The associated image.\n   */\n  setLastImage(img) {\n    this.#dataController.setImage(this.#dataController.length() - 1, img);\n  }\n\n  /**\n   * Add a new image.\n   *\n   * @param {Image} image The new image.\n   * @param {object} meta The image meta.\n   * @returns {number} The new image id.\n   */\n  addNewImage(image, meta) {\n    const id = this.#dataController.length();\n\n    // load start event\n    this.#fireEvent({\n      type: 'loadstart',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n\n    // add image to data controller\n    this.#dataController.addNew(id, image, meta);\n\n    // load item event\n    this.#fireEvent({\n      type: 'loaditem',\n      loadtype: 'image',\n      data: meta,\n      source: 'internal',\n      loadid: id,\n      isfirstitem: true\n    });\n\n    // optional render\n    if (this.#options.viewOnFirstLoadItem) {\n      this.render(id);\n    }\n\n    // load events\n    this.#fireEvent({\n      type: 'load',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n    this.#fireEvent({\n      type: 'loadend',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n\n    return id;\n  }\n\n  /**\n   * Get the meta data.\n   *\n   * @param {number} index The data index.\n   * @returns {object} The list of meta data.\n   */\n  getMetaData(index) {\n    return this.#dataController.get(index).meta;\n  }\n\n  /**\n   * Get the number of loaded data.\n   *\n   * @returns {number} The number.\n   */\n  getNumberOfLoadedData() {\n    return this.#dataController.length();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has a third dimension greater than one.\n   */\n  canScroll() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canScroll();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  canWindowLevel() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canWindowLevel();\n  }\n\n  /**\n   * Get the layer scale on top of the base scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getAddedScale() {\n    return this.#stage.getActiveLayerGroup().getAddedScale();\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#stage.getActiveLayerGroup().getBaseScale();\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {object} The offset.\n   */\n  getOffset() {\n    return this.#stage.getActiveLayerGroup().getOffset();\n  }\n\n  /**\n   * Get the toolbox controller.\n   *\n   * @returns {object} The controller.\n   */\n  getToolboxController() {\n    return this.#toolboxController;\n  }\n\n  /**\n   * Get the active layer group.\n   * The layer is available after the first loaded item.\n   *\n   * @returns {LayerGroup} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.#stage.getActiveLayerGroup();\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   * The layer are available after the first loaded item.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    return this.#stage.getViewLayersByDataIndex(index);\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   * The layer are available after the first loaded item.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    return this.#stage.getDrawLayersByDataIndex(index);\n  }\n\n  /**\n   * Get a layer group by div id.\n   * The layer is available after the first loaded item.\n   *\n   * @param {string} divId The div id.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(divId) {\n    return this.#stage.getLayerGroupByDivId(divId);\n  }\n\n  /**\n   * Get the number of layer groups.\n   *\n   * @returns {number} The number of groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#stage.getNumberOfLayerGroups();\n  }\n\n  /**\n   * Get the app style.\n   *\n   * @returns {object} The app style.\n   */\n  getStyle() {\n    return this.#style;\n  }\n\n  /**\n   * Add a command to the undo stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  addToUndoStack = (cmd) => {\n    if (this.#undoStack !== null) {\n      this.#undoStack.add(cmd);\n    }\n  };\n\n  /**\n   * Initialise the application.\n   *\n   * @param {object} opt The application option with:\n   * - `dataViewConfigs`: data indexed object containing the data view\n   *   configurations in the form of a list of objects containing:\n   *   - divId: the HTML div id\n   *   - orientation: optional 'axial', 'coronal' or 'sagittal' orientation\n   *     string (default undefined keeps the original slice order)\n   * - `binders`: array of layerGroup binders\n   * - `tools`: tool name indexed object containing individual tool\n   *   configurations in the form of a list of objects containing:\n   *   - options: array of tool options\n   * - `viewOnFirstLoadItem`: boolean flag to trigger the first data render\n   *   after the first loaded data or not\n   * - `defaultCharacterSet`: the default chraracter set string used for DICOM\n   *   parsing\n   * @example\n   * // create the dwv app\n   * const app = new App();\n   * // initialise\n   * app.init({\n   *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n   *   viewOnFirstLoadItem: false\n   * });\n   * // render button\n   * const button = document.createElement('button');\n   * button.id = 'render';\n   * button.disabled = true;\n   * button.appendChild(document.createTextNode('render'));\n   * document.body.appendChild(button);\n   * app.addEventListener('load', function () {\n   *   const button = document.getElementById('render');\n   *   button.disabled = false;\n   *   button.onclick = function () {\n   *     // render data #0\n   *     app.render(0);\n   *   };\n   * });\n   * // load dicom data\n   * app.loadURLs([\n   *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n   * ]);\n   */\n  init(opt) {\n    // store\n    this.#options = opt;\n    // defaults\n    if (typeof this.#options.viewOnFirstLoadItem === 'undefined') {\n      this.#options.viewOnFirstLoadItem = true;\n    }\n\n    // undo stack\n    this.#undoStack = new UndoStack();\n    this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n    this.#undoStack.addEventListener('undo', this.#fireEvent);\n    this.#undoStack.addEventListener('redo', this.#fireEvent);\n\n    // tools\n    if (this.#options.tools && this.#options.tools.length !== 0) {\n      // setup the tool list\n      const appToolList = {};\n      const keys = Object.keys(this.#options.tools);\n      for (let t = 0; t < keys.length; ++t) {\n        const toolName = keys[t];\n        // find the tool in the Tools list\n        if (typeof toolList[toolName] !== 'undefined') {\n          // create tool instance\n          appToolList[toolName] = new toolList[toolName](this);\n          // register listeners\n          if (typeof appToolList[toolName].addEventListener !== 'undefined') {\n            const names = appToolList[toolName].getEventNames();\n            for (let j = 0; j < names.length; ++j) {\n              appToolList[toolName].addEventListener(names[j], this.#fireEvent);\n            }\n          }\n          // tool options\n          const toolParams = this.#options.tools[toolName];\n          if (typeof toolParams.options !== 'undefined') {\n            let type = 'raw';\n            if (typeof appToolList[toolName].getOptionsType !== 'undefined') {\n              type = appToolList[toolName].getOptionsType();\n            }\n            let appToolOptions = toolParams.options;\n            if (type === 'instance' || type === 'factory') {\n              appToolOptions = {};\n              for (let i = 0; i < toolParams.options.length; ++i) {\n                const optionName = toolParams.options[i];\n                let optionClassName = optionName;\n                if (type === 'factory') {\n                  optionClassName += 'Factory';\n                }\n                const toolNamespace = toolName.charAt(0).toLowerCase() +\n                  toolName.slice(1);\n                if (typeof toolOptions[toolNamespace][optionClassName] !==\n                  'undefined') {\n                  appToolOptions[optionName] =\n                    toolOptions[toolNamespace][optionClassName];\n                } else {\n                  logger.warn('Could not find option class for: ' +\n                    optionName);\n                }\n              }\n            }\n            appToolList[toolName].setOptions(appToolOptions);\n          }\n        } else {\n          logger.warn('Could not initialise unknown tool: ' + toolName);\n        }\n      }\n      // add tools to the controller\n      this.#toolboxController = new ToolboxController(appToolList);\n    }\n\n    // create load controller\n    this.#loadController =\n      new LoadController(this.#options.defaultCharacterSet);\n    this.#loadController.onloadstart = this.#onloadstart;\n    this.#loadController.onprogress = this.#onloadprogress;\n    this.#loadController.onloaditem = this.#onloaditem;\n    this.#loadController.onload = this.#onload;\n    this.#loadController.onloadend = this.#onloadend;\n    this.#loadController.onerror = this.#onloaderror;\n    this.#loadController.onabort = this.#onloadabort;\n\n    // create data controller\n    this.#dataController = new DataController();\n    // create stage\n    this.#stage = new Stage();\n    if (typeof this.#options.binders !== 'undefined') {\n      this.#stage.setBinders(this.#options.binders);\n    }\n  }\n\n  /**\n   * Get a HTML element associated to the application.\n   *\n   * @param {string} _name The name or id to find.\n   * @returns {object} The found element or null.\n   * @deprecated\n   */\n  getElement(_name) {\n    return null;\n  }\n\n  /**\n   * Reset the application.\n   */\n  reset() {\n    // clear objects\n    this.#dataController.reset();\n    this.#stage.empty();\n    // reset undo/redo\n    if (this.#undoStack) {\n      this.#undoStack = new UndoStack();\n      this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n      this.#undoStack.addEventListener('undo', this.#fireEvent);\n      this.#undoStack.addEventListener('redo', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Reset the layout of the application.\n   */\n  resetLayout() {\n    this.#stage.reset();\n    this.#stage.draw();\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  // load API [begin] -------------------------------------------------------\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {Array} files The list of files to load.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadFiles = (files) => {\n    if (files.length === 0) {\n      logger.warn('Ignoring empty input file list.');\n      return;\n    }\n    this.#loadController.loadFiles(files);\n  };\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} options The options object, can contain:\n   *  - requestHeaders: an array of {name, value} to use as request headers\n   *  - withCredentials: boolean xhr.withCredentials flag to pass to the request\n   *  - batchSize: the size of the request url batch\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadURLs = (urls, options) => {\n    if (urls.length === 0) {\n      logger.warn('Ignoring empty input url list.');\n      return;\n    }\n    this.#loadController.loadURLs(urls, options);\n  };\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadImageObject = (data) => {\n    this.#loadController.loadImageObject(data);\n  };\n\n  /**\n   * Abort the current load.\n   */\n  abortLoad() {\n    this.#loadController.abort();\n  }\n\n  // load API [end] ---------------------------------------------------------\n\n  /**\n   * Fit the display to the data of each layer group.\n   * To be called once the image is loaded.\n   */\n  fitToContainer() {\n    this.#stage.syncLayerGroupScale();\n  }\n\n  /**\n   * Init the Window/Level display\n   */\n  initWLDisplay() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    controller.initialise();\n  }\n\n  /**\n   * Get the layer group configuration from a data index.\n   * Defaults to div id 'layerGroup' if no association object has been set.\n   *\n   * @param {number} dataIndex The data index.\n   * @returns {Array} The list of associated configs.\n   */\n  #getViewConfigs(dataIndex) {\n    // check options\n    if (this.#options.dataViewConfigs === null ||\n      typeof this.#options.dataViewConfigs === 'undefined') {\n      throw new Error('No available data view configuration');\n    }\n    let configs = [];\n    if (typeof this.#options.dataViewConfigs['*'] !== 'undefined') {\n      configs = this.#options.dataViewConfigs['*'];\n    } else if (\n      typeof this.#options.dataViewConfigs[dataIndex] !== 'undefined') {\n      configs = this.#options.dataViewConfigs[dataIndex];\n    }\n    return configs;\n  }\n\n  /**\n   * Get the data view config.\n   * Carefull, returns a reference, do not modify without resetting.\n   *\n   * @returns {object} The configuration list.\n   */\n  getDataViewConfig() {\n    return this.#options.dataViewConfigs;\n  }\n\n  /**\n   * Set the data view configuration (see the init options for details).\n   *\n   * @param {object} configs The configuration list.\n   */\n  setDataViewConfig(configs) {\n    // clean up\n    this.#stage.empty();\n    // set new\n    this.#options.dataViewConfigs = configs;\n    // create layer groups\n    this.#createLayerGroups(configs);\n  }\n\n  /**\n   * Create layer groups according to a data view config:\n   * adds them to stage and bind them.\n   *\n   * @param {object} dataViewConfigs The data view config.\n   */\n  #createLayerGroups(dataViewConfigs) {\n    const dataKeys = Object.keys(dataViewConfigs);\n    const divIds = [];\n    for (let i = 0; i < dataKeys.length; ++i) {\n      const dataConfigs = dataViewConfigs[dataKeys[i]];\n      for (let j = 0; j < dataConfigs.length; ++j) {\n        const viewConfig = dataConfigs[j];\n        // view configs can contain the same divIds, avoid duplicating\n        if (!divIds.includes(viewConfig.divId)) {\n          // create new layer group\n          const element = document.getElementById(viewConfig.divId);\n          const layerGroup = this.#stage.addLayerGroup(element);\n          // bind events\n          this.#bindLayerGroupToApp(layerGroup);\n          // optional orientation\n          if (typeof viewConfig.orientation !== 'undefined') {\n            layerGroup.setTargetOrientation(\n              getMatrixFromName(viewConfig.orientation));\n          }\n          divIds.push(viewConfig.divId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder names.\n   */\n  setLayerGroupsBinders(list) {\n    // create instances\n    const instances = [];\n    for (let i = 0; i < list.length; ++i) {\n      if (typeof binderList[list[i]] !== 'undefined') {\n        instances.push(new binderList[list[i]]);\n      }\n    }\n    // pass to stage\n    this.#stage.setBinders(instances);\n  }\n\n  /**\n   * Render the current data.\n   *\n   * @param {number} dataIndex The data index to render.\n   */\n  render(dataIndex) {\n    if (typeof dataIndex === 'undefined' || dataIndex === null) {\n      throw new Error('Cannot render without data index');\n    }\n\n    // create layer groups if not done yet\n    // (create all to allow for ratio sync)\n    if (this.#stage.getNumberOfLayerGroups() === 0) {\n      this.#createLayerGroups(this.#options.dataViewConfigs);\n    }\n\n    // loop on all configs\n    const viewConfigs = this.#getViewConfigs(dataIndex);\n    // nothing to do if no view config\n    if (viewConfigs.length === 0) {\n      logger.info('Not rendering data: ' + dataIndex +\n        ' (no data view config)');\n      return;\n    }\n    for (let i = 0; i < viewConfigs.length; ++i) {\n      const config = viewConfigs[i];\n      const layerGroup =\n      this.#stage.getLayerGroupByDivId(config.divId);\n      // layer group must exist\n      if (!layerGroup) {\n        throw new Error('No layer group for ' + config.divId);\n      }\n      // initialise or add view\n      // warn: needs a loaded DOM\n      if (layerGroup.getViewLayersByDataIndex(dataIndex).length === 0) {\n        if (layerGroup.getNumberOfLayers() === 0) {\n          this.#initialiseBaseLayers(dataIndex, config);\n        } else {\n          this.#addViewLayer(dataIndex, config);\n        }\n      }\n      // draw\n      layerGroup.draw();\n    }\n  }\n\n  /**\n   * Zoom to the layers.\n   *\n   * @param {number} step The step to add to the current zoom.\n   * @param {number} cx The zoom center X coordinate.\n   * @param {number} cy The zoom center Y coordinate.\n   */\n  zoom(step, cx, cy) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController = layerGroup.getActiveViewLayer().getViewController();\n    const k = viewController.getCurrentScrollPosition();\n    const center = new Point3D(cx, cy, k);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  }\n\n  /**\n   * Apply a translation to the layers.\n   *\n   * @param {number} tx The translation along X.\n   * @param {number} ty The translation along Y.\n   */\n  translate(tx, ty) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    layerGroup.addTranslation({x: tx, y: ty});\n    layerGroup.draw();\n  }\n\n  /**\n   * Set the image layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    viewLayer.setOpacity(alpha);\n    viewLayer.draw();\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   */\n  setDrawings(drawings, drawingsDetails) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    drawController.setDrawings(\n      drawings, drawingsDetails, this.#fireEvent, this.addToUndoStack);\n\n    drawController.activateDrawLayer(\n      viewController.getCurrentOrientedIndex(),\n      viewController.getScrollIndex());\n  }\n\n  /**\n   * Get the JSON state of the app.\n   *\n   * @returns {object} The state of the app as a JSON object.\n   */\n  getState() {\n    const state = new State();\n    return state.toJSON(this);\n  }\n\n  // Handler Methods -----------------------------------------------------------\n\n  /**\n   * Handle resize: fit the display to the window.\n   * To be called once the image is loaded.\n   * Can be connected to a window 'resize' event.\n   *\n   * @param {object} _event The change event.\n   * @private\n   */\n  onResize = (_event) => {\n    this.fitToContainer();\n  };\n\n  /**\n   * Key down callback. Meant to be used in tools.\n   *\n   * @param {object} event The key down event.\n   * @fires App#keydown\n   */\n  onKeydown = (event) => {\n    /**\n     * Key down event.\n     *\n     * @event App#keydown\n     * @type {KeyboardEvent}\n     * @property {string} type The event type: keydown.\n     * @property {string} context The tool where the event originated.\n     */\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Key down event handler example.\n   * - CRTL-Z: undo\n   * - CRTL-Y: redo\n   * - CRTL-ARROW_LEFT: next element on fourth dim\n   * - CRTL-ARROW_UP: next element on third dim\n   * - CRTL-ARROW_RIGHT: previous element on fourth dim\n   * - CRTL-ARROW_DOWN: previous element on third dim\n   *\n   * @param {object} event The key down event.\n   * @fires UndoStack#undo\n   * @fires UndoStack#redo\n   */\n  defaultOnKeydown = (event) => {\n    if (event.ctrlKey) {\n      if (event.shiftKey) {\n        const viewController =\n          this.#stage.getActiveLayerGroup()\n            .getActiveViewLayer().getViewController();\n        const size = viewController.getImageSize();\n        if (event.key === 'ArrowLeft') { // crtl-shift-arrow-left\n          if (size.moreThanOne(3)) {\n            viewController.decrementIndex(3);\n          }\n        } else if (event.key === 'ArrowUp') { // crtl-shift-arrow-up\n          if (viewController.canScroll()) {\n            viewController.incrementScrollIndex();\n          }\n        } else if (event.key === 'ArrowRight') { // crtl-shift-arrow-right\n          if (size.moreThanOne(3)) {\n            viewController.incrementIndex(3);\n          }\n        } else if (event.key === 'ArrowDown') { // crtl-shift-arrow-down\n          if (viewController.canScroll()) {\n            viewController.decrementScrollIndex();\n          }\n        }\n      } else if (event.key === 'y') { // crtl-y\n        this.#undoStack.redo();\n      } else if (event.key === 'z') { // crtl-z\n        this.#undoStack.undo();\n      } else if (event.key === ' ') { // crtl-space\n        for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n          this.#stage.getLayerGroup(i).setShowCrosshair(\n            !this.#stage.getLayerGroup(i).getShowCrosshair()\n          );\n        }\n      }\n    }\n  };\n\n  // Internal members shortcuts-----------------------------------------------\n\n  /**\n   * Reset the display\n   */\n  resetDisplay() {\n    this.resetLayout();\n    this.initWLDisplay();\n  }\n\n  /**\n   * Reset the app zoom.s\n   */\n  resetZoom() {\n    this.resetLayout();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {string} colourMap The colour map name.\n   */\n  setColourMap(colourMap) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setColourMapFromName(colourMap);\n  }\n\n  /**\n   * Set the window/level preset.\n   *\n   * @param {object} preset The window/level preset.\n   */\n  setWindowLevelPreset(preset) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setWindowLevelPreset(preset);\n  }\n\n  /**\n   * Set the tool\n   *\n   * @param {string} tool The tool.\n   */\n  setTool(tool) {\n    // bind tool to active layer\n    for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n      const layerGroup = this.#stage.getLayerGroup(i);\n      // draw or view layer\n      let layer = null;\n      if (tool === 'Draw' ||\n        tool === 'Livewire' ||\n        tool === 'Floodfill') {\n        layer = layerGroup.getActiveDrawLayer();\n      } else {\n        layer = layerGroup.getActiveViewLayer();\n      }\n      if (layer) {\n        this.#toolboxController.bindLayer(layer, layerGroup.getDivId());\n      }\n    }\n\n    // set toolbox tool\n    this.#toolboxController.setSelectedTool(tool);\n  }\n\n  /**\n   * Set the tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    this.#toolboxController.setToolFeatures(list);\n  }\n\n  /**\n   * Undo the last action\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    this.#undoStack.undo();\n  }\n\n  /**\n   * Redo the last action\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    this.#undoStack.redo();\n  }\n\n  /**\n   * Get the undo stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#undoStack.getStackSize();\n  }\n\n  /**\n   * Get the current undo stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#undoStack.getCurrentStackIndex();\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   * @private\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Data load start callback.\n   *\n   * @param {object} event The load start event.\n   * @private\n   */\n  #onloadstart = (event) => {\n    /**\n     * Load start event.\n     *\n     * @event App#loadstart\n     * @type {object}\n     * @property {string} type The event type: loadstart.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadstart';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load progress callback.\n   *\n   * @param {object} event The progress event.\n   * @private\n   */\n  #onloadprogress = (event) => {\n    /**\n     * Load progress event.\n     *\n     * @event App#loadprogress\n     * @type {object}\n     * @property {string} type The event type: loadprogress.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {number} loaded The loaded percentage.\n     * @property {number} total The total percentage.\n     */\n    event.type = 'loadprogress';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   * @private\n   */\n  #onloaditem = (event) => {\n    // check event\n    if (typeof event.data === 'undefined') {\n      logger.error('Missing loaditem event data.');\n    }\n    if (typeof event.loadtype === 'undefined') {\n      logger.error('Missing loaditem event load type.');\n    }\n\n    const isFirstLoadItem = event.isfirstitem;\n\n    let eventMetaData = null;\n    if (event.loadtype === 'image') {\n      if (isFirstLoadItem) {\n        this.#dataController.addNew(\n          event.loadid, event.data.image, event.data.info);\n      } else {\n        this.#dataController.update(\n          event.loadid, event.data.image, event.data.info);\n      }\n      eventMetaData = event.data.info;\n    } else if (event.loadtype === 'state') {\n      const state = new State();\n      state.apply(this, state.fromJSON(event.data));\n      eventMetaData = 'state';\n    }\n\n    /**\n     * Load item event: fired when a load item is successfull.\n     *\n     * @event App#loaditem\n     * @type {object}\n     * @property {string} type The event type: loaditem.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} data The loaded meta data.\n     */\n    this.#fireEvent({\n      type: 'loaditem',\n      data: eventMetaData,\n      source: event.source,\n      loadtype: event.loadtype,\n      loadid: event.loadid,\n      isfirstitem: event.isfirstitem\n    });\n\n    // render if first and flag allows\n    if (event.loadtype === 'image' &&\n    this.#getViewConfigs(event.loadid).length !== 0 &&\n      isFirstLoadItem && this.#options.viewOnFirstLoadItem) {\n      this.render(event.loadid);\n    }\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   * @private\n   */\n  #onload = (event) => {\n    /**\n     * Load event: fired when a load finishes successfully.\n     *\n     * @event App#load\n     * @type {object}\n     * @property {string} type The event type: load.\n     * @property {string} loadType The load type: image or state.\n     */\n    event.type = 'load';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load end callback.\n   *\n   * @param {object} event The load end event.\n   * @private\n   */\n  #onloadend = (event) => {\n    /**\n     * Main load end event: fired when the load finishes,\n     *   successfully or not.\n     *\n     * @event App#loadend\n     * @type {object}\n     * @property {string} type The event type: loadend.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadend';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load error callback.\n   *\n   * @param {object} event The error event.\n   * @private\n   */\n  #onloaderror = (event) => {\n    /**\n     * Load error event.\n     *\n     * @event App#loaderror\n     * @type {object}\n     * @property {string} type The event type: error.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} error The error.\n     * @property {object} target The event target.\n     */\n    event.type = 'loaderror';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load abort callback.\n   *\n   * @param {object} event The abort event.\n   * @private\n   */\n  #onloadabort = (event) => {\n    /**\n     * Load abort event.\n     *\n     * @event App#loadabort\n     * @type {object}\n     * @property {string} type The event type: abort.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadabort';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Bind layer group events to app.\n   *\n   * @param {object} group The layer group.\n   * @private\n   */\n  #bindLayerGroupToApp(group) {\n    // propagate layer group events\n    group.addEventListener('zoomchange', this.#fireEvent);\n    group.addEventListener('offsetchange', this.#fireEvent);\n    // propagate viewLayer events\n    group.addEventListener('renderstart', this.#fireEvent);\n    group.addEventListener('renderend', this.#fireEvent);\n    // propagate view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      group.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate drawLayer events\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      group.addEventListener('drawcreate', this.#fireEvent);\n      group.addEventListener('drawdelete', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Initialise the layers.\n   * To be called once the DICOM data has been loaded.\n   *\n   * @param {number} dataIndex The data index.\n   * @param {object} dataViewConfig The data view config.\n   * @private\n   */\n  #initialiseBaseLayers(dataIndex, dataViewConfig) {\n    // add layers\n    this.#addViewLayer(dataIndex, dataViewConfig);\n\n    // initialise the toolbox\n    if (this.#toolboxController) {\n      this.#toolboxController.init();\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @param {number} dataIndex The data index.\n   * @param {object} dataViewConfig The data view config.\n   */\n  #addViewLayer(dataIndex, dataViewConfig) {\n    const data = this.#dataController.get(dataIndex);\n    if (!data) {\n      throw new Error('Cannot initialise layer with data id: ' + dataIndex);\n    }\n    const layerGroup = this.#stage.getLayerGroupByDivId(dataViewConfig.divId);\n    if (!layerGroup) {\n      throw new Error('Cannot initialise layer with group id: ' +\n        dataViewConfig.divId);\n    }\n    const imageGeometry = data.image.getGeometry();\n\n    // un-bind\n    this.#stage.unbindLayerGroups();\n\n    // create and setup view\n    const viewFactory = new ViewFactory();\n    const view = viewFactory.create(data.meta, data.image);\n    const viewOrientation = getViewOrientation(\n      imageGeometry.getOrientation(),\n      layerGroup.getTargetOrientation()\n    );\n    view.setOrientation(viewOrientation);\n\n    // make pixel of value 0 transparent for segmentation\n    // (assuming RGB data)\n    if (data.image.getMeta().Modality === 'SEG') {\n      view.setAlphaFunction(function (value /*, index*/) {\n        if (value[0] === 0 &&\n          value[1] === 0 &&\n          value[2] === 0) {\n          return 0;\n        } else {\n          return 0xff;\n        }\n      });\n    }\n\n    // colour map\n    if (typeof dataViewConfig.colourMap !== 'undefined') {\n      view.setColourMap(dataViewConfig.colourMap);\n    }\n\n    const isBaseLayer = layerGroup.getNumberOfLayers() === 0;\n\n    // opacity\n    let opacity = 1;\n    // do we have more than one layer\n    // (the layer has not been added to the layer group yet)\n    if (!isBaseLayer) {\n      opacity = 0.5;\n      // set color map if non was provided\n      if (typeof dataViewConfig.colourMap === 'undefined') {\n        view.setColourMap(lut.rainbow);\n      }\n    }\n\n    // view layer\n    const viewLayer = layerGroup.addViewLayer();\n    viewLayer.setView(view, dataIndex);\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\n    viewLayer.initialise(size2D, spacing2D, opacity);\n    const viewController = viewLayer.getViewController();\n\n    // listen to controller events\n    if (data.image.getMeta().Modality === 'SEG') {\n      viewController.addEventListener('masksegmentdelete', this.#fireEvent);\n      viewController.addEventListener('masksegmentredraw', this.#fireEvent);\n    }\n\n    // listen to image changes\n    this.#dataController.addEventListener('imageset', viewLayer.onimageset);\n    this.#dataController.addEventListener('imagechange', (event) => {\n      viewLayer.onimagechange(event);\n      this.render(event.dataid);\n    });\n\n    // bind\n    this.#stage.bindLayerGroups();\n    if (this.#toolboxController) {\n      this.#toolboxController.bindLayer(viewLayer, layerGroup.getDivId());\n    }\n\n    // optional draw layer\n    let drawLayer;\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      drawLayer = layerGroup.addDrawLayer();\n      drawLayer.initialise(size2D, spacing2D, dataIndex);\n      drawLayer.setPlaneHelper(viewLayer.getViewController().getPlaneHelper());\n    }\n\n    // sync layers position\n    const value = [\n      viewController.getCurrentIndex().getValues(),\n      viewController.getCurrentPosition().getValues()\n    ];\n    layerGroup.updateLayersToPositionChange({\n      value: value,\n      srclayerid: viewLayer.getId()\n    });\n\n    // sync layer groups\n    this.#stage.syncLayerGroupScale();\n\n    // major orientation axis\n    const major = imageGeometry.getOrientation().getThirdColMajorDirection();\n\n    // view layer offset (done before scale)\n    viewLayer.setOffset(layerGroup.getOffset());\n    // extra flip offset for oriented views...\n    if (typeof dataViewConfig.orientation !== 'undefined') {\n      if (major === 2) {\n        // flip offset Y for axial aquired data\n        if (dataViewConfig.orientation !== 'axial') {\n          viewLayer.addFlipOffsetY();\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.addFlipOffsetY();\n          }\n        }\n      } else if (major === 0) {\n        // flip offset X for sagittal aquired data\n        if (dataViewConfig.orientation !== 'sagittal') {\n          viewLayer.addFlipOffsetX();\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.addFlipOffsetX();\n          }\n        }\n      }\n    }\n\n    // view layer scale\n    // only flip scale for base layers\n    if (isBaseLayer) {\n      if (typeof dataViewConfig.orientation !== 'undefined') {\n        if (major === 0 || major === 2) {\n          // scale flip Z for oriented views...\n          layerGroup.flipScaleZ();\n        } else {\n          viewLayer.setScale(layerGroup.getScale());\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.setScale(layerGroup.getScale());\n          }\n        }\n      } else {\n        if (major === 0) {\n          // scale flip Z for sagittal and undefined target orientation\n          layerGroup.flipScaleZ();\n        } else {\n          viewLayer.setScale(layerGroup.getScale());\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.setScale(layerGroup.getScale());\n          }\n        }\n      }\n    } else {\n      viewLayer.setScale(layerGroup.getScale());\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.setScale(layerGroup.getScale());\n      }\n    }\n\n  }\n\n} // class App\n","import {\n  getDwvVersion,\n  getTypedArray,\n  DicomParser\n} from './dicom/dicomParser.js';\nimport {\n  getUID,\n  getElementsFromJSONTags,\n  DicomWriter\n} from './dicom/dicomWriter';\nimport {dictionary} from './dicom/dictionary';\nimport {getPixelDataTag} from './dicom/dicomTag';\nimport {App} from './app/application';\nimport {loadFromUri} from './utils/uri';\nimport {precisionRound} from './utils/string';\nimport {Point} from './math/point';\nimport {decoderScripts} from './image/decoder';\nimport {lut} from './image/luts';\nimport {buildMultipart} from './utils/array';\nimport {logger} from './utils/logger';\nimport {customUI} from './gui/generic';\nimport {defaultPresets} from './image/windowLevel';\n\nconst dicom = {\n  getUID,\n  getElementsFromJSONTags,\n  getTypedArray,\n  getPixelDataTag,\n  dictionary,\n  DicomParser,\n  DicomWriter\n};\nconst gui = {\n  customUI\n};\nconst image = {\n  decoderScripts,\n  lut\n};\nconst math = {\n  Point\n};\nconst tools = {\n  defaultPresets\n};\nconst utils = {\n  loadFromUri,\n  precisionRound,\n  buildMultipart\n};\n\nexport {\n  getDwvVersion,\n  logger,\n  App,\n  dicom,\n  gui,\n  image,\n  math,\n  tools,\n  utils\n};\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__196__","__WEBPACK_EXTERNAL_MODULE__290__","__WEBPACK_EXTERNAL_MODULE__680__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","dictionary","tagGroups","x0000","x0002","x0004","x0008","x0009","x0010","x0012","x0018","x0019","x0020","x0021","x0022","x0028","x0032","x0038","x003A","x0040","x0042","x0050","x0054","x0060","x0070","x0072","x0088","x0100","x0400","x1000","x1010","x2000","x2010","x2020","x2030","x2040","x2050","x2100","x2110","x2120","x2130","x2200","x3002","x3004","x3006","x3008","x300A","x300C","x300E","x4000","x4008","x4FFE","x5000","x5002","x5004","x5006","x5008","x500A","x500C","x500E","x5400","x6000","x6002","x6004","x6008","x600A","x600C","x600E","xFFFC","x7FE0","xFFFF","vr32bitVL","charSetString","vrTypes","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","LO","LT","OB","OD","OF","OL","OV","OW","PN","SH","SL","SQ","SS","ST","SV","TM","UC","UI","UL","UN","UR","US","UT","UV","_group","WeakMap","_element","Tag","constructor","group","element","_classPrivateFieldInitSpec","writable","Error","length","startsWith","_classPrivateFieldSet","getGroup","_classPrivateFieldGet","getElement","toString","getKey","getNameFromDictionary","equals","rhs","substring","getKey2","getGroupName","isWithVR","isPrivate","parseInt","getInfoFromDictionary","info","getVrFromDictionary","vr","name","getItemTag","isItemTag","tag","getItemDelimitationItemTag","isItemDelimitationItemTag","getSequenceDelimitationItemTag","isSequenceDelimitationItemTag","getPixelDataTag","isPixelDataTag","getTagFromDictionary","tagName","dict","keys0","keys","keys1","foundTag","k0","lenK0","k1","lenK1","isNativeLittleEndian","Int8Array","Int16Array","buffer","flipArrayEndianness","array","blen","byteLength","u8","Uint8Array","byteOffset","bpe","BYTES_PER_ELEMENT","tmp","i","j","k","_buffer","_isLittleEndian","_isNativeLittleEndian","_needFlip","_view","DataReader","isLittleEndian","DataView","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readBigUint64","getBigUint64","readInt32","getInt32","readBigInt64","getBigInt64","readFloat32","getFloat32","readFloat64","getFloat64","readBinaryArray","size","bitArray","byteArrayLength","data","bitNumber","bitIndex","Math","floor","readUint8Array","readInt8Array","readUint16Array","Uint16Array","arraySize","readInt16Array","readUint32Array","Uint32Array","readUint64Array","BigUint64Array","readInt32Array","Int32Array","readInt64Array","BigInt64Array","readFloat32Array","Float32Array","readFloat64Array","Float64Array","readHex","str","toUpperCase","Index","values","_values","every","val","isNaN","getValues","slice","canCompare","leni","compare","diffDims","push","add","getWithNew2D","l","lenl","toStringId","dims","ii","res","getIndexFromStringId","inputStr","strIds","split","dim","pointLength","Array","fill","Size","moreThanOne","dimension","canScroll3D","viewOrientation","getThirdColMajorDirection","canScroll","getDimSize","start","getTotalSize","isInBounds","index","dirs","indexToOffset","offset","offsetToIndex","off","dimSize","get2D","x","y","Spacing","logger","levels","TRACE","DEBUG","INFO","WARN","ERROR","level","trace","msg","console","debug","warn","error","_dicomElements","DicomElementsWrapper","dicomElements","getDEFromKey","groupElementKey","getFromKey","asArray","dElement","dumpToObject","dicomElement","getTagName","getElementAsObject","isPixel","getElementValueAsString","items","itemValues","itemElement","vl","dump","result","checkHeader","getTransferSyntaxName","cleanString","x00020010","getElementAsString","pretty","isInteger","Number","isFinite","undefinedLength","daValue","monthBeginIndex","dayBeginIndex","Date","toLocaleDateString","tmValue","isOtherVR","isFloatNumberVR","valueStr","lenk","num","toPrecision","getElementValueAsStringFromKey","prefix","deSize","isPixSequence","line","toLowerCase","nSpaces","s","message","item","itemKeys","xFFFEE000","m","lenm","itemDelimElement","sqDelimElement","pixItem","lenn","pixDelimElement","getFromGroupElement","getFromName","getImageSize","rows","columns","getPixelSpacing","rowSpacing","columnSpacing","spacing","parseFloat","getTime","getPixelUnit","unit","getDwvVersion","trim","String","fromCharCode","DefaultTextDecoder","decode","isImplicitTransferSyntax","syntax","isBigEndianTransferSyntax","isJpegBaselineTransferSyntax","isJpegLosslessTransferSyntax","isJpeg2000TransferSyntax","match","isRleTransferSyntax","isJpegRetiredTransferSyntax","isJpeglsTransferSyntax","getTypedArray","bitsAllocated","pixelRepresentation","RangeError","powerOf2","log","is32bitVLVR","includes","getDataElementPrefixByteSize","isImplicit","_defaultCharacterSet","_defaultTextDecoder","_textDecoder","DicomParser","decodeString","decodeSpecialString","getDefaultCharacterSet","setDefaultCharacterSet","characterSet","setCharacterSet","setDecoderCharacterSet","TextDecoder","getRawDicomElements","getDicomElements","readTag","reader","endOffset","readItemDataElement","implicit","itemData","readDataElement","isSeqDelim","isItemDelim","readPixelItemDataElement","offsetTableVl","readTagRes","is32bitVL","startOffset","pixItemData","sqEndOffset","interpretElement","vrType","stream","raw","stri","stri1","subElement","interpret","elements","parse","dataElement","metaReader","dataReader","magicword","metaEnd","tsElement","firstDataElement","oEightGroupLittleEndian","vr0","charCodeAt","vr1","guessTransferSyntax","isReadSupportedTransferSyntax","x7FE00010","x00280103","x00280100","x00080005","charSetTerm","label","getUtfLabel","numberOfFrames","x00280008","pixItems","nItemPerFrame","newPixItems","f","newBuffer","fragOffset","set","DataWriter","writeUint8","setUint8","writeInt8","setInt8","writeUint16","setUint16","writeInt16","setInt16","writeUint32","setUint32","writeUint64","setBigUint64","writeInt32","setInt32","writeInt64","setBigInt64","writeFloat32","setFloat32","writeFloat64","setFloat64","writeHex","writeBinaryArray","byte","len","writeUint8Array","writeInt8Array","writeUint16Array","writeInt16Array","writeUint32Array","writeUint64Array","writeInt32Array","writeInt64Array","writeFloat32Array","writeFloat64Array","_uidCount","getUID","getDwvUIDPrefix","uid","datePart","toISOString","replace","countPart","nonTagLength","min","tagNumber","isEven","number","isStringVr","uint8ArrayPush","arr","newArr","DefaultTextEncoder","encode","_useUnVrForPrivateSq","_actions","_defaultRules","_rules","_defaultTextEncoder","_textEncoder","checkUnknownVR","dictVr","getDicomElement","RescaleLut","rsi","bitsStored","_rsi","_lut","_isReady","_length","pow","getRSI","isReady","initialise","apply","getLength","getValue","WindowLut","rescaleLut","isSigned","_rescaleLut","_isSigned","_windowLevel","_signedShift","getWindowLevel","getRescaleLut","setWindowLevel","wl","setSignedOffset","getSlope","update","Uint8ClampedArray","lut_range_max","buildLut","func","lut","id","invId","plain","red","green","blue","invPlain","rainbow","hot","third","hot_iron","pet","hot_metal_blue","pet_20step","defaultPresets","CT","mediastinum","center","width","lung","bone","brain","head","_center","_width","_signedOffset","_ymin","_ymax","_xmin","_xmax","_slope","_inter","_init","WeakSet","WindowLevel","_classPrivateMethodGet","_init2","getCenter","getWidth","setRange","max","c","getShadowColour","hexColour","hexStr","rgbTriplet","g","b","isDarkColour","d65","z","colourNameToHex","Yellow","Red","White","Green","Blue","Lime","Fuchsia","Black","Vector3D","_x","_y","_z","getX","getY","getZ","norm","sqrt","crossProduct","vector3D","dotProduct","EPSILON","BIG_EPSILON","isSimilar","tol","abs","_inverse","Matrix33","row","col","getInverse","m00","m01","m02","m10","m11","m12","m20","m21","m22","a1212","a2012","a0112","det","getMatrixInverse","p","multiply","getAbs","multiplyArray3D","array3D","multiplyVector3D","multiplyPoint3D","point3D","Point3D","multiplyIndex3D","index3D","getRowAbsMax","absMax","indexOf","getColAbsMax","asOneAndZeros","sign","getIdentityMat33","getCoronalMat33","getMatrixFromName","matrix","Point2D","getDistance","point2D","getRound","round","_x2","_y2","minus","Point","get3D","values0","values1","mergeWith3D","range","dataAccessor","maxIter","increment","blockMaxIter","blockIncrement","reverse1","reverse2","nextIndex","finalBlockIncrement","mainCount","blockCount","next","done","getIteratorValues","iterator","ival","getSliceIterator","image","position","isRescaled","getGeometry","getSize","dirMax2Index","posValues","posStart","map","getRescaledValueAtOffset","getValueAtOffset","ncols","nrows","nslices","sliceSize","ncomp","getNumberOfComponents","isPlanar","getPlanarConfiguration","getRange","iters","r0","r1","r2","range3d","rangeObj","dirMax0","dirMax2","end","simpleRange","componentIncrement","nextIndex1","nextIndex2","simpleRange3d","colourRange","colours","nextColourIndex","colour","ListenerHandler","_listeners","_defineProperty","event","type","stack","callback","remove","splice","viewEventNames","_image","_windowLuts","_windowPresets","_currentPresetName","_currentWl","_colourMap","_currentPosition","_orientation","_listenerHandler","_alphaFunction","_fireEvent","View","minmax","_value","_index","fireEvent","addEventListener","getCurrentIndex","setCurrentIndex","getImage","setImage","inImage","getOrientation","setOrientation","mat33","init","setInitialIndex","getPlaybackMilliseconds","recommendedDisplayFrameRate","getAlphaFunction","setAlphaFunction","getCurrentWindowLut","currentIndex","getRescaleSlopeAndIntercept","perslice","getSecondaryOffset","setWindowLevelPresetById","wlut","getMeta","BitsStored","windowLut","IsSigned","addWindowLut","lutWl","wc","ww","skipGenerate","getWindowPresets","getWindowPresetsNames","setWindowPresets","presets","setDefaultColourMap","addWindowPresets","getColourMap","setColourMap","getCurrentPosition","worldToIndex","canSetPosition","geometry","getScrollIndex","isIndexInBounds","getOrigin","originIndex","getOrigins","setCurrentPosition","silent","valid","indexToWorld","minLen","maxLen","posEvent","imageUid","getImageUid","canQuantify","pixValue","getRescaledValueAtIndex","newWl","isNewWidth","isNewCenter","setWindowLevelPreset","preset","getWindowLevelMinMax","clone","copy","setListeners","getListeners","removeEventListener","getRescaledDataRange","setWindowLevelMinMax","generateImageData","photoInterpretation","getPhotometricInterpretation","alphaFunc","colourMap","pxValue","generateImageDataMonochrome","is16BitsStored","to8","generateImageDataPaletteColor","generateImageDataRgb","rgb","cb","cr","generateImageDataYbrFull","incrementIndex","incr","newIndex","decrementIndex","orientation","decrementScrollIndex","incrementScrollIndex","ViewFactory","create","view","paletteLut","windowPresets","modality","Modality","RescaleSlopeAndIntercept","slope","intercept","_intercept","getIntercept","isID","_geometry","_imageUids","_rsis","_isIdentityRSI","_isConstantRSI","_photometricInterpretation","_planarConfiguration","_numberOfComponents","_meta","_dataRange","_rescaledDataRange","_histogram","_getSecondaryOffsetMax","_getRescaleSlopeAndInterceptAtOffset","_realloc","Image","imageUids","_classPrivateMethodInitSpec","getBuffer","canWindowLevel","nFiles","numberOfFiles","isConstantRSI","setRescaleSlopeAndIntercept","inRsi","_getSecondaryOffsetMax2","isIdentityRSI","setPhotometricInterpretation","interp","setPlanarConfiguration","config","setMeta","getOffsets","offsets","equal","hasValues","finalValues","v1","equalFunc","getEqualCallback","valuesToFind","indicesToRemove","v","findIndex","clonedBuffer","_getRescaleSlopeAndInterceptAtOffset2","appendSlice","rhsSize","timeId","getInitialTime","isNewFrame","hasSlicesAtTime","appendFrame","volumeGeometry","sliceGeometry","getSliceIndex","fullBufferSize","_realloc2","sliceIndex","fullSliceIndex","getCurrentNumberOfSlicesBeforeTime","indexOffset","maxOffset","getCurrentTotalNumberOfSlices","subarray","appendOrigin","numberOfImages","rhsPresets","pkey","rhsPreset","windowPreset","appendFrameBuffer","frameBuffer","frameIndex","frameSize","time","origin","getDataRange","calculateDataRange","calculateRescaledDataRange","getHistogram","calculateHistogram","dataRange","rescaledDataRange","histogram","setAtOffsets","setAtOffsetsAndGetOriginals","offsetsLists","originalColoursLists","previousColour","originalColours","currentColour","setAtOffsetsWithIterator","getValueAtIndex","getRescaledValue","resmin","resmax","rmin","rmax","rvalue","histo","convolute2D","weights","newImage","imgSize","dimOffset","convoluteBuffer","factor","componentOffset","wOff","wOff00","wOff0x","wOff0n","wOffx0","wOffxn","wOffn0","wOffnx","wOffnn","pixelOffset","newValue","wOffFinal","wi","transform","operator","compose","tmpBuffer","_origins","_size","_spacing","_timeOrigins","_initialTime","_newOrigins","_updateSliceSpacing","Geometry","count","includesOrigin","getOrientedArray3D","concat","getSpacing","_updateSliceSpacing2","orientedValues","getRealSpacing","point","localOrigins","closestSliceIndex","minDist","dist","closestOrigin","pointDir","sizeValues","spacingValues","orientedPoint3D","pointToWorld","worldToPoint","geoSliceSpacing","getSliceGeometrySpacing","origins","withCheck","invOrientation","origin1","origin2","sliceSpacing","deltas","diff","sumReducer","sum","mean","reduce","toFixed","_imageOrientation","_viewOrientation","_targetOrientation","PlaneHelper","imageOrientation","targetOrientation","getTargetOrientation","getOffset3DFromPlaneOffset","offset2D","planeOffset","getTargetDeOrientedVector3D","getPlaneOffsetFromOffset3D","offset3D","getTargetOrientedVector3D","vector","planeVector","getImageOrientedVector3D","getImageDeOrientedVector3D","getTargetOrientedPositiveXYZ","getNativeScrollIndex","_mask","_segments","_hiddenSegments","_getHiddenIndex","MaskSegmentHelper","mask","custom","segments","hasSegment","segmentNumber","getSegment","maskHasSegments","numbers","unknowns","segment","displayValue","find","getSegments","setSegments","list","setHiddenSegments","isHidden","_getHiddenIndex2","addToHidden","removeFromHidden","getAlphaFunc","hiddenColours","deleteSegment","cmdCallback","exeCallback","delcmd","DeleteSegmentCommand","onExecute","onUndo","isValid","execute","_mask2","_segment","_isSilent","_offsets","getName","segmentnumber","undo","_event","_planeHelper","_maskSegmentHelper","_playerID","_dataIndex","ViewController","dataid","getPlaneHelper","isMask","maskSegmentHelper","getMaskSegmentHelper","applyHiddenSegments","setViewAlphaFunction","getPositionFromPlanePoint","getWindowLevelPresetsNames","addWindowLevelPresets","isPlaying","getCurrentOrientedIndex","getCurrentScrollIndexValue","getCurrentScrollPosition","scrollIndex","img","get2DSpacing","getRescaledImageValue","pixelUnit","getImageRegionValues","rescaled","sliceValues","sliceOrigin","iter","rangeNumberOfColumns","regionSize","regionOffset","regionElementCount","rangeRegion","getRegionSliceIterator","getImageVariableRegionValues","regions","offsetRegions","region","regionCount","rangeRegions","getVariableRegionSliceIterator","canQuantifyImage","getImageWorldSize","getImageRescaledDataRange","equalImageMeta","meta","imageMeta","metaKeys","metaKey","pos","planePoint","getPlanePositionFromPosition","getPlanePositionFromPlanePoint","play","RecommendedDisplayFrameRate","milliseconds","setInterval","canDoMore","stop","clearInterval","setColourMapFromName","InteractionEventNames","prompt","customUI","getTouchesPositions","touches","offsetLeft","offsetTop","target","offsetParent","positions","pageX","pageY","getEventOffset","targetTouches","changedTouches","offsetX","offsetY","canCreateCanvas","height","testCvs","document","createElement","cropCvs","testCtx","getContext","cropCtx","fillRect","drawImage","getImageData","_containerDiv","_viewController","_canvas","_offscreenCanvas","_context","_isValidPosition","_imageData","_baseSize","_baseSpacing","_opacity","_scale","_fitScale","_offset","_baseOffset","_viewOffset","_zoomOffset","_flipOffset","_needsDataUpdate","_imageSmoothingEnabled","_setBaseSize","_updateImageData","_onWLChange","_onColourChange","_onPositionChange","_onAlphaFuncChange","ViewLayer","containerDiv","_setBaseSize2","srclayerid","getId","draw","dims3D","indexScrollIndex","filter","clear","className","getDataIndex","enableImageSmoothing","flag","setView","getViewController","getBaseSize","getOpacity","setOpacity","alpha","addFlipOffsetX","addFlipOffsetY","setScale","newScale","helper","orientedNewScale","finalNewScale","resetOffset","worldCenter","newOffset","getScaledOffset","newZoomOffset","setBaseOffset","scrollOffset","needsUpdate","setOffset","planeNewOffset","displayToPlaneIndex","planePos","displayToPlanePos","displayToPlaneScale","deScaled","planePosToDisplay","displayToMainPlanePos","display","style","isVisible","layerid","_updateImageData2","globalAlpha","setTransform","imageSmoothingEnabled","appendChild","alert","fitToContainer","fitScale1D","fitSize","fitOffset","needsDraw","previousScale","newFitScale","newViewOffset","bindInteraction","pointerEvents","names","passive","unbindInteraction","save","clearRect","restore","align","top","getCanvas","left","createImageData","putImageData","search","rawPos","endsWith","getFlags","flags","regex","exec","replaceFlags","valueObj","getFileExtension","filePath","ext","pathSplit","pop","test","stringToUint8Array","precisionRound","precision","delta","getShapeDisplayName","shape","displayName","Konva","points","_name","_layer","_parent","DrawGroupCommand","layer","getParent","_group2","_name2","_translation","_layer2","MoveGroupCommand","translation","move","minusTrans","_name3","_factory","_startAnchor","_endAnchor","_layer3","_style","ChangeGroupCommand","startAnchor","endAnchor","viewController","_group3","_name4","_layer4","_parent2","DeleteGroupCommand","isNodeNameShape","node","isNodeNameShapeExtra","isNodeNameLabel","isPositionNode","isNodeWithId","canNodeChangeColour","_konvaLayer","_currentPosGroupId","DrawController","konvaLayer","getCurrentPosGroup","posGroups","getChildren","posGroup","visible","reset","findOne","activateDrawLayer","getDrawDisplayDetails","groups","lenj","collec","text","shapeExtrakids","closed","extraName0","color","stroke","getDrawStoreDetails","drawingsDetails","posKids","anchors","texts","setDrawings","drawings","statePosGroups","statePosGroup","statePosKids","stateGroup","cmd","details","getText","setText","textExpr","quantification","updateDraw","drawDetails","shapes","shapesExtra","shadowColor","kids","setVisible","deleteDrawGroup","shapeDisplayName","deleteDraw","deleteDraws","_konvaStage","_drawController","_updateLabelScale","DrawLayer","getKonvaStage","getKonvaLayer","getLayers","getDrawController","setPlaneHelper","opacity","scale","_updateLabelScale2","container","listening","getContent","setAttribute","setWidth","setHeight","isGroupVisible","toogleGroupVisibility","ratioX","ratioY","labels","getLayerDetailsFromEvent","layerDiv","closest","idString","groupDivId","layerId","getLayerDetailsFromLayerDivId","indexCenter","_layers","_baseScale","_activeViewLayerIndex","_activeDrawLayerIndex","_showCrosshair","_updateCrosshairOnChange","_bindViewLayer","_bindDrawLayer","_getNextLayerDiv","_showCrosshairDiv","_removeCrosshairDiv","LayerGroup","_showCrosshairDiv2","updateLayersToPositionChange","baseViewLayerOrigin0","baseViewLayerOrigin","hasSetOffset","vc","origin0","scrollDiff","planeDiff","hasSetPos","setTargetOrientation","getShowCrosshair","setShowCrosshair","_removeCrosshairDiv2","getDivId","getScale","getBaseScale","getAddedScale","getOffset","getNumberOfLayers","getActiveViewLayer","getViewLayersByDataIndex","searchViewLayers","getViewDataIndices","getActiveDrawLayer","getDrawLayersByDataIndex","setActiveViewLayer","setActiveViewLayerByDataIndex","setActiveDrawLayer","setActiveDrawLayerByDataIndex","addViewLayer","viewLayerIndex","div","_getNextLayerDiv2","append","_bindViewLayer2","addDrawLayer","_bindDrawLayer2","empty","previous","getElementsByClassName","calculateFitScale","offsetWidth","offsetHeight","maxSize","getMaxSize","setFitScale","scaleIn","containerSize","flipScaleZ","addScale","scaleStep","addTranslation","viewLayer","drawLayer","layer0","p2D","displayPos","lineH","lineV","getElementById","binderList","WindowLevelBinder","layerGroup","viewLayers","PositionBinder","pointValues","currentPos","currentDims","inputDims","ZoomBinder","OffsetBinder","OpacityBinder","_layerGroups","_activeLayerGroupIndex","_binders","_callbackStore","_getBinderCallback","_addEventListeners","_removeEventListeners","Stage","getLayerGroup","getNumberOfLayerGroups","getActiveLayerGroup","addLayerGroup","htmlElement","isBound","unbindLayerGroups","bindLayerGroups","getLayerGroupByDivId","setBinders","syncLayerGroupScale","minScale","hasScale","_addEventListeners2","_removeEventListeners2","_getBinderCallback2","binder","binderObj","elem","getCallback","getEventType","_fontSize","_fontFamily","_textColour","_lineColour","_zoomScale","_strokeWidth","_shadowOffset","_tagOpacity","_textPadding","Style","getFontFamily","getFontSize","getStrokeWidth","getTextColour","getLineColour","setLineColour","setBaseScale","setZoomScale","getZoomScale","applyZoomScale","getShadowOffset","getTagOpacity","getTextPadding","getFontStr","getLineHeight","getScaledFontSize","getScaledStrokeWidth","getShadowLineColour","_readV","_readV3","_readV5","_readV7","_readV9","State","toJSON","app","drawController","JSON","stringify","version","toObject","fromJSON","json","_readV2","_readV4","_readV6","_readV8","_readV10","baseScale","scaleCenter","originX","originY","oldTx","oldTy","render","v02DAndD","inputDrawings","newDrawings","drawGroups","drawGroup","lenf","newFrameDrawings","leng","kshape","ktick0","ktick1","karcs","ktexts","ktext","klabel","txtLen","quant","surface","angle","longText","v01Tov02DrawingsAndDetails","v02Tov03Drawings","v03Tov04DrawingsDetails","v04Tov05Data","v04Tov05Drawings","groupDetails","v02Tov03DrawingsDetails","groupShapes","parentGroup","groupDrawings","currentPosition","draggable","forEach","gnode","detail","children","ids","attrs","sliceNumber","frameNumber","newId","_stack","_curCmdIndex","UndoStack","getStackSize","getCurrentStackIndex","_this$curCmdIndex","command","_this$curCmdIndex2","redo","_this$curCmdIndex3","_toolList","_selectedTool","_boundLayers","_unbindLayer","_getOnMouch","ToolboxController","toolList","window","_getOnMouch2","getToolList","hasTool","getSelectedTool","getSelectedToolEventHandler","eventType","setSelectedTool","activate","setToolFeatures","setFeatures","bindLayer","layerGroupDivId","_unbindLayer2","applySelectedTool","_x1","_y1","augmentEventOffsets","MultiProgressHandler","_getGlobalPercent","_getItemProgress","_progresses","_numberOfDimensions","_callback","lengthComputable","subindex","percent","loaded","total","_getItemProgress2","source","_getGlobalPercent2","setNumberOfDimensions","setNToLoad","getMonoProgressHandler","onprogress","getUndefinedMonoProgressHandler","lenprog","getUrlFromUri","uri","URL","location","splitUri","sepIndex","base","hashIndex","query","pairs","pair","splitKeyValueString","urlContentTypes","Text","ArrayBuffer","_inputData","_requests","_runningLoader","_nLoad","_nLoadend","_aborting","_storeInputData","_storeRequest","_clearStoredRequests","_storeLoader","_clearStoredLoader","_addLoadItem","_addLoad","_addLoadend","_augmentCallbackEvent","_loadUrls","_loadDicomDir","UrlsLoader","onloaditem","_this$nLoad","onload","_this$nLoadend","onloadend","load","options","onloadstart","_loadDicomDir2","_loadUrls2","abort","readyState","isLoading","onerror","onabort","_storeInputData2","_clearStoredRequests2","_clearStoredLoader2","_storeRequest2","request","_storeLoader2","loader","_augmentCallbackEvent2","mproghandler","loaders","loaderList","foundLoader","canLoadUrl","setOptions","defaultCharacterSet","getLoadHandler","status","responseURL","statusText","response","lastRunRequestIndex","requestOnLoadEnd","send","XMLHttpRequest","open","requestHeaders","setRequestHeader","withCredentials","loadUrlAs","responseType","batchSize","dicomDirUrl","urls","parser","x00041220","dirSeq","records","series","study","x00041430","recType","x00041500","refFileIds","refFileId","getFileListFromDicomDir","rootUrl","join","fullUrls","ImageFactory","checkElements","pixelBuffer","frames","jpeg2000","jpegBase","jpegLoss","imagePositionPatient","slicePosition","imageOrientationPatient","orientationMatrix","rowCosines","colCosines","normal","sopInstanceUid","samplesPerPixel","bufferSize","photometricInterpretation","photo","planarConfiguration","rescaleSlope","rescaleIntercept","SOPClassUID","StudyInstanceUID","SeriesInstanceUID","PixelRepresentation","frameOfReferenceUID","FrameOfReferenceUID","windowCenter","windowWidth","windowCWExplanation","redLut","greenLut","blueLut","descriptor","doScale","descSize","vlSize","scaleTo8","arraySortEquals","arr0","arr1","arrayEquals","sort","uint8ArrayToString","findInArraySubset","callbackFn","getFindArrayInArrayCallback","equalPosPat","pos1","pos2","checkTag","rootElement","tagDefinition","tagValue","isArray","enum","RequiredDicomSegTags","getCode","code","meaning","x00080104","x00080100","x00080119","longValue","x00080120","urnValue","x00080102","schemeDesignator","x00620004","x00620005","algorithmType","x00620008","x00620009","algorithmName","x0062000C","x006200C","x0062000D","cielabElement","triplet","gammaFunc","ciexyzToSrgb","invLabFunc","illuminant","l0","cielabToCiexyz","cielabToSrgb","x00620003","propertyCategoryCode","x0062000F","propertyTypeCode","x00620020","trackingId","trackingUid","x00620021","getSpacingFromMeasure","measure","x00280030","pixelSpacing","x00180050","x00180088","getSegmentFrameInfo","groupItem","derivationImages","x00089124","derivationImageSq","sourceImages","x00082112","sourceImageSq","sourceImage","x00081150","referencedSOPClassUID","x00081155","referencedSOPInstanceUID","dimIndex","x00209111","x00209157","refSegmentNumber","x0062000A","x0062000B","imagePosPat","x00209113","x00200032","frameInfo","x00209116","framePlaneOrientationSeq","frameImageOrientation","x00200037","x00289110","framePixelMeasuresSeq","frameSpacing","MaskFactory","orgSq","orgUID","x00209164","indices","indexSq","indexPointer","indexOrg","x00209165","DimensionOrganizationUID","DimensionIndexPointer","x00209421","DimensionDescriptionLabel","organizations","getDimensionOrganization","segSequence","storeAsRGB","sharedFunctionalGroupsSeq","funcGroup0","planeOrientationSeq","pixelMeasuresSeq","includesPosPat","some","arrVal","findIndexPosPat","perFrameFuncGroupSequence","frameInfos","framePosPats","p1","p2","getComparePosPat","point3DFromArray","frameOrigins","newSpacing","tmpGeometry","isNotSmall","REAL_WORLD_EPSILON","posPats","frameOrigin","distPrevious","numberOfSlices","uids","getFindSegmentFunc","mul","sliceOffset","frameOffset","pixelValue","tags","reqTag","getDefaultDicomSegJson","StudyDate","StudyTime","StudyID","SeriesNumber","ReferringPhysicianName","PatientName","PatientID","PatientBirthDate","PatientSex","Manufacturer","ManufacturerModelName","DeviceSerialNumber","SoftwareVersions","DimensionOrganizationSequence","DimensionIndexSequence","SOPInstanceUID","lossyImageCompression","LossyImageCompression","ThreadPool","poolSize","_stop","_stop2","onworkend","taskQueue","freeThreads","WorkerThread","runningThreads","addWorkerTask","workerTask","onworkstart","workerThread","shift","run","onTaskEnd","onwork","onworkitem","parentPool","itemNumber","runningTask","numberOfItems","dataIndex","handleWorkerError","random","worker","Worker","script","onmessage","postMessage","startMessage","terminate","WorkerTask","hasJpegBaselineDecoder","JpegImage","hasJpegLosslessDecoder","jpeg","lossless","hasJpeg2000Decoder","JpxImage","decoderScripts","_script","_pool","_areCallbacksSet","AsynchPixelBufferDecoder","_numberOfData","pixelMeta","ondecodestart","ondecodeditem","ondecoded","ondecodeend","_algoName","_numberOfData2","_decodeCount","SynchPixelBufferDecoder","algoName","numberOfData","_this$decodeCount","decoder","decodedBuffer","buf","Decoder","decoded","getData","tiles","dwvdecoder","RleDecoder","_areCallbacksSet2","_pixelDecoder","PixelBufferDecoder","_options","_dicomParserStore","_finalBufferStore","_decompressedSizes","_generateImage","_onDecodedItem","DicomBufferToView","opt","convert","dicomParser","imageFactory","algo","getSyntaxDecompressionName","needDecompression","columnsElement","x00280011","rowsElement","x00280010","samplesPerPixelElement","x00280002","planarConfigurationElement","x00280006","_onDecodedItem2","_generateImage2","decodedData","fullSize","_isLoading","_db2v","MemoryLoader","canLoadMemory","_addLoadItem2","filename","imageDataToBuffer","imageData","dataLen","getDefaultImage","imageBuffer","imageSize","imageSpacing","_aborted","_createDataUri","_createDataUri2","dataType","imageType","file","Blob","createObjectURL","bytes","videoDataStr","btoa","_filename","_files","_zobjs","_zipAsyncCallback","_zipAsyncCallback2","content","unzipPercent","async","then","memoryIO","progress","canLoadFile","url","isDicom","urlObjext","pathname","hasNoExt","hasDcmExt","contentType","searchParams","mem","loadFileAs","fileContentTypes","_opt","isJson","u8Array","parts","partHeaderEndCb","partHeaderEndIndex","lines","boundaryStr","boundaryCb","boundaryLen","nextBoundaryIndex","part","partHeaderLines","semiColonIndex","dataBeginIndex","dataEndIndex","parseMultipart","_file","isMultipart","_mem","domImage","canvas","ctx","lastModifiedDate","getViewFromDOMImage","src","isImage","hasImageExt","DataURL","video","onloadedmetadata","videoWidth","videoHeight","ceil","duration","onseeked","imgBuffer","storeFrame","nextTime","currentTime","getViewFromDOMVideo","isVideo","JSZip","zip","isZip","_readers","_storeReader","_clearStoredReaders","FilesLoader","FileReader","_storeReader2","readAsText","readAsDataURL","readAsArrayBuffer","_clearStoredReaders2","_currentLoaders","_counter","_getNextLoadId","_loadImageFiles","_loadImageUrls","_loadStateFile","_loadStateUrl","_loadData","LoadController","loadFiles","files","_loadStateFile2","_loadImageFiles2","loadURLs","_loadStateUrl2","_loadImageUrls2","loadImageObject","_loadData2","_getNextLoadId2","_this$counter","fileIO","urlIO","loadType","eventInfo","loadtype","loadId","loadid","isFirstItem","eventInfoItem","isfirstitem","isObject","unknown","_data","_getFireEvent","_getMetaObject","DataController","_getFireEvent2","addNew","_getMetaObject2","dataToUpdate","idKey","obj1","obj2","valueKey","mergedObj1","merged","id1","id2","keys2","value1","subValue1","value2","subValue2","mergeObjects","metaObj","_app","_wheelDeltaY","ScrollWheel","wheel","scrollMin","deltaMode","deltaY","up","layerDetails","_started","_scrollWhell","_touchTimerID","_displayTooltip","_showTooltip","_removeTooltipDiv","_showTooltip2","_removeTooltipDiv2","span","parentElement","createTextNode","i18n","props","mm","cm2","degree","_begin","_end","Line","begin","getBegin","getEnd","getDeltaX","getDeltaY","getWorldLength","spacingX","spacingY","wlen","dxs","dys","getMidpoint","getInclination","atan2","PI","quantify","getAngle","line0","line1","dx0","dy0","dx1","dy1","dot","getPerpendicularLine","beginX","beginY","endX","endY","dx","getStats","includesFullStatsFlags","stats","getSimpleStats","median","getPercentile","p25","p75","getFullStats","sumSqr","variance","stdDev","ratio","i0","v0","guid","getDefaultAnchor","radius","strokeWidth","strokeScaleEnabled","dragOnTop","_shapeFactoryList","_currentFactory","_shape","_isActive","_drawEventCallback","_applyFuncToAnchors","_setAnchorsVisible","_removeAnchors","_addAnchors","_getClone","_setAnchorOn","_setAnchorOff","ShapeEditor","setFactoryList","setShape","inshape","_removeAnchors2","isFactoryGroup","_addAnchors2","setViewController","getShape","isActive","setDrawEventCallback","enable","_setAnchorsVisible2","getLayer","disable","resetAnchors","setAnchorsActive","anchor","_setAnchorOn2","_setAnchorOff2","_applyFuncToAnchors2","getAnchors","getStyle","_getClone2","parent","on","cancelBubble","evt","stageSize","boundNodePosition","validateAnchorPosition","chgcmd","addToUndoStack","moveToTop","_shapeEditor","_trash","_command","_tmpShapeGroup","_shapeName","_points","_lastPoint","_activeShapeGroup","_originalCursor","_mouseOverCursor","_onNewPoints","_onFinalPoints","_updateDrawLayer","_activateCurrentPositionShapes","_setShapeOff","_getRealPosition","_resetActiveShapeGroup","_onNewPoints2","tmpPoints","destroy","_onFinalPoints2","finalPoints","finalShapeGroup","setShapeOn","_updateDrawLayer2","_activateCurrentPositionShapes2","shapeGroups","_setShapeOff2","shapeGroup","_getRealPosition2","stage","_resetActiveShapeGroup2","body","cursor","ashape","changed","ROI","getPoint","addPoint","addPoints","RoiFactory","getNPoints","getTimeout","roi","fontSize","fontFamily","px","py","kroi","textPos","_blurRadius","_simplifyTolerant","_simplifyCount","_imageInfo","_initialthreshold","_currentthreshold","_shapeGroup","_initialpoint","_border","_parentPoints","_extender","_painterTimeout","_getCoord","_calcBorder","_paintBorder","_calcBorder2","threshold","simple","MagicWand","cs","icsl","_paintBorder2","Path","inputPointArray","inputControlPointIndexArray","pointArray","controlPointIndexArray","isControlPoint","addControlPoint","newPointArray","appenPath","other","oldSize","indexArray","BucketQueue","bits","cost_functor","bucketCount","loc","cost","buckets","buildArray","bucket","getBucket","ret","isEmpty","newSize","__twothirdpi","gradUnitVector","gradX","gradY","out","ox","oy","gvm","Scissors","curPoint","searchGranBits","searchGran","earchGranBits","pointsPerPost","greyscale","laplace","gradient","parents","working","trained","trainingPoints","edgeWidth","trainingLength","edgeGran","edgeTraining","gradPointsNeeded","gradGran","gradTraining","insideGran","insideTraining","outsideGran","outsideTraining","getTrainingIdx","granularity","getTrainedEdge","edge","getTrainedGrad","grad","getTrainedInside","inside","getTrainedOutside","outside","setWorking","setDimensions","setData","dy","gradMagnitude","lap","computeGreyscale","computeLaplace","computeGradient","computeGradX","computeGradY","sides","guv","ix","iy","computeSides","findTrainingPoints","resetTraining","doTraining","calculateTraining","addInStaticGrad","input","output","maxVal","idx","gaussianBlur","have","need","gradDirection","qx","qy","__dgpuv","__gdquv","dp","dq","SQRT1_2","acos","dir","adj","sx","sy","ex","ey","setPoint","sp","visited","MAX_VALUE","pq","costArr","doWork","timeout","pointCount","newPoints","adjList","q","pqCost","_path","_currentPath","_tolerance","_clearParentPoints","_clearPaths","_scissors","_finishShape","_clearParentPoints2","_clearPaths2","_finishShape2","_centre","_radius","Circle","centre","getRadius","getSurface","getWorldSurface","mulABC","centerX","centerY","rSquare","maxY","transX","quantif","_updateCircleQuantification","_getShadowCircle","_updateCircleQuantification2","kcircle","centerPoint","circle","_a","_b","Ellipse","getA","getB","radiusX","radiusY","radiusRatio","rySquare","_updateEllipseQuantification","_getShadowEllipse","_updateEllipseQuantification2","kellipse","ellipse","Rectangle","getRealWidth","getRealHeight","getHeight","_updateRectangleQuantification","_getShadowRectangle","_updateRectangleQuantification2","krect","p2d0","p2d1","rect","Threshold","_min","_max","_originalImage","getMin","setMin","getMax","setMax","setOriginalImage","getOriginalImage","imageMin","_originalImage2","Sharpen","_originalImage3","Sobel","_app2","_resetImage","_listenerHandler2","_fireEvent2","_app3","_listenerHandler3","_fireEvent3","_app4","_listenerHandler4","_fireEvent4","_filter","_app5","RunFilterCommand","setLastImage","x0","y0","diffX","diffY","pixelToIntensity","manual","WL","mouseup","mousedown","mousemove","context","onKeydown","_bool","Scroll","yMove","xMove","setTimeout","dblclick","clearTimeout","features","displayTooltip","ZoomAndPan","point0","point1","midPoint","tx","ty","lineRatio","zoom","twotouchdown","twotouchmove","step","Opacity","op","Draw","getIntersection","selectedShape","timer","trashLine1","trashLine2","lineColour","mouseOnShape","dragStartPos","invscale","anchorMin","minX","minY","getAnchorMin","validateGroupPosition","updateQuantification","eventPos","trashHalfWidth","scaleX","trashHalfHeight","scaleY","tshape","mvcmd","groupId","onSaveCallback","openRoiDialog","getOptionsType","shapeColour","shapeName","hasShape","mouseOverCursor","getEventNames","listener","Floodfill","getAbsoluteScale","onThresholdChange","movedpoint","modifyThreshold","extend","setExtend","bool","getExtend","ini","jl","bl","setPoints","Livewire","pn","p0","results","_p","_q","toolOptions","ArrowFactory","linePerp0","linePerp1","hitFunc","beginPath","moveTo","lineTo","closePath","fillStrokeShape","beginTy","verticalLine","angleRad","kpoly","sin","cos","rotation","padding","shadowOffset","dX","dY","kline","ktriangle","bx","by","p2b","p2e","CircleFactory","right","bottom","EllipseFactory","ellipseX","ellipseY","topLeft","topRight","bottomRight","bottomLeft","radiusAbs","FreeHandFactory","tension","ProtractorFactory","pointsArray","inclination","midX","midY","karc","innerRadius","outerRadius","mid","mx","my","p2d2","arcPos","RectangleFactory","rectangle","rectX","rectY","rectWidth","rectHeight","kshadow","RulerFactory","tickLen","args","ThresholdFilter","getLastImage","_args","SobelFilter","SharpenFilter","_dataController","_toolboxController","_loadController","_stage","_undoStack","_getViewConfigs","_createLayerGroups","_onloadstart","_onloadprogress","_onloaditem","_onload","_onloadend","_onloaderror","_onloadabort","_bindLayerGroupToApp","_initialiseBaseLayers","_addViewLayer","App","ctrlKey","shiftKey","isFirstLoadItem","eventMetaData","state","_getViewConfigs2","viewOnFirstLoadItem","addNewImage","getMetaData","getNumberOfLoadedData","getToolboxController","divId","tools","appToolList","t","toolName","toolParams","appToolOptions","optionName","optionClassName","toolNamespace","charAt","binders","resetLayout","abortLoad","initWLDisplay","getDataViewConfig","dataViewConfigs","setDataViewConfig","configs","_createLayerGroups2","setLayerGroupsBinders","instances","viewConfigs","_initialiseBaseLayers2","_addViewLayer2","cx","cy","translate","getState","resetDisplay","resetZoom","setTool","tool","dataKeys","divIds","dataConfigs","viewConfig","_bindLayerGroupToApp2","dataViewConfig","imageGeometry","getViewOrientation","isBaseLayer","size2D","spacing2D","onimageset","onimagechange","major","dicom","getElementsFromJSONTags","jsonTags","jsonTag","DicomWriter","default","action","Acquisition","Procedure","setUseUnVrForPrivateSq","setRules","rules","encodeString","encodeSpecialString","useSpecialTextEncoder","TextEncoder","getElementToWrite","groupName","rule","writeDataElementItems","writer","writeDataElement","writeDataElementValue","hexString","hexString1","hexString2","dec1","dec2","atValue","writePixelDataElementValue","finalValue","initialArray","initialArrayLength","arrayLength","flattenendArrayLength","flattenedArray","indexFlattenedArray","flattenArrayOfTypedArrays","isTagWithVR","undefinedLengthSequence","undefinedLengthItem","seqDelimElement","isBigEndian","oldscs","totalSize","localSize","metaElements","rawElements","metaLength","fmiglTag","fmivTag","icUIDTag","ivnTag","setElementValue","fmiv","fmivSize","icUID","icUIDSize","ivn","ivnSize","elemSortFunc","tagCompareFunction","fmigl","fmiglSize","metaWriter","dataWriter","metaOffset","newItems","oldItemElements","newItemElements","subSize","itemKey","pad","getVrPad","padOBValue","isTypedArrayVr","itemPrefixSize","getBpeForVrType","gui","math","utils","loadFromUri","getUriQuery","protocol","host","decodeURIComponent","manifest","rootURL","getElementsByTagName","getAttribute","patientList","studyList","studyUID","seriesList","seriesUID","instanceList","link","decodeManifest","responseXML","decodeManifestQuery","replaceMode","repeatKeyReplaceMode","queryUri","inputQueryPairs","repeatKey","repeatList","baseUrl","gotOneArg","decodeKeyValueUri","dwvReplaceMode","decodeQuery","onLoadEnd","loadFromQuery","buildMultipart","boundary","lineBreak","partsSize","headers","headerStr","partKeys","header","trailer"],"sourceRoot":""}