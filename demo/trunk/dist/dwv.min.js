!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("Konva"),require("JSZip"),require("MagicWand")):"function"==typeof define&&define.amd?define(["Konva","JSZip","MagicWand"],t):"object"==typeof exports?exports.dwv=t(require("Konva"),require("JSZip"),require("MagicWand")):e.dwv=t(e.Konva,e.JSZip,e.MagicWand)}(this,(function(e,t,n){return function(){"use strict";var i={290:function(e){e.exports=t},196:function(t){t.exports=e},680:function(e){e.exports=n}},r={};function a(e){var t=r[e];if(void 0!==t)return t.exports;var n=r[e]={exports:{}};return i[e](n,n.exports,a),n.exports}a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,{a:t}),t},a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};return function(){a.r(o),a.d(o,{App:function(){return Nf},dicom:function(){return jf},getDwvVersion:function(){return ie},gui:function(){return Xf},image:function(){return Yf},logger:function(){return Y},math:function(){return _f},tools:function(){return Kf},utils:function(){return Zf}});const e={"0x0000":{"0x0000":["UL","1","CommandGroupLength"],"0x0001":["UL","1","CommandLengthToEnd"],"0x0002":["UI","1","AffectedSOPClassUID"],"0x0003":["UI","1","RequestedSOPClassUID"],"0x0010":["SH","1","CommandRecognitionCode"],"0x0100":["US","1","CommandField"],"0x0110":["US","1","MessageID"],"0x0120":["US","1","MessageIDBeingRespondedTo"],"0x0200":["AE","1","Initiator"],"0x0300":["AE","1","Receiver"],"0x0400":["AE","1","FindLocation"],"0x0600":["AE","1","MoveDestination"],"0x0700":["US","1","Priority"],"0x0800":["US","1","CommandDataSetType"],"0x0850":["US","1","NumberOfMatches"],"0x0860":["US","1","ResponseSequenceNumber"],"0x0900":["US","1","Status"],"0x0901":["AT","1-n","OffendingElement"],"0x0902":["LO","1","ErrorComment"],"0x0903":["US","1","ErrorID"],"0x1000":["UI","1","AffectedSOPInstanceUID"],"0x1001":["UI","1","RequestedSOPInstanceUID"],"0x1002":["US","1","EventTypeID"],"0x1005":["AT","1-n","AttributeIdentifierList"],"0x1008":["US","1","ActionTypeID"],"0x1020":["US","1","NumberOfRemainingSuboperations"],"0x1021":["US","1","NumberOfCompletedSuboperations"],"0x1022":["US","1","NumberOfFailedSuboperations"],"0x1023":["US","1","NumberOfWarningSuboperations"],"0x1030":["AE","1","MoveOriginatorApplicationEntityTitle"],"0x1031":["US","1","MoveOriginatorMessageID"],"0x4000":["LT","1","DialogReceiver"],"0x4010":["LT","1","TerminalType"],"0x5010":["SH","1","MessageSetID"],"0x5020":["SH","1","EndMessageID"],"0x5110":["LT","1","DisplayFormat"],"0x5120":["LT","1","PagePositionID"],"0x5130":["CS","1","TextFormatID"],"0x5140":["CS","1","NormalReverse"],"0x5150":["CS","1","AddGrayScale"],"0x5160":["CS","1","Borders"],"0x5170":["IS","1","Copies"],"0x5180":["CS","1","CommandMagnificationType"],"0x5190":["CS","1","Erase"],"0x51A0":["CS","1","Print"],"0x51B0":["US","1-n","Overlays"]},"0x0002":{"0x0000":["UL","1","FileMetaInformationGroupLength"],"0x0001":["OB","1","FileMetaInformationVersion"],"0x0002":["UI","1","MediaStorageSOPClassUID"],"0x0003":["UI","1","MediaStorageSOPInstanceUID"],"0x0010":["UI","1","TransferSyntaxUID"],"0x0012":["UI","1","ImplementationClassUID"],"0x0013":["SH","1","ImplementationVersionName"],"0x0016":["AE","1","SourceApplicationEntityTitle"],"0x0017":["AE","1","SendingApplicationEntityTitle"],"0x0018":["AE","1","ReceivingApplicationEntityTitle"],"0x0026":["UR","1","SourcePresentationAddress"],"0x0027":["UR","1","SendingPresentationAddress"],"0x0028":["UR","1","ReceivingPresentationAddress"],"0x0031":["OB","1","RTVMetaInformationVersion"],"0x0032":["UI","1","RTVCommunicationSOPClassUID"],"0x0033":["UI","1","RTVCommunicationSOPInstanceUID"],"0x0035":["OB","1","RTVSourceIdentifier"],"0x0036":["OB","1","RTVFlowIdentifier"],"0x0037":["UL","1","RTVFlowRTPSamplingRate"],"0x0038":["FD","1","RTVFlowActualFrameDuration"],"0x0100":["UI","1","PrivateInformationCreatorUID"],"0x0102":["OB","1","PrivateInformation"]},"0x0004":{"0x0000":["UL","1","GenericGroupLength"],"0x1130":["CS","1","FileSetID"],"0x1141":["CS","1-8","FileSetDescriptorFileID"],"0x1142":["CS","1","SpecificCharacterSetOfFileSetDescriptorFile"],"0x1200":["UL","1","OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity"],"0x1202":["UL","1","OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity"],"0x1212":["US","1","FileSetConsistencyFlag"],"0x1220":["SQ","1","DirectoryRecordSequence"],"0x1400":["UL","1","OffsetOfTheNextDirectoryRecord"],"0x1410":["US","1","RecordInUseFlag"],"0x1420":["UL","1","OffsetOfReferencedLowerLevelDirectoryEntity"],"0x1430":["CS","1","DirectoryRecordType"],"0x1432":["UI","1","PrivateRecordUID"],"0x1500":["CS","1-8","ReferencedFileID"],"0x1504":["UL","1","MRDRDirectoryRecordOffset"],"0x1510":["UI","1","ReferencedSOPClassUIDInFile"],"0x1511":["UI","1","ReferencedSOPInstanceUIDInFile"],"0x1512":["UI","1","ReferencedTransferSyntaxUIDInFile"],"0x151A":["UI","1-n","ReferencedRelatedGeneralSOPClassUIDInFile"],"0x1600":["UL","1","NumberOfReferences"]},"0x0008":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["UL","1","LengthToEnd"],"0x0005":["CS","1-n","SpecificCharacterSet"],"0x0006":["SQ","1","LanguageCodeSequence"],"0x0008":["CS","2-n","ImageType"],"0x0010":["SH","1","RecognitionCode"],"0x0012":["DA","1","InstanceCreationDate"],"0x0013":["TM","1","InstanceCreationTime"],"0x0014":["UI","1","InstanceCreatorUID"],"0x0015":["DT","1","InstanceCoercionDateTime"],"0x0016":["UI","1","SOPClassUID"],"0x0018":["UI","1","SOPInstanceUID"],"0x001A":["UI","1-n","RelatedGeneralSOPClassUID"],"0x001B":["UI","1","OriginalSpecializedSOPClassUID"],"0x0020":["DA","1","StudyDate"],"0x0021":["DA","1","SeriesDate"],"0x0022":["DA","1","AcquisitionDate"],"0x0023":["DA","1","ContentDate"],"0x0024":["DA","1","OverlayDate"],"0x0025":["DA","1","CurveDate"],"0x002A":["DT","1","AcquisitionDateTime"],"0x0030":["TM","1","StudyTime"],"0x0031":["TM","1","SeriesTime"],"0x0032":["TM","1","AcquisitionTime"],"0x0033":["TM","1","ContentTime"],"0x0034":["TM","1","OverlayTime"],"0x0035":["TM","1","CurveTime"],"0x0040":["US","1","DataSetType"],"0x0041":["LO","1","DataSetSubtype"],"0x0042":["CS","1","NuclearMedicineSeriesType"],"0x0050":["SH","1","AccessionNumber"],"0x0051":["SQ","1","IssuerOfAccessionNumberSequence"],"0x0052":["CS","1","QueryRetrieveLevel"],"0x0053":["CS","1","QueryRetrieveView"],"0x0054":["AE","1-n","RetrieveAETitle"],"0x0055":["AE","1","StationAETitle"],"0x0056":["CS","1","InstanceAvailability"],"0x0058":["UI","1-n","FailedSOPInstanceUIDList"],"0x0060":["CS","1","Modality"],"0x0061":["CS","1-n","ModalitiesInStudy"],"0x0062":["UI","1-n","SOPClassesInStudy"],"0x0063":["SQ","1","AnatomicRegionsInStudyCodeSequence"],"0x0064":["CS","1","ConversionType"],"0x0068":["CS","1","PresentationIntentType"],"0x0070":["LO","1","Manufacturer"],"0x0080":["LO","1","InstitutionName"],"0x0081":["ST","1","InstitutionAddress"],"0x0082":["SQ","1","InstitutionCodeSequence"],"0x0090":["PN","1","ReferringPhysicianName"],"0x0092":["ST","1","ReferringPhysicianAddress"],"0x0094":["SH","1-n","ReferringPhysicianTelephoneNumbers"],"0x0096":["SQ","1","ReferringPhysicianIdentificationSequence"],"0x009C":["PN","1-n","ConsultingPhysicianName"],"0x009D":["SQ","1","ConsultingPhysicianIdentificationSequence"],"0x0100":["SH","1","CodeValue"],"0x0101":["LO","1","ExtendedCodeValue"],"0x0102":["SH","1","CodingSchemeDesignator"],"0x0103":["SH","1","CodingSchemeVersion"],"0x0104":["LO","1","CodeMeaning"],"0x0105":["CS","1","MappingResource"],"0x0106":["DT","1","ContextGroupVersion"],"0x0107":["DT","1","ContextGroupLocalVersion"],"0x0108":["LT","1","ExtendedCodeMeaning"],"0x0109":["SQ","1","CodingSchemeResourcesSequence"],"0x010A":["CS","1","CodingSchemeURLType"],"0x010B":["CS","1","ContextGroupExtensionFlag"],"0x010C":["UI","1","CodingSchemeUID"],"0x010D":["UI","1","ContextGroupExtensionCreatorUID"],"0x010E":["UR","1","CodingSchemeURL"],"0x010F":["CS","1","ContextIdentifier"],"0x0110":["SQ","1","CodingSchemeIdentificationSequence"],"0x0112":["LO","1","CodingSchemeRegistry"],"0x0114":["ST","1","CodingSchemeExternalID"],"0x0115":["ST","1","CodingSchemeName"],"0x0116":["ST","1","CodingSchemeResponsibleOrganization"],"0x0117":["UI","1","ContextUID"],"0x0118":["UI","1","MappingResourceUID"],"0x0119":["UC","1","LongCodeValue"],"0x0120":["UR","1","URNCodeValue"],"0x0121":["SQ","1","EquivalentCodeSequence"],"0x0122":["LO","1","MappingResourceName"],"0x0123":["SQ","1","ContextGroupIdentificationSequence"],"0x0124":["SQ","1","MappingResourceIdentificationSequence"],"0x0201":["SH","1","TimezoneOffsetFromUTC"],"0x0202":["","",""],"0x0220":["SQ","1","ResponsibleGroupCodeSequence"],"0x0221":["CS","1","EquipmentModality"],"0x0222":["LO","1","ManufacturerRelatedModelGroup"],"0x0300":["SQ","1","PrivateDataElementCharacteristicsSequence"],"0x0301":["US","1","PrivateGroupReference"],"0x0302":["LO","1","PrivateCreatorReference"],"0x0303":["CS","1","BlockIdentifyingInformationStatus"],"0x0304":["US","1-n","NonidentifyingPrivateElements"],"0x0305":["SQ","1","DeidentificationActionSequence"],"0x0306":["US","1-n","IdentifyingPrivateElements"],"0x0307":["CS","1","DeidentificationAction"],"0x0308":["US","1","PrivateDataElement"],"0x0309":["UL","1-3","PrivateDataElementValueMultiplicity"],"0x030A":["CS","1","PrivateDataElementValueRepresentation"],"0x030B":["UL","1-2","PrivateDataElementNumberOfItems"],"0x030C":["UC","1","PrivateDataElementName"],"0x030D":["UC","1","PrivateDataElementKeyword"],"0x030E":["UT","1","PrivateDataElementDescription"],"0x030F":["UT","1","PrivateDataElementEncoding"],"0x0310":["SQ","1","PrivateDataElementDefinitionSequence"],"0x1000":["AE","1","NetworkID"],"0x1010":["SH","1","StationName"],"0x1030":["LO","1","StudyDescription"],"0x1032":["SQ","1","ProcedureCodeSequence"],"0x103E":["LO","1","SeriesDescription"],"0x103F":["SQ","1","SeriesDescriptionCodeSequence"],"0x1040":["LO","1","InstitutionalDepartmentName"],"0x1041":["SQ","1","InstitutionalDepartmentTypeCodeSequence"],"0x1048":["PN","1-n","PhysiciansOfRecord"],"0x1049":["SQ","1","PhysiciansOfRecordIdentificationSequence"],"0x1050":["PN","1-n","PerformingPhysicianName"],"0x1052":["SQ","1","PerformingPhysicianIdentificationSequence"],"0x1060":["PN","1-n","NameOfPhysiciansReadingStudy"],"0x1062":["SQ","1","PhysiciansReadingStudyIdentificationSequence"],"0x1070":["PN","1-n","OperatorsName"],"0x1072":["SQ","1","OperatorIdentificationSequence"],"0x1080":["LO","1-n","AdmittingDiagnosesDescription"],"0x1084":["SQ","1","AdmittingDiagnosesCodeSequence"],"0x1090":["LO","1","ManufacturerModelName"],"0x1100":["SQ","1","ReferencedResultsSequence"],"0x1110":["SQ","1","ReferencedStudySequence"],"0x1111":["SQ","1","ReferencedPerformedProcedureStepSequence"],"0x1115":["SQ","1","ReferencedSeriesSequence"],"0x1120":["SQ","1","ReferencedPatientSequence"],"0x1125":["SQ","1","ReferencedVisitSequence"],"0x1130":["SQ","1","ReferencedOverlaySequence"],"0x1134":["SQ","1","ReferencedStereometricInstanceSequence"],"0x113A":["SQ","1","ReferencedWaveformSequence"],"0x1140":["SQ","1","ReferencedImageSequence"],"0x1145":["SQ","1","ReferencedCurveSequence"],"0x114A":["SQ","1","ReferencedInstanceSequence"],"0x114B":["SQ","1","ReferencedRealWorldValueMappingInstanceSequence"],"0x1150":["UI","1","ReferencedSOPClassUID"],"0x1155":["UI","1","ReferencedSOPInstanceUID"],"0x1156":["SQ","1","DefinitionSourceSequence"],"0x115A":["UI","1-n","SOPClassesSupported"],"0x1160":["IS","1-n","ReferencedFrameNumber"],"0x1161":["UL","1-n","SimpleFrameList"],"0x1162":["UL","3-3n","CalculatedFrameList"],"0x1163":["FD","2","TimeRange"],"0x1164":["SQ","1","FrameExtractionSequence"],"0x1167":["UI","1","MultiFrameSourceSOPInstanceUID"],"0x1190":["UR","1","RetrieveURL"],"0x1195":["UI","1","TransactionUID"],"0x1196":["US","1","WarningReason"],"0x1197":["US","1","FailureReason"],"0x1198":["SQ","1","FailedSOPSequence"],"0x1199":["SQ","1","ReferencedSOPSequence"],"0x119A":["SQ","1","OtherFailuresSequence"],"0x1200":["SQ","1","StudiesContainingOtherReferencedInstancesSequence"],"0x1250":["SQ","1","RelatedSeriesSequence"],"0x2110":["CS","1","LossyImageCompressionRetired"],"0x2111":["ST","1","DerivationDescription"],"0x2112":["SQ","1","SourceImageSequence"],"0x2120":["SH","1","StageName"],"0x2122":["IS","1","StageNumber"],"0x2124":["IS","1","NumberOfStages"],"0x2127":["SH","1","ViewName"],"0x2128":["IS","1","ViewNumber"],"0x2129":["IS","1","NumberOfEventTimers"],"0x212A":["IS","1","NumberOfViewsInStage"],"0x2130":["DS","1-n","EventElapsedTimes"],"0x2132":["LO","1-n","EventTimerNames"],"0x2133":["SQ","1","EventTimerSequence"],"0x2134":["FD","1","EventTimeOffset"],"0x2135":["SQ","1","EventCodeSequence"],"0x2142":["IS","1","StartTrim"],"0x2143":["IS","1","StopTrim"],"0x2144":["IS","1","RecommendedDisplayFrameRate"],"0x2200":["CS","1","TransducerPosition"],"0x2204":["CS","1","TransducerOrientation"],"0x2208":["CS","1","AnatomicStructure"],"0x2218":["SQ","1","AnatomicRegionSequence"],"0x2220":["SQ","1","AnatomicRegionModifierSequence"],"0x2228":["SQ","1","PrimaryAnatomicStructureSequence"],"0x2229":["SQ","1","AnatomicStructureSpaceOrRegionSequence"],"0x2230":["SQ","1","PrimaryAnatomicStructureModifierSequence"],"0x2240":["SQ","1","TransducerPositionSequence"],"0x2242":["SQ","1","TransducerPositionModifierSequence"],"0x2244":["SQ","1","TransducerOrientationSequence"],"0x2246":["SQ","1","TransducerOrientationModifierSequence"],"0x2251":["SQ","1","AnatomicStructureSpaceOrRegionCodeSequenceTrial"],"0x2253":["SQ","1","AnatomicPortalOfEntranceCodeSequenceTrial"],"0x2255":["SQ","1","AnatomicApproachDirectionCodeSequenceTrial"],"0x2256":["ST","1","AnatomicPerspectiveDescriptionTrial"],"0x2257":["SQ","1","AnatomicPerspectiveCodeSequenceTrial"],"0x2258":["ST","1","AnatomicLocationOfExaminingInstrumentDescriptionTrial"],"0x2259":["SQ","1","AnatomicLocationOfExaminingInstrumentCodeSequenceTrial"],"0x225A":["SQ","1","AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial"],"0x225C":["SQ","1","OnAxisBackgroundAnatomicStructureCodeSequenceTrial"],"0x3001":["SQ","1","AlternateRepresentationSequence"],"0x3002":["UI","1-n","AvailableTransferSyntaxUID"],"0x3010":["UI","1-n","IrradiationEventUID"],"0x3011":["SQ","1","SourceIrradiationEventSequence"],"0x3012":["UI","1","RadiopharmaceuticalAdministrationEventUID"],"0x4000":["LT","1","IdentifyingComments"],"0x9007":["CS","4","FrameType"],"0x9092":["SQ","1","ReferencedImageEvidenceSequence"],"0x9121":["SQ","1","ReferencedRawDataSequence"],"0x9123":["UI","1","CreatorVersionUID"],"0x9124":["SQ","1","DerivationImageSequence"],"0x9154":["SQ","1","SourceImageEvidenceSequence"],"0x9205":["CS","1","PixelPresentation"],"0x9206":["CS","1","VolumetricProperties"],"0x9207":["CS","1","VolumeBasedCalculationTechnique"],"0x9208":["CS","1","ComplexImageComponent"],"0x9209":["CS","1","AcquisitionContrast"],"0x9215":["SQ","1","DerivationCodeSequence"],"0x9237":["SQ","1","ReferencedPresentationStateSequence"],"0x9410":["SQ","1","ReferencedOtherPlaneSequence"],"0x9458":["SQ","1","FrameDisplaySequence"],"0x9459":["FL","1","RecommendedDisplayFrameRateInFloat"],"0x9460":["CS","1","SkipFrameRangeFlag"]},"0x0010":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["PN","1","PatientName"],"0x0020":["LO","1","PatientID"],"0x0021":["LO","1","IssuerOfPatientID"],"0x0022":["CS","1","TypeOfPatientID"],"0x0024":["SQ","1","IssuerOfPatientIDQualifiersSequence"],"0x0026":["SQ","1","SourcePatientGroupIdentificationSequence"],"0x0027":["SQ","1","GroupOfPatientsIdentificationSequence"],"0x0028":["US","3","SubjectRelativePositionInImage"],"0x0030":["DA","1","PatientBirthDate"],"0x0032":["TM","1","PatientBirthTime"],"0x0033":["LO","1","PatientBirthDateInAlternativeCalendar"],"0x0034":["LO","1","PatientDeathDateInAlternativeCalendar"],"0x0035":["CS","1","PatientAlternativeCalendar"],"0x0040":["CS","1","PatientSex"],"0x0050":["SQ","1","PatientInsurancePlanCodeSequence"],"0x0101":["SQ","1","PatientPrimaryLanguageCodeSequence"],"0x0102":["SQ","1","PatientPrimaryLanguageModifierCodeSequence"],"0x0200":["CS","1","QualityControlSubject"],"0x0201":["SQ","1","QualityControlSubjectTypeCodeSequence"],"0x0212":["UC","1","StrainDescription"],"0x0213":["LO","1","StrainNomenclature"],"0x0214":["LO","1","StrainStockNumber"],"0x0215":["SQ","1","StrainSourceRegistryCodeSequence"],"0x0216":["SQ","1","StrainStockSequence"],"0x0217":["LO","1","StrainSource"],"0x0218":["UT","1","StrainAdditionalInformation"],"0x0219":["SQ","1","StrainCodeSequence"],"0x0221":["SQ","1","GeneticModificationsSequence"],"0x0222":["UC","1","GeneticModificationsDescription"],"0x0223":["LO","1","GeneticModificationsNomenclature"],"0x0229":["SQ","1","GeneticModificationsCodeSequence"],"0x1000":["LO","1-n","OtherPatientIDs"],"0x1001":["PN","1-n","OtherPatientNames"],"0x1002":["SQ","1","OtherPatientIDsSequence"],"0x1005":["PN","1","PatientBirthName"],"0x1010":["AS","1","PatientAge"],"0x1020":["DS","1","PatientSize"],"0x1021":["SQ","1","PatientSizeCodeSequence"],"0x1022":["DS","1","PatientBodyMassIndex"],"0x1023":["DS","1","MeasuredAPDimension"],"0x1024":["DS","1","MeasuredLateralDimension"],"0x1030":["DS","1","PatientWeight"],"0x1040":["LO","1","PatientAddress"],"0x1050":["LO","1-n","InsurancePlanIdentification"],"0x1060":["PN","1","PatientMotherBirthName"],"0x1080":["LO","1","MilitaryRank"],"0x1081":["LO","1","BranchOfService"],"0x1090":["LO","1","MedicalRecordLocator"],"0x1100":["SQ","1","ReferencedPatientPhotoSequence"],"0x2000":["LO","1-n","MedicalAlerts"],"0x2110":["LO","1-n","Allergies"],"0x2150":["LO","1","CountryOfResidence"],"0x2152":["LO","1","RegionOfResidence"],"0x2154":["SH","1-n","PatientTelephoneNumbers"],"0x2155":["LT","1","PatientTelecomInformation"],"0x2160":["SH","1","EthnicGroup"],"0x2180":["SH","1","Occupation"],"0x21A0":["CS","1","SmokingStatus"],"0x21B0":["LT","1","AdditionalPatientHistory"],"0x21C0":["US","1","PregnancyStatus"],"0x21D0":["DA","1","LastMenstrualDate"],"0x21F0":["LO","1","PatientReligiousPreference"],"0x2201":["LO","1","PatientSpeciesDescription"],"0x2202":["SQ","1","PatientSpeciesCodeSequence"],"0x2203":["CS","1","PatientSexNeutered"],"0x2210":["CS","1","AnatomicalOrientationType"],"0x2292":["LO","1","PatientBreedDescription"],"0x2293":["SQ","1","PatientBreedCodeSequence"],"0x2294":["SQ","1","BreedRegistrationSequence"],"0x2295":["LO","1","BreedRegistrationNumber"],"0x2296":["SQ","1","BreedRegistryCodeSequence"],"0x2297":["PN","1","ResponsiblePerson"],"0x2298":["CS","1","ResponsiblePersonRole"],"0x2299":["LO","1","ResponsibleOrganization"],"0x4000":["LT","1","PatientComments"],"0x9431":["FL","1","ExaminedBodyThickness"]},"0x0012":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["LO","1","ClinicalTrialSponsorName"],"0x0020":["LO","1","ClinicalTrialProtocolID"],"0x0021":["LO","1","ClinicalTrialProtocolName"],"0x0030":["LO","1","ClinicalTrialSiteID"],"0x0031":["LO","1","ClinicalTrialSiteName"],"0x0040":["LO","1","ClinicalTrialSubjectID"],"0x0042":["LO","1","ClinicalTrialSubjectReadingID"],"0x0050":["LO","1","ClinicalTrialTimePointID"],"0x0051":["ST","1","ClinicalTrialTimePointDescription"],"0x0052":["FD","1","LongitudinalTemporalOffsetFromEvent"],"0x0053":["CS","1","LongitudinalTemporalEventType"],"0x0060":["LO","1","ClinicalTrialCoordinatingCenterName"],"0x0062":["CS","1","PatientIdentityRemoved"],"0x0063":["LO","1-n","DeidentificationMethod"],"0x0064":["SQ","1","DeidentificationMethodCodeSequence"],"0x0071":["LO","1","ClinicalTrialSeriesID"],"0x0072":["LO","1","ClinicalTrialSeriesDescription"],"0x0081":["LO","1","ClinicalTrialProtocolEthicsCommitteeName"],"0x0082":["LO","1","ClinicalTrialProtocolEthicsCommitteeApprovalNumber"],"0x0083":["SQ","1","ConsentForClinicalTrialUseSequence"],"0x0084":["CS","1","DistributionType"],"0x0085":["CS","1","ConsentForDistributionFlag"],"0x0086":["DA","1","EthicsCommitteeApprovalEffectivenessStartDate"],"0x0087":["DA","1","EthicsCommitteeApprovalEffectivenessEndDate"]},"0x0014":{"0x0000":["UL","1","GenericGroupLength"],"0x0023":["ST","1","CADFileFormat"],"0x0024":["ST","1","ComponentReferenceSystem"],"0x0025":["ST","1","ComponentManufacturingProcedure"],"0x0028":["ST","1","ComponentManufacturer"],"0x0030":["DS","1-n","MaterialThickness"],"0x0032":["DS","1-n","MaterialPipeDiameter"],"0x0034":["DS","1-n","MaterialIsolationDiameter"],"0x0042":["ST","1","MaterialGrade"],"0x0044":["ST","1","MaterialPropertiesDescription"],"0x0045":["ST","1","MaterialPropertiesFileFormatRetired"],"0x0046":["LT","1","MaterialNotes"],"0x0050":["CS","1","ComponentShape"],"0x0052":["CS","1","CurvatureType"],"0x0054":["DS","1","OuterDiameter"],"0x0056":["DS","1","InnerDiameter"],"0x0100":["LO","1-n","ComponentWelderIDs"],"0x0101":["CS","1","SecondaryApprovalStatus"],"0x0102":["DA","1","SecondaryReviewDate"],"0x0103":["TM","1","SecondaryReviewTime"],"0x0104":["PN","1","SecondaryReviewerName"],"0x0105":["ST","1","RepairID"],"0x0106":["SQ","1","MultipleComponentApprovalSequence"],"0x0107":["CS","1-n","OtherApprovalStatus"],"0x0108":["CS","1-n","OtherSecondaryApprovalStatus"],"0x1010":["ST","1","ActualEnvironmentalConditions"],"0x1020":["DA","1","ExpiryDate"],"0x1040":["ST","1","EnvironmentalConditions"],"0x2002":["SQ","1","EvaluatorSequence"],"0x2004":["IS","1","EvaluatorNumber"],"0x2006":["PN","1","EvaluatorName"],"0x2008":["IS","1","EvaluationAttempt"],"0x2012":["SQ","1","IndicationSequence"],"0x2014":["IS","1","IndicationNumber"],"0x2016":["SH","1","IndicationLabel"],"0x2018":["ST","1","IndicationDescription"],"0x201A":["CS","1-n","IndicationType"],"0x201C":["CS","1","IndicationDisposition"],"0x201E":["SQ","1","IndicationROISequence"],"0x2030":["SQ","1","IndicationPhysicalPropertySequence"],"0x2032":["SH","1","PropertyLabel"],"0x2202":["IS","1","CoordinateSystemNumberOfAxes"],"0x2204":["SQ","1","CoordinateSystemAxesSequence"],"0x2206":["ST","1","CoordinateSystemAxisDescription"],"0x2208":["CS","1","CoordinateSystemDataSetMapping"],"0x220A":["IS","1","CoordinateSystemAxisNumber"],"0x220C":["CS","1","CoordinateSystemAxisType"],"0x220E":["CS","1","CoordinateSystemAxisUnits"],"0x2210":["OB","1","CoordinateSystemAxisValues"],"0x2220":["SQ","1","CoordinateSystemTransformSequence"],"0x2222":["ST","1","TransformDescription"],"0x2224":["IS","1","TransformNumberOfAxes"],"0x2226":["IS","1-n","TransformOrderOfAxes"],"0x2228":["CS","1","TransformedAxisUnits"],"0x222A":["DS","1-n","CoordinateSystemTransformRotationAndScaleMatrix"],"0x222C":["DS","1-n","CoordinateSystemTransformTranslationMatrix"],"0x3011":["DS","1","InternalDetectorFrameTime"],"0x3012":["DS","1","NumberOfFramesIntegrated"],"0x3020":["SQ","1","DetectorTemperatureSequence"],"0x3022":["ST","1","SensorName"],"0x3024":["DS","1","HorizontalOffsetOfSensor"],"0x3026":["DS","1","VerticalOffsetOfSensor"],"0x3028":["DS","1","SensorTemperature"],"0x3040":["SQ","1","DarkCurrentSequence"],"0x3050":["ox","1","DarkCurrentCounts"],"0x3060":["SQ","1","GainCorrectionReferenceSequence"],"0x3070":["ox","1","AirCounts"],"0x3071":["DS","1","KVUsedInGainCalibration"],"0x3072":["DS","1","MAUsedInGainCalibration"],"0x3073":["DS","1","NumberOfFramesUsedForIntegration"],"0x3074":["LO","1","FilterMaterialUsedInGainCalibration"],"0x3075":["DS","1","FilterThicknessUsedInGainCalibration"],"0x3076":["DA","1","DateOfGainCalibration"],"0x3077":["TM","1","TimeOfGainCalibration"],"0x3080":["OB","1","BadPixelImage"],"0x3099":["LT","1","CalibrationNotes"],"0x3100":["LT","1","LinearityCorrectionTechnique"],"0x3101":["LT","1","BeamHardeningCorrectionTechnique"],"0x4002":["SQ","1","PulserEquipmentSequence"],"0x4004":["CS","1","PulserType"],"0x4006":["LT","1","PulserNotes"],"0x4008":["SQ","1","ReceiverEquipmentSequence"],"0x400A":["CS","1","AmplifierType"],"0x400C":["LT","1","ReceiverNotes"],"0x400E":["SQ","1","PreAmplifierEquipmentSequence"],"0x400F":["LT","1","PreAmplifierNotes"],"0x4010":["SQ","1","TransmitTransducerSequence"],"0x4011":["SQ","1","ReceiveTransducerSequence"],"0x4012":["US","1","NumberOfElements"],"0x4013":["CS","1","ElementShape"],"0x4014":["DS","1","ElementDimensionA"],"0x4015":["DS","1","ElementDimensionB"],"0x4016":["DS","1","ElementPitchA"],"0x4017":["DS","1","MeasuredBeamDimensionA"],"0x4018":["DS","1","MeasuredBeamDimensionB"],"0x4019":["DS","1","LocationOfMeasuredBeamDiameter"],"0x401A":["DS","1","NominalFrequency"],"0x401B":["DS","1","MeasuredCenterFrequency"],"0x401C":["DS","1","MeasuredBandwidth"],"0x401D":["DS","1","ElementPitchB"],"0x4020":["SQ","1","PulserSettingsSequence"],"0x4022":["DS","1","PulseWidth"],"0x4024":["DS","1","ExcitationFrequency"],"0x4026":["CS","1","ModulationType"],"0x4028":["DS","1","Damping"],"0x4030":["SQ","1","ReceiverSettingsSequence"],"0x4031":["DS","1","AcquiredSoundpathLength"],"0x4032":["CS","1","AcquisitionCompressionType"],"0x4033":["IS","1","AcquisitionSampleSize"],"0x4034":["DS","1","RectifierSmoothing"],"0x4035":["SQ","1","DACSequence"],"0x4036":["CS","1","DACType"],"0x4038":["DS","1-n","DACGainPoints"],"0x403A":["DS","1-n","DACTimePoints"],"0x403C":["DS","1-n","DACAmplitude"],"0x4040":["SQ","1","PreAmplifierSettingsSequence"],"0x4050":["SQ","1","TransmitTransducerSettingsSequence"],"0x4051":["SQ","1","ReceiveTransducerSettingsSequence"],"0x4052":["DS","1","IncidentAngle"],"0x4054":["ST","1","CouplingTechnique"],"0x4056":["ST","1","CouplingMedium"],"0x4057":["DS","1","CouplingVelocity"],"0x4058":["DS","1","ProbeCenterLocationX"],"0x4059":["DS","1","ProbeCenterLocationZ"],"0x405A":["DS","1","SoundPathLength"],"0x405C":["ST","1","DelayLawIdentifier"],"0x4060":["SQ","1","GateSettingsSequence"],"0x4062":["DS","1","GateThreshold"],"0x4064":["DS","1","VelocityOfSound"],"0x4070":["SQ","1","CalibrationSettingsSequence"],"0x4072":["ST","1","CalibrationProcedure"],"0x4074":["SH","1","ProcedureVersion"],"0x4076":["DA","1","ProcedureCreationDate"],"0x4078":["DA","1","ProcedureExpirationDate"],"0x407A":["DA","1","ProcedureLastModifiedDate"],"0x407C":["TM","1-n","CalibrationTime"],"0x407E":["DA","1-n","CalibrationDate"],"0x4080":["SQ","1","ProbeDriveEquipmentSequence"],"0x4081":["CS","1","DriveType"],"0x4082":["LT","1","ProbeDriveNotes"],"0x4083":["SQ","1","DriveProbeSequence"],"0x4084":["DS","1","ProbeInductance"],"0x4085":["DS","1","ProbeResistance"],"0x4086":["SQ","1","ReceiveProbeSequence"],"0x4087":["SQ","1","ProbeDriveSettingsSequence"],"0x4088":["DS","1","BridgeResistors"],"0x4089":["DS","1","ProbeOrientationAngle"],"0x408B":["DS","1","UserSelectedGainY"],"0x408C":["DS","1","UserSelectedPhase"],"0x408D":["DS","1","UserSelectedOffsetX"],"0x408E":["DS","1","UserSelectedOffsetY"],"0x4091":["SQ","1","ChannelSettingsSequence"],"0x4092":["DS","1","ChannelThreshold"],"0x409A":["SQ","1","ScannerSettingsSequence"],"0x409B":["ST","1","ScanProcedure"],"0x409C":["DS","1","TranslationRateX"],"0x409D":["DS","1","TranslationRateY"],"0x409F":["DS","1","ChannelOverlap"],"0x40A0":["LO","1-n","ImageQualityIndicatorType"],"0x40A1":["LO","1-n","ImageQualityIndicatorMaterial"],"0x40A2":["LO","1-n","ImageQualityIndicatorSize"],"0x5002":["IS","1","LINACEnergy"],"0x5004":["IS","1","LINACOutput"],"0x5100":["US","1","ActiveAperture"],"0x5101":["DS","1","TotalAperture"],"0x5102":["DS","1","ApertureElevation"],"0x5103":["DS","1","MainLobeAngle"],"0x5104":["DS","1","MainRoofAngle"],"0x5105":["CS","1","ConnectorType"],"0x5106":["SH","1","WedgeModelNumber"],"0x5107":["DS","1","WedgeAngleFloat"],"0x5108":["DS","1","WedgeRoofAngle"],"0x5109":["CS","1","WedgeElement1Position"],"0x510A":["DS","1","WedgeMaterialVelocity"],"0x510B":["SH","1","WedgeMaterial"],"0x510C":["DS","1","WedgeOffsetZ"],"0x510D":["DS","1","WedgeOriginOffsetX"],"0x510E":["DS","1","WedgeTimeDelay"],"0x510F":["SH","1","WedgeName"],"0x5110":["SH","1","WedgeManufacturerName"],"0x5111":["LO","1","WedgeDescription"],"0x5112":["DS","1","NominalBeamAngle"],"0x5113":["DS","1","WedgeOffsetX"],"0x5114":["DS","1","WedgeOffsetY"],"0x5115":["DS","1","WedgeTotalLength"],"0x5116":["DS","1","WedgeInContactLength"],"0x5117":["DS","1","WedgeFrontGap"],"0x5118":["DS","1","WedgeTotalHeight"],"0x5119":["DS","1","WedgeFrontHeight"],"0x511A":["DS","1","WedgeRearHeight"],"0x511B":["DS","1","WedgeTotalWidth"],"0x511C":["DS","1","WedgeInContactWidth"],"0x511D":["DS","1","WedgeChamferHeight"],"0x511E":["CS","1","WedgeCurve"],"0x511F":["DS","1","RadiusAlongWedge"]},"0x0016":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["DS","1","WhitePoint"],"0x0002":["DS","3","PrimaryChromaticities"],"0x0003":["UT","1","BatteryLevel"],"0x0004":["DS","1","ExposureTimeInSeconds"],"0x0005":["DS","1","FNumber"],"0x0006":["IS","1","OECFRows"],"0x0007":["IS","1","OECFColumns"],"0x0008":["UC","1-n","OECFColumnNames"],"0x0009":["DS","1-n","OECFValues"],"0x000A":["IS","1","SpatialFrequencyResponseRows"],"0x000B":["IS","1","SpatialFrequencyResponseColumns"],"0x000C":["UC","1-n","SpatialFrequencyResponseColumnNames"],"0x000D":["DS","1-n","SpatialFrequencyResponseValues"],"0x000E":["IS","1","ColorFilterArrayPatternRows"],"0x000F":["IS","1","ColorFilterArrayPatternColumns"],"0x0010":["DS","1-n","ColorFilterArrayPatternValues"],"0x0011":["US","1","FlashFiringStatus"],"0x0012":["US","1","FlashReturnStatus"],"0x0013":["US","1","FlashMode"],"0x0014":["US","1","FlashFunctionPresent"],"0x0015":["US","1","FlashRedEyeMode"],"0x0016":["US","1","ExposureProgram"],"0x0017":["UT","1","SpectralSensitivity"],"0x0018":["IS","1","PhotographicSensitivity"],"0x0019":["IS","1","SelfTimerMode"],"0x001A":["US","1","SensitivityType"],"0x001B":["IS","1","StandardOutputSensitivity"],"0x001C":["IS","1","RecommendedExposureIndex"],"0x001D":["IS","1","ISOSpeed"],"0x001E":["IS","1","ISOSpeedLatitudeyyy"],"0x001F":["IS","1","ISOSpeedLatitudezzz"],"0x0020":["UT","1","EXIFVersion"],"0x0021":["DS","1","ShutterSpeedValue"],"0x0022":["DS","1","ApertureValue"],"0x0023":["DS","1","BrightnessValue"],"0x0024":["DS","1","ExposureBiasValue"],"0x0025":["DS","1","MaxApertureValue"],"0x0026":["DS","1","SubjectDistance"],"0x0027":["US","1","MeteringMode"],"0x0028":["US","1","LightSource"],"0x0029":["DS","1","FocalLength"],"0x002A":["IS","2-4","SubjectArea"],"0x002B":["OB","1","MakerNote"],"0x0030":["DS","1","Temperature"],"0x0031":["DS","1","Humidity"],"0x0032":["DS","1","Pressure"],"0x0033":["DS","1","WaterDepth"],"0x0034":["DS","1","Acceleration"],"0x0035":["DS","1","CameraElevationAngle"],"0x0036":["DS","1-2","FlashEnergy"],"0x0037":["IS","2","SubjectLocation"],"0x0038":["DS","1","PhotographicExposureIndex"],"0x0039":["US","1","SensingMethod"],"0x003A":["US","1","FileSource"],"0x003B":["US","1","SceneType"],"0x0041":["US","1","CustomRendered"],"0x0042":["US","1","ExposureMode"],"0x0043":["US","1","WhiteBalance"],"0x0044":["DS","1","DigitalZoomRatio"],"0x0045":["IS","1","FocalLengthIn35mmFilm"],"0x0046":["US","1","SceneCaptureType"],"0x0047":["US","1","GainControl"],"0x0048":["US","1","Contrast"],"0x0049":["US","1","Saturation"],"0x004A":["US","1","Sharpness"],"0x004B":["OB","1","DeviceSettingDescription"],"0x004C":["US","1","SubjectDistanceRange"],"0x004D":["UT","1","CameraOwnerName"],"0x004E":["DS","4","LensSpecification"],"0x004F":["UT","1","LensMake"],"0x0050":["UT","1","LensModel"],"0x0051":["UT","1","LensSerialNumber"],"0x0061":["CS","1","InteroperabilityIndex"],"0x0062":["OB","1","InteroperabilityVersion"],"0x0070":["OB","1","GPSVersionID"],"0x0071":["CS","1","GPSLatitudeRef"],"0x0072":["DS","3","GPSLatitude"],"0x0073":["CS","1","GPSLongitudeRef"],"0x0074":["DS","3","GPSLongitude"],"0x0075":["US","1","GPSAltitudeRef"],"0x0076":["DS","1","GPSAltitude"],"0x0077":["DT","1","GPSTimeStamp"],"0x0078":["UT","1","GPSSatellites"],"0x0079":["CS","1","GPSStatus"],"0x007A":["CS","1","GPSMeasureMode"],"0x007B":["DS","1","GPSDOP"],"0x007C":["CS","1","GPSSpeedRef"],"0x007D":["DS","1","GPSSpeed"],"0x007E":["CS","1","GPSTrackRef"],"0x007F":["DS","1","GPSTrack"],"0x0080":["CS","1","GPSImgDirectionRef"],"0x0081":["DS","1","GPSImgDirection"],"0x0082":["UT","1","GPSMapDatum"],"0x0083":["CS","1","GPSDestLatitudeRef"],"0x0084":["DS","3","GPSDestLatitude"],"0x0085":["CS","1","GPSDestLongitudeRef"],"0x0086":["DS","3","GPSDestLongitude"],"0x0087":["CS","1","GPSDestBearingRef"],"0x0088":["DS","1","GPSDestBearing"],"0x0089":["CS","1","GPSDestDistanceRef"],"0x008A":["DS","1","GPSDestDistance"],"0x008B":["OB","1","GPSProcessingMethod"],"0x008C":["OB","1","GPSAreaInformation"],"0x008D":["DT","1","GPSDateStamp"],"0x008E":["IS","1","GPSDifferential"],"0x1001":["CS","1","LightSourcePolarization"],"0x1002":["DS","1","EmitterColorTemperature"],"0x1003":["CS","1","ContactMethod"],"0x1004":["CS","1-n","ImmersionMedia"],"0x1005":["DS","1","OpticalMagnificationFactor"]},"0x0018":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["LO","1","ContrastBolusAgent"],"0x0012":["SQ","1","ContrastBolusAgentSequence"],"0x0013":["FL","1","ContrastBolusT1Relaxivity"],"0x0014":["SQ","1","ContrastBolusAdministrationRouteSequence"],"0x0015":["CS","1","BodyPartExamined"],"0x0020":["CS","1-n","ScanningSequence"],"0x0021":["CS","1-n","SequenceVariant"],"0x0022":["CS","1-n","ScanOptions"],"0x0023":["CS","1","MRAcquisitionType"],"0x0024":["SH","1","SequenceName"],"0x0025":["CS","1","AngioFlag"],"0x0026":["SQ","1","InterventionDrugInformationSequence"],"0x0027":["TM","1","InterventionDrugStopTime"],"0x0028":["DS","1","InterventionDrugDose"],"0x0029":["SQ","1","InterventionDrugCodeSequence"],"0x002A":["SQ","1","AdditionalDrugSequence"],"0x0030":["LO","1-n","Radionuclide"],"0x0031":["LO","1","Radiopharmaceutical"],"0x0032":["DS","1","EnergyWindowCenterline"],"0x0033":["DS","1-n","EnergyWindowTotalWidth"],"0x0034":["LO","1","InterventionDrugName"],"0x0035":["TM","1","InterventionDrugStartTime"],"0x0036":["SQ","1","InterventionSequence"],"0x0037":["CS","1","TherapyType"],"0x0038":["CS","1","InterventionStatus"],"0x0039":["CS","1","TherapyDescription"],"0x003A":["ST","1","InterventionDescription"],"0x0040":["IS","1","CineRate"],"0x0042":["CS","1","InitialCineRunState"],"0x0050":["DS","1","SliceThickness"],"0x0060":["DS","1","KVP"],"0x0061":["DS","1",""],"0x0070":["IS","1","CountsAccumulated"],"0x0071":["CS","1","AcquisitionTerminationCondition"],"0x0072":["DS","1","EffectiveDuration"],"0x0073":["CS","1","AcquisitionStartCondition"],"0x0074":["IS","1","AcquisitionStartConditionData"],"0x0075":["IS","1","AcquisitionTerminationConditionData"],"0x0080":["DS","1","RepetitionTime"],"0x0081":["DS","1","EchoTime"],"0x0082":["DS","1","InversionTime"],"0x0083":["DS","1","NumberOfAverages"],"0x0084":["DS","1","ImagingFrequency"],"0x0085":["SH","1","ImagedNucleus"],"0x0086":["IS","1-n","EchoNumbers"],"0x0087":["DS","1","MagneticFieldStrength"],"0x0088":["DS","1","SpacingBetweenSlices"],"0x0089":["IS","1","NumberOfPhaseEncodingSteps"],"0x0090":["DS","1","DataCollectionDiameter"],"0x0091":["IS","1","EchoTrainLength"],"0x0093":["DS","1","PercentSampling"],"0x0094":["DS","1","PercentPhaseFieldOfView"],"0x0095":["DS","1","PixelBandwidth"],"0x1000":["LO","1","DeviceSerialNumber"],"0x1002":["UI","1","DeviceUID"],"0x1003":["LO","1","DeviceID"],"0x1004":["LO","1","PlateID"],"0x1005":["LO","1","GeneratorID"],"0x1006":["LO","1","GridID"],"0x1007":["LO","1","CassetteID"],"0x1008":["LO","1","GantryID"],"0x1009":["UT","1","UniqueDeviceIdentifier"],"0x100A":["SQ","1","UDISequence"],"0x100B":["UI","1-n","ManufacturerDeviceClassUID"],"0x1010":["LO","1","SecondaryCaptureDeviceID"],"0x1011":["LO","1","HardcopyCreationDeviceID"],"0x1012":["DA","1","DateOfSecondaryCapture"],"0x1014":["TM","1","TimeOfSecondaryCapture"],"0x1016":["LO","1","SecondaryCaptureDeviceManufacturer"],"0x1017":["LO","1","HardcopyDeviceManufacturer"],"0x1018":["LO","1","SecondaryCaptureDeviceManufacturerModelName"],"0x1019":["LO","1-n","SecondaryCaptureDeviceSoftwareVersions"],"0x101A":["LO","1-n","HardcopyDeviceSoftwareVersion"],"0x101B":["LO","1","HardcopyDeviceManufacturerModelName"],"0x1020":["LO","1-n","SoftwareVersions"],"0x1022":["SH","1","VideoImageFormatAcquired"],"0x1023":["LO","1","DigitalImageFormatAcquired"],"0x1030":["LO","1","ProtocolName"],"0x1040":["LO","1","ContrastBolusRoute"],"0x1041":["DS","1","ContrastBolusVolume"],"0x1042":["TM","1","ContrastBolusStartTime"],"0x1043":["TM","1","ContrastBolusStopTime"],"0x1044":["DS","1","ContrastBolusTotalDose"],"0x1045":["IS","1","SyringeCounts"],"0x1046":["DS","1-n","ContrastFlowRate"],"0x1047":["DS","1-n","ContrastFlowDuration"],"0x1048":["CS","1","ContrastBolusIngredient"],"0x1049":["DS","1","ContrastBolusIngredientConcentration"],"0x1050":["DS","1","SpatialResolution"],"0x1060":["DS","1","TriggerTime"],"0x1061":["LO","1","TriggerSourceOrType"],"0x1062":["IS","1","NominalInterval"],"0x1063":["DS","1","FrameTime"],"0x1064":["LO","1","CardiacFramingType"],"0x1065":["DS","1-n","FrameTimeVector"],"0x1066":["DS","1","FrameDelay"],"0x1067":["DS","1","ImageTriggerDelay"],"0x1068":["DS","1","MultiplexGroupTimeOffset"],"0x1069":["DS","1","TriggerTimeOffset"],"0x106A":["CS","1","SynchronizationTrigger"],"0x106C":["US","2","SynchronizationChannel"],"0x106E":["UL","1","TriggerSamplePosition"],"0x1070":["LO","1","RadiopharmaceuticalRoute"],"0x1071":["DS","1","RadiopharmaceuticalVolume"],"0x1072":["TM","1","RadiopharmaceuticalStartTime"],"0x1073":["TM","1","RadiopharmaceuticalStopTime"],"0x1074":["DS","1","RadionuclideTotalDose"],"0x1075":["DS","1","RadionuclideHalfLife"],"0x1076":["DS","1","RadionuclidePositronFraction"],"0x1077":["DS","1","RadiopharmaceuticalSpecificActivity"],"0x1078":["DT","1","RadiopharmaceuticalStartDateTime"],"0x1079":["DT","1","RadiopharmaceuticalStopDateTime"],"0x1080":["CS","1","BeatRejectionFlag"],"0x1081":["IS","1","LowRRValue"],"0x1082":["IS","1","HighRRValue"],"0x1083":["IS","1","IntervalsAcquired"],"0x1084":["IS","1","IntervalsRejected"],"0x1085":["LO","1","PVCRejection"],"0x1086":["IS","1","SkipBeats"],"0x1088":["IS","1","HeartRate"],"0x1090":["IS","1","CardiacNumberOfImages"],"0x1094":["IS","1","TriggerWindow"],"0x1100":["DS","1","ReconstructionDiameter"],"0x1110":["DS","1","DistanceSourceToDetector"],"0x1111":["DS","1","DistanceSourceToPatient"],"0x1114":["DS","1","EstimatedRadiographicMagnificationFactor"],"0x1120":["DS","1","GantryDetectorTilt"],"0x1121":["DS","1","GantryDetectorSlew"],"0x1130":["DS","1","TableHeight"],"0x1131":["DS","1","TableTraverse"],"0x1134":["CS","1","TableMotion"],"0x1135":["DS","1-n","TableVerticalIncrement"],"0x1136":["DS","1-n","TableLateralIncrement"],"0x1137":["DS","1-n","TableLongitudinalIncrement"],"0x1138":["DS","1","TableAngle"],"0x113A":["CS","1","TableType"],"0x1140":["CS","1","RotationDirection"],"0x1141":["DS","1","AngularPosition"],"0x1142":["DS","1-n","RadialPosition"],"0x1143":["DS","1","ScanArc"],"0x1144":["DS","1","AngularStep"],"0x1145":["DS","1","CenterOfRotationOffset"],"0x1146":["DS","1-n","RotationOffset"],"0x1147":["CS","1","FieldOfViewShape"],"0x1149":["IS","1-2","FieldOfViewDimensions"],"0x1150":["IS","1","ExposureTime"],"0x1151":["IS","1","XRayTubeCurrent"],"0x1152":["IS","1","Exposure"],"0x1153":["IS","1","ExposureInuAs"],"0x1154":["DS","1","AveragePulseWidth"],"0x1155":["CS","1","RadiationSetting"],"0x1156":["CS","1","RectificationType"],"0x115A":["CS","1","RadiationMode"],"0x115E":["DS","1","ImageAndFluoroscopyAreaDoseProduct"],"0x1160":["SH","1","FilterType"],"0x1161":["LO","1-n","TypeOfFilters"],"0x1162":["DS","1","IntensifierSize"],"0x1164":["DS","2","ImagerPixelSpacing"],"0x1166":["CS","1-n","Grid"],"0x1170":["IS","1","GeneratorPower"],"0x1180":["SH","1","CollimatorGridName"],"0x1181":["CS","1","CollimatorType"],"0x1182":["IS","1-2","FocalDistance"],"0x1183":["DS","1-2","XFocusCenter"],"0x1184":["DS","1-2","YFocusCenter"],"0x1190":["DS","1-n","FocalSpots"],"0x1191":["CS","1","AnodeTargetMaterial"],"0x11A0":["DS","1","BodyPartThickness"],"0x11A2":["DS","1","CompressionForce"],"0x11A3":["DS","1","CompressionPressure"],"0x11A4":["LO","1","PaddleDescription"],"0x11A5":["DS","1","CompressionContactArea"],"0x11B0":["LO","1","AcquisitionMode"],"0x11B1":["LO","1","DoseModeName"],"0x11B2":["CS","1","AcquiredSubtractionMaskFlag"],"0x11B3":["CS","1","FluoroscopyPersistenceFlag"],"0x11B4":["CS","1","FluoroscopyLastImageHoldPersistenceFlag"],"0x11B5":["IS","1","UpperLimitNumberOfPersistentFluoroscopyFrames"],"0x11B6":["CS","1","ContrastBolusAutoInjectionTriggerFlag"],"0x11B7":["FD","1","ContrastBolusInjectionDelay"],"0x11B8":["SQ","1","XAAcquisitionPhaseDetailsSequence"],"0x11B9":["FD","1","XAAcquisitionFrameRate"],"0x11BA":["SQ","1","XAPlaneDetailsSequence"],"0x11BB":["LO","1","AcquisitionFieldOfViewLabel"],"0x11BC":["SQ","1","XRayFilterDetailsSequence"],"0x11BD":["FD","1","XAAcquisitionDuration"],"0x11BE":["CS","1","ReconstructionPipelineType"],"0x11BF":["SQ","1","ImageFilterDetailsSequence"],"0x11C0":["CS","1","AppliedMaskSubtractionFlag"],"0x11C1":["SQ","1","RequestedSeriesDescriptionCodeSequence"],"0x1200":["DA","1-n","DateOfLastCalibration"],"0x1201":["TM","1-n","TimeOfLastCalibration"],"0x1202":["DT","1","DateTimeOfLastCalibration"],"0x1203":["DT","1","CalibrationDateTime"],"0x1210":["SH","1-n","ConvolutionKernel"],"0x1240":["IS","1-n","UpperLowerPixelValues"],"0x1242":["IS","1","ActualFrameDuration"],"0x1243":["IS","1","CountRate"],"0x1244":["US","1","PreferredPlaybackSequencing"],"0x1250":["SH","1","ReceiveCoilName"],"0x1251":["SH","1","TransmitCoilName"],"0x1260":["SH","1","PlateType"],"0x1261":["LO","1","PhosphorType"],"0x1271":["FD","1","WaterEquivalentDiameter"],"0x1272":["SQ","1","WaterEquivalentDiameterCalculationMethodCodeSequence"],"0x1300":["DS","1","ScanVelocity"],"0x1301":["CS","1-n","WholeBodyTechnique"],"0x1302":["IS","1","ScanLength"],"0x1310":["US","4","AcquisitionMatrix"],"0x1312":["CS","1","InPlanePhaseEncodingDirection"],"0x1314":["DS","1","FlipAngle"],"0x1315":["CS","1","VariableFlipAngleFlag"],"0x1316":["DS","1","SAR"],"0x1318":["DS","1","dBdt"],"0x1320":["FL","1","B1rms"],"0x1400":["LO","1","AcquisitionDeviceProcessingDescription"],"0x1401":["LO","1","AcquisitionDeviceProcessingCode"],"0x1402":["CS","1","CassetteOrientation"],"0x1403":["CS","1","CassetteSize"],"0x1404":["US","1","ExposuresOnPlate"],"0x1405":["IS","1","RelativeXRayExposure"],"0x1411":["DS","1","ExposureIndex"],"0x1412":["DS","1","TargetExposureIndex"],"0x1413":["DS","1","DeviationIndex"],"0x1450":["DS","1","ColumnAngulation"],"0x1460":["DS","1","TomoLayerHeight"],"0x1470":["DS","1","TomoAngle"],"0x1480":["DS","1","TomoTime"],"0x1490":["CS","1","TomoType"],"0x1491":["CS","1","TomoClass"],"0x1495":["IS","1","NumberOfTomosynthesisSourceImages"],"0x1500":["CS","1","PositionerMotion"],"0x1508":["CS","1","PositionerType"],"0x1510":["DS","1","PositionerPrimaryAngle"],"0x1511":["DS","1","PositionerSecondaryAngle"],"0x1520":["DS","1-n","PositionerPrimaryAngleIncrement"],"0x1521":["DS","1-n","PositionerSecondaryAngleIncrement"],"0x1530":["DS","1","DetectorPrimaryAngle"],"0x1531":["DS","1","DetectorSecondaryAngle"],"0x1600":["CS","1-3","ShutterShape"],"0x1602":["IS","1","ShutterLeftVerticalEdge"],"0x1604":["IS","1","ShutterRightVerticalEdge"],"0x1606":["IS","1","ShutterUpperHorizontalEdge"],"0x1608":["IS","1","ShutterLowerHorizontalEdge"],"0x1610":["IS","2","CenterOfCircularShutter"],"0x1612":["IS","1","RadiusOfCircularShutter"],"0x1620":["IS","2-2n","VerticesOfThePolygonalShutter"],"0x1622":["US","1","ShutterPresentationValue"],"0x1623":["US","1","ShutterOverlayGroup"],"0x1624":["US","3","ShutterPresentationColorCIELabValue"],"0x1630":["CS","1","OutlineShapeType"],"0x1631":["FD","1","OutlineLeftVerticalEdge"],"0x1632":["FD","1","OutlineRightVerticalEdge"],"0x1633":["FD","1","OutlineUpperHorizontalEdge"],"0x1634":["FD","1","OutlineLowerHorizontalEdge"],"0x1635":["FD","2","CenterOfCircularOutline"],"0x1636":["FD","1","DiameterOfCircularOutline"],"0x1637":["UL","1","NumberOfPolygonalVertices"],"0x1638":["OF","1","VerticesOfThePolygonalOutline"],"0x1700":["CS","1-3","CollimatorShape"],"0x1702":["IS","1","CollimatorLeftVerticalEdge"],"0x1704":["IS","1","CollimatorRightVerticalEdge"],"0x1706":["IS","1","CollimatorUpperHorizontalEdge"],"0x1708":["IS","1","CollimatorLowerHorizontalEdge"],"0x1710":["IS","2","CenterOfCircularCollimator"],"0x1712":["IS","1","RadiusOfCircularCollimator"],"0x1720":["IS","2-2n","VerticesOfThePolygonalCollimator"],"0x1800":["CS","1","AcquisitionTimeSynchronized"],"0x1801":["SH","1","TimeSource"],"0x1802":["CS","1","TimeDistributionProtocol"],"0x1803":["LO","1","NTPSourceAddress"],"0x2001":["IS","1-n","PageNumberVector"],"0x2002":["SH","1-n","FrameLabelVector"],"0x2003":["DS","1-n","FramePrimaryAngleVector"],"0x2004":["DS","1-n","FrameSecondaryAngleVector"],"0x2005":["DS","1-n","SliceLocationVector"],"0x2006":["SH","1-n","DisplayWindowLabelVector"],"0x2010":["DS","2","NominalScannedPixelSpacing"],"0x2020":["CS","1","DigitizingDeviceTransportDirection"],"0x2030":["DS","1","RotationOfScannedFilm"],"0x2041":["SQ","1","BiopsyTargetSequence"],"0x2042":["UI","1","TargetUID"],"0x2043":["FL","2","LocalizingCursorPosition"],"0x2044":["FL","3","CalculatedTargetPosition"],"0x2045":["SH","1","TargetLabel"],"0x2046":["FL","1","DisplayedZValue"],"0x3100":["CS","1","IVUSAcquisition"],"0x3101":["DS","1","IVUSPullbackRate"],"0x3102":["DS","1","IVUSGatedRate"],"0x3103":["IS","1","IVUSPullbackStartFrameNumber"],"0x3104":["IS","1","IVUSPullbackStopFrameNumber"],"0x3105":["IS","1-n","LesionNumber"],"0x4000":["LT","1","AcquisitionComments"],"0x5000":["SH","1-n","OutputPower"],"0x5010":["LO","1-n","TransducerData"],"0x5011":["SQ","1","TransducerIdentificationSequence"],"0x5012":["DS","1","FocusDepth"],"0x5020":["LO","1","ProcessingFunction"],"0x5021":["LO","1","PostprocessingFunction"],"0x5022":["DS","1","MechanicalIndex"],"0x5024":["DS","1","BoneThermalIndex"],"0x5026":["DS","1","CranialThermalIndex"],"0x5027":["DS","1","SoftTissueThermalIndex"],"0x5028":["DS","1","SoftTissueFocusThermalIndex"],"0x5029":["DS","1","SoftTissueSurfaceThermalIndex"],"0x5030":["DS","1","DynamicRange"],"0x5040":["DS","1","TotalGain"],"0x5050":["IS","1","DepthOfScanField"],"0x5100":["CS","1","PatientPosition"],"0x5101":["CS","1","ViewPosition"],"0x5104":["SQ","1","ProjectionEponymousNameCodeSequence"],"0x5210":["DS","6","ImageTransformationMatrix"],"0x5212":["DS","3","ImageTranslationVector"],"0x6000":["DS","1","Sensitivity"],"0x6011":["SQ","1","SequenceOfUltrasoundRegions"],"0x6012":["US","1","RegionSpatialFormat"],"0x6014":["US","1","RegionDataType"],"0x6016":["UL","1","RegionFlags"],"0x6018":["UL","1","RegionLocationMinX0"],"0x601A":["UL","1","RegionLocationMinY0"],"0x601C":["UL","1","RegionLocationMaxX1"],"0x601E":["UL","1","RegionLocationMaxY1"],"0x6020":["SL","1","ReferencePixelX0"],"0x6022":["SL","1","ReferencePixelY0"],"0x6024":["US","1","PhysicalUnitsXDirection"],"0x6026":["US","1","PhysicalUnitsYDirection"],"0x6028":["FD","1","ReferencePixelPhysicalValueX"],"0x602A":["FD","1","ReferencePixelPhysicalValueY"],"0x602C":["FD","1","PhysicalDeltaX"],"0x602E":["FD","1","PhysicalDeltaY"],"0x6030":["UL","1","TransducerFrequency"],"0x6031":["CS","1","TransducerType"],"0x6032":["UL","1","PulseRepetitionFrequency"],"0x6034":["FD","1","DopplerCorrectionAngle"],"0x6036":["FD","1","SteeringAngle"],"0x6038":["UL","1","DopplerSampleVolumeXPositionRetired"],"0x6039":["SL","1","DopplerSampleVolumeXPosition"],"0x603A":["UL","1","DopplerSampleVolumeYPositionRetired"],"0x603B":["SL","1","DopplerSampleVolumeYPosition"],"0x603C":["UL","1","TMLinePositionX0Retired"],"0x603D":["SL","1","TMLinePositionX0"],"0x603E":["UL","1","TMLinePositionY0Retired"],"0x603F":["SL","1","TMLinePositionY0"],"0x6040":["UL","1","TMLinePositionX1Retired"],"0x6041":["SL","1","TMLinePositionX1"],"0x6042":["UL","1","TMLinePositionY1Retired"],"0x6043":["SL","1","TMLinePositionY1"],"0x6044":["US","1","PixelComponentOrganization"],"0x6046":["UL","1","PixelComponentMask"],"0x6048":["UL","1","PixelComponentRangeStart"],"0x604A":["UL","1","PixelComponentRangeStop"],"0x604C":["US","1","PixelComponentPhysicalUnits"],"0x604E":["US","1","PixelComponentDataType"],"0x6050":["UL","1","NumberOfTableBreakPoints"],"0x6052":["UL","1-n","TableOfXBreakPoints"],"0x6054":["FD","1-n","TableOfYBreakPoints"],"0x6056":["UL","1","NumberOfTableEntries"],"0x6058":["UL","1-n","TableOfPixelValues"],"0x605A":["FL","1-n","TableOfParameterValues"],"0x6060":["FL","1-n","RWaveTimeVector"],"0x6070":["US","1","ActiveImageAreaOverlayGroup"],"0x7000":["CS","1","DetectorConditionsNominalFlag"],"0x7001":["DS","1","DetectorTemperature"],"0x7004":["CS","1","DetectorType"],"0x7005":["CS","1","DetectorConfiguration"],"0x7006":["LT","1","DetectorDescription"],"0x7008":["LT","1","DetectorMode"],"0x700A":["SH","1","DetectorID"],"0x700C":["DA","1","DateOfLastDetectorCalibration"],"0x700E":["TM","1","TimeOfLastDetectorCalibration"],"0x7010":["IS","1","ExposuresOnDetectorSinceLastCalibration"],"0x7011":["IS","1","ExposuresOnDetectorSinceManufactured"],"0x7012":["DS","1","DetectorTimeSinceLastExposure"],"0x7014":["DS","1","DetectorActiveTime"],"0x7016":["DS","1","DetectorActivationOffsetFromExposure"],"0x701A":["DS","2","DetectorBinning"],"0x7020":["DS","2","DetectorElementPhysicalSize"],"0x7022":["DS","2","DetectorElementSpacing"],"0x7024":["CS","1","DetectorActiveShape"],"0x7026":["DS","1-2","DetectorActiveDimensions"],"0x7028":["DS","2","DetectorActiveOrigin"],"0x702A":["LO","1","DetectorManufacturerName"],"0x702B":["LO","1","DetectorManufacturerModelName"],"0x7030":["DS","2","FieldOfViewOrigin"],"0x7032":["DS","1","FieldOfViewRotation"],"0x7034":["CS","1","FieldOfViewHorizontalFlip"],"0x7036":["FL","2","PixelDataAreaOriginRelativeToFOV"],"0x7038":["FL","1","PixelDataAreaRotationAngleRelativeToFOV"],"0x7040":["LT","1","GridAbsorbingMaterial"],"0x7041":["LT","1","GridSpacingMaterial"],"0x7042":["DS","1","GridThickness"],"0x7044":["DS","1","GridPitch"],"0x7046":["IS","2","GridAspectRatio"],"0x7048":["DS","1","GridPeriod"],"0x704C":["DS","1","GridFocalDistance"],"0x7050":["CS","1-n","FilterMaterial"],"0x7052":["DS","1-n","FilterThicknessMinimum"],"0x7054":["DS","1-n","FilterThicknessMaximum"],"0x7056":["FL","1-n","FilterBeamPathLengthMinimum"],"0x7058":["FL","1-n","FilterBeamPathLengthMaximum"],"0x7060":["CS","1","ExposureControlMode"],"0x7062":["LT","1","ExposureControlModeDescription"],"0x7064":["CS","1","ExposureStatus"],"0x7065":["DS","1","PhototimerSetting"],"0x8150":["DS","1","ExposureTimeInuS"],"0x8151":["DS","1","XRayTubeCurrentInuA"],"0x9004":["CS","1","ContentQualification"],"0x9005":["SH","1","PulseSequenceName"],"0x9006":["SQ","1","MRImagingModifierSequence"],"0x9008":["CS","1","EchoPulseSequence"],"0x9009":["CS","1","InversionRecovery"],"0x9010":["CS","1","FlowCompensation"],"0x9011":["CS","1","MultipleSpinEcho"],"0x9012":["CS","1","MultiPlanarExcitation"],"0x9014":["CS","1","PhaseContrast"],"0x9015":["CS","1","TimeOfFlightContrast"],"0x9016":["CS","1","Spoiling"],"0x9017":["CS","1","SteadyStatePulseSequence"],"0x9018":["CS","1","EchoPlanarPulseSequence"],"0x9019":["FD","1","TagAngleFirstAxis"],"0x9020":["CS","1","MagnetizationTransfer"],"0x9021":["CS","1","T2Preparation"],"0x9022":["CS","1","BloodSignalNulling"],"0x9024":["CS","1","SaturationRecovery"],"0x9025":["CS","1","SpectrallySelectedSuppression"],"0x9026":["CS","1","SpectrallySelectedExcitation"],"0x9027":["CS","1","SpatialPresaturation"],"0x9028":["CS","1","Tagging"],"0x9029":["CS","1","OversamplingPhase"],"0x9030":["FD","1","TagSpacingFirstDimension"],"0x9032":["CS","1","GeometryOfKSpaceTraversal"],"0x9033":["CS","1","SegmentedKSpaceTraversal"],"0x9034":["CS","1","RectilinearPhaseEncodeReordering"],"0x9035":["FD","1","TagThickness"],"0x9036":["CS","1","PartialFourierDirection"],"0x9037":["CS","1","CardiacSynchronizationTechnique"],"0x9041":["LO","1","ReceiveCoilManufacturerName"],"0x9042":["SQ","1","MRReceiveCoilSequence"],"0x9043":["CS","1","ReceiveCoilType"],"0x9044":["CS","1","QuadratureReceiveCoil"],"0x9045":["SQ","1","MultiCoilDefinitionSequence"],"0x9046":["LO","1","MultiCoilConfiguration"],"0x9047":["SH","1","MultiCoilElementName"],"0x9048":["CS","1","MultiCoilElementUsed"],"0x9049":["SQ","1","MRTransmitCoilSequence"],"0x9050":["LO","1","TransmitCoilManufacturerName"],"0x9051":["CS","1","TransmitCoilType"],"0x9052":["FD","1-2","SpectralWidth"],"0x9053":["FD","1-2","ChemicalShiftReference"],"0x9054":["CS","1","VolumeLocalizationTechnique"],"0x9058":["US","1","MRAcquisitionFrequencyEncodingSteps"],"0x9059":["CS","1","Decoupling"],"0x9060":["CS","1-2","DecoupledNucleus"],"0x9061":["FD","1-2","DecouplingFrequency"],"0x9062":["CS","1","DecouplingMethod"],"0x9063":["FD","1-2","DecouplingChemicalShiftReference"],"0x9064":["CS","1","KSpaceFiltering"],"0x9065":["CS","1-2","TimeDomainFiltering"],"0x9066":["US","1-2","NumberOfZeroFills"],"0x9067":["CS","1","BaselineCorrection"],"0x9069":["FD","1","ParallelReductionFactorInPlane"],"0x9070":["FD","1","CardiacRRIntervalSpecified"],"0x9073":["FD","1","AcquisitionDuration"],"0x9074":["DT","1","FrameAcquisitionDateTime"],"0x9075":["CS","1","DiffusionDirectionality"],"0x9076":["SQ","1","DiffusionGradientDirectionSequence"],"0x9077":["CS","1","ParallelAcquisition"],"0x9078":["CS","1","ParallelAcquisitionTechnique"],"0x9079":["FD","1-n","InversionTimes"],"0x9080":["ST","1","MetaboliteMapDescription"],"0x9081":["CS","1","PartialFourier"],"0x9082":["FD","1","EffectiveEchoTime"],"0x9083":["SQ","1","MetaboliteMapCodeSequence"],"0x9084":["SQ","1","ChemicalShiftSequence"],"0x9085":["CS","1","CardiacSignalSource"],"0x9087":["FD","1","DiffusionBValue"],"0x9089":["FD","3","DiffusionGradientOrientation"],"0x9090":["FD","3","VelocityEncodingDirection"],"0x9091":["FD","1","VelocityEncodingMinimumValue"],"0x9092":["SQ","1","VelocityEncodingAcquisitionSequence"],"0x9093":["US","1","NumberOfKSpaceTrajectories"],"0x9094":["CS","1","CoverageOfKSpace"],"0x9095":["UL","1","SpectroscopyAcquisitionPhaseRows"],"0x9096":["FD","1","ParallelReductionFactorInPlaneRetired"],"0x9098":["FD","1-2","TransmitterFrequency"],"0x9100":["CS","1-2","ResonantNucleus"],"0x9101":["CS","1","FrequencyCorrection"],"0x9103":["SQ","1","MRSpectroscopyFOVGeometrySequence"],"0x9104":["FD","1","SlabThickness"],"0x9105":["FD","3","SlabOrientation"],"0x9106":["FD","3","MidSlabPosition"],"0x9107":["SQ","1","MRSpatialSaturationSequence"],"0x9112":["SQ","1","MRTimingAndRelatedParametersSequence"],"0x9114":["SQ","1","MREchoSequence"],"0x9115":["SQ","1","MRModifierSequence"],"0x9117":["SQ","1","MRDiffusionSequence"],"0x9118":["SQ","1","CardiacSynchronizationSequence"],"0x9119":["SQ","1","MRAveragesSequence"],"0x9125":["SQ","1","MRFOVGeometrySequence"],"0x9126":["SQ","1","VolumeLocalizationSequence"],"0x9127":["UL","1","SpectroscopyAcquisitionDataColumns"],"0x9147":["CS","1","DiffusionAnisotropyType"],"0x9151":["DT","1","FrameReferenceDateTime"],"0x9152":["SQ","1","MRMetaboliteMapSequence"],"0x9155":["FD","1","ParallelReductionFactorOutOfPlane"],"0x9159":["UL","1","SpectroscopyAcquisitionOutOfPlanePhaseSteps"],"0x9166":["CS","1","BulkMotionStatus"],"0x9168":["FD","1","ParallelReductionFactorSecondInPlane"],"0x9169":["CS","1","CardiacBeatRejectionTechnique"],"0x9170":["CS","1","RespiratoryMotionCompensationTechnique"],"0x9171":["CS","1","RespiratorySignalSource"],"0x9172":["CS","1","BulkMotionCompensationTechnique"],"0x9173":["CS","1","BulkMotionSignalSource"],"0x9174":["CS","1","ApplicableSafetyStandardAgency"],"0x9175":["LO","1","ApplicableSafetyStandardDescription"],"0x9176":["SQ","1","OperatingModeSequence"],"0x9177":["CS","1","OperatingModeType"],"0x9178":["CS","1","OperatingMode"],"0x9179":["CS","1","SpecificAbsorptionRateDefinition"],"0x9180":["CS","1","GradientOutputType"],"0x9181":["FD","1","SpecificAbsorptionRateValue"],"0x9182":["FD","1","GradientOutput"],"0x9183":["CS","1","FlowCompensationDirection"],"0x9184":["FD","1","TaggingDelay"],"0x9185":["ST","1","RespiratoryMotionCompensationTechniqueDescription"],"0x9186":["SH","1","RespiratorySignalSourceID"],"0x9195":["FD","1","ChemicalShiftMinimumIntegrationLimitInHz"],"0x9196":["FD","1","ChemicalShiftMaximumIntegrationLimitInHz"],"0x9197":["SQ","1","MRVelocityEncodingSequence"],"0x9198":["CS","1","FirstOrderPhaseCorrection"],"0x9199":["CS","1","WaterReferencedPhaseCorrection"],"0x9200":["CS","1","MRSpectroscopyAcquisitionType"],"0x9214":["CS","1","RespiratoryCyclePosition"],"0x9217":["FD","1","VelocityEncodingMaximumValue"],"0x9218":["FD","1","TagSpacingSecondDimension"],"0x9219":["SS","1","TagAngleSecondAxis"],"0x9220":["FD","1","FrameAcquisitionDuration"],"0x9226":["SQ","1","MRImageFrameTypeSequence"],"0x9227":["SQ","1","MRSpectroscopyFrameTypeSequence"],"0x9231":["US","1","MRAcquisitionPhaseEncodingStepsInPlane"],"0x9232":["US","1","MRAcquisitionPhaseEncodingStepsOutOfPlane"],"0x9234":["UL","1","SpectroscopyAcquisitionPhaseColumns"],"0x9236":["CS","1","CardiacCyclePosition"],"0x9239":["SQ","1","SpecificAbsorptionRateSequence"],"0x9240":["US","1","RFEchoTrainLength"],"0x9241":["US","1","GradientEchoTrainLength"],"0x9250":["CS","1","ArterialSpinLabelingContrast"],"0x9251":["SQ","1","MRArterialSpinLabelingSequence"],"0x9252":["LO","1","ASLTechniqueDescription"],"0x9253":["US","1","ASLSlabNumber"],"0x9254":["FD","1","ASLSlabThickness"],"0x9255":["FD","3","ASLSlabOrientation"],"0x9256":["FD","3","ASLMidSlabPosition"],"0x9257":["CS","1","ASLContext"],"0x9258":["UL","1","ASLPulseTrainDuration"],"0x9259":["CS","1","ASLCrusherFlag"],"0x925A":["FD","1","ASLCrusherFlowLimit"],"0x925B":["LO","1","ASLCrusherDescription"],"0x925C":["CS","1","ASLBolusCutoffFlag"],"0x925D":["SQ","1","ASLBolusCutoffTimingSequence"],"0x925E":["LO","1","ASLBolusCutoffTechnique"],"0x925F":["UL","1","ASLBolusCutoffDelayTime"],"0x9260":["SQ","1","ASLSlabSequence"],"0x9295":["FD","1","ChemicalShiftMinimumIntegrationLimitInppm"],"0x9296":["FD","1","ChemicalShiftMaximumIntegrationLimitInppm"],"0x9297":["CS","1","WaterReferenceAcquisition"],"0x9298":["IS","1","EchoPeakPosition"],"0x9301":["SQ","1","CTAcquisitionTypeSequence"],"0x9302":["CS","1","AcquisitionType"],"0x9303":["FD","1","TubeAngle"],"0x9304":["SQ","1","CTAcquisitionDetailsSequence"],"0x9305":["FD","1","RevolutionTime"],"0x9306":["FD","1","SingleCollimationWidth"],"0x9307":["FD","1","TotalCollimationWidth"],"0x9308":["SQ","1","CTTableDynamicsSequence"],"0x9309":["FD","1","TableSpeed"],"0x9310":["FD","1","TableFeedPerRotation"],"0x9311":["FD","1","SpiralPitchFactor"],"0x9312":["SQ","1","CTGeometrySequence"],"0x9313":["FD","3","DataCollectionCenterPatient"],"0x9314":["SQ","1","CTReconstructionSequence"],"0x9315":["CS","1","ReconstructionAlgorithm"],"0x9316":["CS","1","ConvolutionKernelGroup"],"0x9317":["FD","2","ReconstructionFieldOfView"],"0x9318":["FD","3","ReconstructionTargetCenterPatient"],"0x9319":["FD","1","ReconstructionAngle"],"0x9320":["SH","1","ImageFilter"],"0x9321":["SQ","1","CTExposureSequence"],"0x9322":["FD","2","ReconstructionPixelSpacing"],"0x9323":["CS","1-n","ExposureModulationType"],"0x9324":["FD","1","EstimatedDoseSaving"],"0x9325":["SQ","1","CTXRayDetailsSequence"],"0x9326":["SQ","1","CTPositionSequence"],"0x9327":["FD","1","TablePosition"],"0x9328":["FD","1","ExposureTimeInms"],"0x9329":["SQ","1","CTImageFrameTypeSequence"],"0x9330":["FD","1","XRayTubeCurrentInmA"],"0x9332":["FD","1","ExposureInmAs"],"0x9333":["CS","1","ConstantVolumeFlag"],"0x9334":["CS","1","FluoroscopyFlag"],"0x9335":["FD","1","DistanceSourceToDataCollectionCenter"],"0x9337":["US","1","ContrastBolusAgentNumber"],"0x9338":["SQ","1","ContrastBolusIngredientCodeSequence"],"0x9340":["SQ","1","ContrastAdministrationProfileSequence"],"0x9341":["SQ","1","ContrastBolusUsageSequence"],"0x9342":["CS","1","ContrastBolusAgentAdministered"],"0x9343":["CS","1","ContrastBolusAgentDetected"],"0x9344":["CS","1","ContrastBolusAgentPhase"],"0x9345":["FD","1","CTDIvol"],"0x9346":["SQ","1","CTDIPhantomTypeCodeSequence"],"0x9351":["FL","1","CalciumScoringMassFactorPatient"],"0x9352":["FL","3","CalciumScoringMassFactorDevice"],"0x9353":["FL","1","EnergyWeightingFactor"],"0x9360":["SQ","1","CTAdditionalXRaySourceSequence"],"0x9361":["CS","1","MultienergyCTAcquisition"],"0x9362":["SQ","1","MultienergyCTAcquisitionSequence"],"0x9363":["SQ","1","MultienergyCTProcessingSequence"],"0x9364":["SQ","1","MultienergyCTCharacteristicsSequence"],"0x9365":["SQ","1","MultienergyCTXRaySourceSequence"],"0x9366":["US","1","XRaySourceIndex"],"0x9367":["UC","1","XRaySourceID"],"0x9368":["CS","1","MultienergySourceTechnique"],"0x9369":["DT","1","SourceStartDateTime"],"0x936A":["DT","1","SourceEndDateTime"],"0x936B":["US","1","SwitchingPhaseNumber"],"0x936C":["DS","1","SwitchingPhaseNominalDuration"],"0x936D":["DS","1","SwitchingPhaseTransitionDuration"],"0x936E":["DS","1","EffectiveBinEnergy"],"0x936F":["SQ","1","MultienergyCTXRayDetectorSequence"],"0x9370":["US","1","XRayDetectorIndex"],"0x9371":["UC","1","XRayDetectorID"],"0x9372":["CS","1","MultienergyDetectorType"],"0x9373":["ST","1","XRayDetectorLabel"],"0x9374":["DS","1","NominalMaxEnergy"],"0x9375":["DS","1","NominalMinEnergy"],"0x9376":["US","1-n","ReferencedXRayDetectorIndex"],"0x9377":["US","1-n","ReferencedXRaySourceIndex"],"0x9378":["US","1-n","ReferencedPathIndex"],"0x9379":["SQ","1","MultienergyCTPathSequence"],"0x937A":["US","1","MultienergyCTPathIndex"],"0x937B":["UT","1","MultienergyAcquisitionDescription"],"0x937C":["FD","1","MonoenergeticEnergyEquivalent"],"0x937D":["SQ","1","MaterialCodeSequence"],"0x937E":["CS","1","DecompositionMethod"],"0x937F":["UT","1","DecompositionDescription"],"0x9380":["SQ","1","DecompositionAlgorithmIdentificationSequence"],"0x9381":["SQ","1","DecompositionMaterialSequence"],"0x9382":["SQ","1","MaterialAttenuationSequence"],"0x9383":["DS","1","PhotonEnergy"],"0x9384":["DS","1","XRayMassAttenuationCoefficient"],"0x9401":["SQ","1","ProjectionPixelCalibrationSequence"],"0x9402":["FL","1","DistanceSourceToIsocenter"],"0x9403":["FL","1","DistanceObjectToTableTop"],"0x9404":["FL","2","ObjectPixelSpacingInCenterOfBeam"],"0x9405":["SQ","1","PositionerPositionSequence"],"0x9406":["SQ","1","TablePositionSequence"],"0x9407":["SQ","1","CollimatorShapeSequence"],"0x9410":["CS","1","PlanesInAcquisition"],"0x9412":["SQ","1","XAXRFFrameCharacteristicsSequence"],"0x9417":["SQ","1","FrameAcquisitionSequence"],"0x9420":["CS","1","XRayReceptorType"],"0x9423":["LO","1","AcquisitionProtocolName"],"0x9424":["LT","1","AcquisitionProtocolDescription"],"0x9425":["CS","1","ContrastBolusIngredientOpaque"],"0x9426":["FL","1","DistanceReceptorPlaneToDetectorHousing"],"0x9427":["CS","1","IntensifierActiveShape"],"0x9428":["FL","1-2","IntensifierActiveDimensions"],"0x9429":["FL","2","PhysicalDetectorSize"],"0x9430":["FL","2","PositionOfIsocenterProjection"],"0x9432":["SQ","1","FieldOfViewSequence"],"0x9433":["LO","1","FieldOfViewDescription"],"0x9434":["SQ","1","ExposureControlSensingRegionsSequence"],"0x9435":["CS","1","ExposureControlSensingRegionShape"],"0x9436":["SS","1","ExposureControlSensingRegionLeftVerticalEdge"],"0x9437":["SS","1","ExposureControlSensingRegionRightVerticalEdge"],"0x9438":["SS","1","ExposureControlSensingRegionUpperHorizontalEdge"],"0x9439":["SS","1","ExposureControlSensingRegionLowerHorizontalEdge"],"0x9440":["SS","2","CenterOfCircularExposureControlSensingRegion"],"0x9441":["US","1","RadiusOfCircularExposureControlSensingRegion"],"0x9442":["SS","2-n","VerticesOfThePolygonalExposureControlSensingRegion"],"0x9445":["","",""],"0x9447":["FL","1","ColumnAngulationPatient"],"0x9449":["FL","1","BeamAngle"],"0x9451":["SQ","1","FrameDetectorParametersSequence"],"0x9452":["FL","1","CalculatedAnatomyThickness"],"0x9455":["SQ","1","CalibrationSequence"],"0x9456":["SQ","1","ObjectThicknessSequence"],"0x9457":["CS","1","PlaneIdentification"],"0x9461":["FL","1-2","FieldOfViewDimensionsInFloat"],"0x9462":["SQ","1","IsocenterReferenceSystemSequence"],"0x9463":["FL","1","PositionerIsocenterPrimaryAngle"],"0x9464":["FL","1","PositionerIsocenterSecondaryAngle"],"0x9465":["FL","1","PositionerIsocenterDetectorRotationAngle"],"0x9466":["FL","1","TableXPositionToIsocenter"],"0x9467":["FL","1","TableYPositionToIsocenter"],"0x9468":["FL","1","TableZPositionToIsocenter"],"0x9469":["FL","1","TableHorizontalRotationAngle"],"0x9470":["FL","1","TableHeadTiltAngle"],"0x9471":["FL","1","TableCradleTiltAngle"],"0x9472":["SQ","1","FrameDisplayShutterSequence"],"0x9473":["FL","1","AcquiredImageAreaDoseProduct"],"0x9474":["CS","1","CArmPositionerTabletopRelationship"],"0x9476":["SQ","1","XRayGeometrySequence"],"0x9477":["SQ","1","IrradiationEventIdentificationSequence"],"0x9504":["SQ","1","XRay3DFrameTypeSequence"],"0x9506":["SQ","1","ContributingSourcesSequence"],"0x9507":["SQ","1","XRay3DAcquisitionSequence"],"0x9508":["FL","1","PrimaryPositionerScanArc"],"0x9509":["FL","1","SecondaryPositionerScanArc"],"0x9510":["FL","1","PrimaryPositionerScanStartAngle"],"0x9511":["FL","1","SecondaryPositionerScanStartAngle"],"0x9514":["FL","1","PrimaryPositionerIncrement"],"0x9515":["FL","1","SecondaryPositionerIncrement"],"0x9516":["DT","1","StartAcquisitionDateTime"],"0x9517":["DT","1","EndAcquisitionDateTime"],"0x9518":["SS","1","PrimaryPositionerIncrementSign"],"0x9519":["SS","1","SecondaryPositionerIncrementSign"],"0x9524":["LO","1","ApplicationName"],"0x9525":["LO","1","ApplicationVersion"],"0x9526":["LO","1","ApplicationManufacturer"],"0x9527":["CS","1","AlgorithmType"],"0x9528":["LO","1","AlgorithmDescription"],"0x9530":["SQ","1","XRay3DReconstructionSequence"],"0x9531":["LO","1","ReconstructionDescription"],"0x9538":["SQ","1","PerProjectionAcquisitionSequence"],"0x9541":["SQ","1","DetectorPositionSequence"],"0x9542":["SQ","1","XRayAcquisitionDoseSequence"],"0x9543":["FD","1","XRaySourceIsocenterPrimaryAngle"],"0x9544":["FD","1","XRaySourceIsocenterSecondaryAngle"],"0x9545":["FD","1","BreastSupportIsocenterPrimaryAngle"],"0x9546":["FD","1","BreastSupportIsocenterSecondaryAngle"],"0x9547":["FD","1","BreastSupportXPositionToIsocenter"],"0x9548":["FD","1","BreastSupportYPositionToIsocenter"],"0x9549":["FD","1","BreastSupportZPositionToIsocenter"],"0x9550":["FD","1","DetectorIsocenterPrimaryAngle"],"0x9551":["FD","1","DetectorIsocenterSecondaryAngle"],"0x9552":["FD","1","DetectorXPositionToIsocenter"],"0x9553":["FD","1","DetectorYPositionToIsocenter"],"0x9554":["FD","1","DetectorZPositionToIsocenter"],"0x9555":["SQ","1","XRayGridSequence"],"0x9556":["SQ","1","XRayFilterSequence"],"0x9557":["FD","3","DetectorActiveAreaTLHCPosition"],"0x9558":["FD","6","DetectorActiveAreaOrientation"],"0x9559":["CS","1","PositionerPrimaryAngleDirection"],"0x9601":["SQ","1","DiffusionBMatrixSequence"],"0x9602":["FD","1","DiffusionBValueXX"],"0x9603":["FD","1","DiffusionBValueXY"],"0x9604":["FD","1","DiffusionBValueXZ"],"0x9605":["FD","1","DiffusionBValueYY"],"0x9606":["FD","1","DiffusionBValueYZ"],"0x9607":["FD","1","DiffusionBValueZZ"],"0x9621":["SQ","1","FunctionalMRSequence"],"0x9622":["CS","1","FunctionalSettlingPhaseFramesPresent"],"0x9623":["DT","1","FunctionalSyncPulse"],"0x9624":["CS","1","SettlingPhaseFrame"],"0x9701":["DT","1","DecayCorrectionDateTime"],"0x9715":["FD","1","StartDensityThreshold"],"0x9716":["FD","1","StartRelativeDensityDifferenceThreshold"],"0x9717":["FD","1","StartCardiacTriggerCountThreshold"],"0x9718":["FD","1","StartRespiratoryTriggerCountThreshold"],"0x9719":["FD","1","TerminationCountsThreshold"],"0x9720":["FD","1","TerminationDensityThreshold"],"0x9721":["FD","1","TerminationRelativeDensityThreshold"],"0x9722":["FD","1","TerminationTimeThreshold"],"0x9723":["FD","1","TerminationCardiacTriggerCountThreshold"],"0x9724":["FD","1","TerminationRespiratoryTriggerCountThreshold"],"0x9725":["CS","1","DetectorGeometry"],"0x9726":["FD","1","TransverseDetectorSeparation"],"0x9727":["FD","1","AxialDetectorDimension"],"0x9729":["US","1","RadiopharmaceuticalAgentNumber"],"0x9732":["SQ","1","PETFrameAcquisitionSequence"],"0x9733":["SQ","1","PETDetectorMotionDetailsSequence"],"0x9734":["SQ","1","PETTableDynamicsSequence"],"0x9735":["SQ","1","PETPositionSequence"],"0x9736":["SQ","1","PETFrameCorrectionFactorsSequence"],"0x9737":["SQ","1","RadiopharmaceuticalUsageSequence"],"0x9738":["CS","1","AttenuationCorrectionSource"],"0x9739":["US","1","NumberOfIterations"],"0x9740":["US","1","NumberOfSubsets"],"0x9749":["SQ","1","PETReconstructionSequence"],"0x9751":["SQ","1","PETFrameTypeSequence"],"0x9755":["CS","1","TimeOfFlightInformationUsed"],"0x9756":["CS","1","ReconstructionType"],"0x9758":["CS","1","DecayCorrected"],"0x9759":["CS","1","AttenuationCorrected"],"0x9760":["CS","1","ScatterCorrected"],"0x9761":["CS","1","DeadTimeCorrected"],"0x9762":["CS","1","GantryMotionCorrected"],"0x9763":["CS","1","PatientMotionCorrected"],"0x9764":["CS","1","CountLossNormalizationCorrected"],"0x9765":["CS","1","RandomsCorrected"],"0x9766":["CS","1","NonUniformRadialSamplingCorrected"],"0x9767":["CS","1","SensitivityCalibrated"],"0x9768":["CS","1","DetectorNormalizationCorrection"],"0x9769":["CS","1","IterativeReconstructionMethod"],"0x9770":["CS","1","AttenuationCorrectionTemporalRelationship"],"0x9771":["SQ","1","PatientPhysiologicalStateSequence"],"0x9772":["SQ","1","PatientPhysiologicalStateCodeSequence"],"0x9801":["FD","1-n","DepthsOfFocus"],"0x9803":["SQ","1","ExcludedIntervalsSequence"],"0x9804":["DT","1","ExclusionStartDateTime"],"0x9805":["FD","1","ExclusionDuration"],"0x9806":["SQ","1","USImageDescriptionSequence"],"0x9807":["SQ","1","ImageDataTypeSequence"],"0x9808":["CS","1","DataType"],"0x9809":["SQ","1","TransducerScanPatternCodeSequence"],"0x980B":["CS","1","AliasedDataType"],"0x980C":["CS","1","PositionMeasuringDeviceUsed"],"0x980D":["SQ","1","TransducerGeometryCodeSequence"],"0x980E":["SQ","1","TransducerBeamSteeringCodeSequence"],"0x980F":["SQ","1","TransducerApplicationCodeSequence"],"0x9810":["xs","1","ZeroVelocityPixelValue"],"0x9900":["LO","1","ReferenceLocationLabel"],"0x9901":["UT","1","ReferenceLocationDescription"],"0x9902":["SQ","1","ReferenceBasisCodeSequence"],"0x9903":["SQ","1","ReferenceGeometryCodeSequence"],"0x9904":["DS","1","OffsetDistance"],"0x9905":["CS","1","OffsetDirection"],"0x9906":["SQ","1","PotentialScheduledProtocolCodeSequence"],"0x9907":["SQ","1","PotentialRequestedProcedureCodeSequence"],"0x9908":["UC","1-n","PotentialReasonsForProcedure"],"0x9909":["SQ","1","PotentialReasonsForProcedureCodeSequence"],"0x990A":["UC","1-n","PotentialDiagnosticTasks"],"0x990B":["SQ","1","ContraindicationsCodeSequence"],"0x990C":["SQ","1","ReferencedDefinedProtocolSequence"],"0x990D":["SQ","1","ReferencedPerformedProtocolSequence"],"0x990E":["SQ","1","PredecessorProtocolSequence"],"0x990F":["UT","1","ProtocolPlanningInformation"],"0x9910":["UT","1","ProtocolDesignRationale"],"0x9911":["SQ","1","PatientSpecificationSequence"],"0x9912":["SQ","1","ModelSpecificationSequence"],"0x9913":["SQ","1","ParametersSpecificationSequence"],"0x9914":["SQ","1","InstructionSequence"],"0x9915":["US","1","InstructionIndex"],"0x9916":["LO","1","InstructionText"],"0x9917":["UT","1","InstructionDescription"],"0x9918":["CS","1","InstructionPerformedFlag"],"0x9919":["DT","1","InstructionPerformedDateTime"],"0x991A":["UT","1","InstructionPerformanceComment"],"0x991B":["SQ","1","PatientPositioningInstructionSequence"],"0x991C":["SQ","1","PositioningMethodCodeSequence"],"0x991D":["SQ","1","PositioningLandmarkSequence"],"0x991E":["UI","1","TargetFrameOfReferenceUID"],"0x991F":["SQ","1","AcquisitionProtocolElementSpecificationSequence"],"0x9920":["SQ","1","AcquisitionProtocolElementSequence"],"0x9921":["US","1","ProtocolElementNumber"],"0x9922":["LO","1","ProtocolElementName"],"0x9923":["UT","1","ProtocolElementCharacteristicsSummary"],"0x9924":["UT","1","ProtocolElementPurpose"],"0x9930":["CS","1","AcquisitionMotion"],"0x9931":["SQ","1","AcquisitionStartLocationSequence"],"0x9932":["SQ","1","AcquisitionEndLocationSequence"],"0x9933":["SQ","1","ReconstructionProtocolElementSpecificationSequence"],"0x9934":["SQ","1","ReconstructionProtocolElementSequence"],"0x9935":["SQ","1","StorageProtocolElementSpecificationSequence"],"0x9936":["SQ","1","StorageProtocolElementSequence"],"0x9937":["LO","1","RequestedSeriesDescription"],"0x9938":["US","1-n","SourceAcquisitionProtocolElementNumber"],"0x9939":["US","1-n","SourceAcquisitionBeamNumber"],"0x993A":["US","1-n","SourceReconstructionProtocolElementNumber"],"0x993B":["SQ","1","ReconstructionStartLocationSequence"],"0x993C":["SQ","1","ReconstructionEndLocationSequence"],"0x993D":["SQ","1","ReconstructionAlgorithmSequence"],"0x993E":["SQ","1","ReconstructionTargetCenterLocationSequence"],"0x9941":["UT","1","ImageFilterDescription"],"0x9942":["FD","1","CTDIvolNotificationTrigger"],"0x9943":["FD","1","DLPNotificationTrigger"],"0x9944":["CS","1","AutoKVPSelectionType"],"0x9945":["FD","1","AutoKVPUpperBound"],"0x9946":["FD","1","AutoKVPLowerBound"],"0x9947":["CS","1","ProtocolDefinedPatientPosition"],"0xA001":["SQ","1","ContributingEquipmentSequence"],"0xA002":["DT","1","ContributionDateTime"],"0xA003":["ST","1","ContributionDescription"]},"0x0020":{"0x0000":["UL","1","GenericGroupLength"],"0x000D":["UI","1","StudyInstanceUID"],"0x000E":["UI","1","SeriesInstanceUID"],"0x0010":["SH","1","StudyID"],"0x0011":["IS","1","SeriesNumber"],"0x0012":["IS","1","AcquisitionNumber"],"0x0013":["IS","1","InstanceNumber"],"0x0014":["IS","1","IsotopeNumber"],"0x0015":["IS","1","PhaseNumber"],"0x0016":["IS","1","IntervalNumber"],"0x0017":["IS","1","TimeSlotNumber"],"0x0018":["IS","1","AngleNumber"],"0x0019":["IS","1","ItemNumber"],"0x0020":["CS","2","PatientOrientation"],"0x0022":["IS","1","OverlayNumber"],"0x0024":["IS","1","CurveNumber"],"0x0026":["IS","1","LUTNumber"],"0x0030":["DS","3","ImagePosition"],"0x0032":["DS","3","ImagePositionPatient"],"0x0035":["DS","6","ImageOrientation"],"0x0037":["DS","6","ImageOrientationPatient"],"0x0050":["DS","1","Location"],"0x0052":["UI","1","FrameOfReferenceUID"],"0x0060":["CS","1","Laterality"],"0x0062":["CS","1","ImageLaterality"],"0x0070":["LO","1","ImageGeometryType"],"0x0080":["CS","1-n","MaskingImage"],"0x00AA":["IS","1","ReportNumber"],"0x0100":["IS","1","TemporalPositionIdentifier"],"0x0105":["IS","1","NumberOfTemporalPositions"],"0x0110":["DS","1","TemporalResolution"],"0x0200":["UI","1","SynchronizationFrameOfReferenceUID"],"0x0242":["UI","1","SOPInstanceUIDOfConcatenationSource"],"0x1000":["IS","1","SeriesInStudy"],"0x1001":["IS","1","AcquisitionsInSeries"],"0x1002":["IS","1","ImagesInAcquisition"],"0x1003":["IS","1","ImagesInSeries"],"0x1004":["IS","1","AcquisitionsInStudy"],"0x1005":["IS","1","ImagesInStudy"],"0x1020":["LO","1-n","Reference"],"0x103F":["LO","1","TargetPositionReferenceIndicator"],"0x1040":["LO","1","PositionReferenceIndicator"],"0x1041":["DS","1","SliceLocation"],"0x1070":["IS","1-n","OtherStudyNumbers"],"0x1200":["IS","1","NumberOfPatientRelatedStudies"],"0x1202":["IS","1","NumberOfPatientRelatedSeries"],"0x1204":["IS","1","NumberOfPatientRelatedInstances"],"0x1206":["IS","1","NumberOfStudyRelatedSeries"],"0x1208":["IS","1","NumberOfStudyRelatedInstances"],"0x1209":["IS","1","NumberOfSeriesRelatedInstances"],"0x3100":["CS","1-n","SourceImageIDs"],"0x3401":["CS","1","ModifyingDeviceID"],"0x3402":["CS","1","ModifiedImageID"],"0x3403":["DA","1","ModifiedImageDate"],"0x3404":["LO","1","ModifyingDeviceManufacturer"],"0x3405":["TM","1","ModifiedImageTime"],"0x3406":["LO","1","ModifiedImageDescription"],"0x4000":["LT","1","ImageComments"],"0x5000":["AT","1-n","OriginalImageIdentification"],"0x5002":["LO","1-n","OriginalImageIdentificationNomenclature"],"0x9056":["SH","1","StackID"],"0x9057":["UL","1","InStackPositionNumber"],"0x9071":["SQ","1","FrameAnatomySequence"],"0x9072":["CS","1","FrameLaterality"],"0x9111":["SQ","1","FrameContentSequence"],"0x9113":["SQ","1","PlanePositionSequence"],"0x9116":["SQ","1","PlaneOrientationSequence"],"0x9128":["UL","1","TemporalPositionIndex"],"0x9153":["FD","1","NominalCardiacTriggerDelayTime"],"0x9154":["FL","1","NominalCardiacTriggerTimePriorToRPeak"],"0x9155":["FL","1","ActualCardiacTriggerTimePriorToRPeak"],"0x9156":["US","1","FrameAcquisitionNumber"],"0x9157":["UL","1-n","DimensionIndexValues"],"0x9158":["LT","1","FrameComments"],"0x9161":["UI","1","ConcatenationUID"],"0x9162":["US","1","InConcatenationNumber"],"0x9163":["US","1","InConcatenationTotalNumber"],"0x9164":["UI","1","DimensionOrganizationUID"],"0x9165":["AT","1","DimensionIndexPointer"],"0x9167":["AT","1","FunctionalGroupPointer"],"0x9170":["SQ","1","UnassignedSharedConvertedAttributesSequence"],"0x9171":["SQ","1","UnassignedPerFrameConvertedAttributesSequence"],"0x9172":["SQ","1","ConversionSourceAttributesSequence"],"0x9213":["LO","1","DimensionIndexPrivateCreator"],"0x9221":["SQ","1","DimensionOrganizationSequence"],"0x9222":["SQ","1","DimensionIndexSequence"],"0x9228":["UL","1","ConcatenationFrameOffsetNumber"],"0x9238":["LO","1","FunctionalGroupPrivateCreator"],"0x9241":["FL","1","NominalPercentageOfCardiacPhase"],"0x9245":["FL","1","NominalPercentageOfRespiratoryPhase"],"0x9246":["FL","1","StartingRespiratoryAmplitude"],"0x9247":["CS","1","StartingRespiratoryPhase"],"0x9248":["FL","1","EndingRespiratoryAmplitude"],"0x9249":["CS","1","EndingRespiratoryPhase"],"0x9250":["CS","1","RespiratoryTriggerType"],"0x9251":["FD","1","RRIntervalTimeNominal"],"0x9252":["FD","1","ActualCardiacTriggerDelayTime"],"0x9253":["SQ","1","RespiratorySynchronizationSequence"],"0x9254":["FD","1","RespiratoryIntervalTime"],"0x9255":["FD","1","NominalRespiratoryTriggerDelayTime"],"0x9256":["FD","1","RespiratoryTriggerDelayThreshold"],"0x9257":["FD","1","ActualRespiratoryTriggerDelayTime"],"0x9301":["FD","3","ImagePositionVolume"],"0x9302":["FD","6","ImageOrientationVolume"],"0x9307":["CS","1","UltrasoundAcquisitionGeometry"],"0x9308":["FD","3","ApexPosition"],"0x9309":["FD","16","VolumeToTransducerMappingMatrix"],"0x930A":["FD","16","VolumeToTableMappingMatrix"],"0x930B":["CS","1","VolumeToTransducerRelationship"],"0x930C":["CS","1","PatientFrameOfReferenceSource"],"0x930D":["FD","1","TemporalPositionTimeOffset"],"0x930E":["SQ","1","PlanePositionVolumeSequence"],"0x930F":["SQ","1","PlaneOrientationVolumeSequence"],"0x9310":["SQ","1","TemporalPositionSequence"],"0x9311":["CS","1","DimensionOrganizationType"],"0x9312":["UI","1","VolumeFrameOfReferenceUID"],"0x9313":["UI","1","TableFrameOfReferenceUID"],"0x9421":["LO","1","DimensionDescriptionLabel"],"0x9450":["SQ","1","PatientOrientationInFrameSequence"],"0x9453":["LO","1","FrameLabel"],"0x9518":["US","1-n","AcquisitionIndex"],"0x9529":["SQ","1","ContributingSOPInstancesReferenceSequence"],"0x9536":["US","1","ReconstructionIndex"]},"0x0022":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["US","1","LightPathFilterPassThroughWavelength"],"0x0002":["US","2","LightPathFilterPassBand"],"0x0003":["US","1","ImagePathFilterPassThroughWavelength"],"0x0004":["US","2","ImagePathFilterPassBand"],"0x0005":["CS","1","PatientEyeMovementCommanded"],"0x0006":["SQ","1","PatientEyeMovementCommandCodeSequence"],"0x0007":["FL","1","SphericalLensPower"],"0x0008":["FL","1","CylinderLensPower"],"0x0009":["FL","1","CylinderAxis"],"0x000A":["FL","1","EmmetropicMagnification"],"0x000B":["FL","1","IntraOcularPressure"],"0x000C":["FL","1","HorizontalFieldOfView"],"0x000D":["CS","1","PupilDilated"],"0x000E":["FL","1","DegreeOfDilation"],"0x0010":["FL","1","StereoBaselineAngle"],"0x0011":["FL","1","StereoBaselineDisplacement"],"0x0012":["FL","1","StereoHorizontalPixelOffset"],"0x0013":["FL","1","StereoVerticalPixelOffset"],"0x0014":["FL","1","StereoRotation"],"0x0015":["SQ","1","AcquisitionDeviceTypeCodeSequence"],"0x0016":["SQ","1","IlluminationTypeCodeSequence"],"0x0017":["SQ","1","LightPathFilterTypeStackCodeSequence"],"0x0018":["SQ","1","ImagePathFilterTypeStackCodeSequence"],"0x0019":["SQ","1","LensesCodeSequence"],"0x001A":["SQ","1","ChannelDescriptionCodeSequence"],"0x001B":["SQ","1","RefractiveStateSequence"],"0x001C":["SQ","1","MydriaticAgentCodeSequence"],"0x001D":["SQ","1","RelativeImagePositionCodeSequence"],"0x001E":["FL","1","CameraAngleOfView"],"0x0020":["SQ","1","StereoPairsSequence"],"0x0021":["SQ","1","LeftImageSequence"],"0x0022":["SQ","1","RightImageSequence"],"0x0028":["CS","1","StereoPairsPresent"],"0x0030":["FL","1","AxialLengthOfTheEye"],"0x0031":["SQ","1","OphthalmicFrameLocationSequence"],"0x0032":["FL","2-2n","ReferenceCoordinates"],"0x0035":["FL","1","DepthSpatialResolution"],"0x0036":["FL","1","MaximumDepthDistortion"],"0x0037":["FL","1","AlongScanSpatialResolution"],"0x0038":["FL","1","MaximumAlongScanDistortion"],"0x0039":["CS","1","OphthalmicImageOrientation"],"0x0041":["FL","1","DepthOfTransverseImage"],"0x0042":["SQ","1","MydriaticAgentConcentrationUnitsSequence"],"0x0048":["FL","1","AcrossScanSpatialResolution"],"0x0049":["FL","1","MaximumAcrossScanDistortion"],"0x004E":["DS","1","MydriaticAgentConcentration"],"0x0055":["FL","1","IlluminationWaveLength"],"0x0056":["FL","1","IlluminationPower"],"0x0057":["FL","1","IlluminationBandwidth"],"0x0058":["SQ","1","MydriaticAgentSequence"],"0x1007":["SQ","1","OphthalmicAxialMeasurementsRightEyeSequence"],"0x1008":["SQ","1","OphthalmicAxialMeasurementsLeftEyeSequence"],"0x1009":["CS","1","OphthalmicAxialMeasurementsDeviceType"],"0x1010":["CS","1","OphthalmicAxialLengthMeasurementsType"],"0x1012":["SQ","1","OphthalmicAxialLengthSequence"],"0x1019":["FL","1","OphthalmicAxialLength"],"0x1024":["SQ","1","LensStatusCodeSequence"],"0x1025":["SQ","1","VitreousStatusCodeSequence"],"0x1028":["SQ","1","IOLFormulaCodeSequence"],"0x1029":["LO","1","IOLFormulaDetail"],"0x1033":["FL","1","KeratometerIndex"],"0x1035":["SQ","1","SourceOfOphthalmicAxialLengthCodeSequence"],"0x1036":["SQ","1","SourceOfCornealSizeDataCodeSequence"],"0x1037":["FL","1","TargetRefraction"],"0x1039":["CS","1","RefractiveProcedureOccurred"],"0x1040":["SQ","1","RefractiveSurgeryTypeCodeSequence"],"0x1044":["SQ","1","OphthalmicUltrasoundMethodCodeSequence"],"0x1045":["SQ","1","SurgicallyInducedAstigmatismSequence"],"0x1046":["CS","1","TypeOfOpticalCorrection"],"0x1047":["SQ","1","ToricIOLPowerSequence"],"0x1048":["SQ","1","PredictedToricErrorSequence"],"0x1049":["CS","1","PreSelectedForImplantation"],"0x104A":["SQ","1","ToricIOLPowerForExactEmmetropiaSequence"],"0x104B":["SQ","1","ToricIOLPowerForExactTargetRefractionSequence"],"0x1050":["SQ","1","OphthalmicAxialLengthMeasurementsSequence"],"0x1053":["FL","1","IOLPower"],"0x1054":["FL","1","PredictedRefractiveError"],"0x1059":["FL","1","OphthalmicAxialLengthVelocity"],"0x1065":["LO","1","LensStatusDescription"],"0x1066":["LO","1","VitreousStatusDescription"],"0x1090":["SQ","1","IOLPowerSequence"],"0x1092":["SQ","1","LensConstantSequence"],"0x1093":["LO","1","IOLManufacturer"],"0x1094":["LO","1","LensConstantDescription"],"0x1095":["LO","1","ImplantName"],"0x1096":["SQ","1","KeratometryMeasurementTypeCodeSequence"],"0x1097":["LO","1","ImplantPartNumber"],"0x1100":["SQ","1","ReferencedOphthalmicAxialMeasurementsSequence"],"0x1101":["SQ","1","OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence"],"0x1103":["SQ","1","RefractiveErrorBeforeRefractiveSurgeryCodeSequence"],"0x1121":["FL","1","IOLPowerForExactEmmetropia"],"0x1122":["FL","1","IOLPowerForExactTargetRefraction"],"0x1125":["SQ","1","AnteriorChamberDepthDefinitionCodeSequence"],"0x1127":["SQ","1","LensThicknessSequence"],"0x1128":["SQ","1","AnteriorChamberDepthSequence"],"0x112A":["SQ","1","CalculationCommentSequence"],"0x112B":["CS","1","CalculationCommentType"],"0x112C":["LT","1","CalculationComment"],"0x1130":["FL","1","LensThickness"],"0x1131":["FL","1","AnteriorChamberDepth"],"0x1132":["SQ","1","SourceOfLensThicknessDataCodeSequence"],"0x1133":["SQ","1","SourceOfAnteriorChamberDepthDataCodeSequence"],"0x1134":["SQ","1","SourceOfRefractiveMeasurementsSequence"],"0x1135":["SQ","1","SourceOfRefractiveMeasurementsCodeSequence"],"0x1140":["CS","1","OphthalmicAxialLengthMeasurementModified"],"0x1150":["SQ","1","OphthalmicAxialLengthDataSourceCodeSequence"],"0x1153":["SQ","1","OphthalmicAxialLengthAcquisitionMethodCodeSequence"],"0x1155":["FL","1","SignalToNoiseRatio"],"0x1159":["LO","1","OphthalmicAxialLengthDataSourceDescription"],"0x1210":["SQ","1","OphthalmicAxialLengthMeasurementsTotalLengthSequence"],"0x1211":["SQ","1","OphthalmicAxialLengthMeasurementsSegmentalLengthSequence"],"0x1212":["SQ","1","OphthalmicAxialLengthMeasurementsLengthSummationSequence"],"0x1220":["SQ","1","UltrasoundOphthalmicAxialLengthMeasurementsSequence"],"0x1225":["SQ","1","OpticalOphthalmicAxialLengthMeasurementsSequence"],"0x1230":["SQ","1","UltrasoundSelectedOphthalmicAxialLengthSequence"],"0x1250":["SQ","1","OphthalmicAxialLengthSelectionMethodCodeSequence"],"0x1255":["SQ","1","OpticalSelectedOphthalmicAxialLengthSequence"],"0x1257":["SQ","1","SelectedSegmentalOphthalmicAxialLengthSequence"],"0x1260":["SQ","1","SelectedTotalOphthalmicAxialLengthSequence"],"0x1262":["SQ","1","OphthalmicAxialLengthQualityMetricSequence"],"0x1265":["SQ","1","OphthalmicAxialLengthQualityMetricTypeCodeSequence"],"0x1273":["LO","1","OphthalmicAxialLengthQualityMetricTypeDescription"],"0x1300":["SQ","1","IntraocularLensCalculationsRightEyeSequence"],"0x1310":["SQ","1","IntraocularLensCalculationsLeftEyeSequence"],"0x1330":["SQ","1","ReferencedOphthalmicAxialLengthMeasurementQCImageSequence"],"0x1415":["CS","1","OphthalmicMappingDeviceType"],"0x1420":["SQ","1","AcquisitionMethodCodeSequence"],"0x1423":["SQ","1","AcquisitionMethodAlgorithmSequence"],"0x1436":["SQ","1","OphthalmicThicknessMapTypeCodeSequence"],"0x1443":["SQ","1","OphthalmicThicknessMappingNormalsSequence"],"0x1445":["SQ","1","RetinalThicknessDefinitionCodeSequence"],"0x1450":["SQ","1","PixelValueMappingToCodedConceptSequence"],"0x1452":["xs","1","MappedPixelValue"],"0x1454":["LO","1","PixelValueMappingExplanation"],"0x1458":["SQ","1","OphthalmicThicknessMapQualityThresholdSequence"],"0x1460":["FL","1","OphthalmicThicknessMapThresholdQualityRating"],"0x1463":["FL","2","AnatomicStructureReferencePoint"],"0x1465":["SQ","1","RegistrationToLocalizerSequence"],"0x1466":["CS","1","RegisteredLocalizerUnits"],"0x1467":["FL","2","RegisteredLocalizerTopLeftHandCorner"],"0x1468":["FL","2","RegisteredLocalizerBottomRightHandCorner"],"0x1470":["SQ","1","OphthalmicThicknessMapQualityRatingSequence"],"0x1472":["SQ","1","RelevantOPTAttributesSequence"],"0x1512":["SQ","1","TransformationMethodCodeSequence"],"0x1513":["SQ","1","TransformationAlgorithmSequence"],"0x1515":["CS","1","OphthalmicAxialLengthMethod"],"0x1517":["FL","1","OphthalmicFOV"],"0x1518":["SQ","1","TwoDimensionalToThreeDimensionalMapSequence"],"0x1525":["SQ","1","WideFieldOphthalmicPhotographyQualityRatingSequence"],"0x1526":["SQ","1","WideFieldOphthalmicPhotographyQualityThresholdSequence"],"0x1527":["FL","1","WideFieldOphthalmicPhotographyThresholdQualityRating"],"0x1528":["FL","1","XCoordinatesCenterPixelViewAngle"],"0x1529":["FL","1","YCoordinatesCenterPixelViewAngle"],"0x1530":["UL","1","NumberOfMapPoints"],"0x1531":["OF","1","TwoDimensionalToThreeDimensionalMapData"],"0x1612":["SQ","1","DerivationAlgorithmSequence"],"0x1615":["SQ","1","OphthalmicImageTypeCodeSequence"],"0x1616":["LO","1","OphthalmicImageTypeDescription"],"0x1618":["SQ","1","ScanPatternTypeCodeSequence"],"0x1620":["SQ","1","ReferencedSurfaceMeshIdentificationSequence"],"0x1622":["CS","1","OphthalmicVolumetricPropertiesFlag"],"0x1624":["FL","1","OphthalmicAnatomicReferencePointXCoordinate"],"0x1626":["FL","1","OphthalmicAnatomicReferencePointYCoordinate"],"0x1628":["SQ","1","OphthalmicEnFaceImageQualityRatingSequence"],"0x1630":["DS","1","QualityThreshold"],"0x1640":["SQ","1","OCTBscanAnalysisAcquisitionParametersSequence"],"0x1642":["UL","1","NumberOfBscansPerFrame"],"0x1643":["FL","1","BscanSlabThickness"],"0x1644":["FL","1","DistanceBetweenBscanSlabs"],"0x1645":["FL","1","BscanCycleTime"],"0x1646":["FL","1-n","BscanCycleTimeVector"],"0x1649":["FL","1","AscanRate"],"0x1650":["FL","1","BscanRate"],"0x1658":["UL","1","SurfaceMeshZPixelOffset"]},"0x0024":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["FL","1","VisualFieldHorizontalExtent"],"0x0011":["FL","1","VisualFieldVerticalExtent"],"0x0012":["CS","1","VisualFieldShape"],"0x0016":["SQ","1","ScreeningTestModeCodeSequence"],"0x0018":["FL","1","MaximumStimulusLuminance"],"0x0020":["FL","1","BackgroundLuminance"],"0x0021":["SQ","1","StimulusColorCodeSequence"],"0x0024":["SQ","1","BackgroundIlluminationColorCodeSequence"],"0x0025":["FL","1","StimulusArea"],"0x0028":["FL","1","StimulusPresentationTime"],"0x0032":["SQ","1","FixationSequence"],"0x0033":["SQ","1","FixationMonitoringCodeSequence"],"0x0034":["SQ","1","VisualFieldCatchTrialSequence"],"0x0035":["US","1","FixationCheckedQuantity"],"0x0036":["US","1","PatientNotProperlyFixatedQuantity"],"0x0037":["CS","1","PresentedVisualStimuliDataFlag"],"0x0038":["US","1","NumberOfVisualStimuli"],"0x0039":["CS","1","ExcessiveFixationLossesDataFlag"],"0x0040":["CS","1","ExcessiveFixationLosses"],"0x0042":["US","1","StimuliRetestingQuantity"],"0x0044":["LT","1","CommentsOnPatientPerformanceOfVisualField"],"0x0045":["CS","1","FalseNegativesEstimateFlag"],"0x0046":["FL","1","FalseNegativesEstimate"],"0x0048":["US","1","NegativeCatchTrialsQuantity"],"0x0050":["US","1","FalseNegativesQuantity"],"0x0051":["CS","1","ExcessiveFalseNegativesDataFlag"],"0x0052":["CS","1","ExcessiveFalseNegatives"],"0x0053":["CS","1","FalsePositivesEstimateFlag"],"0x0054":["FL","1","FalsePositivesEstimate"],"0x0055":["CS","1","CatchTrialsDataFlag"],"0x0056":["US","1","PositiveCatchTrialsQuantity"],"0x0057":["CS","1","TestPointNormalsDataFlag"],"0x0058":["SQ","1","TestPointNormalsSequence"],"0x0059":["CS","1","GlobalDeviationProbabilityNormalsFlag"],"0x0060":["US","1","FalsePositivesQuantity"],"0x0061":["CS","1","ExcessiveFalsePositivesDataFlag"],"0x0062":["CS","1","ExcessiveFalsePositives"],"0x0063":["CS","1","VisualFieldTestNormalsFlag"],"0x0064":["SQ","1","ResultsNormalsSequence"],"0x0065":["SQ","1","AgeCorrectedSensitivityDeviationAlgorithmSequence"],"0x0066":["FL","1","GlobalDeviationFromNormal"],"0x0067":["SQ","1","GeneralizedDefectSensitivityDeviationAlgorithmSequence"],"0x0068":["FL","1","LocalizedDeviationFromNormal"],"0x0069":["LO","1","PatientReliabilityIndicator"],"0x0070":["FL","1","VisualFieldMeanSensitivity"],"0x0071":["FL","1","GlobalDeviationProbability"],"0x0072":["CS","1","LocalDeviationProbabilityNormalsFlag"],"0x0073":["FL","1","LocalizedDeviationProbability"],"0x0074":["CS","1","ShortTermFluctuationCalculated"],"0x0075":["FL","1","ShortTermFluctuation"],"0x0076":["CS","1","ShortTermFluctuationProbabilityCalculated"],"0x0077":["FL","1","ShortTermFluctuationProbability"],"0x0078":["CS","1","CorrectedLocalizedDeviationFromNormalCalculated"],"0x0079":["FL","1","CorrectedLocalizedDeviationFromNormal"],"0x0080":["CS","1","CorrectedLocalizedDeviationFromNormalProbabilityCalculated"],"0x0081":["FL","1","CorrectedLocalizedDeviationFromNormalProbability"],"0x0083":["SQ","1","GlobalDeviationProbabilitySequence"],"0x0085":["SQ","1","LocalizedDeviationProbabilitySequence"],"0x0086":["CS","1","FovealSensitivityMeasured"],"0x0087":["FL","1","FovealSensitivity"],"0x0088":["FL","1","VisualFieldTestDuration"],"0x0089":["SQ","1","VisualFieldTestPointSequence"],"0x0090":["FL","1","VisualFieldTestPointXCoordinate"],"0x0091":["FL","1","VisualFieldTestPointYCoordinate"],"0x0092":["FL","1","AgeCorrectedSensitivityDeviationValue"],"0x0093":["CS","1","StimulusResults"],"0x0094":["FL","1","SensitivityValue"],"0x0095":["CS","1","RetestStimulusSeen"],"0x0096":["FL","1","RetestSensitivityValue"],"0x0097":["SQ","1","VisualFieldTestPointNormalsSequence"],"0x0098":["FL","1","QuantifiedDefect"],"0x0100":["FL","1","AgeCorrectedSensitivityDeviationProbabilityValue"],"0x0102":["CS","1","GeneralizedDefectCorrectedSensitivityDeviationFlag"],"0x0103":["FL","1","GeneralizedDefectCorrectedSensitivityDeviationValue"],"0x0104":["FL","1","GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue"],"0x0105":["FL","1","MinimumSensitivityValue"],"0x0106":["CS","1","BlindSpotLocalized"],"0x0107":["FL","1","BlindSpotXCoordinate"],"0x0108":["FL","1","BlindSpotYCoordinate"],"0x0110":["SQ","1","VisualAcuityMeasurementSequence"],"0x0112":["SQ","1","RefractiveParametersUsedOnPatientSequence"],"0x0113":["CS","1","MeasurementLaterality"],"0x0114":["SQ","1","OphthalmicPatientClinicalInformationLeftEyeSequence"],"0x0115":["SQ","1","OphthalmicPatientClinicalInformationRightEyeSequence"],"0x0117":["CS","1","FovealPointNormativeDataFlag"],"0x0118":["FL","1","FovealPointProbabilityValue"],"0x0120":["CS","1","ScreeningBaselineMeasured"],"0x0122":["SQ","1","ScreeningBaselineMeasuredSequence"],"0x0124":["CS","1","ScreeningBaselineType"],"0x0126":["FL","1","ScreeningBaselineValue"],"0x0202":["LO","1","AlgorithmSource"],"0x0306":["LO","1","DataSetName"],"0x0307":["LO","1","DataSetVersion"],"0x0308":["LO","1","DataSetSource"],"0x0309":["LO","1","DataSetDescription"],"0x0317":["SQ","1","VisualFieldTestReliabilityGlobalIndexSequence"],"0x0320":["SQ","1","VisualFieldGlobalResultsIndexSequence"],"0x0325":["SQ","1","DataObservationSequence"],"0x0338":["CS","1","IndexNormalsFlag"],"0x0341":["FL","1","IndexProbability"],"0x0344":["SQ","1","IndexProbabilitySequence"]},"0x0028":{"0x0000":["UL","1","GenericGroupLength"],"0x0002":["US","1","SamplesPerPixel"],"0x0003":["US","1","SamplesPerPixelUsed"],"0x0004":["CS","1","PhotometricInterpretation"],"0x0005":["US","1","ImageDimensions"],"0x0006":["US","1","PlanarConfiguration"],"0x0008":["IS","1","NumberOfFrames"],"0x0009":["AT","1-n","FrameIncrementPointer"],"0x000A":["AT","1-n","FrameDimensionPointer"],"0x0010":["US","1","Rows"],"0x0011":["US","1","Columns"],"0x0012":["US","1","Planes"],"0x0014":["US","1","UltrasoundColorDataPresent"],"0x0020":["","",""],"0x0030":["DS","2","PixelSpacing"],"0x0031":["DS","2","ZoomFactor"],"0x0032":["DS","2","ZoomCenter"],"0x0034":["IS","2","PixelAspectRatio"],"0x0040":["CS","1","ImageFormat"],"0x0050":["LO","1-n","ManipulatedImage"],"0x0051":["CS","1-n","CorrectedImage"],"0x005F":["LO","1","CompressionRecognitionCode"],"0x0060":["CS","1","CompressionCode"],"0x0061":["SH","1","CompressionOriginator"],"0x0062":["LO","1","CompressionLabel"],"0x0063":["SH","1","CompressionDescription"],"0x0065":["CS","1-n","CompressionSequence"],"0x0066":["AT","1-n","CompressionStepPointers"],"0x0068":["US","1","RepeatInterval"],"0x0069":["US","1","BitsGrouped"],"0x0070":["US","1-n","PerimeterTable"],"0x0071":["xs","1","PerimeterValue"],"0x0080":["US","1","PredictorRows"],"0x0081":["US","1","PredictorColumns"],"0x0082":["US","1-n","PredictorConstants"],"0x0090":["CS","1","BlockedPixels"],"0x0091":["US","1","BlockRows"],"0x0092":["US","1","BlockColumns"],"0x0093":["US","1","RowOverlap"],"0x0094":["US","1","ColumnOverlap"],"0x0100":["US","1","BitsAllocated"],"0x0101":["US","1","BitsStored"],"0x0102":["US","1","HighBit"],"0x0103":["US","1","PixelRepresentation"],"0x0104":["xs","1","SmallestValidPixelValue"],"0x0105":["xs","1","LargestValidPixelValue"],"0x0106":["xs","1","SmallestImagePixelValue"],"0x0107":["xs","1","LargestImagePixelValue"],"0x0108":["xs","1","SmallestPixelValueInSeries"],"0x0109":["xs","1","LargestPixelValueInSeries"],"0x0110":["xs","1","SmallestImagePixelValueInPlane"],"0x0111":["xs","1","LargestImagePixelValueInPlane"],"0x0120":["xs","1","PixelPaddingValue"],"0x0121":["xs","1","PixelPaddingRangeLimit"],"0x0122":["FL","1","FloatPixelPaddingValue"],"0x0123":["FD","1","DoubleFloatPixelPaddingValue"],"0x0124":["FL","1","FloatPixelPaddingRangeLimit"],"0x0125":["FD","1","DoubleFloatPixelPaddingRangeLimit"],"0x0200":["US","1","ImageLocation"],"0x0300":["CS","1","QualityControlImage"],"0x0301":["CS","1","BurnedInAnnotation"],"0x0302":["CS","1","RecognizableVisualFeatures"],"0x0303":["CS","1","LongitudinalTemporalInformationModified"],"0x0304":["UI","1","ReferencedColorPaletteInstanceUID"],"0x0400":["LO","1","TransformLabel"],"0x0401":["LO","1","TransformVersionNumber"],"0x0402":["US","1","NumberOfTransformSteps"],"0x0403":["LO","1-n","SequenceOfCompressedData"],"0x0404":["AT","1-n","DetailsOfCoefficients"],"0x04x0":["US","1","RowsForNthOrderCoefficients"],"0x04x1":["US","1","ColumnsForNthOrderCoefficients"],"0x04x2":["LO","1-n","CoefficientCoding"],"0x04x3":["AT","1-n","CoefficientCodingPointers"],"0x0700":["LO","1","DCTLabel"],"0x0701":["CS","1-n","DataBlockDescription"],"0x0702":["AT","1-n","DataBlock"],"0x0710":["US","1","NormalizationFactorFormat"],"0x0720":["US","1","ZonalMapNumberFormat"],"0x0721":["AT","1-n","ZonalMapLocation"],"0x0722":["US","1","ZonalMapFormat"],"0x0730":["US","1","AdaptiveMapFormat"],"0x0740":["US","1","CodeNumberFormat"],"0x08x0":["CS","1-n","CodeLabel"],"0x08x2":["US","1","NumberOfTables"],"0x08x3":["AT","1-n","CodeTableLocation"],"0x08x4":["US","1","BitsForCodeWord"],"0x08x8":["AT","1-n","ImageDataLocation"],"0x0A02":["CS","1","PixelSpacingCalibrationType"],"0x0A04":["LO","1","PixelSpacingCalibrationDescription"],"0x1040":["CS","1","PixelIntensityRelationship"],"0x1041":["SS","1","PixelIntensityRelationshipSign"],"0x1050":["DS","1-n","WindowCenter"],"0x1051":["DS","1-n","WindowWidth"],"0x1052":["DS","1","RescaleIntercept"],"0x1053":["DS","1","RescaleSlope"],"0x1054":["LO","1","RescaleType"],"0x1055":["LO","1-n","WindowCenterWidthExplanation"],"0x1056":["CS","1","VOILUTFunction"],"0x1080":["CS","1","GrayScale"],"0x1090":["CS","1","RecommendedViewingMode"],"0x1100":["xs","3","GrayLookupTableDescriptor"],"0x1101":["xs","3","RedPaletteColorLookupTableDescriptor"],"0x1102":["xs","3","GreenPaletteColorLookupTableDescriptor"],"0x1103":["xs","3","BluePaletteColorLookupTableDescriptor"],"0x1104":["US","3","AlphaPaletteColorLookupTableDescriptor"],"0x1111":["xs","4","LargeRedPaletteColorLookupTableDescriptor"],"0x1112":["xs","4","LargeGreenPaletteColorLookupTableDescriptor"],"0x1113":["xs","4","LargeBluePaletteColorLookupTableDescriptor"],"0x1199":["UI","1","PaletteColorLookupTableUID"],"0x1200":["US or SS or OW","1-n or 1","GrayLookupTableData"],"0x1201":["OW","1","RedPaletteColorLookupTableData"],"0x1202":["OW","1","GreenPaletteColorLookupTableData"],"0x1203":["OW","1","BluePaletteColorLookupTableData"],"0x1204":["OW","1","AlphaPaletteColorLookupTableData"],"0x1211":["OW","1","LargeRedPaletteColorLookupTableData"],"0x1212":["OW","1","LargeGreenPaletteColorLookupTableData"],"0x1213":["OW","1","LargeBluePaletteColorLookupTableData"],"0x1214":["UI","1","LargePaletteColorLookupTableUID"],"0x1221":["OW","1","SegmentedRedPaletteColorLookupTableData"],"0x1222":["OW","1","SegmentedGreenPaletteColorLookupTableData"],"0x1223":["OW","1","SegmentedBluePaletteColorLookupTableData"],"0x1224":["OW","1","SegmentedAlphaPaletteColorLookupTableData"],"0x1230":["SQ","1","StoredValueColorRangeSequence"],"0x1231":["FD","1","MinimumStoredValueMapped"],"0x1232":["FD","1","MaximumStoredValueMapped"],"0x1300":["CS","1","BreastImplantPresent"],"0x1350":["CS","1","PartialView"],"0x1351":["ST","1","PartialViewDescription"],"0x1352":["SQ","1","PartialViewCodeSequence"],"0x135A":["CS","1","SpatialLocationsPreserved"],"0x1401":["SQ","1","DataFrameAssignmentSequence"],"0x1402":["CS","1","DataPathAssignment"],"0x1403":["US","1","BitsMappedToColorLookupTable"],"0x1404":["SQ","1","BlendingLUT1Sequence"],"0x1405":["CS","1","BlendingLUT1TransferFunction"],"0x1406":["FD","1","BlendingWeightConstant"],"0x1407":["US","3","BlendingLookupTableDescriptor"],"0x1408":["OW","1","BlendingLookupTableData"],"0x140B":["SQ","1","EnhancedPaletteColorLookupTableSequence"],"0x140C":["SQ","1","BlendingLUT2Sequence"],"0x140D":["CS","1","BlendingLUT2TransferFunction"],"0x140E":["CS","1","DataPathID"],"0x140F":["CS","1","RGBLUTTransferFunction"],"0x1410":["CS","1","AlphaLUTTransferFunction"],"0x2000":["OB","1","ICCProfile"],"0x2002":["CS","1","ColorSpace"],"0x2110":["CS","1","LossyImageCompression"],"0x2112":["DS","1-n","LossyImageCompressionRatio"],"0x2114":["CS","1-n","LossyImageCompressionMethod"],"0x3000":["SQ","1","ModalityLUTSequence"],"0x3002":["xs","3","LUTDescriptor"],"0x3003":["LO","1","LUTExplanation"],"0x3004":["LO","1","ModalityLUTType"],"0x3006":["US or OW","1-n or 1","LUTData"],"0x3010":["SQ","1","VOILUTSequence"],"0x3110":["SQ","1","SoftcopyVOILUTSequence"],"0x4000":["LT","1","ImagePresentationComments"],"0x5000":["SQ","1","BiPlaneAcquisitionSequence"],"0x6010":["US","1","RepresentativeFrameNumber"],"0x6020":["US","1-n","FrameNumbersOfInterest"],"0x6022":["LO","1-n","FrameOfInterestDescription"],"0x6023":["CS","1-n","FrameOfInterestType"],"0x6030":["US","1-n","MaskPointers"],"0x6040":["US","1-n","RWavePointer"],"0x6100":["SQ","1","MaskSubtractionSequence"],"0x6101":["CS","1","MaskOperation"],"0x6102":["US","2-2n","ApplicableFrameRange"],"0x6110":["US","1-n","MaskFrameNumbers"],"0x6112":["US","1","ContrastFrameAveraging"],"0x6114":["FL","2","MaskSubPixelShift"],"0x6120":["SS","1","TIDOffset"],"0x6190":["ST","1","MaskOperationExplanation"],"0x7000":["SQ","1","EquipmentAdministratorSequence"],"0x7001":["US","1","NumberOfDisplaySubsystems"],"0x7002":["US","1","CurrentConfigurationID"],"0x7003":["US","1","DisplaySubsystemID"],"0x7004":["SH","1","DisplaySubsystemName"],"0x7005":["LO","1","DisplaySubsystemDescription"],"0x7006":["CS","1","SystemStatus"],"0x7007":["LO","1","SystemStatusComment"],"0x7008":["SQ","1","TargetLuminanceCharacteristicsSequence"],"0x7009":["US","1","LuminanceCharacteristicsID"],"0x700A":["SQ","1","DisplaySubsystemConfigurationSequence"],"0x700B":["US","1","ConfigurationID"],"0x700C":["SH","1","ConfigurationName"],"0x700D":["LO","1","ConfigurationDescription"],"0x700E":["US","1","ReferencedTargetLuminanceCharacteristicsID"],"0x700F":["SQ","1","QAResultsSequence"],"0x7010":["SQ","1","DisplaySubsystemQAResultsSequence"],"0x7011":["SQ","1","ConfigurationQAResultsSequence"],"0x7012":["SQ","1","MeasurementEquipmentSequence"],"0x7013":["CS","1-n","MeasurementFunctions"],"0x7014":["CS","1","MeasurementEquipmentType"],"0x7015":["SQ","1","VisualEvaluationResultSequence"],"0x7016":["SQ","1","DisplayCalibrationResultSequence"],"0x7017":["US","1","DDLValue"],"0x7018":["FL","2","CIExyWhitePoint"],"0x7019":["CS","1","DisplayFunctionType"],"0x701A":["FL","1","GammaValue"],"0x701B":["US","1","NumberOfLuminancePoints"],"0x701C":["SQ","1","LuminanceResponseSequence"],"0x701D":["FL","1","TargetMinimumLuminance"],"0x701E":["FL","1","TargetMaximumLuminance"],"0x701F":["FL","1","LuminanceValue"],"0x7020":["LO","1","LuminanceResponseDescription"],"0x7021":["CS","1","WhitePointFlag"],"0x7022":["SQ","1","DisplayDeviceTypeCodeSequence"],"0x7023":["SQ","1","DisplaySubsystemSequence"],"0x7024":["SQ","1","LuminanceResultSequence"],"0x7025":["CS","1","AmbientLightValueSource"],"0x7026":["CS","1-n","MeasuredCharacteristics"],"0x7027":["SQ","1","LuminanceUniformityResultSequence"],"0x7028":["SQ","1","VisualEvaluationTestSequence"],"0x7029":["CS","1","TestResult"],"0x702A":["LO","1","TestResultComment"],"0x702B":["CS","1","TestImageValidation"],"0x702C":["SQ","1","TestPatternCodeSequence"],"0x702D":["SQ","1","MeasurementPatternCodeSequence"],"0x702E":["SQ","1","VisualEvaluationMethodCodeSequence"],"0x7FE0":["UR","1","PixelDataProviderURL"],"0x9001":["UL","1","DataPointRows"],"0x9002":["UL","1","DataPointColumns"],"0x9003":["CS","1","SignalDomainColumns"],"0x9099":["US","1","LargestMonochromePixelValue"],"0x9108":["CS","1","DataRepresentation"],"0x9110":["SQ","1","PixelMeasuresSequence"],"0x9132":["SQ","1","FrameVOILUTSequence"],"0x9145":["SQ","1","PixelValueTransformationSequence"],"0x9235":["CS","1","SignalDomainRows"],"0x9411":["FL","1","DisplayFilterPercentage"],"0x9415":["SQ","1","FramePixelShiftSequence"],"0x9416":["US","1","SubtractionItemID"],"0x9422":["SQ","1","PixelIntensityRelationshipLUTSequence"],"0x9443":["SQ","1","FramePixelDataPropertiesSequence"],"0x9444":["CS","1","GeometricalProperties"],"0x9445":["FL","1","GeometricMaximumDistortion"],"0x9446":["CS","1-n","ImageProcessingApplied"],"0x9454":["CS","1","MaskSelectionMode"],"0x9474":["CS","1","LUTFunction"],"0x9478":["FL","1","MaskVisibilityPercentage"],"0x9501":["SQ","1","PixelShiftSequence"],"0x9502":["SQ","1","RegionPixelShiftSequence"],"0x9503":["SS","2-2n","VerticesOfTheRegion"],"0x9505":["SQ","1","MultiFramePresentationSequence"],"0x9506":["US","2-2n","PixelShiftFrameRange"],"0x9507":["US","2-2n","LUTFrameRange"],"0x9520":["DS","16","ImageToEquipmentMappingMatrix"],"0x9537":["CS","1","EquipmentCoordinateSystemIdentification"]},"0x0032":{"0x0000":["UL","1","GenericGroupLength"],"0x000A":["CS","1","StudyStatusID"],"0x000C":["CS","1","StudyPriorityID"],"0x0012":["LO","1","StudyIDIssuer"],"0x0032":["DA","1","StudyVerifiedDate"],"0x0033":["TM","1","StudyVerifiedTime"],"0x0034":["DA","1","StudyReadDate"],"0x0035":["TM","1","StudyReadTime"],"0x1000":["DA","1","ScheduledStudyStartDate"],"0x1001":["TM","1","ScheduledStudyStartTime"],"0x1010":["DA","1","ScheduledStudyStopDate"],"0x1011":["TM","1","ScheduledStudyStopTime"],"0x1020":["LO","1","ScheduledStudyLocation"],"0x1021":["AE","1-n","ScheduledStudyLocationAETitle"],"0x1030":["LO","1","ReasonForStudy"],"0x1031":["SQ","1","RequestingPhysicianIdentificationSequence"],"0x1032":["PN","1","RequestingPhysician"],"0x1033":["LO","1","RequestingService"],"0x1034":["SQ","1","RequestingServiceCodeSequence"],"0x1040":["DA","1","StudyArrivalDate"],"0x1041":["TM","1","StudyArrivalTime"],"0x1050":["DA","1","StudyCompletionDate"],"0x1051":["TM","1","StudyCompletionTime"],"0x1055":["CS","1","StudyComponentStatusID"],"0x1060":["LO","1","RequestedProcedureDescription"],"0x1064":["SQ","1","RequestedProcedureCodeSequence"],"0x1065":["SQ","1","RequestedLateralityCodeSequence"],"0x1066":["UT","1","ReasonForVisit"],"0x1067":["SQ","1","ReasonForVisitCodeSequence"],"0x1070":["LO","1","RequestedContrastAgent"],"0x4000":["LT","1","StudyComments"]},"0x0034":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["SQ","1","FlowIdentifierSequence"],"0x0002":["OB","1","FlowIdentifier"],"0x0003":["UI","1","FlowTransferSyntaxUID"],"0x0004":["UL","1","FlowRTPSamplingRate"],"0x0005":["OB","1","SourceIdentifier"],"0x0007":["OB","1","FrameOriginTimestamp"],"0x0008":["CS","1","IncludesImagingSubject"],"0x0009":["SQ","1","FrameUsefulnessGroupSequence"],"0x000A":["SQ","1","RealTimeBulkDataFlowSequence"],"0x000B":["SQ","1","CameraPositionGroupSequence"],"0x000C":["CS","1","IncludesInformation"],"0x000D":["SQ","1","TimeOfFrameGroupSequence"]},"0x0038":{"0x0000":["UL","1","GenericGroupLength"],"0x0004":["SQ","1","ReferencedPatientAliasSequence"],"0x0008":["CS","1","VisitStatusID"],"0x0010":["LO","1","AdmissionID"],"0x0011":["LO","1","IssuerOfAdmissionID"],"0x0014":["SQ","1","IssuerOfAdmissionIDSequence"],"0x0016":["LO","1","RouteOfAdmissions"],"0x001A":["DA","1","ScheduledAdmissionDate"],"0x001B":["TM","1","ScheduledAdmissionTime"],"0x001C":["DA","1","ScheduledDischargeDate"],"0x001D":["TM","1","ScheduledDischargeTime"],"0x001E":["LO","1","ScheduledPatientInstitutionResidence"],"0x0020":["DA","1","AdmittingDate"],"0x0021":["TM","1","AdmittingTime"],"0x0030":["DA","1","DischargeDate"],"0x0032":["TM","1","DischargeTime"],"0x0040":["LO","1","DischargeDiagnosisDescription"],"0x0044":["SQ","1","DischargeDiagnosisCodeSequence"],"0x0050":["LO","1","SpecialNeeds"],"0x0060":["LO","1","ServiceEpisodeID"],"0x0061":["LO","1","IssuerOfServiceEpisodeID"],"0x0062":["LO","1","ServiceEpisodeDescription"],"0x0064":["SQ","1","IssuerOfServiceEpisodeIDSequence"],"0x0100":["SQ","1","PertinentDocumentsSequence"],"0x0101":["SQ","1","PertinentResourcesSequence"],"0x0102":["LO","1","ResourceDescription"],"0x0300":["LO","1","CurrentPatientLocation"],"0x0400":["LO","1","PatientInstitutionResidence"],"0x0500":["LO","1","PatientState"],"0x0502":["SQ","1","PatientClinicalTrialParticipationSequence"],"0x4000":["LT","1","VisitComments"]},"0x003A":{"0x0000":["UL","1","GenericGroupLength"],"0x0004":["CS","1","WaveformOriginality"],"0x0005":["US","1","NumberOfWaveformChannels"],"0x0010":["UL","1","NumberOfWaveformSamples"],"0x001A":["DS","1","SamplingFrequency"],"0x0020":["SH","1","MultiplexGroupLabel"],"0x0200":["SQ","1","ChannelDefinitionSequence"],"0x0202":["IS","1","WaveformChannelNumber"],"0x0203":["SH","1","ChannelLabel"],"0x0205":["CS","1-n","ChannelStatus"],"0x0208":["SQ","1","ChannelSourceSequence"],"0x0209":["SQ","1","ChannelSourceModifiersSequence"],"0x020A":["SQ","1","SourceWaveformSequence"],"0x020C":["LO","1","ChannelDerivationDescription"],"0x0210":["DS","1","ChannelSensitivity"],"0x0211":["SQ","1","ChannelSensitivityUnitsSequence"],"0x0212":["DS","1","ChannelSensitivityCorrectionFactor"],"0x0213":["DS","1","ChannelBaseline"],"0x0214":["DS","1","ChannelTimeSkew"],"0x0215":["DS","1","ChannelSampleSkew"],"0x0218":["DS","1","ChannelOffset"],"0x021A":["US","1","WaveformBitsStored"],"0x0220":["DS","1","FilterLowFrequency"],"0x0221":["DS","1","FilterHighFrequency"],"0x0222":["DS","1","NotchFilterFrequency"],"0x0223":["DS","1","NotchFilterBandwidth"],"0x0230":["FL","1","WaveformDataDisplayScale"],"0x0231":["US","3","WaveformDisplayBackgroundCIELabValue"],"0x0240":["SQ","1","WaveformPresentationGroupSequence"],"0x0241":["US","1","PresentationGroupNumber"],"0x0242":["SQ","1","ChannelDisplaySequence"],"0x0244":["US","3","ChannelRecommendedDisplayCIELabValue"],"0x0245":["FL","1","ChannelPosition"],"0x0246":["CS","1","DisplayShadingFlag"],"0x0247":["FL","1","FractionalChannelDisplayScale"],"0x0248":["FL","1","AbsoluteChannelDisplayScale"],"0x0300":["SQ","1","MultiplexedAudioChannelsDescriptionCodeSequence"],"0x0301":["IS","1","ChannelIdentificationCode"],"0x0302":["CS","1","ChannelMode"],"0x0310":["UI","1","MultiplexGroupUID"],"0x0311":["DS","1","PowerlineFrequency"],"0x0312":["SQ","1","ChannelImpedanceSequence"],"0x0313":["DS","1","ImpedanceValue"],"0x0314":["DT","1","ImpedanceMeasurementDateTime"],"0x0315":["DS","1","ImpedanceMeasurementFrequency"],"0x0316":["CS","1","ImpedanceMeasurementCurrentType"]},"0x0040":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["AE","1-n","ScheduledStationAETitle"],"0x0002":["DA","1","ScheduledProcedureStepStartDate"],"0x0003":["TM","1","ScheduledProcedureStepStartTime"],"0x0004":["DA","1","ScheduledProcedureStepEndDate"],"0x0005":["TM","1","ScheduledProcedureStepEndTime"],"0x0006":["PN","1","ScheduledPerformingPhysicianName"],"0x0007":["LO","1","ScheduledProcedureStepDescription"],"0x0008":["SQ","1","ScheduledProtocolCodeSequence"],"0x0009":["SH","1","ScheduledProcedureStepID"],"0x000A":["SQ","1","StageCodeSequence"],"0x000B":["SQ","1","ScheduledPerformingPhysicianIdentificationSequence"],"0x0010":["SH","1-n","ScheduledStationName"],"0x0011":["SH","1","ScheduledProcedureStepLocation"],"0x0012":["LO","1","PreMedication"],"0x0020":["CS","1","ScheduledProcedureStepStatus"],"0x0026":["SQ","1","OrderPlacerIdentifierSequence"],"0x0027":["SQ","1","OrderFillerIdentifierSequence"],"0x0031":["UT","1","LocalNamespaceEntityID"],"0x0032":["UT","1","UniversalEntityID"],"0x0033":["CS","1","UniversalEntityIDType"],"0x0035":["CS","1","IdentifierTypeCode"],"0x0036":["SQ","1","AssigningFacilitySequence"],"0x0039":["SQ","1","AssigningJurisdictionCodeSequence"],"0x003A":["SQ","1","AssigningAgencyOrDepartmentCodeSequence"],"0x0100":["SQ","1","ScheduledProcedureStepSequence"],"0x0220":["SQ","1","ReferencedNonImageCompositeSOPInstanceSequence"],"0x0241":["AE","1","PerformedStationAETitle"],"0x0242":["SH","1","PerformedStationName"],"0x0243":["SH","1","PerformedLocation"],"0x0244":["DA","1","PerformedProcedureStepStartDate"],"0x0245":["TM","1","PerformedProcedureStepStartTime"],"0x0250":["DA","1","PerformedProcedureStepEndDate"],"0x0251":["TM","1","PerformedProcedureStepEndTime"],"0x0252":["CS","1","PerformedProcedureStepStatus"],"0x0253":["SH","1","PerformedProcedureStepID"],"0x0254":["LO","1","PerformedProcedureStepDescription"],"0x0255":["LO","1","PerformedProcedureTypeDescription"],"0x0260":["SQ","1","PerformedProtocolCodeSequence"],"0x0261":["CS","1","PerformedProtocolType"],"0x0270":["SQ","1","ScheduledStepAttributesSequence"],"0x0275":["SQ","1","RequestAttributesSequence"],"0x0280":["ST","1","CommentsOnThePerformedProcedureStep"],"0x0281":["SQ","1","PerformedProcedureStepDiscontinuationReasonCodeSequence"],"0x0293":["SQ","1","QuantitySequence"],"0x0294":["DS","1","Quantity"],"0x0295":["SQ","1","MeasuringUnitsSequence"],"0x0296":["SQ","1","BillingItemSequence"],"0x0300":["US","1","TotalTimeOfFluoroscopy"],"0x0301":["US","1","TotalNumberOfExposures"],"0x0302":["US","1","EntranceDose"],"0x0303":["US","1-2","ExposedArea"],"0x0306":["DS","1","DistanceSourceToEntrance"],"0x0307":["DS","1","DistanceSourceToSupport"],"0x030E":["SQ","1","ExposureDoseSequence"],"0x0310":["ST","1","CommentsOnRadiationDose"],"0x0312":["DS","1","XRayOutput"],"0x0314":["DS","1","HalfValueLayer"],"0x0316":["DS","1","OrganDose"],"0x0318":["CS","1","OrganExposed"],"0x0320":["SQ","1","BillingProcedureStepSequence"],"0x0321":["SQ","1","FilmConsumptionSequence"],"0x0324":["SQ","1","BillingSuppliesAndDevicesSequence"],"0x0330":["SQ","1","ReferencedProcedureStepSequence"],"0x0340":["SQ","1","PerformedSeriesSequence"],"0x0400":["LT","1","CommentsOnTheScheduledProcedureStep"],"0x0440":["SQ","1","ProtocolContextSequence"],"0x0441":["SQ","1","ContentItemModifierSequence"],"0x0500":["SQ","1","ScheduledSpecimenSequence"],"0x050A":["LO","1","SpecimenAccessionNumber"],"0x0512":["LO","1","ContainerIdentifier"],"0x0513":["SQ","1","IssuerOfTheContainerIdentifierSequence"],"0x0515":["SQ","1","AlternateContainerIdentifierSequence"],"0x0518":["SQ","1","ContainerTypeCodeSequence"],"0x051A":["LO","1","ContainerDescription"],"0x0520":["SQ","1","ContainerComponentSequence"],"0x0550":["SQ","1","SpecimenSequence"],"0x0551":["LO","1","SpecimenIdentifier"],"0x0552":["SQ","1","SpecimenDescriptionSequenceTrial"],"0x0553":["ST","1","SpecimenDescriptionTrial"],"0x0554":["UI","1","SpecimenUID"],"0x0555":["SQ","1","AcquisitionContextSequence"],"0x0556":["ST","1","AcquisitionContextDescription"],"0x0560":["SQ","1","SpecimenDescriptionSequence"],"0x0562":["SQ","1","IssuerOfTheSpecimenIdentifierSequence"],"0x059A":["SQ","1","SpecimenTypeCodeSequence"],"0x0600":["LO","1","SpecimenShortDescription"],"0x0602":["UT","1","SpecimenDetailedDescription"],"0x0610":["SQ","1","SpecimenPreparationSequence"],"0x0612":["SQ","1","SpecimenPreparationStepContentItemSequence"],"0x0620":["SQ","1","SpecimenLocalizationContentItemSequence"],"0x06FA":["LO","1","SlideIdentifier"],"0x0710":["SQ","1","WholeSlideMicroscopyImageFrameTypeSequence"],"0x071A":["SQ","1","ImageCenterPointCoordinatesSequence"],"0x072A":["DS","1","XOffsetInSlideCoordinateSystem"],"0x073A":["DS","1","YOffsetInSlideCoordinateSystem"],"0x074A":["DS","1","ZOffsetInSlideCoordinateSystem"],"0x08D8":["SQ","1","PixelSpacingSequence"],"0x08DA":["SQ","1","CoordinateSystemAxisCodeSequence"],"0x08EA":["SQ","1","MeasurementUnitsCodeSequence"],"0x09F8":["SQ","1","VitalStainCodeSequenceTrial"],"0x1001":["SH","1","RequestedProcedureID"],"0x1002":["LO","1","ReasonForTheRequestedProcedure"],"0x1003":["SH","1","RequestedProcedurePriority"],"0x1004":["LO","1","PatientTransportArrangements"],"0x1005":["LO","1","RequestedProcedureLocation"],"0x1006":["SH","1","PlacerOrderNumberProcedure"],"0x1007":["SH","1","FillerOrderNumberProcedure"],"0x1008":["LO","1","ConfidentialityCode"],"0x1009":["SH","1","ReportingPriority"],"0x100A":["SQ","1","ReasonForRequestedProcedureCodeSequence"],"0x1010":["PN","1-n","NamesOfIntendedRecipientsOfResults"],"0x1011":["SQ","1","IntendedRecipientsOfResultsIdentificationSequence"],"0x1012":["SQ","1","ReasonForPerformedProcedureCodeSequence"],"0x1060":["LO","1","RequestedProcedureDescriptionTrial"],"0x1101":["SQ","1","PersonIdentificationCodeSequence"],"0x1102":["ST","1","PersonAddress"],"0x1103":["LO","1-n","PersonTelephoneNumbers"],"0x1104":["LT","1","PersonTelecomInformation"],"0x1400":["LT","1","RequestedProcedureComments"],"0x2001":["LO","1","ReasonForTheImagingServiceRequest"],"0x2004":["DA","1","IssueDateOfImagingServiceRequest"],"0x2005":["TM","1","IssueTimeOfImagingServiceRequest"],"0x2006":["SH","1","PlacerOrderNumberImagingServiceRequestRetired"],"0x2007":["SH","1","FillerOrderNumberImagingServiceRequestRetired"],"0x2008":["PN","1","OrderEnteredBy"],"0x2009":["SH","1","OrderEntererLocation"],"0x2010":["SH","1","OrderCallbackPhoneNumber"],"0x2011":["LT","1","OrderCallbackTelecomInformation"],"0x2016":["LO","1","PlacerOrderNumberImagingServiceRequest"],"0x2017":["LO","1","FillerOrderNumberImagingServiceRequest"],"0x2400":["LT","1","ImagingServiceRequestComments"],"0x3001":["LO","1","ConfidentialityConstraintOnPatientDataDescription"],"0x4001":["CS","1","GeneralPurposeScheduledProcedureStepStatus"],"0x4002":["CS","1","GeneralPurposePerformedProcedureStepStatus"],"0x4003":["CS","1","GeneralPurposeScheduledProcedureStepPriority"],"0x4004":["SQ","1","ScheduledProcessingApplicationsCodeSequence"],"0x4005":["DT","1","ScheduledProcedureStepStartDateTime"],"0x4006":["CS","1","MultipleCopiesFlag"],"0x4007":["SQ","1","PerformedProcessingApplicationsCodeSequence"],"0x4008":["DT","1","ScheduledProcedureStepExpirationDateTime"],"0x4009":["SQ","1","HumanPerformerCodeSequence"],"0x4010":["DT","1","ScheduledProcedureStepModificationDateTime"],"0x4011":["DT","1","ExpectedCompletionDateTime"],"0x4015":["SQ","1","ResultingGeneralPurposePerformedProcedureStepsSequence"],"0x4016":["SQ","1","ReferencedGeneralPurposeScheduledProcedureStepSequence"],"0x4018":["SQ","1","ScheduledWorkitemCodeSequence"],"0x4019":["SQ","1","PerformedWorkitemCodeSequence"],"0x4020":["CS","1","InputAvailabilityFlag"],"0x4021":["SQ","1","InputInformationSequence"],"0x4022":["SQ","1","RelevantInformationSequence"],"0x4023":["UI","1","ReferencedGeneralPurposeScheduledProcedureStepTransactionUID"],"0x4025":["SQ","1","ScheduledStationNameCodeSequence"],"0x4026":["SQ","1","ScheduledStationClassCodeSequence"],"0x4027":["SQ","1","ScheduledStationGeographicLocationCodeSequence"],"0x4028":["SQ","1","PerformedStationNameCodeSequence"],"0x4029":["SQ","1","PerformedStationClassCodeSequence"],"0x4030":["SQ","1","PerformedStationGeographicLocationCodeSequence"],"0x4031":["SQ","1","RequestedSubsequentWorkitemCodeSequence"],"0x4032":["SQ","1","NonDICOMOutputCodeSequence"],"0x4033":["SQ","1","OutputInformationSequence"],"0x4034":["SQ","1","ScheduledHumanPerformersSequence"],"0x4035":["SQ","1","ActualHumanPerformersSequence"],"0x4036":["LO","1","HumanPerformerOrganization"],"0x4037":["PN","1","HumanPerformerName"],"0x4040":["CS","1","RawDataHandling"],"0x4041":["CS","1","InputReadinessState"],"0x4050":["DT","1","PerformedProcedureStepStartDateTime"],"0x4051":["DT","1","PerformedProcedureStepEndDateTime"],"0x4052":["DT","1","ProcedureStepCancellationDateTime"],"0x4070":["SQ","1","OutputDestinationSequence"],"0x4071":["SQ","1","DICOMStorageSequence"],"0x4072":["SQ","1","STOWRSStorageSequence"],"0x4073":["UR","1","StorageURL"],"0x4074":["SQ","1","XDSStorageSequence"],"0x8302":["DS","1","EntranceDoseInmGy"],"0x8303":["CS","1","EntranceDoseDerivation"],"0x9092":["SQ","1","ParametricMapFrameTypeSequence"],"0x9094":["SQ","1","ReferencedImageRealWorldValueMappingSequence"],"0x9096":["SQ","1","RealWorldValueMappingSequence"],"0x9098":["SQ","1","PixelValueMappingCodeSequence"],"0x9210":["SH","1","LUTLabel"],"0x9211":["xs","1","RealWorldValueLastValueMapped"],"0x9212":["FD","1-n","RealWorldValueLUTData"],"0x9213":["FD","1","DoubleFloatRealWorldValueLastValueMapped"],"0x9214":["FD","1","DoubleFloatRealWorldValueFirstValueMapped"],"0x9216":["xs","1","RealWorldValueFirstValueMapped"],"0x9220":["SQ","1","QuantityDefinitionSequence"],"0x9224":["FD","1","RealWorldValueIntercept"],"0x9225":["FD","1","RealWorldValueSlope"],"0xA007":["CS","1","FindingsFlagTrial"],"0xA010":["CS","1","RelationshipType"],"0xA020":["SQ","1","FindingsSequenceTrial"],"0xA021":["UI","1","FindingsGroupUIDTrial"],"0xA022":["UI","1","ReferencedFindingsGroupUIDTrial"],"0xA023":["DA","1","FindingsGroupRecordingDateTrial"],"0xA024":["TM","1","FindingsGroupRecordingTimeTrial"],"0xA026":["SQ","1","FindingsSourceCategoryCodeSequenceTrial"],"0xA027":["LO","1","VerifyingOrganization"],"0xA028":["SQ","1","DocumentingOrganizationIdentifierCodeSequenceTrial"],"0xA030":["DT","1","VerificationDateTime"],"0xA032":["DT","1","ObservationDateTime"],"0xA033":["DT","1","ObservationStartDateTime"],"0xA040":["CS","1","ValueType"],"0xA043":["SQ","1","ConceptNameCodeSequence"],"0xA047":["LO","1","MeasurementPrecisionDescriptionTrial"],"0xA050":["CS","1","ContinuityOfContent"],"0xA057":["CS","1-n","UrgencyOrPriorityAlertsTrial"],"0xA060":["LO","1","SequencingIndicatorTrial"],"0xA066":["SQ","1","DocumentIdentifierCodeSequenceTrial"],"0xA067":["PN","1","DocumentAuthorTrial"],"0xA068":["SQ","1","DocumentAuthorIdentifierCodeSequenceTrial"],"0xA070":["SQ","1","IdentifierCodeSequenceTrial"],"0xA073":["SQ","1","VerifyingObserverSequence"],"0xA074":["OB","1","ObjectBinaryIdentifierTrial"],"0xA075":["PN","1","VerifyingObserverName"],"0xA076":["SQ","1","DocumentingObserverIdentifierCodeSequenceTrial"],"0xA078":["SQ","1","AuthorObserverSequence"],"0xA07A":["SQ","1","ParticipantSequence"],"0xA07C":["SQ","1","CustodialOrganizationSequence"],"0xA080":["CS","1","ParticipationType"],"0xA082":["DT","1","ParticipationDateTime"],"0xA084":["CS","1","ObserverType"],"0xA085":["SQ","1","ProcedureIdentifierCodeSequenceTrial"],"0xA088":["SQ","1","VerifyingObserverIdentificationCodeSequence"],"0xA089":["OB","1","ObjectDirectoryBinaryIdentifierTrial"],"0xA090":["SQ","1","EquivalentCDADocumentSequence"],"0xA0B0":["US","2-2n","ReferencedWaveformChannels"],"0xA110":["DA","1","DateOfDocumentOrVerbalTransactionTrial"],"0xA112":["TM","1","TimeOfDocumentCreationOrVerbalTransactionTrial"],"0xA120":["DT","1","DateTime"],"0xA121":["DA","1","Date"],"0xA122":["TM","1","Time"],"0xA123":["PN","1","PersonName"],"0xA124":["UI","1","UID"],"0xA125":["CS","2","ReportStatusIDTrial"],"0xA130":["CS","1","TemporalRangeType"],"0xA132":["UL","1-n","ReferencedSamplePositions"],"0xA136":["US","1-n","ReferencedFrameNumbers"],"0xA138":["DS","1-n","ReferencedTimeOffsets"],"0xA13A":["DT","1-n","ReferencedDateTime"],"0xA160":["UT","1","TextValue"],"0xA161":["FD","1-n","FloatingPointValue"],"0xA162":["SL","1-n","RationalNumeratorValue"],"0xA163":["UL","1-n","RationalDenominatorValue"],"0xA167":["SQ","1","ObservationCategoryCodeSequenceTrial"],"0xA168":["SQ","1","ConceptCodeSequence"],"0xA16A":["ST","1","BibliographicCitationTrial"],"0xA170":["SQ","1","PurposeOfReferenceCodeSequence"],"0xA171":["UI","1","ObservationUID"],"0xA172":["UI","1","ReferencedObservationUIDTrial"],"0xA173":["CS","1","ReferencedObservationClassTrial"],"0xA174":["CS","1","ReferencedObjectObservationClassTrial"],"0xA180":["US","1","AnnotationGroupNumber"],"0xA192":["DA","1","ObservationDateTrial"],"0xA193":["TM","1","ObservationTimeTrial"],"0xA194":["CS","1","MeasurementAutomationTrial"],"0xA195":["SQ","1","ModifierCodeSequence"],"0xA224":["ST","1","IdentificationDescriptionTrial"],"0xA290":["CS","1","CoordinatesSetGeometricTypeTrial"],"0xA296":["SQ","1","AlgorithmCodeSequenceTrial"],"0xA297":["ST","1","AlgorithmDescriptionTrial"],"0xA29A":["SL","2-2n","PixelCoordinatesSetTrial"],"0xA300":["SQ","1","MeasuredValueSequence"],"0xA301":["SQ","1","NumericValueQualifierCodeSequence"],"0xA307":["PN","1","CurrentObserverTrial"],"0xA30A":["DS","1-n","NumericValue"],"0xA313":["SQ","1","ReferencedAccessionSequenceTrial"],"0xA33A":["ST","1","ReportStatusCommentTrial"],"0xA340":["SQ","1","ProcedureContextSequenceTrial"],"0xA352":["PN","1","VerbalSourceTrial"],"0xA353":["ST","1","AddressTrial"],"0xA354":["LO","1","TelephoneNumberTrial"],"0xA358":["SQ","1","VerbalSourceIdentifierCodeSequenceTrial"],"0xA360":["SQ","1","PredecessorDocumentsSequence"],"0xA370":["SQ","1","ReferencedRequestSequence"],"0xA372":["SQ","1","PerformedProcedureCodeSequence"],"0xA375":["SQ","1","CurrentRequestedProcedureEvidenceSequence"],"0xA380":["SQ","1","ReportDetailSequenceTrial"],"0xA385":["SQ","1","PertinentOtherEvidenceSequence"],"0xA390":["SQ","1","HL7StructuredDocumentReferenceSequence"],"0xA402":["UI","1","ObservationSubjectUIDTrial"],"0xA403":["CS","1","ObservationSubjectClassTrial"],"0xA404":["SQ","1","ObservationSubjectTypeCodeSequenceTrial"],"0xA491":["CS","1","CompletionFlag"],"0xA492":["LO","1","CompletionFlagDescription"],"0xA493":["CS","1","VerificationFlag"],"0xA494":["CS","1","ArchiveRequested"],"0xA496":["CS","1","PreliminaryFlag"],"0xA504":["SQ","1","ContentTemplateSequence"],"0xA525":["SQ","1","IdenticalDocumentsSequence"],"0xA600":["CS","1","ObservationSubjectContextFlagTrial"],"0xA601":["CS","1","ObserverContextFlagTrial"],"0xA603":["CS","1","ProcedureContextFlagTrial"],"0xA730":["SQ","1","ContentSequence"],"0xA731":["SQ","1","RelationshipSequenceTrial"],"0xA732":["SQ","1","RelationshipTypeCodeSequenceTrial"],"0xA744":["SQ","1","LanguageCodeSequenceTrial"],"0xA801":["SQ","1","TabulatedValuesSequence"],"0xA802":["UL","1","NumberOfTableRows"],"0xA803":["UL","1","NumberOfTableColumns"],"0xA804":["UL","1","TableRowNumber"],"0xA805":["UL","1","TableColumnNumber"],"0xA806":["SQ","1","TableRowDefinitionSequence"],"0xA807":["SQ","1","TableColumnDefinitionSequence"],"0xA808":["SQ","1","CellValuesSequence"],"0xA992":["ST","1","UniformResourceLocatorTrial"],"0xB020":["SQ","1","WaveformAnnotationSequence"],"0xDB00":["CS","1","TemplateIdentifier"],"0xDB06":["DT","1","TemplateVersion"],"0xDB07":["DT","1","TemplateLocalVersion"],"0xDB0B":["CS","1","TemplateExtensionFlag"],"0xDB0C":["UI","1","TemplateExtensionOrganizationUID"],"0xDB0D":["UI","1","TemplateExtensionCreatorUID"],"0xDB73":["UL","1-n","ReferencedContentItemIdentifier"],"0xE001":["ST","1","HL7InstanceIdentifier"],"0xE004":["DT","1","HL7DocumentEffectiveTime"],"0xE006":["SQ","1","HL7DocumentTypeCodeSequence"],"0xE008":["SQ","1","DocumentClassCodeSequence"],"0xE010":["UR","1","RetrieveURI"],"0xE011":["UI","1","RetrieveLocationUID"],"0xE020":["CS","1","TypeOfInstances"],"0xE021":["SQ","1","DICOMRetrievalSequence"],"0xE022":["SQ","1","DICOMMediaRetrievalSequence"],"0xE023":["SQ","1","WADORetrievalSequence"],"0xE024":["SQ","1","XDSRetrievalSequence"],"0xE025":["SQ","1","WADORSRetrievalSequence"],"0xE030":["UI","1","RepositoryUniqueID"],"0xE031":["UI","1","HomeCommunityID"]},"0x0042":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["ST","1","DocumentTitle"],"0x0011":["OB","1","EncapsulatedDocument"],"0x0012":["LO","1","MIMETypeOfEncapsulatedDocument"],"0x0013":["SQ","1","SourceInstanceSequence"],"0x0014":["LO","1-n","ListOfMIMETypes"],"0x0015":["UL","1","EncapsulatedDocumentLength"]},"0x0044":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["ST","1","ProductPackageIdentifier"],"0x0002":["CS","1","SubstanceAdministrationApproval"],"0x0003":["LT","1","ApprovalStatusFurtherDescription"],"0x0004":["DT","1","ApprovalStatusDateTime"],"0x0007":["SQ","1","ProductTypeCodeSequence"],"0x0008":["LO","1-n","ProductName"],"0x0009":["LT","1","ProductDescription"],"0x000A":["LO","1","ProductLotIdentifier"],"0x000B":["DT","1","ProductExpirationDateTime"],"0x0010":["DT","1","SubstanceAdministrationDateTime"],"0x0011":["LO","1","SubstanceAdministrationNotes"],"0x0012":["LO","1","SubstanceAdministrationDeviceID"],"0x0013":["SQ","1","ProductParameterSequence"],"0x0019":["SQ","1","SubstanceAdministrationParameterSequence"],"0x0100":["SQ","1","ApprovalSequence"],"0x0101":["SQ","1","AssertionCodeSequence"],"0x0102":["UI","1","AssertionUID"],"0x0103":["SQ","1","AsserterIdentificationSequence"],"0x0104":["DT","1","AssertionDateTime"],"0x0105":["DT","1","AssertionExpirationDateTime"],"0x0106":["UT","1","AssertionComments"],"0x0107":["SQ","1","RelatedAssertionSequence"],"0x0108":["UI","1","ReferencedAssertionUID"],"0x0109":["SQ","1","ApprovalSubjectSequence"],"0x010A":["SQ","1","OrganizationalRoleCodeSequence"]},"0x0046":{"0x0000":["UL","1","GenericGroupLength"],"0x0012":["LO","1","LensDescription"],"0x0014":["SQ","1","RightLensSequence"],"0x0015":["SQ","1","LeftLensSequence"],"0x0016":["SQ","1","UnspecifiedLateralityLensSequence"],"0x0018":["SQ","1","CylinderSequence"],"0x0028":["SQ","1","PrismSequence"],"0x0030":["FD","1","HorizontalPrismPower"],"0x0032":["CS","1","HorizontalPrismBase"],"0x0034":["FD","1","VerticalPrismPower"],"0x0036":["CS","1","VerticalPrismBase"],"0x0038":["CS","1","LensSegmentType"],"0x0040":["FD","1","OpticalTransmittance"],"0x0042":["FD","1","ChannelWidth"],"0x0044":["FD","1","PupilSize"],"0x0046":["FD","1","CornealSize"],"0x0047":["SQ","1","CornealSizeSequence"],"0x0050":["SQ","1","AutorefractionRightEyeSequence"],"0x0052":["SQ","1","AutorefractionLeftEyeSequence"],"0x0060":["FD","1","DistancePupillaryDistance"],"0x0062":["FD","1","NearPupillaryDistance"],"0x0063":["FD","1","IntermediatePupillaryDistance"],"0x0064":["FD","1","OtherPupillaryDistance"],"0x0070":["SQ","1","KeratometryRightEyeSequence"],"0x0071":["SQ","1","KeratometryLeftEyeSequence"],"0x0074":["SQ","1","SteepKeratometricAxisSequence"],"0x0075":["FD","1","RadiusOfCurvature"],"0x0076":["FD","1","KeratometricPower"],"0x0077":["FD","1","KeratometricAxis"],"0x0080":["SQ","1","FlatKeratometricAxisSequence"],"0x0092":["CS","1","BackgroundColor"],"0x0094":["CS","1","Optotype"],"0x0095":["CS","1","OptotypePresentation"],"0x0097":["SQ","1","SubjectiveRefractionRightEyeSequence"],"0x0098":["SQ","1","SubjectiveRefractionLeftEyeSequence"],"0x0100":["SQ","1","AddNearSequence"],"0x0101":["SQ","1","AddIntermediateSequence"],"0x0102":["SQ","1","AddOtherSequence"],"0x0104":["FD","1","AddPower"],"0x0106":["FD","1","ViewingDistance"],"0x0110":["SQ","1","CorneaMeasurementsSequence"],"0x0111":["SQ","1","SourceOfCorneaMeasurementDataCodeSequence"],"0x0112":["SQ","1","SteepCornealAxisSequence"],"0x0113":["SQ","1","FlatCornealAxisSequence"],"0x0114":["FD","1","CornealPower"],"0x0115":["FD","1","CornealAxis"],"0x0116":["SQ","1","CorneaMeasurementMethodCodeSequence"],"0x0117":["FL","1","RefractiveIndexOfCornea"],"0x0118":["FL","1","RefractiveIndexOfAqueousHumor"],"0x0121":["SQ","1","VisualAcuityTypeCodeSequence"],"0x0122":["SQ","1","VisualAcuityRightEyeSequence"],"0x0123":["SQ","1","VisualAcuityLeftEyeSequence"],"0x0124":["SQ","1","VisualAcuityBothEyesOpenSequence"],"0x0125":["CS","1","ViewingDistanceType"],"0x0135":["SS","2","VisualAcuityModifiers"],"0x0137":["FD","1","DecimalVisualAcuity"],"0x0139":["LO","1","OptotypeDetailedDefinition"],"0x0145":["SQ","1","ReferencedRefractiveMeasurementsSequence"],"0x0146":["FD","1","SpherePower"],"0x0147":["FD","1","CylinderPower"],"0x0201":["CS","1","CornealTopographySurface"],"0x0202":["FL","2","CornealVertexLocation"],"0x0203":["FL","1","PupilCentroidXCoordinate"],"0x0204":["FL","1","PupilCentroidYCoordinate"],"0x0205":["FL","1","EquivalentPupilRadius"],"0x0207":["SQ","1","CornealTopographyMapTypeCodeSequence"],"0x0208":["IS","2-2n","VerticesOfTheOutlineOfPupil"],"0x0210":["SQ","1","CornealTopographyMappingNormalsSequence"],"0x0211":["SQ","1","MaximumCornealCurvatureSequence"],"0x0212":["FL","1","MaximumCornealCurvature"],"0x0213":["FL","2","MaximumCornealCurvatureLocation"],"0x0215":["SQ","1","MinimumKeratometricSequence"],"0x0218":["SQ","1","SimulatedKeratometricCylinderSequence"],"0x0220":["FL","1","AverageCornealPower"],"0x0224":["FL","1","CornealISValue"],"0x0227":["FL","1","AnalyzedArea"],"0x0230":["FL","1","SurfaceRegularityIndex"],"0x0232":["FL","1","SurfaceAsymmetryIndex"],"0x0234":["FL","1","CornealEccentricityIndex"],"0x0236":["FL","1","KeratoconusPredictionIndex"],"0x0238":["FL","1","DecimalPotentialVisualAcuity"],"0x0242":["CS","1","CornealTopographyMapQualityEvaluation"],"0x0244":["SQ","1","SourceImageCornealProcessedDataSequence"],"0x0247":["FL","3","CornealPointLocation"],"0x0248":["CS","1","CornealPointEstimated"],"0x0249":["FL","1","AxialPower"],"0x0250":["FL","1","TangentialPower"],"0x0251":["FL","1","RefractivePower"],"0x0252":["FL","1","RelativeElevation"],"0x0253":["FL","1","CornealWavefront"]},"0x0048":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["FL","1","ImagedVolumeWidth"],"0x0002":["FL","1","ImagedVolumeHeight"],"0x0003":["FL","1","ImagedVolumeDepth"],"0x0006":["UL","1","TotalPixelMatrixColumns"],"0x0007":["UL","1","TotalPixelMatrixRows"],"0x0008":["SQ","1","TotalPixelMatrixOriginSequence"],"0x0010":["CS","1","SpecimenLabelInImage"],"0x0011":["CS","1","FocusMethod"],"0x0012":["CS","1","ExtendedDepthOfField"],"0x0013":["US","1","NumberOfFocalPlanes"],"0x0014":["FL","1","DistanceBetweenFocalPlanes"],"0x0015":["US","3","RecommendedAbsentPixelCIELabValue"],"0x0100":["SQ","1","IlluminatorTypeCodeSequence"],"0x0102":["DS","6","ImageOrientationSlide"],"0x0105":["SQ","1","OpticalPathSequence"],"0x0106":["SH","1","OpticalPathIdentifier"],"0x0107":["ST","1","OpticalPathDescription"],"0x0108":["SQ","1","IlluminationColorCodeSequence"],"0x0110":["SQ","1","SpecimenReferenceSequence"],"0x0111":["DS","1","CondenserLensPower"],"0x0112":["DS","1","ObjectiveLensPower"],"0x0113":["DS","1","ObjectiveLensNumericalAperture"],"0x0120":["SQ","1","PaletteColorLookupTableSequence"],"0x0200":["SQ","1","ReferencedImageNavigationSequence"],"0x0201":["US","2","TopLeftHandCornerOfLocalizerArea"],"0x0202":["US","2","BottomRightHandCornerOfLocalizerArea"],"0x0207":["SQ","1","OpticalPathIdentificationSequence"],"0x021A":["SQ","1","PlanePositionSlideSequence"],"0x021E":["SL","1","ColumnPositionInTotalImagePixelMatrix"],"0x021F":["SL","1","RowPositionInTotalImagePixelMatrix"],"0x0301":["CS","1","PixelOriginInterpretation"],"0x0302":["UL","1","NumberOfOpticalPaths"],"0x0303":["UL","1","TotalPixelMatrixFocalPlanes"]},"0x0050":{"0x0000":["UL","1","GenericGroupLength"],"0x0004":["CS","1","CalibrationImage"],"0x0010":["SQ","1","DeviceSequence"],"0x0012":["SQ","1","ContainerComponentTypeCodeSequence"],"0x0013":["FD","1","ContainerComponentThickness"],"0x0014":["DS","1","DeviceLength"],"0x0015":["FD","1","ContainerComponentWidth"],"0x0016":["DS","1","DeviceDiameter"],"0x0017":["CS","1","DeviceDiameterUnits"],"0x0018":["DS","1","DeviceVolume"],"0x0019":["DS","1","InterMarkerDistance"],"0x001A":["CS","1","ContainerComponentMaterial"],"0x001B":["LO","1","ContainerComponentID"],"0x001C":["FD","1","ContainerComponentLength"],"0x001D":["FD","1","ContainerComponentDiameter"],"0x001E":["LO","1","ContainerComponentDescription"],"0x0020":["LO","1","DeviceDescription"],"0x0021":["ST","1","LongDeviceDescription"]},"0x0052":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["FL","1","ContrastBolusIngredientPercentByVolume"],"0x0002":["FD","1","OCTFocalDistance"],"0x0003":["FD","1","BeamSpotSize"],"0x0004":["FD","1","EffectiveRefractiveIndex"],"0x0006":["CS","1","OCTAcquisitionDomain"],"0x0007":["FD","1","OCTOpticalCenterWavelength"],"0x0008":["FD","1","AxialResolution"],"0x0009":["FD","1","RangingDepth"],"0x0011":["FD","1","ALineRate"],"0x0012":["US","1","ALinesPerFrame"],"0x0013":["FD","1","CatheterRotationalRate"],"0x0014":["FD","1","ALinePixelSpacing"],"0x0016":["SQ","1","ModeOfPercutaneousAccessSequence"],"0x0025":["SQ","1","IntravascularOCTFrameTypeSequence"],"0x0026":["CS","1","OCTZOffsetApplied"],"0x0027":["SQ","1","IntravascularFrameContentSequence"],"0x0028":["FD","1","IntravascularLongitudinalDistance"],"0x0029":["SQ","1","IntravascularOCTFrameContentSequence"],"0x0030":["SS","1","OCTZOffsetCorrection"],"0x0031":["CS","1","CatheterDirectionOfRotation"],"0x0033":["FD","1","SeamLineLocation"],"0x0034":["FD","1","FirstALineLocation"],"0x0036":["US","1","SeamLineIndex"],"0x0038":["US","1","NumberOfPaddedALines"],"0x0039":["CS","1","InterpolationType"],"0x003A":["CS","1","RefractiveIndexApplied"]},"0x0054":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["US","1-n","EnergyWindowVector"],"0x0011":["US","1","NumberOfEnergyWindows"],"0x0012":["SQ","1","EnergyWindowInformationSequence"],"0x0013":["SQ","1","EnergyWindowRangeSequence"],"0x0014":["DS","1","EnergyWindowLowerLimit"],"0x0015":["DS","1","EnergyWindowUpperLimit"],"0x0016":["SQ","1","RadiopharmaceuticalInformationSequence"],"0x0017":["IS","1","ResidualSyringeCounts"],"0x0018":["SH","1","EnergyWindowName"],"0x0020":["US","1-n","DetectorVector"],"0x0021":["US","1","NumberOfDetectors"],"0x0022":["SQ","1","DetectorInformationSequence"],"0x0030":["US","1-n","PhaseVector"],"0x0031":["US","1","NumberOfPhases"],"0x0032":["SQ","1","PhaseInformationSequence"],"0x0033":["US","1","NumberOfFramesInPhase"],"0x0036":["IS","1","PhaseDelay"],"0x0038":["IS","1","PauseBetweenFrames"],"0x0039":["CS","1","PhaseDescription"],"0x0050":["US","1-n","RotationVector"],"0x0051":["US","1","NumberOfRotations"],"0x0052":["SQ","1","RotationInformationSequence"],"0x0053":["US","1","NumberOfFramesInRotation"],"0x0060":["US","1-n","RRIntervalVector"],"0x0061":["US","1","NumberOfRRIntervals"],"0x0062":["SQ","1","GatedInformationSequence"],"0x0063":["SQ","1","DataInformationSequence"],"0x0070":["US","1-n","TimeSlotVector"],"0x0071":["US","1","NumberOfTimeSlots"],"0x0072":["SQ","1","TimeSlotInformationSequence"],"0x0073":["DS","1","TimeSlotTime"],"0x0080":["US","1-n","SliceVector"],"0x0081":["US","1","NumberOfSlices"],"0x0090":["US","1-n","AngularViewVector"],"0x0100":["US","1-n","TimeSliceVector"],"0x0101":["US","1","NumberOfTimeSlices"],"0x0200":["DS","1","StartAngle"],"0x0202":["CS","1","TypeOfDetectorMotion"],"0x0210":["IS","1-n","TriggerVector"],"0x0211":["US","1","NumberOfTriggersInPhase"],"0x0220":["SQ","1","ViewCodeSequence"],"0x0222":["SQ","1","ViewModifierCodeSequence"],"0x0300":["SQ","1","RadionuclideCodeSequence"],"0x0302":["SQ","1","AdministrationRouteCodeSequence"],"0x0304":["SQ","1","RadiopharmaceuticalCodeSequence"],"0x0306":["SQ","1","CalibrationDataSequence"],"0x0308":["US","1","EnergyWindowNumber"],"0x0400":["SH","1","ImageID"],"0x0410":["SQ","1","PatientOrientationCodeSequence"],"0x0412":["SQ","1","PatientOrientationModifierCodeSequence"],"0x0414":["SQ","1","PatientGantryRelationshipCodeSequence"],"0x0500":["CS","1","SliceProgressionDirection"],"0x0501":["CS","1","ScanProgressionDirection"],"0x1000":["CS","2","SeriesType"],"0x1001":["CS","1","Units"],"0x1002":["CS","1","CountsSource"],"0x1004":["CS","1","ReprojectionMethod"],"0x1006":["CS","1","SUVType"],"0x1100":["CS","1","RandomsCorrectionMethod"],"0x1101":["LO","1","AttenuationCorrectionMethod"],"0x1102":["CS","1","DecayCorrection"],"0x1103":["LO","1","ReconstructionMethod"],"0x1104":["LO","1","DetectorLinesOfResponseUsed"],"0x1105":["LO","1","ScatterCorrectionMethod"],"0x1200":["DS","1","AxialAcceptance"],"0x1201":["IS","2","AxialMash"],"0x1202":["IS","1","TransverseMash"],"0x1203":["DS","2","DetectorElementSize"],"0x1210":["DS","1","CoincidenceWindowWidth"],"0x1220":["CS","1-n","SecondaryCountsType"],"0x1300":["DS","1","FrameReferenceTime"],"0x1310":["IS","1","PrimaryPromptsCountsAccumulated"],"0x1311":["IS","1-n","SecondaryCountsAccumulated"],"0x1320":["DS","1","SliceSensitivityFactor"],"0x1321":["DS","1","DecayFactor"],"0x1322":["DS","1","DoseCalibrationFactor"],"0x1323":["DS","1","ScatterFractionFactor"],"0x1324":["DS","1","DeadTimeFactor"],"0x1330":["US","1","ImageIndex"],"0x1400":["CS","1-n","CountsIncluded"],"0x1401":["CS","1","DeadTimeCorrectionFlag"]},"0x0060":{"0x0000":["UL","1","GenericGroupLength"],"0x3000":["SQ","1","HistogramSequence"],"0x3002":["US","1","HistogramNumberOfBins"],"0x3004":["xs","1","HistogramFirstBinValue"],"0x3006":["xs","1","HistogramLastBinValue"],"0x3008":["US","1","HistogramBinWidth"],"0x3010":["LO","1","HistogramExplanation"],"0x3020":["UL","1-n","HistogramData"]},"0x0062":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["CS","1","SegmentationType"],"0x0002":["SQ","1","SegmentSequence"],"0x0003":["SQ","1","SegmentedPropertyCategoryCodeSequence"],"0x0004":["US","1","SegmentNumber"],"0x0005":["LO","1","SegmentLabel"],"0x0006":["ST","1","SegmentDescription"],"0x0007":["SQ","1","SegmentationAlgorithmIdentificationSequence"],"0x0008":["CS","1","SegmentAlgorithmType"],"0x0009":["LO","1-n","SegmentAlgorithmName"],"0x000A":["SQ","1","SegmentIdentificationSequence"],"0x000B":["US","1-n","ReferencedSegmentNumber"],"0x000C":["US","1","RecommendedDisplayGrayscaleValue"],"0x000D":["US","3","RecommendedDisplayCIELabValue"],"0x000E":["US","1","MaximumFractionalValue"],"0x000F":["SQ","1","SegmentedPropertyTypeCodeSequence"],"0x0010":["CS","1","SegmentationFractionalType"],"0x0011":["SQ","1","SegmentedPropertyTypeModifierCodeSequence"],"0x0012":["SQ","1","UsedSegmentsSequence"],"0x0013":["CS","1","SegmentsOverlap"],"0x0020":["UT","1","TrackingID"],"0x0021":["UI","1","TrackingUID"]},"0x0064":{"0x0000":["UL","1","GenericGroupLength"],"0x0002":["SQ","1","DeformableRegistrationSequence"],"0x0003":["UI","1","SourceFrameOfReferenceUID"],"0x0005":["SQ","1","DeformableRegistrationGridSequence"],"0x0007":["UL","3","GridDimensions"],"0x0008":["FD","3","GridResolution"],"0x0009":["OF","1","VectorGridData"],"0x000F":["SQ","1","PreDeformationMatrixRegistrationSequence"],"0x0010":["SQ","1","PostDeformationMatrixRegistrationSequence"]},"0x0066":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["UL","1","NumberOfSurfaces"],"0x0002":["SQ","1","SurfaceSequence"],"0x0003":["UL","1","SurfaceNumber"],"0x0004":["LT","1","SurfaceComments"],"0x0009":["CS","1","SurfaceProcessing"],"0x000A":["FL","1","SurfaceProcessingRatio"],"0x000B":["LO","1","SurfaceProcessingDescription"],"0x000C":["FL","1","RecommendedPresentationOpacity"],"0x000D":["CS","1","RecommendedPresentationType"],"0x000E":["CS","1","FiniteVolume"],"0x0010":["CS","1","Manifold"],"0x0011":["SQ","1","SurfacePointsSequence"],"0x0012":["SQ","1","SurfacePointsNormalsSequence"],"0x0013":["SQ","1","SurfaceMeshPrimitivesSequence"],"0x0015":["UL","1","NumberOfSurfacePoints"],"0x0016":["OF","1","PointCoordinatesData"],"0x0017":["FL","3","PointPositionAccuracy"],"0x0018":["FL","1","MeanPointDistance"],"0x0019":["FL","1","MaximumPointDistance"],"0x001A":["FL","6","PointsBoundingBoxCoordinates"],"0x001B":["FL","3","AxisOfRotation"],"0x001C":["FL","3","CenterOfRotation"],"0x001E":["UL","1","NumberOfVectors"],"0x001F":["US","1","VectorDimensionality"],"0x0020":["FL","1-n","VectorAccuracy"],"0x0021":["OF","1","VectorCoordinateData"],"0x0022":["OD","1","DoublePointCoordinatesData"],"0x0023":["OW","1","TrianglePointIndexList"],"0x0024":["OW","1","EdgePointIndexList"],"0x0025":["OW","1","VertexPointIndexList"],"0x0026":["SQ","1","TriangleStripSequence"],"0x0027":["SQ","1","TriangleFanSequence"],"0x0028":["SQ","1","LineSequence"],"0x0029":["OW","1","PrimitivePointIndexList"],"0x002A":["UL","1","SurfaceCount"],"0x002B":["SQ","1","ReferencedSurfaceSequence"],"0x002C":["UL","1","ReferencedSurfaceNumber"],"0x002D":["SQ","1","SegmentSurfaceGenerationAlgorithmIdentificationSequence"],"0x002E":["SQ","1","SegmentSurfaceSourceInstanceSequence"],"0x002F":["SQ","1","AlgorithmFamilyCodeSequence"],"0x0030":["SQ","1","AlgorithmNameCodeSequence"],"0x0031":["LO","1","AlgorithmVersion"],"0x0032":["LT","1","AlgorithmParameters"],"0x0034":["SQ","1","FacetSequence"],"0x0035":["SQ","1","SurfaceProcessingAlgorithmIdentificationSequence"],"0x0036":["LO","1","AlgorithmName"],"0x0037":["FL","1","RecommendedPointRadius"],"0x0038":["FL","1","RecommendedLineThickness"],"0x0040":["OL","1","LongPrimitivePointIndexList"],"0x0041":["OL","1","LongTrianglePointIndexList"],"0x0042":["OL","1","LongEdgePointIndexList"],"0x0043":["OL","1","LongVertexPointIndexList"],"0x0101":["SQ","1","TrackSetSequence"],"0x0102":["SQ","1","TrackSequence"],"0x0103":["OW","1","RecommendedDisplayCIELabValueList"],"0x0104":["SQ","1","TrackingAlgorithmIdentificationSequence"],"0x0105":["UL","1","TrackSetNumber"],"0x0106":["LO","1","TrackSetLabel"],"0x0107":["UT","1","TrackSetDescription"],"0x0108":["SQ","1","TrackSetAnatomicalTypeCodeSequence"],"0x0121":["SQ","1","MeasurementsSequence"],"0x0124":["SQ","1","TrackSetStatisticsSequence"],"0x0125":["OF","1","FloatingPointValues"],"0x0129":["OL","1","TrackPointIndexList"],"0x0130":["SQ","1","TrackStatisticsSequence"],"0x0132":["SQ","1","MeasurementValuesSequence"],"0x0133":["SQ","1","DiffusionAcquisitionCodeSequence"],"0x0134":["SQ","1","DiffusionModelCodeSequence"]},"0x0068":{"0x0000":["UL","1","GenericGroupLength"],"0x6210":["LO","1","ImplantSize"],"0x6221":["LO","1","ImplantTemplateVersion"],"0x6222":["SQ","1","ReplacedImplantTemplateSequence"],"0x6223":["CS","1","ImplantType"],"0x6224":["SQ","1","DerivationImplantTemplateSequence"],"0x6225":["SQ","1","OriginalImplantTemplateSequence"],"0x6226":["DT","1","EffectiveDateTime"],"0x6230":["SQ","1","ImplantTargetAnatomySequence"],"0x6260":["SQ","1","InformationFromManufacturerSequence"],"0x6265":["SQ","1","NotificationFromManufacturerSequence"],"0x6270":["DT","1","InformationIssueDateTime"],"0x6280":["ST","1","InformationSummary"],"0x62A0":["SQ","1","ImplantRegulatoryDisapprovalCodeSequence"],"0x62A5":["FD","1","OverallTemplateSpatialTolerance"],"0x62C0":["SQ","1","HPGLDocumentSequence"],"0x62D0":["US","1","HPGLDocumentID"],"0x62D5":["LO","1","HPGLDocumentLabel"],"0x62E0":["SQ","1","ViewOrientationCodeSequence"],"0x62F0":["SQ","1","ViewOrientationModifierCodeSequence"],"0x62F2":["FD","1","HPGLDocumentScaling"],"0x6300":["OB","1","HPGLDocument"],"0x6310":["US","1","HPGLContourPenNumber"],"0x6320":["SQ","1","HPGLPenSequence"],"0x6330":["US","1","HPGLPenNumber"],"0x6340":["LO","1","HPGLPenLabel"],"0x6345":["ST","1","HPGLPenDescription"],"0x6346":["FD","2","RecommendedRotationPoint"],"0x6347":["FD","4","BoundingRectangle"],"0x6350":["US","1-n","ImplantTemplate3DModelSurfaceNumber"],"0x6360":["SQ","1","SurfaceModelDescriptionSequence"],"0x6380":["LO","1","SurfaceModelLabel"],"0x6390":["FD","1","SurfaceModelScalingFactor"],"0x63A0":["SQ","1","MaterialsCodeSequence"],"0x63A4":["SQ","1","CoatingMaterialsCodeSequence"],"0x63A8":["SQ","1","ImplantTypeCodeSequence"],"0x63AC":["SQ","1","FixationMethodCodeSequence"],"0x63B0":["SQ","1","MatingFeatureSetsSequence"],"0x63C0":["US","1","MatingFeatureSetID"],"0x63D0":["LO","1","MatingFeatureSetLabel"],"0x63E0":["SQ","1","MatingFeatureSequence"],"0x63F0":["US","1","MatingFeatureID"],"0x6400":["SQ","1","MatingFeatureDegreeOfFreedomSequence"],"0x6410":["US","1","DegreeOfFreedomID"],"0x6420":["CS","1","DegreeOfFreedomType"],"0x6430":["SQ","1","TwoDMatingFeatureCoordinatesSequence"],"0x6440":["US","1","ReferencedHPGLDocumentID"],"0x6450":["FD","2","TwoDMatingPoint"],"0x6460":["FD","4","TwoDMatingAxes"],"0x6470":["SQ","1","TwoDDegreeOfFreedomSequence"],"0x6490":["FD","3","ThreeDDegreeOfFreedomAxis"],"0x64A0":["FD","2","RangeOfFreedom"],"0x64C0":["FD","3","ThreeDMatingPoint"],"0x64D0":["FD","9","ThreeDMatingAxes"],"0x64F0":["FD","3","TwoDDegreeOfFreedomAxis"],"0x6500":["SQ","1","PlanningLandmarkPointSequence"],"0x6510":["SQ","1","PlanningLandmarkLineSequence"],"0x6520":["SQ","1","PlanningLandmarkPlaneSequence"],"0x6530":["US","1","PlanningLandmarkID"],"0x6540":["LO","1","PlanningLandmarkDescription"],"0x6545":["SQ","1","PlanningLandmarkIdentificationCodeSequence"],"0x6550":["SQ","1","TwoDPointCoordinatesSequence"],"0x6560":["FD","2","TwoDPointCoordinates"],"0x6590":["FD","3","ThreeDPointCoordinates"],"0x65A0":["SQ","1","TwoDLineCoordinatesSequence"],"0x65B0":["FD","4","TwoDLineCoordinates"],"0x65D0":["FD","6","ThreeDLineCoordinates"],"0x65E0":["SQ","1","TwoDPlaneCoordinatesSequence"],"0x65F0":["FD","4","TwoDPlaneIntersection"],"0x6610":["FD","3","ThreeDPlaneOrigin"],"0x6620":["FD","3","ThreeDPlaneNormal"],"0x7001":["CS","1","ModelModification"],"0x7002":["CS","1","ModelMirroring"],"0x7003":["SQ","1","ModelUsageCodeSequence"],"0x7004":["UI","1","ModelGroupUID"],"0x7005":["UR","1","RelativeURIReferenceWithinEncapsulatedDocument"]},"0x006A":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["CS","1","AnnotationCoordinateType"],"0x0002":["SQ","1","AnnotationGroupSequence"],"0x0003":["UI","1","AnnotationGroupUID"],"0x0005":["LO","1","AnnotationGroupLabel"],"0x0006":["UT","1","AnnotationGroupDescription"],"0x0007":["CS","1","AnnotationGroupGenerationType"],"0x0008":["SQ","1","AnnotationGroupAlgorithmIdentificationSequence"],"0x0009":["SQ","1","AnnotationPropertyCategoryCodeSequence"],"0x000A":["SQ","1","AnnotationPropertyTypeCodeSequence"],"0x000B":["SQ","1","AnnotationPropertyTypeModifierCodeSequence"],"0x000C":["UL","1","NumberOfAnnotations"],"0x000D":["CS","1","AnnotationAppliesToAllOpticalPaths"],"0x000E":["SH","1-n","ReferencedOpticalPathIdentifier"],"0x000F":["CS","1","AnnotationAppliesToAllZPlanes"],"0x0010":["FD","1-n","CommonZCoordinateValue"],"0x0011":["OL","1","AnnotationIndexList"]},"0x0070":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["SQ","1","GraphicAnnotationSequence"],"0x0002":["CS","1","GraphicLayer"],"0x0003":["CS","1","BoundingBoxAnnotationUnits"],"0x0004":["CS","1","AnchorPointAnnotationUnits"],"0x0005":["CS","1","GraphicAnnotationUnits"],"0x0006":["ST","1","UnformattedTextValue"],"0x0008":["SQ","1","TextObjectSequence"],"0x0009":["SQ","1","GraphicObjectSequence"],"0x0010":["FL","2","BoundingBoxTopLeftHandCorner"],"0x0011":["FL","2","BoundingBoxBottomRightHandCorner"],"0x0012":["CS","1","BoundingBoxTextHorizontalJustification"],"0x0014":["FL","2","AnchorPoint"],"0x0015":["CS","1","AnchorPointVisibility"],"0x0020":["US","1","GraphicDimensions"],"0x0021":["US","1","NumberOfGraphicPoints"],"0x0022":["FL","2-n","GraphicData"],"0x0023":["CS","1","GraphicType"],"0x0024":["CS","1","GraphicFilled"],"0x0040":["IS","1","ImageRotationRetired"],"0x0041":["CS","1","ImageHorizontalFlip"],"0x0042":["US","1","ImageRotation"],"0x0050":["US","2","DisplayedAreaTopLeftHandCornerTrial"],"0x0051":["US","2","DisplayedAreaBottomRightHandCornerTrial"],"0x0052":["SL","2","DisplayedAreaTopLeftHandCorner"],"0x0053":["SL","2","DisplayedAreaBottomRightHandCorner"],"0x005A":["SQ","1","DisplayedAreaSelectionSequence"],"0x0060":["SQ","1","GraphicLayerSequence"],"0x0062":["IS","1","GraphicLayerOrder"],"0x0066":["US","1","GraphicLayerRecommendedDisplayGrayscaleValue"],"0x0067":["US","3","GraphicLayerRecommendedDisplayRGBValue"],"0x0068":["LO","1","GraphicLayerDescription"],"0x0080":["CS","1","ContentLabel"],"0x0081":["LO","1","ContentDescription"],"0x0082":["DA","1","PresentationCreationDate"],"0x0083":["TM","1","PresentationCreationTime"],"0x0084":["PN","1","ContentCreatorName"],"0x0086":["SQ","1","ContentCreatorIdentificationCodeSequence"],"0x0087":["SQ","1","AlternateContentDescriptionSequence"],"0x0100":["CS","1","PresentationSizeMode"],"0x0101":["DS","2","PresentationPixelSpacing"],"0x0102":["IS","2","PresentationPixelAspectRatio"],"0x0103":["FL","1","PresentationPixelMagnificationRatio"],"0x0207":["LO","1","GraphicGroupLabel"],"0x0208":["ST","1","GraphicGroupDescription"],"0x0209":["SQ","1","CompoundGraphicSequence"],"0x0226":["UL","1","CompoundGraphicInstanceID"],"0x0227":["LO","1","FontName"],"0x0228":["CS","1","FontNameType"],"0x0229":["LO","1","CSSFontName"],"0x0230":["FD","1","RotationAngle"],"0x0231":["SQ","1","TextStyleSequence"],"0x0232":["SQ","1","LineStyleSequence"],"0x0233":["SQ","1","FillStyleSequence"],"0x0234":["SQ","1","GraphicGroupSequence"],"0x0241":["US","3","TextColorCIELabValue"],"0x0242":["CS","1","HorizontalAlignment"],"0x0243":["CS","1","VerticalAlignment"],"0x0244":["CS","1","ShadowStyle"],"0x0245":["FL","1","ShadowOffsetX"],"0x0246":["FL","1","ShadowOffsetY"],"0x0247":["US","3","ShadowColorCIELabValue"],"0x0248":["CS","1","Underlined"],"0x0249":["CS","1","Bold"],"0x0250":["CS","1","Italic"],"0x0251":["US","3","PatternOnColorCIELabValue"],"0x0252":["US","3","PatternOffColorCIELabValue"],"0x0253":["FL","1","LineThickness"],"0x0254":["CS","1","LineDashingStyle"],"0x0255":["UL","1","LinePattern"],"0x0256":["OB","1","FillPattern"],"0x0257":["CS","1","FillMode"],"0x0258":["FL","1","ShadowOpacity"],"0x0261":["FL","1","GapLength"],"0x0262":["FL","1","DiameterOfVisibility"],"0x0273":["FL","2","RotationPoint"],"0x0274":["CS","1","TickAlignment"],"0x0278":["CS","1","ShowTickLabel"],"0x0279":["CS","1","TickLabelAlignment"],"0x0282":["CS","1","CompoundGraphicUnits"],"0x0284":["FL","1","PatternOnOpacity"],"0x0285":["FL","1","PatternOffOpacity"],"0x0287":["SQ","1","MajorTicksSequence"],"0x0288":["FL","1","TickPosition"],"0x0289":["SH","1","TickLabel"],"0x0294":["CS","1","CompoundGraphicType"],"0x0295":["UL","1","GraphicGroupID"],"0x0306":["CS","1","ShapeType"],"0x0308":["SQ","1","RegistrationSequence"],"0x0309":["SQ","1","MatrixRegistrationSequence"],"0x030A":["SQ","1","MatrixSequence"],"0x030B":["FD","16","FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix"],"0x030C":["CS","1","FrameOfReferenceTransformationMatrixType"],"0x030D":["SQ","1","RegistrationTypeCodeSequence"],"0x030F":["ST","1","FiducialDescription"],"0x0310":["SH","1","FiducialIdentifier"],"0x0311":["SQ","1","FiducialIdentifierCodeSequence"],"0x0312":["FD","1","ContourUncertaintyRadius"],"0x0314":["SQ","1","UsedFiducialsSequence"],"0x0318":["SQ","1","GraphicCoordinatesDataSequence"],"0x031A":["UI","1","FiducialUID"],"0x031B":["UI","1","ReferencedFiducialUID"],"0x031C":["SQ","1","FiducialSetSequence"],"0x031E":["SQ","1","FiducialSequence"],"0x031F":["SQ","1","FiducialsPropertyCategoryCodeSequence"],"0x0401":["US","3","GraphicLayerRecommendedDisplayCIELabValue"],"0x0402":["SQ","1","BlendingSequence"],"0x0403":["FL","1","RelativeOpacity"],"0x0404":["SQ","1","ReferencedSpatialRegistrationSequence"],"0x0405":["CS","1","BlendingPosition"],"0x1101":["UI","1","PresentationDisplayCollectionUID"],"0x1102":["UI","1","PresentationSequenceCollectionUID"],"0x1103":["US","1","PresentationSequencePositionIndex"],"0x1104":["SQ","1","RenderedImageReferenceSequence"],"0x1201":["SQ","1","VolumetricPresentationStateInputSequence"],"0x1202":["CS","1","PresentationInputType"],"0x1203":["US","1","InputSequencePositionIndex"],"0x1204":["CS","1","Crop"],"0x1205":["US","1-n","CroppingSpecificationIndex"],"0x1206":["CS","1","CompositingMethod"],"0x1207":["US","1","VolumetricPresentationInputNumber"],"0x1208":["CS","1","ImageVolumeGeometry"],"0x1209":["UI","1","VolumetricPresentationInputSetUID"],"0x120A":["SQ","1","VolumetricPresentationInputSetSequence"],"0x120B":["CS","1","GlobalCrop"],"0x120C":["US","1-n","GlobalCroppingSpecificationIndex"],"0x120D":["CS","1","RenderingMethod"],"0x1301":["SQ","1","VolumeCroppingSequence"],"0x1302":["CS","1","VolumeCroppingMethod"],"0x1303":["FD","6","BoundingBoxCrop"],"0x1304":["SQ","1","ObliqueCroppingPlaneSequence"],"0x1305":["FD","4","Plane"],"0x1306":["FD","3","PlaneNormal"],"0x1309":["US","1","CroppingSpecificationNumber"],"0x1501":["CS","1","MultiPlanarReconstructionStyle"],"0x1502":["CS","1","MPRThicknessType"],"0x1503":["FD","1","MPRSlabThickness"],"0x1505":["FD","3","MPRTopLeftHandCorner"],"0x1507":["FD","3","MPRViewWidthDirection"],"0x1508":["FD","1","MPRViewWidth"],"0x150C":["UL","1","NumberOfVolumetricCurvePoints"],"0x150D":["OD","1","VolumetricCurvePoints"],"0x1511":["FD","3","MPRViewHeightDirection"],"0x1512":["FD","1","MPRViewHeight"],"0x1602":["CS","1","RenderProjection"],"0x1603":["FD","3","ViewpointPosition"],"0x1604":["FD","3","ViewpointLookAtPoint"],"0x1605":["FD","3","ViewpointUpDirection"],"0x1606":["FD","6","RenderFieldOfView"],"0x1607":["FD","1","SamplingStepSize"],"0x1701":["CS","1","ShadingStyle"],"0x1702":["FD","1","AmbientReflectionIntensity"],"0x1703":["FD","3","LightDirection"],"0x1704":["FD","1","DiffuseReflectionIntensity"],"0x1705":["FD","1","SpecularReflectionIntensity"],"0x1706":["FD","1","Shininess"],"0x1801":["SQ","1","PresentationStateClassificationComponentSequence"],"0x1802":["CS","1","ComponentType"],"0x1803":["SQ","1","ComponentInputSequence"],"0x1804":["US","1","VolumetricPresentationInputIndex"],"0x1805":["SQ","1","PresentationStateCompositorComponentSequence"],"0x1806":["SQ","1","WeightingTransferFunctionSequence"],"0x1807":["US","3","WeightingLookupTableDescriptor"],"0x1808":["OB","1","WeightingLookupTableData"],"0x1901":["SQ","1","VolumetricAnnotationSequence"],"0x1903":["SQ","1","ReferencedStructuredContextSequence"],"0x1904":["UI","1","ReferencedContentItem"],"0x1905":["SQ","1","VolumetricPresentationInputAnnotationSequence"],"0x1907":["CS","1","AnnotationClipping"],"0x1A01":["CS","1","PresentationAnimationStyle"],"0x1A03":["FD","1","RecommendedAnimationRate"],"0x1A04":["SQ","1","AnimationCurveSequence"],"0x1A05":["FD","1","AnimationStepSize"],"0x1A06":["FD","1","SwivelRange"],"0x1A07":["OD","1","VolumetricCurveUpDirections"],"0x1A08":["SQ","1","VolumeStreamSequence"],"0x1A09":["LO","1","RGBATransferFunctionDescription"],"0x1B01":["SQ","1","AdvancedBlendingSequence"],"0x1B02":["US","1","BlendingInputNumber"],"0x1B03":["SQ","1","BlendingDisplayInputSequence"],"0x1B04":["SQ","1","BlendingDisplaySequence"],"0x1B06":["CS","1","BlendingMode"],"0x1B07":["CS","1","TimeSeriesBlending"],"0x1B08":["CS","1","GeometryForDisplay"],"0x1B11":["SQ","1","ThresholdSequence"],"0x1B12":["SQ","1","ThresholdValueSequence"],"0x1B13":["CS","1","ThresholdType"],"0x1B14":["FD","1","ThresholdValue"]},"0x0072":{"0x0000":["UL","1","GenericGroupLength"],"0x0002":["SH","1","HangingProtocolName"],"0x0004":["LO","1","HangingProtocolDescription"],"0x0006":["CS","1","HangingProtocolLevel"],"0x0008":["LO","1","HangingProtocolCreator"],"0x000A":["DT","1","HangingProtocolCreationDateTime"],"0x000C":["SQ","1","HangingProtocolDefinitionSequence"],"0x000E":["SQ","1","HangingProtocolUserIdentificationCodeSequence"],"0x0010":["LO","1","HangingProtocolUserGroupName"],"0x0012":["SQ","1","SourceHangingProtocolSequence"],"0x0014":["US","1","NumberOfPriorsReferenced"],"0x0020":["SQ","1","ImageSetsSequence"],"0x0022":["SQ","1","ImageSetSelectorSequence"],"0x0024":["CS","1","ImageSetSelectorUsageFlag"],"0x0026":["AT","1","SelectorAttribute"],"0x0028":["US","1","SelectorValueNumber"],"0x0030":["SQ","1","TimeBasedImageSetsSequence"],"0x0032":["US","1","ImageSetNumber"],"0x0034":["CS","1","ImageSetSelectorCategory"],"0x0038":["US","2","RelativeTime"],"0x003A":["CS","1","RelativeTimeUnits"],"0x003C":["SS","2","AbstractPriorValue"],"0x003E":["SQ","1","AbstractPriorCodeSequence"],"0x0040":["LO","1","ImageSetLabel"],"0x0050":["CS","1","SelectorAttributeVR"],"0x0052":["AT","1-n","SelectorSequencePointer"],"0x0054":["LO","1-n","SelectorSequencePointerPrivateCreator"],"0x0056":["LO","1","SelectorAttributePrivateCreator"],"0x005E":["AE","1-n","SelectorAEValue"],"0x005F":["AS","1-n","SelectorASValue"],"0x0060":["AT","1-n","SelectorATValue"],"0x0061":["DA","1-n","SelectorDAValue"],"0x0062":["CS","1-n","SelectorCSValue"],"0x0063":["DT","1-n","SelectorDTValue"],"0x0064":["IS","1-n","SelectorISValue"],"0x0065":["OB","1","SelectorOBValue"],"0x0066":["LO","1-n","SelectorLOValue"],"0x0067":["OF","1","SelectorOFValue"],"0x0068":["LT","1","SelectorLTValue"],"0x0069":["OW","1","SelectorOWValue"],"0x006A":["PN","1-n","SelectorPNValue"],"0x006B":["TM","1-n","SelectorTMValue"],"0x006C":["SH","1-n","SelectorSHValue"],"0x006D":["UN","1","SelectorUNValue"],"0x006E":["ST","1","SelectorSTValue"],"0x006F":["UC","1-n","SelectorUCValue"],"0x0070":["UT","1","SelectorUTValue"],"0x0071":["UR","1","SelectorURValue"],"0x0072":["DS","1-n","SelectorDSValue"],"0x0073":["OD","1","SelectorODValue"],"0x0074":["FD","1-n","SelectorFDValue"],"0x0075":["OL","1","SelectorOLValue"],"0x0076":["FL","1-n","SelectorFLValue"],"0x0078":["UL","1-n","SelectorULValue"],"0x007A":["US","1-n","SelectorUSValue"],"0x007C":["SL","1-n","SelectorSLValue"],"0x007E":["SS","1-n","SelectorSSValue"],"0x007F":["UI","1-n","SelectorUIValue"],"0x0080":["SQ","1","SelectorCodeSequenceValue"],"0x0081":["OV","1","SelectorOVValue"],"0x0082":["SV","1-n","SelectorSVValue"],"0x0083":["UV","1-n","SelectorUVValue"],"0x0100":["US","1","NumberOfScreens"],"0x0102":["SQ","1","NominalScreenDefinitionSequence"],"0x0104":["US","1","NumberOfVerticalPixels"],"0x0106":["US","1","NumberOfHorizontalPixels"],"0x0108":["FD","4","DisplayEnvironmentSpatialPosition"],"0x010A":["US","1","ScreenMinimumGrayscaleBitDepth"],"0x010C":["US","1","ScreenMinimumColorBitDepth"],"0x010E":["US","1","ApplicationMaximumRepaintTime"],"0x0200":["SQ","1","DisplaySetsSequence"],"0x0202":["US","1","DisplaySetNumber"],"0x0203":["LO","1","DisplaySetLabel"],"0x0204":["US","1","DisplaySetPresentationGroup"],"0x0206":["LO","1","DisplaySetPresentationGroupDescription"],"0x0208":["CS","1","PartialDataDisplayHandling"],"0x0210":["SQ","1","SynchronizedScrollingSequence"],"0x0212":["US","2-n","DisplaySetScrollingGroup"],"0x0214":["SQ","1","NavigationIndicatorSequence"],"0x0216":["US","1","NavigationDisplaySet"],"0x0218":["US","1-n","ReferenceDisplaySets"],"0x0300":["SQ","1","ImageBoxesSequence"],"0x0302":["US","1","ImageBoxNumber"],"0x0304":["CS","1","ImageBoxLayoutType"],"0x0306":["US","1","ImageBoxTileHorizontalDimension"],"0x0308":["US","1","ImageBoxTileVerticalDimension"],"0x0310":["CS","1","ImageBoxScrollDirection"],"0x0312":["CS","1","ImageBoxSmallScrollType"],"0x0314":["US","1","ImageBoxSmallScrollAmount"],"0x0316":["CS","1","ImageBoxLargeScrollType"],"0x0318":["US","1","ImageBoxLargeScrollAmount"],"0x0320":["US","1","ImageBoxOverlapPriority"],"0x0330":["FD","1","CineRelativeToRealTime"],"0x0400":["SQ","1","FilterOperationsSequence"],"0x0402":["CS","1","FilterByCategory"],"0x0404":["CS","1","FilterByAttributePresence"],"0x0406":["CS","1","FilterByOperator"],"0x0420":["US","3","StructuredDisplayBackgroundCIELabValue"],"0x0421":["US","3","EmptyImageBoxCIELabValue"],"0x0422":["SQ","1","StructuredDisplayImageBoxSequence"],"0x0424":["SQ","1","StructuredDisplayTextBoxSequence"],"0x0427":["SQ","1","ReferencedFirstFrameSequence"],"0x0430":["SQ","1","ImageBoxSynchronizationSequence"],"0x0432":["US","2-n","SynchronizedImageBoxList"],"0x0434":["CS","1","TypeOfSynchronization"],"0x0500":["CS","1","BlendingOperationType"],"0x0510":["CS","1","ReformattingOperationType"],"0x0512":["FD","1","ReformattingThickness"],"0x0514":["FD","1","ReformattingInterval"],"0x0516":["CS","1","ReformattingOperationInitialViewDirection"],"0x0520":["CS","1-n","ThreeDRenderingType"],"0x0600":["SQ","1","SortingOperationsSequence"],"0x0602":["CS","1","SortByCategory"],"0x0604":["CS","1","SortingDirection"],"0x0700":["CS","2","DisplaySetPatientOrientation"],"0x0702":["CS","1","VOIType"],"0x0704":["CS","1","PseudoColorType"],"0x0705":["SQ","1","PseudoColorPaletteInstanceReferenceSequence"],"0x0706":["CS","1","ShowGrayscaleInverted"],"0x0710":["CS","1","ShowImageTrueSizeFlag"],"0x0712":["CS","1","ShowGraphicAnnotationFlag"],"0x0714":["CS","1","ShowPatientDemographicsFlag"],"0x0716":["CS","1","ShowAcquisitionTechniquesFlag"],"0x0717":["CS","1","DisplaySetHorizontalJustification"],"0x0718":["CS","1","DisplaySetVerticalJustification"]},"0x0074":{"0x0000":["UL","1","GenericGroupLength"],"0x0120":["FD","1","ContinuationStartMeterset"],"0x0121":["FD","1","ContinuationEndMeterset"],"0x1000":["CS","1","ProcedureStepState"],"0x1002":["SQ","1","ProcedureStepProgressInformationSequence"],"0x1004":["DS","1","ProcedureStepProgress"],"0x1006":["ST","1","ProcedureStepProgressDescription"],"0x1007":["SQ","1","ProcedureStepProgressParametersSequence"],"0x1008":["SQ","1","ProcedureStepCommunicationsURISequence"],"0x100A":["UR","1","ContactURI"],"0x100C":["LO","1","ContactDisplayName"],"0x100E":["SQ","1","ProcedureStepDiscontinuationReasonCodeSequence"],"0x1020":["SQ","1","BeamTaskSequence"],"0x1022":["CS","1","BeamTaskType"],"0x1024":["IS","1","BeamOrderIndexTrial"],"0x1025":["CS","1","AutosequenceFlag"],"0x1026":["FD","1","TableTopVerticalAdjustedPosition"],"0x1027":["FD","1","TableTopLongitudinalAdjustedPosition"],"0x1028":["FD","1","TableTopLateralAdjustedPosition"],"0x102A":["FD","1","PatientSupportAdjustedAngle"],"0x102B":["FD","1","TableTopEccentricAdjustedAngle"],"0x102C":["FD","1","TableTopPitchAdjustedAngle"],"0x102D":["FD","1","TableTopRollAdjustedAngle"],"0x1030":["SQ","1","DeliveryVerificationImageSequence"],"0x1032":["CS","1","VerificationImageTiming"],"0x1034":["CS","1","DoubleExposureFlag"],"0x1036":["CS","1","DoubleExposureOrdering"],"0x1038":["DS","1","DoubleExposureMetersetTrial"],"0x103A":["DS","4","DoubleExposureFieldDeltaTrial"],"0x1040":["SQ","1","RelatedReferenceRTImageSequence"],"0x1042":["SQ","1","GeneralMachineVerificationSequence"],"0x1044":["SQ","1","ConventionalMachineVerificationSequence"],"0x1046":["SQ","1","IonMachineVerificationSequence"],"0x1048":["SQ","1","FailedAttributesSequence"],"0x104A":["SQ","1","OverriddenAttributesSequence"],"0x104C":["SQ","1","ConventionalControlPointVerificationSequence"],"0x104E":["SQ","1","IonControlPointVerificationSequence"],"0x1050":["SQ","1","AttributeOccurrenceSequence"],"0x1052":["AT","1","AttributeOccurrencePointer"],"0x1054":["UL","1","AttributeItemSelector"],"0x1056":["LO","1","AttributeOccurrencePrivateCreator"],"0x1057":["IS","1-n","SelectorSequencePointerItems"],"0x1200":["CS","1","ScheduledProcedureStepPriority"],"0x1202":["LO","1","WorklistLabel"],"0x1204":["LO","1","ProcedureStepLabel"],"0x1210":["SQ","1","ScheduledProcessingParametersSequence"],"0x1212":["SQ","1","PerformedProcessingParametersSequence"],"0x1216":["SQ","1","UnifiedProcedureStepPerformedProcedureSequence"],"0x1220":["SQ","1","RelatedProcedureStepSequence"],"0x1222":["LO","1","ProcedureStepRelationshipType"],"0x1224":["SQ","1","ReplacedProcedureStepSequence"],"0x1230":["LO","1","DeletionLock"],"0x1234":["AE","1","ReceivingAE"],"0x1236":["AE","1","RequestingAE"],"0x1238":["LT","1","ReasonForCancellation"],"0x1242":["CS","1","SCPStatus"],"0x1244":["CS","1","SubscriptionListStatus"],"0x1246":["CS","1","UnifiedProcedureStepListStatus"],"0x1324":["UL","1","BeamOrderIndex"],"0x1338":["FD","1","DoubleExposureMeterset"],"0x133A":["FD","4","DoubleExposureFieldDelta"],"0x1401":["SQ","1","BrachyTaskSequence"],"0x1402":["DS","1","ContinuationStartTotalReferenceAirKerma"],"0x1403":["DS","1","ContinuationEndTotalReferenceAirKerma"],"0x1404":["IS","1","ContinuationPulseNumber"],"0x1405":["SQ","1","ChannelDeliveryOrderSequence"],"0x1406":["IS","1","ReferencedChannelNumber"],"0x1407":["DS","1","StartCumulativeTimeWeight"],"0x1408":["DS","1","EndCumulativeTimeWeight"],"0x1409":["SQ","1","OmittedChannelSequence"],"0x140A":["CS","1","ReasonForChannelOmission"],"0x140B":["LO","1","ReasonForChannelOmissionDescription"],"0x140C":["IS","1","ChannelDeliveryOrderIndex"],"0x140D":["SQ","1","ChannelDeliveryContinuationSequence"],"0x140E":["SQ","1","OmittedApplicationSetupSequence"]},"0x0076":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["LO","1","ImplantAssemblyTemplateName"],"0x0003":["LO","1","ImplantAssemblyTemplateIssuer"],"0x0006":["LO","1","ImplantAssemblyTemplateVersion"],"0x0008":["SQ","1","ReplacedImplantAssemblyTemplateSequence"],"0x000A":["CS","1","ImplantAssemblyTemplateType"],"0x000C":["SQ","1","OriginalImplantAssemblyTemplateSequence"],"0x000E":["SQ","1","DerivationImplantAssemblyTemplateSequence"],"0x0010":["SQ","1","ImplantAssemblyTemplateTargetAnatomySequence"],"0x0020":["SQ","1","ProcedureTypeCodeSequence"],"0x0030":["LO","1","SurgicalTechnique"],"0x0032":["SQ","1","ComponentTypesSequence"],"0x0034":["SQ","1","ComponentTypeCodeSequence"],"0x0036":["CS","1","ExclusiveComponentType"],"0x0038":["CS","1","MandatoryComponentType"],"0x0040":["SQ","1","ComponentSequence"],"0x0055":["US","1","ComponentID"],"0x0060":["SQ","1","ComponentAssemblySequence"],"0x0070":["US","1","Component1ReferencedID"],"0x0080":["US","1","Component1ReferencedMatingFeatureSetID"],"0x0090":["US","1","Component1ReferencedMatingFeatureID"],"0x00A0":["US","1","Component2ReferencedID"],"0x00B0":["US","1","Component2ReferencedMatingFeatureSetID"],"0x00C0":["US","1","Component2ReferencedMatingFeatureID"]},"0x0078":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["LO","1","ImplantTemplateGroupName"],"0x0010":["ST","1","ImplantTemplateGroupDescription"],"0x0020":["LO","1","ImplantTemplateGroupIssuer"],"0x0024":["LO","1","ImplantTemplateGroupVersion"],"0x0026":["SQ","1","ReplacedImplantTemplateGroupSequence"],"0x0028":["SQ","1","ImplantTemplateGroupTargetAnatomySequence"],"0x002A":["SQ","1","ImplantTemplateGroupMembersSequence"],"0x002E":["US","1","ImplantTemplateGroupMemberID"],"0x0050":["FD","3","ThreeDImplantTemplateGroupMemberMatchingPoint"],"0x0060":["FD","9","ThreeDImplantTemplateGroupMemberMatchingAxes"],"0x0070":["SQ","1","ImplantTemplateGroupMemberMatching2DCoordinatesSequence"],"0x0090":["FD","2","TwoDImplantTemplateGroupMemberMatchingPoint"],"0x00A0":["FD","4","TwoDImplantTemplateGroupMemberMatchingAxes"],"0x00B0":["SQ","1","ImplantTemplateGroupVariationDimensionSequence"],"0x00B2":["LO","1","ImplantTemplateGroupVariationDimensionName"],"0x00B4":["SQ","1","ImplantTemplateGroupVariationDimensionRankSequence"],"0x00B6":["US","1","ReferencedImplantTemplateGroupMemberID"],"0x00B8":["US","1","ImplantTemplateGroupVariationDimensionRank"]},"0x0080":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["SQ","1","SurfaceScanAcquisitionTypeCodeSequence"],"0x0002":["SQ","1","SurfaceScanModeCodeSequence"],"0x0003":["SQ","1","RegistrationMethodCodeSequence"],"0x0004":["FD","1","ShotDurationTime"],"0x0005":["FD","1","ShotOffsetTime"],"0x0006":["US","1-n","SurfacePointPresentationValueData"],"0x0007":["US","3-3n","SurfacePointColorCIELabValueData"],"0x0008":["SQ","1","UVMappingSequence"],"0x0009":["SH","1","TextureLabel"],"0x0010":["OF","1","UValueData"],"0x0011":["OF","1","VValueData"],"0x0012":["SQ","1","ReferencedTextureSequence"],"0x0013":["SQ","1","ReferencedSurfaceDataSequence"]},"0x0082":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["CS","1","AssessmentSummary"],"0x0003":["UT","1","AssessmentSummaryDescription"],"0x0004":["SQ","1","AssessedSOPInstanceSequence"],"0x0005":["SQ","1","ReferencedComparisonSOPInstanceSequence"],"0x0006":["UL","1","NumberOfAssessmentObservations"],"0x0007":["SQ","1","AssessmentObservationsSequence"],"0x0008":["CS","1","ObservationSignificance"],"0x000A":["UT","1","ObservationDescription"],"0x000C":["SQ","1","StructuredConstraintObservationSequence"],"0x0010":["SQ","1","AssessedAttributeValueSequence"],"0x0016":["LO","1","AssessmentSetID"],"0x0017":["SQ","1","AssessmentRequesterSequence"],"0x0018":["LO","1","SelectorAttributeName"],"0x0019":["LO","1","SelectorAttributeKeyword"],"0x0021":["SQ","1","AssessmentTypeCodeSequence"],"0x0022":["SQ","1","ObservationBasisCodeSequence"],"0x0023":["LO","1","AssessmentLabel"],"0x0032":["CS","1","ConstraintType"],"0x0033":["UT","1","SpecificationSelectionGuidance"],"0x0034":["SQ","1","ConstraintValueSequence"],"0x0035":["SQ","1","RecommendedDefaultValueSequence"],"0x0036":["CS","1","ConstraintViolationSignificance"],"0x0037":["UT","1","ConstraintViolationCondition"],"0x0038":["CS","1","ModifiableConstraintFlag"]},"0x0088":{"0x0000":["UL","1","GenericGroupLength"],"0x0130":["SH","1","StorageMediaFileSetID"],"0x0140":["UI","1","StorageMediaFileSetUID"],"0x0200":["SQ","1","IconImageSequence"],"0x0904":["LO","1","TopicTitle"],"0x0906":["ST","1","TopicSubject"],"0x0910":["LO","1","TopicAuthor"],"0x0912":["LO","1-32","TopicKeywords"]},"0x0100":{"0x0000":["UL","1","GenericGroupLength"],"0x0410":["CS","1","SOPInstanceStatus"],"0x0420":["DT","1","SOPAuthorizationDateTime"],"0x0424":["LT","1","SOPAuthorizationComment"],"0x0426":["LO","1","AuthorizationEquipmentCertificationNumber"]},"0x0400":{"0x0000":["UL","1","GenericGroupLength"],"0x0005":["US","1","MACIDNumber"],"0x0010":["UI","1","MACCalculationTransferSyntaxUID"],"0x0015":["CS","1","MACAlgorithm"],"0x0020":["AT","1-n","DataElementsSigned"],"0x0100":["UI","1","DigitalSignatureUID"],"0x0105":["DT","1","DigitalSignatureDateTime"],"0x0110":["CS","1","CertificateType"],"0x0115":["OB","1","CertificateOfSigner"],"0x0120":["OB","1","Signature"],"0x0305":["CS","1","CertifiedTimestampType"],"0x0310":["OB","1","CertifiedTimestamp"],"0x0315":["FL","1",""],"0x0401":["SQ","1","DigitalSignaturePurposeCodeSequence"],"0x0402":["SQ","1","ReferencedDigitalSignatureSequence"],"0x0403":["SQ","1","ReferencedSOPInstanceMACSequence"],"0x0404":["OB","1","MAC"],"0x0500":["SQ","1","EncryptedAttributesSequence"],"0x0510":["UI","1","EncryptedContentTransferSyntaxUID"],"0x0520":["OB","1","EncryptedContent"],"0x0550":["SQ","1","ModifiedAttributesSequence"],"0x0551":["SQ","1","NonconformingModifiedAttributesSequence"],"0x0552":["OB","1","NonconformingDataElementValue"],"0x0561":["SQ","1","OriginalAttributesSequence"],"0x0562":["DT","1","AttributeModificationDateTime"],"0x0563":["LO","1","ModifyingSystem"],"0x0564":["LO","1","SourceOfPreviousValues"],"0x0565":["CS","1","ReasonForTheAttributeModification"],"0x0600":["CS","1","InstanceOriginStatus"]},"0x1000":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["US","3","EscapeTriplet"],"0x0011":["US","3","RunLengthTriplet"],"0x0012":["US","1","HuffmanTableSize"],"0x0013":["US","3","HuffmanTableTriplet"],"0x0014":["US","1","ShiftTableSize"],"0x0015":["US","3","ShiftTableTriplet"]},"0x1010":{"0x0000":["UL","1","GenericGroupLength"],"0x0004":["US","1-n","ZonalMap"]},"0x2000":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["IS","1","NumberOfCopies"],"0x001E":["SQ","1","PrinterConfigurationSequence"],"0x0020":["CS","1","PrintPriority"],"0x0030":["CS","1","MediumType"],"0x0040":["CS","1","FilmDestination"],"0x0050":["LO","1","FilmSessionLabel"],"0x0060":["IS","1","MemoryAllocation"],"0x0061":["IS","1","MaximumMemoryAllocation"],"0x0062":["CS","1","ColorImagePrintingFlag"],"0x0063":["CS","1","CollationFlag"],"0x0065":["CS","1","AnnotationFlag"],"0x0067":["CS","1","ImageOverlayFlag"],"0x0069":["CS","1","PresentationLUTFlag"],"0x006A":["CS","1","ImageBoxPresentationLUTFlag"],"0x00A0":["US","1","MemoryBitDepth"],"0x00A1":["US","1","PrintingBitDepth"],"0x00A2":["SQ","1","MediaInstalledSequence"],"0x00A4":["SQ","1","OtherMediaAvailableSequence"],"0x00A8":["SQ","1","SupportedImageDisplayFormatsSequence"],"0x0500":["SQ","1","ReferencedFilmBoxSequence"],"0x0510":["SQ","1","ReferencedStoredPrintSequence"]},"0x2010":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["ST","1","ImageDisplayFormat"],"0x0030":["CS","1","AnnotationDisplayFormatID"],"0x0040":["CS","1","FilmOrientation"],"0x0050":["CS","1","FilmSizeID"],"0x0052":["CS","1","PrinterResolutionID"],"0x0054":["CS","1","DefaultPrinterResolutionID"],"0x0060":["CS","1","MagnificationType"],"0x0080":["CS","1","SmoothingType"],"0x00A6":["CS","1","DefaultMagnificationType"],"0x00A7":["CS","1-n","OtherMagnificationTypesAvailable"],"0x00A8":["CS","1","DefaultSmoothingType"],"0x00A9":["CS","1-n","OtherSmoothingTypesAvailable"],"0x0100":["CS","1","BorderDensity"],"0x0110":["CS","1","EmptyImageDensity"],"0x0120":["US","1","MinDensity"],"0x0130":["US","1","MaxDensity"],"0x0140":["CS","1","Trim"],"0x0150":["ST","1","ConfigurationInformation"],"0x0152":["LT","1","ConfigurationInformationDescription"],"0x0154":["IS","1","MaximumCollatedFilms"],"0x015E":["US","1","Illumination"],"0x0160":["US","1","ReflectedAmbientLight"],"0x0376":["DS","2","PrinterPixelSpacing"],"0x0500":["SQ","1","ReferencedFilmSessionSequence"],"0x0510":["SQ","1","ReferencedImageBoxSequence"],"0x0520":["SQ","1","ReferencedBasicAnnotationBoxSequence"]},"0x2020":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["US","1","ImageBoxPosition"],"0x0020":["CS","1","Polarity"],"0x0030":["DS","1","RequestedImageSize"],"0x0040":["CS","1","RequestedDecimateCropBehavior"],"0x0050":["CS","1","RequestedResolutionID"],"0x00A0":["CS","1","RequestedImageSizeFlag"],"0x00A2":["CS","1","DecimateCropResult"],"0x0110":["SQ","1","BasicGrayscaleImageSequence"],"0x0111":["SQ","1","BasicColorImageSequence"],"0x0130":["SQ","1","ReferencedImageOverlayBoxSequence"],"0x0140":["SQ","1","ReferencedVOILUTBoxSequence"]},"0x2030":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["US","1","AnnotationPosition"],"0x0020":["LO","1","TextString"]},"0x2040":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["SQ","1","ReferencedOverlayPlaneSequence"],"0x0011":["US","1-99","ReferencedOverlayPlaneGroups"],"0x0020":["SQ","1","OverlayPixelDataSequence"],"0x0060":["CS","1","OverlayMagnificationType"],"0x0070":["CS","1","OverlaySmoothingType"],"0x0072":["CS","1","OverlayOrImageMagnification"],"0x0074":["US","1","MagnifyToNumberOfColumns"],"0x0080":["CS","1","OverlayForegroundDensity"],"0x0082":["CS","1","OverlayBackgroundDensity"],"0x0090":["CS","1","OverlayMode"],"0x0100":["CS","1","ThresholdDensity"],"0x0500":["SQ","1","ReferencedImageBoxSequenceRetired"]},"0x2050":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["SQ","1","PresentationLUTSequence"],"0x0020":["CS","1","PresentationLUTShape"],"0x0500":["SQ","1","ReferencedPresentationLUTSequence"]},"0x2100":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["SH","1","PrintJobID"],"0x0020":["CS","1","ExecutionStatus"],"0x0030":["CS","1","ExecutionStatusInfo"],"0x0040":["DA","1","CreationDate"],"0x0050":["TM","1","CreationTime"],"0x0070":["AE","1","Originator"],"0x0140":["AE","1","DestinationAE"],"0x0160":["SH","1","OwnerID"],"0x0170":["IS","1","NumberOfFilms"],"0x0500":["SQ","1","ReferencedPrintJobSequencePullStoredPrint"]},"0x2110":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["CS","1","PrinterStatus"],"0x0020":["CS","1","PrinterStatusInfo"],"0x0030":["LO","1","PrinterName"],"0x0099":["SH","1","PrintQueueID"]},"0x2120":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["CS","1","QueueStatus"],"0x0050":["SQ","1","PrintJobDescriptionSequence"],"0x0070":["SQ","1","ReferencedPrintJobSequence"]},"0x2130":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["SQ","1","PrintManagementCapabilitiesSequence"],"0x0015":["SQ","1","PrinterCharacteristicsSequence"],"0x0030":["SQ","1","FilmBoxContentSequence"],"0x0040":["SQ","1","ImageBoxContentSequence"],"0x0050":["SQ","1","AnnotationContentSequence"],"0x0060":["SQ","1","ImageOverlayBoxContentSequence"],"0x0080":["SQ","1","PresentationLUTContentSequence"],"0x00A0":["SQ","1","ProposedStudySequence"],"0x00C0":["SQ","1","OriginalImageSequence"]},"0x2200":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["CS","1","LabelUsingInformationExtractedFromInstances"],"0x0002":["UT","1","LabelText"],"0x0003":["CS","1","LabelStyleSelection"],"0x0004":["LT","1","MediaDisposition"],"0x0005":["LT","1","BarcodeValue"],"0x0006":["CS","1","BarcodeSymbology"],"0x0007":["CS","1","AllowMediaSplitting"],"0x0008":["CS","1","IncludeNonDICOMObjects"],"0x0009":["CS","1","IncludeDisplayApplication"],"0x000A":["CS","1","PreserveCompositeInstancesAfterMediaCreation"],"0x000B":["US","1","TotalNumberOfPiecesOfMediaCreated"],"0x000C":["LO","1","RequestedMediaApplicationProfile"],"0x000D":["SQ","1","ReferencedStorageMediaSequence"],"0x000E":["AT","1-n","FailureAttributes"],"0x000F":["CS","1","AllowLossyCompression"],"0x0020":["CS","1","RequestPriority"]},"0x3002":{"0x0000":["UL","1","GenericGroupLength"],"0x0002":["SH","1","RTImageLabel"],"0x0003":["LO","1","RTImageName"],"0x0004":["ST","1","RTImageDescription"],"0x000A":["CS","1","ReportedValuesOrigin"],"0x000C":["CS","1","RTImagePlane"],"0x000D":["DS","3","XRayImageReceptorTranslation"],"0x000E":["DS","1","XRayImageReceptorAngle"],"0x0010":["DS","6","RTImageOrientation"],"0x0011":["DS","2","ImagePlanePixelSpacing"],"0x0012":["DS","2","RTImagePosition"],"0x0020":["SH","1","RadiationMachineName"],"0x0022":["DS","1","RadiationMachineSAD"],"0x0024":["DS","1","RadiationMachineSSD"],"0x0026":["DS","1","RTImageSID"],"0x0028":["DS","1","SourceToReferenceObjectDistance"],"0x0029":["IS","1","FractionNumber"],"0x0030":["SQ","1","ExposureSequence"],"0x0032":["DS","1","MetersetExposure"],"0x0034":["DS","4","DiaphragmPosition"],"0x0040":["SQ","1","FluenceMapSequence"],"0x0041":["CS","1","FluenceDataSource"],"0x0042":["DS","1","FluenceDataScale"],"0x0050":["SQ","1","PrimaryFluenceModeSequence"],"0x0051":["CS","1","FluenceMode"],"0x0052":["SH","1","FluenceModeID"]},"0x3004":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["CS","1","DVHType"],"0x0002":["CS","1","DoseUnits"],"0x0004":["CS","1","DoseType"],"0x0005":["CS","1","SpatialTransformOfDose"],"0x0006":["LO","1","DoseComment"],"0x0008":["DS","3","NormalizationPoint"],"0x000A":["CS","1","DoseSummationType"],"0x000C":["DS","2-n","GridFrameOffsetVector"],"0x000E":["DS","1","DoseGridScaling"],"0x0010":["SQ","1","RTDoseROISequence"],"0x0012":["DS","1","DoseValue"],"0x0014":["CS","1-3","TissueHeterogeneityCorrection"],"0x0040":["DS","3","DVHNormalizationPoint"],"0x0042":["DS","1","DVHNormalizationDoseValue"],"0x0050":["SQ","1","DVHSequence"],"0x0052":["DS","1","DVHDoseScaling"],"0x0054":["CS","1","DVHVolumeUnits"],"0x0056":["IS","1","DVHNumberOfBins"],"0x0058":["DS","2-2n","DVHData"],"0x0060":["SQ","1","DVHReferencedROISequence"],"0x0062":["CS","1","DVHROIContributionType"],"0x0070":["DS","1","DVHMinimumDose"],"0x0072":["DS","1","DVHMaximumDose"],"0x0074":["DS","1","DVHMeanDose"]},"0x3006":{"0x0000":["UL","1","GenericGroupLength"],"0x0002":["SH","1","StructureSetLabel"],"0x0004":["LO","1","StructureSetName"],"0x0006":["ST","1","StructureSetDescription"],"0x0008":["DA","1","StructureSetDate"],"0x0009":["TM","1","StructureSetTime"],"0x0010":["SQ","1","ReferencedFrameOfReferenceSequence"],"0x0012":["SQ","1","RTReferencedStudySequence"],"0x0014":["SQ","1","RTReferencedSeriesSequence"],"0x0016":["SQ","1","ContourImageSequence"],"0x0018":["SQ","1","PredecessorStructureSetSequence"],"0x0020":["SQ","1","StructureSetROISequence"],"0x0022":["IS","1","ROINumber"],"0x0024":["UI","1","ReferencedFrameOfReferenceUID"],"0x0026":["LO","1","ROIName"],"0x0028":["ST","1","ROIDescription"],"0x002A":["IS","3","ROIDisplayColor"],"0x002C":["DS","1","ROIVolume"],"0x0030":["SQ","1","RTRelatedROISequence"],"0x0033":["CS","1","RTROIRelationship"],"0x0036":["CS","1","ROIGenerationAlgorithm"],"0x0037":["SQ","1","ROIDerivationAlgorithmIdentificationSequence"],"0x0038":["LO","1","ROIGenerationDescription"],"0x0039":["SQ","1","ROIContourSequence"],"0x0040":["SQ","1","ContourSequence"],"0x0042":["CS","1","ContourGeometricType"],"0x0044":["DS","1","ContourSlabThickness"],"0x0045":["DS","3","ContourOffsetVector"],"0x0046":["IS","1","NumberOfContourPoints"],"0x0048":["IS","1","ContourNumber"],"0x0049":["IS","1-n","AttachedContours"],"0x004A":["SQ","1","SourcePixelPlanesCharacteristicsSequence"],"0x0050":["DS","3-3n","ContourData"],"0x0080":["SQ","1","RTROIObservationsSequence"],"0x0082":["IS","1","ObservationNumber"],"0x0084":["IS","1","ReferencedROINumber"],"0x0085":["SH","1","ROIObservationLabel"],"0x0086":["SQ","1","RTROIIdentificationCodeSequence"],"0x0088":["ST","1","ROIObservationDescription"],"0x00A0":["SQ","1","RelatedRTROIObservationsSequence"],"0x00A4":["CS","1","RTROIInterpretedType"],"0x00A6":["PN","1","ROIInterpreter"],"0x00B0":["SQ","1","ROIPhysicalPropertiesSequence"],"0x00B2":["CS","1","ROIPhysicalProperty"],"0x00B4":["DS","1","ROIPhysicalPropertyValue"],"0x00B6":["SQ","1","ROIElementalCompositionSequence"],"0x00B7":["US","1","ROIElementalCompositionAtomicNumber"],"0x00B8":["FL","1","ROIElementalCompositionAtomicMassFraction"],"0x00B9":["SQ","1","AdditionalRTROIIdentificationCodeSequence"],"0x00C0":["SQ","1","FrameOfReferenceRelationshipSequence"],"0x00C2":["UI","1","RelatedFrameOfReferenceUID"],"0x00C4":["CS","1","FrameOfReferenceTransformationType"],"0x00C6":["DS","16","FrameOfReferenceTransformationMatrix"],"0x00C8":["LO","1","FrameOfReferenceTransformationComment"],"0x00C9":["SQ","1","PatientLocationCoordinatesSequence"],"0x00CA":["SQ","1","PatientLocationCoordinatesCodeSequence"],"0x00CB":["SQ","1","PatientSupportPositionSequence"]},"0x3008":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["SQ","1","MeasuredDoseReferenceSequence"],"0x0012":["ST","1","MeasuredDoseDescription"],"0x0014":["CS","1","MeasuredDoseType"],"0x0016":["DS","1","MeasuredDoseValue"],"0x0020":["SQ","1","TreatmentSessionBeamSequence"],"0x0021":["SQ","1","TreatmentSessionIonBeamSequence"],"0x0022":["IS","1","CurrentFractionNumber"],"0x0024":["DA","1","TreatmentControlPointDate"],"0x0025":["TM","1","TreatmentControlPointTime"],"0x002A":["CS","1","TreatmentTerminationStatus"],"0x002B":["SH","1","TreatmentTerminationCode"],"0x002C":["CS","1","TreatmentVerificationStatus"],"0x0030":["SQ","1","ReferencedTreatmentRecordSequence"],"0x0032":["DS","1","SpecifiedPrimaryMeterset"],"0x0033":["DS","1","SpecifiedSecondaryMeterset"],"0x0036":["DS","1","DeliveredPrimaryMeterset"],"0x0037":["DS","1","DeliveredSecondaryMeterset"],"0x003A":["DS","1","SpecifiedTreatmentTime"],"0x003B":["DS","1","DeliveredTreatmentTime"],"0x0040":["SQ","1","ControlPointDeliverySequence"],"0x0041":["SQ","1","IonControlPointDeliverySequence"],"0x0042":["DS","1","SpecifiedMeterset"],"0x0044":["DS","1","DeliveredMeterset"],"0x0045":["FL","1","MetersetRateSet"],"0x0046":["FL","1","MetersetRateDelivered"],"0x0047":["FL","1-n","ScanSpotMetersetsDelivered"],"0x0048":["DS","1","DoseRateDelivered"],"0x0050":["SQ","1","TreatmentSummaryCalculatedDoseReferenceSequence"],"0x0052":["DS","1","CumulativeDoseToDoseReference"],"0x0054":["DA","1","FirstTreatmentDate"],"0x0056":["DA","1","MostRecentTreatmentDate"],"0x005A":["IS","1","NumberOfFractionsDelivered"],"0x0060":["SQ","1","OverrideSequence"],"0x0061":["AT","1","ParameterSequencePointer"],"0x0062":["AT","1","OverrideParameterPointer"],"0x0063":["IS","1","ParameterItemIndex"],"0x0064":["IS","1","MeasuredDoseReferenceNumber"],"0x0065":["AT","1","ParameterPointer"],"0x0066":["ST","1","OverrideReason"],"0x0067":["US","1","ParameterValueNumber"],"0x0068":["SQ","1","CorrectedParameterSequence"],"0x006A":["FL","1","CorrectionValue"],"0x0070":["SQ","1","CalculatedDoseReferenceSequence"],"0x0072":["IS","1","CalculatedDoseReferenceNumber"],"0x0074":["ST","1","CalculatedDoseReferenceDescription"],"0x0076":["DS","1","CalculatedDoseReferenceDoseValue"],"0x0078":["DS","1","StartMeterset"],"0x007A":["DS","1","EndMeterset"],"0x0080":["SQ","1","ReferencedMeasuredDoseReferenceSequence"],"0x0082":["IS","1","ReferencedMeasuredDoseReferenceNumber"],"0x0090":["SQ","1","ReferencedCalculatedDoseReferenceSequence"],"0x0092":["IS","1","ReferencedCalculatedDoseReferenceNumber"],"0x00A0":["SQ","1","BeamLimitingDeviceLeafPairsSequence"],"0x00B0":["SQ","1","RecordedWedgeSequence"],"0x00C0":["SQ","1","RecordedCompensatorSequence"],"0x00D0":["SQ","1","RecordedBlockSequence"],"0x00D1":["SQ","1","RecordedBlockSlabSequence"],"0x00E0":["SQ","1","TreatmentSummaryMeasuredDoseReferenceSequence"],"0x00F0":["SQ","1","RecordedSnoutSequence"],"0x00F2":["SQ","1","RecordedRangeShifterSequence"],"0x00F4":["SQ","1","RecordedLateralSpreadingDeviceSequence"],"0x00F6":["SQ","1","RecordedRangeModulatorSequence"],"0x0100":["SQ","1","RecordedSourceSequence"],"0x0105":["LO","1","SourceSerialNumber"],"0x0110":["SQ","1","TreatmentSessionApplicationSetupSequence"],"0x0116":["CS","1","ApplicationSetupCheck"],"0x0120":["SQ","1","RecordedBrachyAccessoryDeviceSequence"],"0x0122":["IS","1","ReferencedBrachyAccessoryDeviceNumber"],"0x0130":["SQ","1","RecordedChannelSequence"],"0x0132":["DS","1","SpecifiedChannelTotalTime"],"0x0134":["DS","1","DeliveredChannelTotalTime"],"0x0136":["IS","1","SpecifiedNumberOfPulses"],"0x0138":["IS","1","DeliveredNumberOfPulses"],"0x013A":["DS","1","SpecifiedPulseRepetitionInterval"],"0x013C":["DS","1","DeliveredPulseRepetitionInterval"],"0x0140":["SQ","1","RecordedSourceApplicatorSequence"],"0x0142":["IS","1","ReferencedSourceApplicatorNumber"],"0x0150":["SQ","1","RecordedChannelShieldSequence"],"0x0152":["IS","1","ReferencedChannelShieldNumber"],"0x0160":["SQ","1","BrachyControlPointDeliveredSequence"],"0x0162":["DA","1","SafePositionExitDate"],"0x0164":["TM","1","SafePositionExitTime"],"0x0166":["DA","1","SafePositionReturnDate"],"0x0168":["TM","1","SafePositionReturnTime"],"0x0171":["SQ","1","PulseSpecificBrachyControlPointDeliveredSequence"],"0x0172":["US","1","PulseNumber"],"0x0173":["SQ","1","BrachyPulseControlPointDeliveredSequence"],"0x0200":["CS","1","CurrentTreatmentStatus"],"0x0202":["ST","1","TreatmentStatusComment"],"0x0220":["SQ","1","FractionGroupSummarySequence"],"0x0223":["IS","1","ReferencedFractionNumber"],"0x0224":["CS","1","FractionGroupType"],"0x0230":["CS","1","BeamStopperPosition"],"0x0240":["SQ","1","FractionStatusSummarySequence"],"0x0250":["DA","1","TreatmentDate"],"0x0251":["TM","1","TreatmentTime"]},"0x300A":{"0x0000":["UL","1","GenericGroupLength"],"0x0002":["SH","1","RTPlanLabel"],"0x0003":["LO","1","RTPlanName"],"0x0004":["ST","1","RTPlanDescription"],"0x0006":["DA","1","RTPlanDate"],"0x0007":["TM","1","RTPlanTime"],"0x0009":["LO","1-n","TreatmentProtocols"],"0x000A":["CS","1","PlanIntent"],"0x000B":["LO","1-n","TreatmentSites"],"0x000C":["CS","1","RTPlanGeometry"],"0x000E":["ST","1","PrescriptionDescription"],"0x0010":["SQ","1","DoseReferenceSequence"],"0x0012":["IS","1","DoseReferenceNumber"],"0x0013":["UI","1","DoseReferenceUID"],"0x0014":["CS","1","DoseReferenceStructureType"],"0x0015":["CS","1","NominalBeamEnergyUnit"],"0x0016":["LO","1","DoseReferenceDescription"],"0x0018":["DS","3","DoseReferencePointCoordinates"],"0x001A":["DS","1","NominalPriorDose"],"0x0020":["CS","1","DoseReferenceType"],"0x0021":["DS","1","ConstraintWeight"],"0x0022":["DS","1","DeliveryWarningDose"],"0x0023":["DS","1","DeliveryMaximumDose"],"0x0025":["DS","1","TargetMinimumDose"],"0x0026":["DS","1","TargetPrescriptionDose"],"0x0027":["DS","1","TargetMaximumDose"],"0x0028":["DS","1","TargetUnderdoseVolumeFraction"],"0x002A":["DS","1","OrganAtRiskFullVolumeDose"],"0x002B":["DS","1","OrganAtRiskLimitDose"],"0x002C":["DS","1","OrganAtRiskMaximumDose"],"0x002D":["DS","1","OrganAtRiskOverdoseVolumeFraction"],"0x0040":["SQ","1","ToleranceTableSequence"],"0x0042":["IS","1","ToleranceTableNumber"],"0x0043":["SH","1","ToleranceTableLabel"],"0x0044":["DS","1","GantryAngleTolerance"],"0x0046":["DS","1","BeamLimitingDeviceAngleTolerance"],"0x0048":["SQ","1","BeamLimitingDeviceToleranceSequence"],"0x004A":["DS","1","BeamLimitingDevicePositionTolerance"],"0x004B":["FL","1","SnoutPositionTolerance"],"0x004C":["DS","1","PatientSupportAngleTolerance"],"0x004E":["DS","1","TableTopEccentricAngleTolerance"],"0x004F":["FL","1","TableTopPitchAngleTolerance"],"0x0050":["FL","1","TableTopRollAngleTolerance"],"0x0051":["DS","1","TableTopVerticalPositionTolerance"],"0x0052":["DS","1","TableTopLongitudinalPositionTolerance"],"0x0053":["DS","1","TableTopLateralPositionTolerance"],"0x0055":["CS","1","RTPlanRelationship"],"0x0070":["SQ","1","FractionGroupSequence"],"0x0071":["IS","1","FractionGroupNumber"],"0x0072":["LO","1","FractionGroupDescription"],"0x0078":["IS","1","NumberOfFractionsPlanned"],"0x0079":["IS","1","NumberOfFractionPatternDigitsPerDay"],"0x007A":["IS","1","RepeatFractionCycleLength"],"0x007B":["LT","1","FractionPattern"],"0x0080":["IS","1","NumberOfBeams"],"0x0082":["DS","3","BeamDoseSpecificationPoint"],"0x0083":["UI","1","ReferencedDoseReferenceUID"],"0x0084":["DS","1","BeamDose"],"0x0086":["DS","1","BeamMeterset"],"0x0088":["FL","1","BeamDosePointDepth"],"0x0089":["FL","1","BeamDosePointEquivalentDepth"],"0x008A":["FL","1","BeamDosePointSSD"],"0x008B":["CS","1","BeamDoseMeaning"],"0x008C":["SQ","1","BeamDoseVerificationControlPointSequence"],"0x008D":["FL","1","AverageBeamDosePointDepth"],"0x008E":["FL","1","AverageBeamDosePointEquivalentDepth"],"0x008F":["FL","1","AverageBeamDosePointSSD"],"0x0090":["CS","1","BeamDoseType"],"0x0091":["DS","1","AlternateBeamDose"],"0x0092":["CS","1","AlternateBeamDoseType"],"0x0093":["CS","1","DepthValueAveragingFlag"],"0x0094":["DS","1","BeamDosePointSourceToExternalContourDistance"],"0x00A0":["IS","1","NumberOfBrachyApplicationSetups"],"0x00A2":["DS","3","BrachyApplicationSetupDoseSpecificationPoint"],"0x00A4":["DS","1","BrachyApplicationSetupDose"],"0x00B0":["SQ","1","BeamSequence"],"0x00B2":["SH","1","TreatmentMachineName"],"0x00B3":["CS","1","PrimaryDosimeterUnit"],"0x00B4":["DS","1","SourceAxisDistance"],"0x00B6":["SQ","1","BeamLimitingDeviceSequence"],"0x00B8":["CS","1","RTBeamLimitingDeviceType"],"0x00BA":["DS","1","SourceToBeamLimitingDeviceDistance"],"0x00BB":["FL","1","IsocenterToBeamLimitingDeviceDistance"],"0x00BC":["IS","1","NumberOfLeafJawPairs"],"0x00BE":["DS","3-n","LeafPositionBoundaries"],"0x00C0":["IS","1","BeamNumber"],"0x00C2":["LO","1","BeamName"],"0x00C3":["ST","1","BeamDescription"],"0x00C4":["CS","1","BeamType"],"0x00C5":["FD","1","BeamDeliveryDurationLimit"],"0x00C6":["CS","1","RadiationType"],"0x00C7":["CS","1","HighDoseTechniqueType"],"0x00C8":["IS","1","ReferenceImageNumber"],"0x00CA":["SQ","1","PlannedVerificationImageSequence"],"0x00CC":["LO","1-n","ImagingDeviceSpecificAcquisitionParameters"],"0x00CE":["CS","1","TreatmentDeliveryType"],"0x00D0":["IS","1","NumberOfWedges"],"0x00D1":["SQ","1","WedgeSequence"],"0x00D2":["IS","1","WedgeNumber"],"0x00D3":["CS","1","WedgeType"],"0x00D4":["SH","1","WedgeID"],"0x00D5":["IS","1","WedgeAngle"],"0x00D6":["DS","1","WedgeFactor"],"0x00D7":["FL","1","TotalWedgeTrayWaterEquivalentThickness"],"0x00D8":["DS","1","WedgeOrientation"],"0x00D9":["FL","1","IsocenterToWedgeTrayDistance"],"0x00DA":["DS","1","SourceToWedgeTrayDistance"],"0x00DB":["FL","1","WedgeThinEdgePosition"],"0x00DC":["SH","1","BolusID"],"0x00DD":["ST","1","BolusDescription"],"0x00DE":["DS","1","EffectiveWedgeAngle"],"0x00E0":["IS","1","NumberOfCompensators"],"0x00E1":["SH","1","MaterialID"],"0x00E2":["DS","1","TotalCompensatorTrayFactor"],"0x00E3":["SQ","1","CompensatorSequence"],"0x00E4":["IS","1","CompensatorNumber"],"0x00E5":["SH","1","CompensatorID"],"0x00E6":["DS","1","SourceToCompensatorTrayDistance"],"0x00E7":["IS","1","CompensatorRows"],"0x00E8":["IS","1","CompensatorColumns"],"0x00E9":["DS","2","CompensatorPixelSpacing"],"0x00EA":["DS","2","CompensatorPosition"],"0x00EB":["DS","1-n","CompensatorTransmissionData"],"0x00EC":["DS","1-n","CompensatorThicknessData"],"0x00ED":["IS","1","NumberOfBoli"],"0x00EE":["CS","1","CompensatorType"],"0x00EF":["SH","1","CompensatorTrayID"],"0x00F0":["IS","1","NumberOfBlocks"],"0x00F2":["DS","1","TotalBlockTrayFactor"],"0x00F3":["FL","1","TotalBlockTrayWaterEquivalentThickness"],"0x00F4":["SQ","1","BlockSequence"],"0x00F5":["SH","1","BlockTrayID"],"0x00F6":["DS","1","SourceToBlockTrayDistance"],"0x00F7":["FL","1","IsocenterToBlockTrayDistance"],"0x00F8":["CS","1","BlockType"],"0x00F9":["LO","1","AccessoryCode"],"0x00FA":["CS","1","BlockDivergence"],"0x00FB":["CS","1","BlockMountingPosition"],"0x00FC":["IS","1","BlockNumber"],"0x00FE":["LO","1","BlockName"],"0x0100":["DS","1","BlockThickness"],"0x0102":["DS","1","BlockTransmission"],"0x0104":["IS","1","BlockNumberOfPoints"],"0x0106":["DS","2-2n","BlockData"],"0x0107":["SQ","1","ApplicatorSequence"],"0x0108":["SH","1","ApplicatorID"],"0x0109":["CS","1","ApplicatorType"],"0x010A":["LO","1","ApplicatorDescription"],"0x010C":["DS","1","CumulativeDoseReferenceCoefficient"],"0x010E":["DS","1","FinalCumulativeMetersetWeight"],"0x0110":["IS","1","NumberOfControlPoints"],"0x0111":["SQ","1","ControlPointSequence"],"0x0112":["IS","1","ControlPointIndex"],"0x0114":["DS","1","NominalBeamEnergy"],"0x0115":["DS","1","DoseRateSet"],"0x0116":["SQ","1","WedgePositionSequence"],"0x0118":["CS","1","WedgePosition"],"0x011A":["SQ","1","BeamLimitingDevicePositionSequence"],"0x011C":["DS","2-2n","LeafJawPositions"],"0x011E":["DS","1","GantryAngle"],"0x011F":["CS","1","GantryRotationDirection"],"0x0120":["DS","1","BeamLimitingDeviceAngle"],"0x0121":["CS","1","BeamLimitingDeviceRotationDirection"],"0x0122":["DS","1","PatientSupportAngle"],"0x0123":["CS","1","PatientSupportRotationDirection"],"0x0124":["DS","1","TableTopEccentricAxisDistance"],"0x0125":["DS","1","TableTopEccentricAngle"],"0x0126":["CS","1","TableTopEccentricRotationDirection"],"0x0128":["DS","1","TableTopVerticalPosition"],"0x0129":["DS","1","TableTopLongitudinalPosition"],"0x012A":["DS","1","TableTopLateralPosition"],"0x012C":["DS","3","IsocenterPosition"],"0x012E":["DS","3","SurfaceEntryPoint"],"0x0130":["DS","1","SourceToSurfaceDistance"],"0x0131":["FL","1","AverageBeamDosePointSourceToExternalContourDistance"],"0x0132":["FL","1","SourceToExternalContourDistance"],"0x0133":["FL","3","ExternalContourEntryPoint"],"0x0134":["DS","1","CumulativeMetersetWeight"],"0x0140":["FL","1","TableTopPitchAngle"],"0x0142":["CS","1","TableTopPitchRotationDirection"],"0x0144":["FL","1","TableTopRollAngle"],"0x0146":["CS","1","TableTopRollRotationDirection"],"0x0148":["FL","1","HeadFixationAngle"],"0x014A":["FL","1","GantryPitchAngle"],"0x014C":["CS","1","GantryPitchRotationDirection"],"0x014E":["FL","1","GantryPitchAngleTolerance"],"0x0150":["CS","1","FixationEye"],"0x0151":["DS","1","ChairHeadFramePosition"],"0x0152":["DS","1","HeadFixationAngleTolerance"],"0x0153":["DS","1","ChairHeadFramePositionTolerance"],"0x0154":["DS","1","FixationLightAzimuthalAngleTolerance"],"0x0155":["DS","1","FixationLightPolarAngleTolerance"],"0x0180":["SQ","1","PatientSetupSequence"],"0x0182":["IS","1","PatientSetupNumber"],"0x0183":["LO","1","PatientSetupLabel"],"0x0184":["LO","1","PatientAdditionalPosition"],"0x0190":["SQ","1","FixationDeviceSequence"],"0x0192":["CS","1","FixationDeviceType"],"0x0194":["SH","1","FixationDeviceLabel"],"0x0196":["ST","1","FixationDeviceDescription"],"0x0198":["SH","1","FixationDevicePosition"],"0x0199":["FL","1","FixationDevicePitchAngle"],"0x019A":["FL","1","FixationDeviceRollAngle"],"0x01A0":["SQ","1","ShieldingDeviceSequence"],"0x01A2":["CS","1","ShieldingDeviceType"],"0x01A4":["SH","1","ShieldingDeviceLabel"],"0x01A6":["ST","1","ShieldingDeviceDescription"],"0x01A8":["SH","1","ShieldingDevicePosition"],"0x01B0":["CS","1","SetupTechnique"],"0x01B2":["ST","1","SetupTechniqueDescription"],"0x01B4":["SQ","1","SetupDeviceSequence"],"0x01B6":["CS","1","SetupDeviceType"],"0x01B8":["SH","1","SetupDeviceLabel"],"0x01BA":["ST","1","SetupDeviceDescription"],"0x01BC":["DS","1","SetupDeviceParameter"],"0x01D0":["ST","1","SetupReferenceDescription"],"0x01D2":["DS","1","TableTopVerticalSetupDisplacement"],"0x01D4":["DS","1","TableTopLongitudinalSetupDisplacement"],"0x01D6":["DS","1","TableTopLateralSetupDisplacement"],"0x0200":["CS","1","BrachyTreatmentTechnique"],"0x0202":["CS","1","BrachyTreatmentType"],"0x0206":["SQ","1","TreatmentMachineSequence"],"0x0210":["SQ","1","SourceSequence"],"0x0212":["IS","1","SourceNumber"],"0x0214":["CS","1","SourceType"],"0x0216":["LO","1","SourceManufacturer"],"0x0218":["DS","1","ActiveSourceDiameter"],"0x021A":["DS","1","ActiveSourceLength"],"0x021B":["SH","1","SourceModelID"],"0x021C":["LO","1","SourceDescription"],"0x0222":["DS","1","SourceEncapsulationNominalThickness"],"0x0224":["DS","1","SourceEncapsulationNominalTransmission"],"0x0226":["LO","1","SourceIsotopeName"],"0x0228":["DS","1","SourceIsotopeHalfLife"],"0x0229":["CS","1","SourceStrengthUnits"],"0x022A":["DS","1","ReferenceAirKermaRate"],"0x022B":["DS","1","SourceStrength"],"0x022C":["DA","1","SourceStrengthReferenceDate"],"0x022E":["TM","1","SourceStrengthReferenceTime"],"0x0230":["SQ","1","ApplicationSetupSequence"],"0x0232":["CS","1","ApplicationSetupType"],"0x0234":["IS","1","ApplicationSetupNumber"],"0x0236":["LO","1","ApplicationSetupName"],"0x0238":["LO","1","ApplicationSetupManufacturer"],"0x0240":["IS","1","TemplateNumber"],"0x0242":["SH","1","TemplateType"],"0x0244":["LO","1","TemplateName"],"0x0250":["DS","1","TotalReferenceAirKerma"],"0x0260":["SQ","1","BrachyAccessoryDeviceSequence"],"0x0262":["IS","1","BrachyAccessoryDeviceNumber"],"0x0263":["SH","1","BrachyAccessoryDeviceID"],"0x0264":["CS","1","BrachyAccessoryDeviceType"],"0x0266":["LO","1","BrachyAccessoryDeviceName"],"0x026A":["DS","1","BrachyAccessoryDeviceNominalThickness"],"0x026C":["DS","1","BrachyAccessoryDeviceNominalTransmission"],"0x0271":["DS","1","ChannelEffectiveLength"],"0x0272":["DS","1","ChannelInnerLength"],"0x0273":["SH","1","AfterloaderChannelID"],"0x0274":["DS","1","SourceApplicatorTipLength"],"0x0280":["SQ","1","ChannelSequence"],"0x0282":["IS","1","ChannelNumber"],"0x0284":["DS","1","ChannelLength"],"0x0286":["DS","1","ChannelTotalTime"],"0x0288":["CS","1","SourceMovementType"],"0x028A":["IS","1","NumberOfPulses"],"0x028C":["DS","1","PulseRepetitionInterval"],"0x0290":["IS","1","SourceApplicatorNumber"],"0x0291":["SH","1","SourceApplicatorID"],"0x0292":["CS","1","SourceApplicatorType"],"0x0294":["LO","1","SourceApplicatorName"],"0x0296":["DS","1","SourceApplicatorLength"],"0x0298":["LO","1","SourceApplicatorManufacturer"],"0x029C":["DS","1","SourceApplicatorWallNominalThickness"],"0x029E":["DS","1","SourceApplicatorWallNominalTransmission"],"0x02A0":["DS","1","SourceApplicatorStepSize"],"0x02A1":["IS","1","ApplicatorShapeReferencedROINumber"],"0x02A2":["IS","1","TransferTubeNumber"],"0x02A4":["DS","1","TransferTubeLength"],"0x02B0":["SQ","1","ChannelShieldSequence"],"0x02B2":["IS","1","ChannelShieldNumber"],"0x02B3":["SH","1","ChannelShieldID"],"0x02B4":["LO","1","ChannelShieldName"],"0x02B8":["DS","1","ChannelShieldNominalThickness"],"0x02BA":["DS","1","ChannelShieldNominalTransmission"],"0x02C8":["DS","1","FinalCumulativeTimeWeight"],"0x02D0":["SQ","1","BrachyControlPointSequence"],"0x02D2":["DS","1","ControlPointRelativePosition"],"0x02D4":["DS","3","ControlPoint3DPosition"],"0x02D6":["DS","1","CumulativeTimeWeight"],"0x02E0":["CS","1","CompensatorDivergence"],"0x02E1":["CS","1","CompensatorMountingPosition"],"0x02E2":["DS","1-n","SourceToCompensatorDistance"],"0x02E3":["FL","1","TotalCompensatorTrayWaterEquivalentThickness"],"0x02E4":["FL","1","IsocenterToCompensatorTrayDistance"],"0x02E5":["FL","1","CompensatorColumnOffset"],"0x02E6":["FL","1-n","IsocenterToCompensatorDistances"],"0x02E7":["FL","1","CompensatorRelativeStoppingPowerRatio"],"0x02E8":["FL","1","CompensatorMillingToolDiameter"],"0x02EA":["SQ","1","IonRangeCompensatorSequence"],"0x02EB":["LT","1","CompensatorDescription"],"0x0302":["IS","1","RadiationMassNumber"],"0x0304":["IS","1","RadiationAtomicNumber"],"0x0306":["SS","1","RadiationChargeState"],"0x0308":["CS","1","ScanMode"],"0x0309":["CS","1","ModulatedScanModeType"],"0x030A":["FL","2","VirtualSourceAxisDistances"],"0x030C":["SQ","1","SnoutSequence"],"0x030D":["FL","1","SnoutPosition"],"0x030F":["SH","1","SnoutID"],"0x0312":["IS","1","NumberOfRangeShifters"],"0x0314":["SQ","1","RangeShifterSequence"],"0x0316":["IS","1","RangeShifterNumber"],"0x0318":["SH","1","RangeShifterID"],"0x0320":["CS","1","RangeShifterType"],"0x0322":["LO","1","RangeShifterDescription"],"0x0330":["IS","1","NumberOfLateralSpreadingDevices"],"0x0332":["SQ","1","LateralSpreadingDeviceSequence"],"0x0334":["IS","1","LateralSpreadingDeviceNumber"],"0x0336":["SH","1","LateralSpreadingDeviceID"],"0x0338":["CS","1","LateralSpreadingDeviceType"],"0x033A":["LO","1","LateralSpreadingDeviceDescription"],"0x033C":["FL","1","LateralSpreadingDeviceWaterEquivalentThickness"],"0x0340":["IS","1","NumberOfRangeModulators"],"0x0342":["SQ","1","RangeModulatorSequence"],"0x0344":["IS","1","RangeModulatorNumber"],"0x0346":["SH","1","RangeModulatorID"],"0x0348":["CS","1","RangeModulatorType"],"0x034A":["LO","1","RangeModulatorDescription"],"0x034C":["SH","1","BeamCurrentModulationID"],"0x0350":["CS","1","PatientSupportType"],"0x0352":["SH","1","PatientSupportID"],"0x0354":["LO","1","PatientSupportAccessoryCode"],"0x0355":["LO","1","TrayAccessoryCode"],"0x0356":["FL","1","FixationLightAzimuthalAngle"],"0x0358":["FL","1","FixationLightPolarAngle"],"0x035A":["FL","1","MetersetRate"],"0x0360":["SQ","1","RangeShifterSettingsSequence"],"0x0362":["LO","1","RangeShifterSetting"],"0x0364":["FL","1","IsocenterToRangeShifterDistance"],"0x0366":["FL","1","RangeShifterWaterEquivalentThickness"],"0x0370":["SQ","1","LateralSpreadingDeviceSettingsSequence"],"0x0372":["LO","1","LateralSpreadingDeviceSetting"],"0x0374":["FL","1","IsocenterToLateralSpreadingDeviceDistance"],"0x0380":["SQ","1","RangeModulatorSettingsSequence"],"0x0382":["FL","1","RangeModulatorGatingStartValue"],"0x0384":["FL","1","RangeModulatorGatingStopValue"],"0x0386":["FL","1","RangeModulatorGatingStartWaterEquivalentThickness"],"0x0388":["FL","1","RangeModulatorGatingStopWaterEquivalentThickness"],"0x038A":["FL","1","IsocenterToRangeModulatorDistance"],"0x038F":["FL","1-n","ScanSpotTimeOffset"],"0x0390":["SH","1","ScanSpotTuneID"],"0x0391":["IS","1-n","ScanSpotPrescribedIndices"],"0x0392":["IS","1","NumberOfScanSpotPositions"],"0x0393":["CS","1","ScanSpotReordered"],"0x0394":["FL","1-n","ScanSpotPositionMap"],"0x0395":["CS","1","ScanSpotReorderingAllowed"],"0x0396":["FL","1-n","ScanSpotMetersetWeights"],"0x0398":["FL","2","ScanningSpotSize"],"0x0399":["FL","2-2n","ScanSpotSizesDelivered"],"0x039A":["IS","1","NumberOfPaintings"],"0x03A0":["SQ","1","IonToleranceTableSequence"],"0x03A2":["SQ","1","IonBeamSequence"],"0x03A4":["SQ","1","IonBeamLimitingDeviceSequence"],"0x03A6":["SQ","1","IonBlockSequence"],"0x03A8":["SQ","1","IonControlPointSequence"],"0x03AA":["SQ","1","IonWedgeSequence"],"0x03AC":["SQ","1","IonWedgePositionSequence"],"0x0401":["SQ","1","ReferencedSetupImageSequence"],"0x0402":["ST","1","SetupImageComment"],"0x0410":["SQ","1","MotionSynchronizationSequence"],"0x0412":["FL","3","ControlPointOrientation"],"0x0420":["SQ","1","GeneralAccessorySequence"],"0x0421":["SH","1","GeneralAccessoryID"],"0x0422":["ST","1","GeneralAccessoryDescription"],"0x0423":["CS","1","GeneralAccessoryType"],"0x0424":["IS","1","GeneralAccessoryNumber"],"0x0425":["FL","1","SourceToGeneralAccessoryDistance"],"0x0426":["DS","1","IsocenterToGeneralAccessoryDistance"],"0x0431":["SQ","1","ApplicatorGeometrySequence"],"0x0432":["CS","1","ApplicatorApertureShape"],"0x0433":["FL","1","ApplicatorOpening"],"0x0434":["FL","1","ApplicatorOpeningX"],"0x0435":["FL","1","ApplicatorOpeningY"],"0x0436":["FL","1","SourceToApplicatorMountingPositionDistance"],"0x0440":["IS","1","NumberOfBlockSlabItems"],"0x0441":["SQ","1","BlockSlabSequence"],"0x0442":["DS","1","BlockSlabThickness"],"0x0443":["US","1","BlockSlabNumber"],"0x0450":["SQ","1","DeviceMotionControlSequence"],"0x0451":["CS","1","DeviceMotionExecutionMode"],"0x0452":["CS","1","DeviceMotionObservationMode"],"0x0453":["SQ","1","DeviceMotionParameterCodeSequence"],"0x0501":["FL","1","DistalDepthFraction"],"0x0502":["FL","1","DistalDepth"],"0x0503":["FL","2","NominalRangeModulationFractions"],"0x0504":["FL","2","NominalRangeModulatedRegionDepths"],"0x0505":["SQ","1","DepthDoseParametersSequence"],"0x0506":["SQ","1","DeliveredDepthDoseParametersSequence"],"0x0507":["FL","1","DeliveredDistalDepthFraction"],"0x0508":["FL","1","DeliveredDistalDepth"],"0x0509":["FL","2","DeliveredNominalRangeModulationFractions"],"0x0510":["FL","2","DeliveredNominalRangeModulatedRegionDepths"],"0x0511":["CS","1","DeliveredReferenceDoseDefinition"],"0x0512":["CS","1","ReferenceDoseDefinition"],"0x0600":["US","1","RTControlPointIndex"],"0x0601":["US","1","RadiationGenerationModeIndex"],"0x0602":["US","1","ReferencedDefinedDeviceIndex"],"0x0603":["US","1","RadiationDoseIdentificationIndex"],"0x0604":["US","1","NumberOfRTControlPoints"],"0x0605":["US","1","ReferencedRadiationGenerationModeIndex"],"0x0606":["US","1","TreatmentPositionIndex"],"0x0607":["US","1","ReferencedDeviceIndex"],"0x0608":["LO","1","TreatmentPositionGroupLabel"],"0x0609":["UI","1","TreatmentPositionGroupUID"],"0x060A":["SQ","1","TreatmentPositionGroupSequence"],"0x060B":["US","1","ReferencedTreatmentPositionIndex"],"0x060C":["US","1","ReferencedRadiationDoseIdentificationIndex"],"0x060D":["FD","1","RTAccessoryHolderWaterEquivalentThickness"],"0x060E":["US","1","ReferencedRTAccessoryHolderDeviceIndex"],"0x060F":["CS","1","RTAccessoryHolderSlotExistenceFlag"],"0x0610":["SQ","1","RTAccessoryHolderSlotSequence"],"0x0611":["LO","1","RTAccessoryHolderSlotID"],"0x0612":["FD","1","RTAccessoryHolderSlotDistance"],"0x0613":["FD","1","RTAccessorySlotDistance"],"0x0614":["SQ","1","RTAccessoryHolderDefinitionSequence"],"0x0615":["LO","1","RTAccessoryDeviceSlotID"],"0x0616":["SQ","1","RTRadiationSequence"],"0x0617":["SQ","1","RadiationDoseSequence"],"0x0618":["SQ","1","RadiationDoseIdentificationSequence"],"0x0619":["LO","1","RadiationDoseIdentificationLabel"],"0x061A":["CS","1","ReferenceDoseType"],"0x061B":["CS","1","PrimaryDoseValueIndicator"],"0x061C":["SQ","1","DoseValuesSequence"],"0x061D":["CS","1-n","DoseValuePurpose"],"0x061E":["FD","3","ReferenceDosePointCoordinates"],"0x061F":["SQ","1","RadiationDoseValuesParametersSequence"],"0x0620":["SQ","1","MetersetToDoseMappingSequence"],"0x0621":["SQ","1","ExpectedInVivoMeasurementValuesSequence"],"0x0622":["US","1","ExpectedInVivoMeasurementValueIndex"],"0x0623":["LO","1","RadiationDoseInVivoMeasurementLabel"],"0x0624":["FD","2","RadiationDoseCentralAxisDisplacement"],"0x0625":["FD","1","RadiationDoseValue"],"0x0626":["FD","1","RadiationDoseSourceToSkinDistance"],"0x0627":["FD","3","RadiationDoseMeasurementPointCoordinates"],"0x0628":["FD","1","RadiationDoseSourceToExternalContourDistance"],"0x0629":["SQ","1","RTToleranceSetSequence"],"0x062A":["LO","1","RTToleranceSetLabel"],"0x062B":["SQ","1","AttributeToleranceValuesSequence"],"0x062C":["FD","1","ToleranceValue"],"0x062D":["SQ","1","PatientSupportPositionToleranceSequence"],"0x062E":["FD","1","TreatmentTimeLimit"],"0x062F":["SQ","1","CArmPhotonElectronControlPointSequence"],"0x0630":["SQ","1","ReferencedRTRadiationSequence"],"0x0631":["SQ","1","ReferencedRTInstanceSequence"],"0x0632":["SQ","1","ReferencedRTPatientSetupSequence"],"0x0634":["FD","1","SourceToPatientSurfaceDistance"],"0x0635":["SQ","1","TreatmentMachineSpecialModeCodeSequence"],"0x0636":["US","1","IntendedNumberOfFractions"],"0x0637":["CS","1","RTRadiationSetIntent"],"0x0638":["CS","1","RTRadiationPhysicalAndGeometricContentDetailFlag"],"0x0639":["CS","1","RTRecordFlag"],"0x063A":["SQ","1","TreatmentDeviceIdentificationSequence"],"0x063B":["SQ","1","ReferencedRTPhysicianIntentSequence"],"0x063C":["FD","1","CumulativeMeterset"],"0x063D":["FD","1","DeliveryRate"],"0x063E":["SQ","1","DeliveryRateUnitSequence"],"0x063F":["SQ","1","TreatmentPositionSequence"],"0x0640":["FD","1","RadiationSourceAxisDistance"],"0x0641":["US","1","NumberOfRTBeamLimitingDevices"],"0x0642":["FD","1","RTBeamLimitingDeviceProximalDistance"],"0x0643":["FD","1","RTBeamLimitingDeviceDistalDistance"],"0x0644":["SQ","1","ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence"],"0x0645":["FD","1","BeamModifierOrientationAngle"],"0x0646":["SQ","1","FixedRTBeamDelimiterDeviceSequence"],"0x0647":["SQ","1","ParallelRTBeamDelimiterDeviceSequence"],"0x0648":["US","1","NumberOfParallelRTBeamDelimiters"],"0x0649":["FD","2-n","ParallelRTBeamDelimiterBoundaries"],"0x064A":["FD","2-n","ParallelRTBeamDelimiterPositions"],"0x064B":["FD","2","RTBeamLimitingDeviceOffset"],"0x064C":["SQ","1","RTBeamDelimiterGeometrySequence"],"0x064D":["SQ","1","RTBeamLimitingDeviceDefinitionSequence"],"0x064E":["CS","1","ParallelRTBeamDelimiterOpeningMode"],"0x064F":["CS","1-n","ParallelRTBeamDelimiterLeafMountingSide"],"0x0650":["UI","1","PatientSetupUID"],"0x0651":["SQ","1","WedgeDefinitionSequence"],"0x0652":["FD","1","RadiationBeamWedgeAngle"],"0x0653":["FD","1","RadiationBeamWedgeThinEdgeDistance"],"0x0654":["FD","1","RadiationBeamEffectiveWedgeAngle"],"0x0655":["US","1","NumberOfWedgePositions"],"0x0656":["SQ","1","RTBeamLimitingDeviceOpeningSequence"],"0x0657":["US","1","NumberOfRTBeamLimitingDeviceOpenings"],"0x0658":["SQ","1","RadiationDosimeterUnitSequence"],"0x0659":["SQ","1","RTDeviceDistanceReferenceLocationCodeSequence"],"0x065A":["SQ","1","RadiationDeviceConfigurationAndCommissioningKeySequence"],"0x065B":["SQ","1","PatientSupportPositionParameterSequence"],"0x065C":["CS","1","PatientSupportPositionSpecificationMethod"],"0x065D":["SQ","1","PatientSupportPositionDeviceParameterSequence"],"0x065E":["US","1","DeviceOrderIndex"],"0x065F":["US","1","PatientSupportPositionParameterOrderIndex"],"0x0660":["SQ","1","PatientSupportPositionDeviceToleranceSequence"],"0x0661":["US","1","PatientSupportPositionToleranceOrderIndex"],"0x0662":["SQ","1","CompensatorDefinitionSequence"],"0x0663":["CS","1","CompensatorMapOrientation"],"0x0664":["OF","1","CompensatorProximalThicknessMap"],"0x0665":["OF","1","CompensatorDistalThicknessMap"],"0x0666":["FD","1","CompensatorBasePlaneOffset"],"0x0667":["SQ","1","CompensatorShapeFabricationCodeSequence"],"0x0668":["SQ","1","CompensatorShapeSequence"],"0x0669":["FD","1","RadiationBeamCompensatorMillingToolDiameter"],"0x066A":["SQ","1","BlockDefinitionSequence"],"0x066B":["OF","1","BlockEdgeData"],"0x066C":["CS","1","BlockOrientation"],"0x066D":["FD","1","RadiationBeamBlockThickness"],"0x066E":["FD","1","RadiationBeamBlockSlabThickness"],"0x066F":["SQ","1","BlockEdgeDataSequence"],"0x0670":["US","1","NumberOfRTAccessoryHolders"],"0x0671":["SQ","1","GeneralAccessoryDefinitionSequence"],"0x0672":["US","1","NumberOfGeneralAccessories"],"0x0673":["SQ","1","BolusDefinitionSequence"],"0x0674":["US","1","NumberOfBoluses"],"0x0675":["UI","1","EquipmentFrameOfReferenceUID"],"0x0676":["ST","1","EquipmentFrameOfReferenceDescription"],"0x0677":["SQ","1","EquipmentReferencePointCoordinatesSequence"],"0x0678":["SQ","1","EquipmentReferencePointCodeSequence"],"0x0679":["FD","1","RTBeamLimitingDeviceAngle"],"0x067A":["FD","1","SourceRollAngle"],"0x067B":["SQ","1","RadiationGenerationModeSequence"],"0x067C":["SH","1","RadiationGenerationModeLabel"],"0x067D":["ST","1","RadiationGenerationModeDescription"],"0x067E":["SQ","1","RadiationGenerationModeMachineCodeSequence"],"0x067F":["SQ","1","RadiationTypeCodeSequence"],"0x0680":["DS","1","NominalEnergy"],"0x0681":["DS","1","MinimumNominalEnergy"],"0x0682":["DS","1","MaximumNominalEnergy"],"0x0683":["SQ","1","RadiationFluenceModifierCodeSequence"],"0x0684":["SQ","1","EnergyUnitCodeSequence"],"0x0685":["US","1","NumberOfRadiationGenerationModes"],"0x0686":["SQ","1","PatientSupportDevicesSequence"],"0x0687":["US","1","NumberOfPatientSupportDevices"],"0x0688":["FD","1","RTBeamModifierDefinitionDistance"],"0x0689":["SQ","1","BeamAreaLimitSequence"],"0x068A":["SQ","1","ReferencedRTPrescriptionSequence"],"0x0700":["UI","1","TreatmentSessionUID"],"0x0701":["CS","1","RTRadiationUsage"],"0x0702":["SQ","1","ReferencedRTRadiationSetSequence"],"0x0703":["SQ","1","ReferencedRTRadiationRecordSequence"],"0x0704":["US","1","RTRadiationSetDeliveryNumber"],"0x0705":["US","1","ClinicalFractionNumber"],"0x0706":["CS","1","RTTreatmentFractionCompletionStatus"],"0x0707":["CS","1","RTRadiationSetUsage"],"0x0708":["CS","1","TreatmentDeliveryContinuationFlag"],"0x0709":["CS","1","TreatmentRecordContentOrigin"],"0x0714":["CS","1","RTTreatmentTerminationStatus"],"0x0715":["SQ","1","RTTreatmentTerminationReasonCodeSequence"],"0x0716":["SQ","1","MachineSpecificTreatmentTerminationCodeSequence"],"0x0722":["SQ","1","RTRadiationSalvageRecordControlPointSequence"],"0x0723":["CS","1","StartingMetersetValueKnownFlag"],"0x0730":["ST","1","TreatmentTerminationDescription"],"0x0731":["SQ","1","TreatmentToleranceViolationSequence"],"0x0732":["CS","1","TreatmentToleranceViolationCategory"],"0x0733":["SQ","1","TreatmentToleranceViolationAttributeSequence"],"0x0734":["ST","1","TreatmentToleranceViolationDescription"],"0x0735":["ST","1","TreatmentToleranceViolationIdentification"],"0x0736":["DT","1","TreatmentToleranceViolationDateTime"],"0x073A":["DT","1","RecordedRTControlPointDateTime"],"0x073B":["US","1","ReferencedRadiationRTControlPointIndex"],"0x073E":["SQ","1","AlternateValueSequence"],"0x073F":["SQ","1","ConfirmationSequence"],"0x0740":["SQ","1","InterlockSequence"],"0x0741":["DT","1","InterlockDateTime"],"0x0742":["ST","1","InterlockDescription"],"0x0743":["SQ","1","InterlockOriginatingDeviceSequence"],"0x0744":["SQ","1","InterlockCodeSequence"],"0x0745":["SQ","1","InterlockResolutionCodeSequence"],"0x0746":["SQ","1","InterlockResolutionUserSequence"],"0x0760":["DT","1","OverrideDateTime"],"0x0761":["SQ","1","TreatmentToleranceViolationTypeCodeSequence"],"0x0762":["SQ","1","TreatmentToleranceViolationCauseCodeSequence"],"0x0772":["SQ","1","MeasuredMetersetToDoseMappingSequence"],"0x0773":["US","1","ReferencedExpectedInVivoMeasurementValueIndex"],"0x0774":["SQ","1","DoseMeasurementDeviceCodeSequence"],"0x0780":["SQ","1","AdditionalParameterRecordingInstanceSequence"],"0x0782":["US","1",""],"0x0783":["ST","1","InterlockOriginDescription"],"0x0784":["SQ","1","RTPatientPositionScopeSequence"],"0x0785":["UI","1","ReferencedTreatmentPositionGroupUID"],"0x0786":["US","1","RadiationOrderIndex"],"0x0787":["SQ","1","OmittedRadiationSequence"],"0x0788":["SQ","1","ReasonForOmissionCodeSequence"],"0x0789":["SQ","1","RTDeliveryStartPatientPositionSequence"],"0x078A":["SQ","1","RTTreatmentPreparationPatientPositionSequence"],"0x078B":["SQ","1","ReferencedRTTreatmentPreparationSequence"],"0x078C":["SQ","1","ReferencedPatientSetupPhotoSequence"],"0x078D":["SQ","1","PatientTreatmentPreparationMethodCodeSequence"],"0x078E":["LT","1","PatientTreatmentPreparationProcedureParameterDescription"],"0x078F":["SQ","1","PatientTreatmentPreparationDeviceSequence"],"0x0790":["SQ","1","PatientTreatmentPreparationProcedureSequence"],"0x0791":["SQ","1","PatientTreatmentPreparationProcedureCodeSequence"],"0x0792":["LT","1","PatientTreatmentPreparationMethodDescription"],"0x0793":["SQ","1","PatientTreatmentPreparationProcedureParameterSequence"],"0x0794":["LT","1","PatientSetupPhotoDescription"],"0x0795":["US","1","PatientTreatmentPreparationProcedureIndex"],"0x0796":["US","1","ReferencedPatientSetupProcedureIndex"],"0x0797":["SQ","1","RTRadiationTaskSequence"],"0x0798":["SQ","1","RTPatientPositionDisplacementSequence"],"0x0799":["SQ","1","RTPatientPositionSequence"],"0x079A":["LO","1","DisplacementReferenceLabel"],"0x079B":["FD","16","DisplacementMatrix"],"0x079C":["SQ","1","PatientSupportDisplacementSequence"],"0x079D":["SQ","1","DisplacementReferenceLocationCodeSequence"],"0x079E":["CS","1","RTRadiationSetDeliveryUsage"]},"0x300C":{"0x0000":["UL","1","GenericGroupLength"],"0x0002":["SQ","1","ReferencedRTPlanSequence"],"0x0004":["SQ","1","ReferencedBeamSequence"],"0x0006":["IS","1","ReferencedBeamNumber"],"0x0007":["IS","1","ReferencedReferenceImageNumber"],"0x0008":["DS","1","StartCumulativeMetersetWeight"],"0x0009":["DS","1","EndCumulativeMetersetWeight"],"0x000A":["SQ","1","ReferencedBrachyApplicationSetupSequence"],"0x000C":["IS","1","ReferencedBrachyApplicationSetupNumber"],"0x000E":["IS","1","ReferencedSourceNumber"],"0x0020":["SQ","1","ReferencedFractionGroupSequence"],"0x0022":["IS","1","ReferencedFractionGroupNumber"],"0x0040":["SQ","1","ReferencedVerificationImageSequence"],"0x0042":["SQ","1","ReferencedReferenceImageSequence"],"0x0050":["SQ","1","ReferencedDoseReferenceSequence"],"0x0051":["IS","1","ReferencedDoseReferenceNumber"],"0x0055":["SQ","1","BrachyReferencedDoseReferenceSequence"],"0x0060":["SQ","1","ReferencedStructureSetSequence"],"0x006A":["IS","1","ReferencedPatientSetupNumber"],"0x0080":["SQ","1","ReferencedDoseSequence"],"0x00A0":["IS","1","ReferencedToleranceTableNumber"],"0x00B0":["SQ","1","ReferencedBolusSequence"],"0x00C0":["IS","1","ReferencedWedgeNumber"],"0x00D0":["IS","1","ReferencedCompensatorNumber"],"0x00E0":["IS","1","ReferencedBlockNumber"],"0x00F0":["IS","1","ReferencedControlPointIndex"],"0x00F2":["SQ","1","ReferencedControlPointSequence"],"0x00F4":["IS","1","ReferencedStartControlPointIndex"],"0x00F6":["IS","1","ReferencedStopControlPointIndex"],"0x0100":["IS","1","ReferencedRangeShifterNumber"],"0x0102":["IS","1","ReferencedLateralSpreadingDeviceNumber"],"0x0104":["IS","1","ReferencedRangeModulatorNumber"],"0x0111":["SQ","1","OmittedBeamTaskSequence"],"0x0112":["CS","1","ReasonForOmission"],"0x0113":["LO","1","ReasonForOmissionDescription"],"0x0114":["SQ","1","PrescriptionOverviewSequence"],"0x0115":["FL","1","TotalPrescriptionDose"],"0x0116":["SQ","1","PlanOverviewSequence"],"0x0117":["US","1","PlanOverviewIndex"],"0x0118":["US","1","ReferencedPlanOverviewIndex"],"0x0119":["US","1","NumberOfFractionsIncluded"],"0x0120":["SQ","1","DoseCalibrationConditionsSequence"],"0x0121":["FD","1","AbsorbedDoseToMetersetRatio"],"0x0122":["FD","2","DelineatedRadiationFieldSize"],"0x0123":["CS","1","DoseCalibrationConditionsVerifiedFlag"],"0x0124":["FD","1","CalibrationReferencePointDepth"],"0x0125":["SQ","1","GatingBeamHoldTransitionSequence"],"0x0126":["CS","1","BeamHoldTransition"],"0x0127":["DT","1","BeamHoldTransitionDateTime"],"0x0128":["SQ","1","BeamHoldOriginatingDeviceSequence"]},"0x300E":{"0x0000":["UL","1","GenericGroupLength"],"0x0002":["CS","1","ApprovalStatus"],"0x0004":["DA","1","ReviewDate"],"0x0005":["TM","1","ReviewTime"],"0x0008":["PN","1","ReviewerName"]},"0x3010":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["SQ","1","RadiobiologicalDoseEffectSequence"],"0x0002":["CS","1","RadiobiologicalDoseEffectFlag"],"0x0003":["SQ","1","EffectiveDoseCalculationMethodCategoryCodeSequence"],"0x0004":["SQ","1","EffectiveDoseCalculationMethodCodeSequence"],"0x0005":["LO","1","EffectiveDoseCalculationMethodDescription"],"0x0006":["UI","1","ConceptualVolumeUID"],"0x0007":["SQ","1","OriginatingSOPInstanceReferenceSequence"],"0x0008":["SQ","1","ConceptualVolumeConstituentSequence"],"0x0009":["SQ","1","EquivalentConceptualVolumeInstanceReferenceSequence"],"0x000A":["SQ","1","EquivalentConceptualVolumesSequence"],"0x000B":["UI","1","ReferencedConceptualVolumeUID"],"0x000C":["UT","1","ConceptualVolumeCombinationExpression"],"0x000D":["US","1","ConceptualVolumeConstituentIndex"],"0x000E":["CS","1","ConceptualVolumeCombinationFlag"],"0x000F":["ST","1","ConceptualVolumeCombinationDescription"],"0x0010":["CS","1","ConceptualVolumeSegmentationDefinedFlag"],"0x0011":["SQ","1","ConceptualVolumeSegmentationReferenceSequence"],"0x0012":["SQ","1","ConceptualVolumeConstituentSegmentationReferenceSequence"],"0x0013":["UI","1","ConstituentConceptualVolumeUID"],"0x0014":["SQ","1","DerivationConceptualVolumeSequence"],"0x0015":["UI","1","SourceConceptualVolumeUID"],"0x0016":["SQ","1","ConceptualVolumeDerivationAlgorithmSequence"],"0x0017":["ST","1","ConceptualVolumeDescription"],"0x0018":["SQ","1","SourceConceptualVolumeSequence"],"0x0019":["SQ","1","AuthorIdentificationSequence"],"0x001A":["LO","1","ManufacturerModelVersion"],"0x001B":["UC","1","DeviceAlternateIdentifier"],"0x001C":["CS","1","DeviceAlternateIdentifierType"],"0x001D":["LT","1","DeviceAlternateIdentifierFormat"],"0x001E":["LO","1","SegmentationCreationTemplateLabel"],"0x001F":["UI","1","SegmentationTemplateUID"],"0x0020":["US","1","ReferencedSegmentReferenceIndex"],"0x0021":["SQ","1","SegmentReferenceSequence"],"0x0022":["US","1","SegmentReferenceIndex"],"0x0023":["SQ","1","DirectSegmentReferenceSequence"],"0x0024":["SQ","1","CombinationSegmentReferenceSequence"],"0x0025":["SQ","1","ConceptualVolumeSequence"],"0x0026":["SQ","1","SegmentedRTAccessoryDeviceSequence"],"0x0027":["SQ","1","SegmentCharacteristicsSequence"],"0x0028":["SQ","1","RelatedSegmentCharacteristicsSequence"],"0x0029":["US","1","SegmentCharacteristicsPrecedence"],"0x002A":["SQ","1","RTSegmentAnnotationSequence"],"0x002B":["SQ","1","SegmentAnnotationCategoryCodeSequence"],"0x002C":["SQ","1","SegmentAnnotationTypeCodeSequence"],"0x002D":["LO","1","DeviceLabel"],"0x002E":["SQ","1","DeviceTypeCodeSequence"],"0x002F":["SQ","1","SegmentAnnotationTypeModifierCodeSequence"],"0x0030":["SQ","1","PatientEquipmentRelationshipCodeSequence"],"0x0031":["UI","1","ReferencedFiducialsUID"],"0x0032":["SQ","1","PatientTreatmentOrientationSequence"],"0x0033":["SH","1","UserContentLabel"],"0x0034":["LO","1","UserContentLongLabel"],"0x0035":["SH","1","EntityLabel"],"0x0036":["LO","1","EntityName"],"0x0037":["ST","1","EntityDescription"],"0x0038":["LO","1","EntityLongLabel"],"0x0039":["US","1","DeviceIndex"],"0x003A":["US","1","RTTreatmentPhaseIndex"],"0x003B":["UI","1","RTTreatmentPhaseUID"],"0x003C":["US","1","RTPrescriptionIndex"],"0x003D":["US","1","RTSegmentAnnotationIndex"],"0x003E":["US","1","BasisRTTreatmentPhaseIndex"],"0x003F":["US","1","RelatedRTTreatmentPhaseIndex"],"0x0040":["US","1","ReferencedRTTreatmentPhaseIndex"],"0x0041":["US","1","ReferencedRTPrescriptionIndex"],"0x0042":["US","1","ReferencedParentRTPrescriptionIndex"],"0x0043":["ST","1","ManufacturerDeviceIdentifier"],"0x0044":["SQ","1","InstanceLevelReferencedPerformedProcedureStepSequence"],"0x0045":["CS","1","RTTreatmentPhaseIntentPresenceFlag"],"0x0046":["CS","1","RadiotherapyTreatmentType"],"0x0047":["CS","1-n","TeletherapyRadiationType"],"0x0048":["CS","1-n","BrachytherapySourceType"],"0x0049":["SQ","1","ReferencedRTTreatmentPhaseSequence"],"0x004A":["SQ","1","ReferencedDirectSegmentInstanceSequence"],"0x004B":["SQ","1","IntendedRTTreatmentPhaseSequence"],"0x004C":["DA","1","IntendedPhaseStartDate"],"0x004D":["DA","1","IntendedPhaseEndDate"],"0x004E":["SQ","1","RTTreatmentPhaseIntervalSequence"],"0x004F":["CS","1","TemporalRelationshipIntervalAnchor"],"0x0050":["FD","1","MinimumNumberOfIntervalDays"],"0x0051":["FD","1","MaximumNumberOfIntervalDays"],"0x0052":["UI","1-n","PertinentSOPClassesInStudy"],"0x0053":["UI","1-n","PertinentSOPClassesInSeries"],"0x0054":["LO","1","RTPrescriptionLabel"],"0x0055":["SQ","1","RTPhysicianIntentPredecessorSequence"],"0x0056":["LO","1","RTTreatmentApproachLabel"],"0x0057":["SQ","1","RTPhysicianIntentSequence"],"0x0058":["US","1","RTPhysicianIntentIndex"],"0x0059":["CS","1","RTTreatmentIntentType"],"0x005A":["UT","1","RTPhysicianIntentNarrative"],"0x005B":["SQ","1","RTProtocolCodeSequence"],"0x005C":["ST","1","ReasonForSuperseding"],"0x005D":["SQ","1","RTDiagnosisCodeSequence"],"0x005E":["US","1","ReferencedRTPhysicianIntentIndex"],"0x005F":["SQ","1","RTPhysicianIntentInputInstanceSequence"],"0x0060":["SQ","1","RTAnatomicPrescriptionSequence"],"0x0061":["UT","1","PriorTreatmentDoseDescription"],"0x0062":["SQ","1","PriorTreatmentReferenceSequence"],"0x0063":["CS","1","DosimetricObjectiveEvaluationScope"],"0x0064":["SQ","1","TherapeuticRoleCategoryCodeSequence"],"0x0065":["SQ","1","TherapeuticRoleTypeCodeSequence"],"0x0066":["US","1","ConceptualVolumeOptimizationPrecedence"],"0x0067":["SQ","1","ConceptualVolumeCategoryCodeSequence"],"0x0068":["CS","1","ConceptualVolumeBlockingConstraint"],"0x0069":["SQ","1","ConceptualVolumeTypeCodeSequence"],"0x006A":["SQ","1","ConceptualVolumeTypeModifierCodeSequence"],"0x006B":["SQ","1","RTPrescriptionSequence"],"0x006C":["SQ","1","DosimetricObjectiveSequence"],"0x006D":["SQ","1","DosimetricObjectiveTypeCodeSequence"],"0x006E":["UI","1","DosimetricObjectiveUID"],"0x006F":["UI","1","ReferencedDosimetricObjectiveUID"],"0x0070":["SQ","1","DosimetricObjectiveParameterSequence"],"0x0071":["SQ","1","ReferencedDosimetricObjectivesSequence"],"0x0073":["CS","1","AbsoluteDosimetricObjectiveFlag"],"0x0074":["FD","1","DosimetricObjectiveWeight"],"0x0075":["CS","1","DosimetricObjectivePurpose"],"0x0076":["SQ","1","PlanningInputInformationSequence"],"0x0077":["LO","1","TreatmentSite"],"0x0078":["SQ","1","TreatmentSiteCodeSequence"],"0x0079":["SQ","1","FractionPatternSequence"],"0x007A":["UT","1","TreatmentTechniqueNotes"],"0x007B":["UT","1","PrescriptionNotes"],"0x007C":["IS","1","NumberOfIntervalFractions"],"0x007D":["US","1","NumberOfFractions"],"0x007E":["US","1","IntendedDeliveryDuration"],"0x007F":["UT","1","FractionationNotes"],"0x0080":["SQ","1","RTTreatmentTechniqueCodeSequence"],"0x0081":["SQ","1","PrescriptionNotesSequence"],"0x0082":["SQ","1","FractionBasedRelationshipSequence"],"0x0083":["CS","1","FractionBasedRelationshipIntervalAnchor"],"0x0084":["FD","1","MinimumHoursBetweenFractions"],"0x0085":["TM","1-n","IntendedFractionStartTime"],"0x0086":["LT","1","IntendedStartDayOfWeek"],"0x0087":["SQ","1","WeekdayFractionPatternSequence"],"0x0088":["SQ","1","DeliveryTimeStructureCodeSequence"],"0x0089":["SQ","1","TreatmentSiteModifierCodeSequence"],"0x0090":["CS","1","RoboticBaseLocationIndicator"],"0x0091":["SQ","1","RoboticPathNodeSetCodeSequence"],"0x0092":["UL","1","RoboticNodeIdentifier"],"0x0093":["FD","3","RTTreatmentSourceCoordinates"],"0x0094":["FD","1","RadiationSourceCoordinateSystemYawAngle"],"0x0095":["FD","1","RadiationSourceCoordinateSystemRollAngle"],"0x0096":["FD","1","RadiationSourceCoordinateSystemPitchAngle"],"0x0097":["SQ","1","RoboticPathControlPointSequence"],"0x0098":["SQ","1","TomotherapeuticControlPointSequence"],"0x0099":["FD","1-n","TomotherapeuticLeafOpenDurations"],"0x009A":["FD","1-n","TomotherapeuticLeafInitialClosedDurations"]},"0x4000":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["LT","1","Arbitrary"],"0x4000":["LT","1","TextComments"]},"0x4008":{"0x0000":["UL","1","GenericGroupLength"],"0x0040":["SH","1","ResultsID"],"0x0042":["LO","1","ResultsIDIssuer"],"0x0050":["SQ","1","ReferencedInterpretationSequence"],"0x00FF":["CS","1","ReportProductionStatusTrial"],"0x0100":["DA","1","InterpretationRecordedDate"],"0x0101":["TM","1","InterpretationRecordedTime"],"0x0102":["PN","1","InterpretationRecorder"],"0x0103":["LO","1","ReferenceToRecordedSound"],"0x0108":["DA","1","InterpretationTranscriptionDate"],"0x0109":["TM","1","InterpretationTranscriptionTime"],"0x010A":["PN","1","InterpretationTranscriber"],"0x010B":["ST","1","InterpretationText"],"0x010C":["PN","1","InterpretationAuthor"],"0x0111":["SQ","1","InterpretationApproverSequence"],"0x0112":["DA","1","InterpretationApprovalDate"],"0x0113":["TM","1","InterpretationApprovalTime"],"0x0114":["PN","1","PhysicianApprovingInterpretation"],"0x0115":["LT","1","InterpretationDiagnosisDescription"],"0x0117":["SQ","1","InterpretationDiagnosisCodeSequence"],"0x0118":["SQ","1","ResultsDistributionListSequence"],"0x0119":["PN","1","DistributionName"],"0x011A":["LO","1","DistributionAddress"],"0x0200":["SH","1","InterpretationID"],"0x0202":["LO","1","InterpretationIDIssuer"],"0x0210":["CS","1","InterpretationTypeID"],"0x0212":["CS","1","InterpretationStatusID"],"0x0300":["ST","1","Impressions"],"0x4000":["ST","1","ResultsComments"]},"0x4010":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["CS","1","LowEnergyDetectors"],"0x0002":["CS","1","HighEnergyDetectors"],"0x0004":["SQ","1","DetectorGeometrySequence"],"0x1001":["SQ","1","ThreatROIVoxelSequence"],"0x1004":["FL","3","ThreatROIBase"],"0x1005":["FL","3","ThreatROIExtents"],"0x1006":["OB","1","ThreatROIBitmap"],"0x1007":["SH","1","RouteSegmentID"],"0x1008":["CS","1","GantryType"],"0x1009":["CS","1","OOIOwnerType"],"0x100A":["SQ","1","RouteSegmentSequence"],"0x1010":["US","1","PotentialThreatObjectID"],"0x1011":["SQ","1","ThreatSequence"],"0x1012":["CS","1","ThreatCategory"],"0x1013":["LT","1","ThreatCategoryDescription"],"0x1014":["CS","1","ATDAbilityAssessment"],"0x1015":["CS","1","ATDAssessmentFlag"],"0x1016":["FL","1","ATDAssessmentProbability"],"0x1017":["FL","1","Mass"],"0x1018":["FL","1","Density"],"0x1019":["FL","1","ZEffective"],"0x101A":["SH","1","BoardingPassID"],"0x101B":["FL","3","CenterOfMass"],"0x101C":["FL","3","CenterOfPTO"],"0x101D":["FL","6-n","BoundingPolygon"],"0x101E":["SH","1","RouteSegmentStartLocationID"],"0x101F":["SH","1","RouteSegmentEndLocationID"],"0x1020":["CS","1","RouteSegmentLocationIDType"],"0x1021":["CS","1-n","AbortReason"],"0x1023":["FL","1","VolumeOfPTO"],"0x1024":["CS","1","AbortFlag"],"0x1025":["DT","1","RouteSegmentStartTime"],"0x1026":["DT","1","RouteSegmentEndTime"],"0x1027":["CS","1","TDRType"],"0x1028":["CS","1","InternationalRouteSegment"],"0x1029":["LO","1-n","ThreatDetectionAlgorithmAndVersion"],"0x102A":["SH","1","AssignedLocation"],"0x102B":["DT","1","AlarmDecisionTime"],"0x1031":["CS","1","AlarmDecision"],"0x1033":["US","1","NumberOfTotalObjects"],"0x1034":["US","1","NumberOfAlarmObjects"],"0x1037":["SQ","1","PTORepresentationSequence"],"0x1038":["SQ","1","ATDAssessmentSequence"],"0x1039":["CS","1","TIPType"],"0x103A":["CS","1","DICOSVersion"],"0x1041":["DT","1","OOIOwnerCreationTime"],"0x1042":["CS","1","OOIType"],"0x1043":["FL","3","OOISize"],"0x1044":["CS","1","AcquisitionStatus"],"0x1045":["SQ","1","BasisMaterialsCodeSequence"],"0x1046":["CS","1","PhantomType"],"0x1047":["SQ","1","OOIOwnerSequence"],"0x1048":["CS","1","ScanType"],"0x1051":["LO","1","ItineraryID"],"0x1052":["SH","1","ItineraryIDType"],"0x1053":["LO","1","ItineraryIDAssigningAuthority"],"0x1054":["SH","1","RouteID"],"0x1055":["SH","1","RouteIDAssigningAuthority"],"0x1056":["CS","1","InboundArrivalType"],"0x1058":["SH","1","CarrierID"],"0x1059":["CS","1","CarrierIDAssigningAuthority"],"0x1060":["FL","3","SourceOrientation"],"0x1061":["FL","3","SourcePosition"],"0x1062":["FL","1","BeltHeight"],"0x1064":["SQ","1","AlgorithmRoutingCodeSequence"],"0x1067":["CS","1","TransportClassification"],"0x1068":["LT","1","OOITypeDescriptor"],"0x1069":["FL","1","TotalProcessingTime"],"0x106C":["OB","1","DetectorCalibrationData"],"0x106D":["CS","1","AdditionalScreeningPerformed"],"0x106E":["CS","1","AdditionalInspectionSelectionCriteria"],"0x106F":["SQ","1","AdditionalInspectionMethodSequence"],"0x1070":["CS","1","AITDeviceType"],"0x1071":["SQ","1","QRMeasurementsSequence"],"0x1072":["SQ","1","TargetMaterialSequence"],"0x1073":["FD","1","SNRThreshold"],"0x1075":["DS","1","ImageScaleRepresentation"],"0x1076":["SQ","1","ReferencedPTOSequence"],"0x1077":["SQ","1","ReferencedTDRInstanceSequence"],"0x1078":["ST","1","PTOLocationDescription"],"0x1079":["SQ","1","AnomalyLocatorIndicatorSequence"],"0x107A":["FL","3","AnomalyLocatorIndicator"],"0x107B":["SQ","1","PTORegionSequence"],"0x107C":["CS","1","InspectionSelectionCriteria"],"0x107D":["SQ","1","SecondaryInspectionMethodSequence"],"0x107E":["DS","6","PRCSToRCSOrientation"]},"0x4FFE":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["SQ","1","MACParametersSequence"]},"0x5000":{"0x0000":["UL","1","GenericGroupLength"],"0x0005":["US","1","CurveDimensions"],"0x0010":["US","1","NumberOfPoints"],"0x0020":["CS","1","TypeOfData"],"0x0022":["LO","1","CurveDescription"],"0x0030":["SH","1-n","AxisUnits"],"0x0040":["SH","1-n","AxisLabels"],"0x0103":["US","1","DataValueRepresentation"],"0x0104":["US","1-n","MinimumCoordinateValue"],"0x0105":["US","1-n","MaximumCoordinateValue"],"0x0106":["SH","1-n","CurveRange"],"0x0110":["US","1-n","CurveDataDescriptor"],"0x0112":["US","1-n","CoordinateStartValue"],"0x0114":["US","1-n","CoordinateStepValue"],"0x1001":["CS","1","CurveActivationLayer"],"0x2000":["US","1","AudioType"],"0x2002":["US","1","AudioSampleFormat"],"0x2004":["US","1","NumberOfChannels"],"0x2006":["UL","1","NumberOfSamples"],"0x2008":["UL","1","SampleRate"],"0x200A":["UL","1","TotalTime"],"0x200C":["ox","1","AudioSampleData"],"0x200E":["LT","1","AudioComments"],"0x2500":["LO","1","CurveLabel"],"0x2600":["SQ","1","CurveReferencedOverlaySequence"],"0x2610":["US","1","CurveReferencedOverlayGroup"],"0x3000":["ox","1","CurveData"]},"0x5200":{"0x0000":["UL","1","GenericGroupLength"],"0x9229":["SQ","1","SharedFunctionalGroupsSequence"],"0x9230":["SQ","1","PerFrameFunctionalGroupsSequence"]},"0x5400":{"0x0000":["UL","1","GenericGroupLength"],"0x0100":["SQ","1","WaveformSequence"],"0x0110":["ox","1","ChannelMinimumValue"],"0x0112":["ox","1","ChannelMaximumValue"],"0x1004":["US","1","WaveformBitsAllocated"],"0x1006":["CS","1","WaveformSampleInterpretation"],"0x100A":["ox","1","WaveformPaddingValue"],"0x1010":["ox","1","WaveformData"]},"0x5600":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["OF","1","FirstOrderPhaseCorrectionAngle"],"0x0020":["OF","1","SpectroscopyData"]},"0x6000":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["US","1","OverlayRows"],"0x0011":["US","1","OverlayColumns"],"0x0012":["US","1","OverlayPlanes"],"0x0015":["IS","1","NumberOfFramesInOverlay"],"0x0022":["LO","1","OverlayDescription"],"0x0040":["CS","1","OverlayType"],"0x0045":["LO","1","OverlaySubtype"],"0x0050":["SS","2","OverlayOrigin"],"0x0051":["US","1","ImageFrameOrigin"],"0x0052":["US","1","OverlayPlaneOrigin"],"0x0060":["CS","1","OverlayCompressionCode"],"0x0061":["SH","1","OverlayCompressionOriginator"],"0x0062":["SH","1","OverlayCompressionLabel"],"0x0063":["CS","1","OverlayCompressionDescription"],"0x0066":["AT","1-n","OverlayCompressionStepPointers"],"0x0068":["US","1","OverlayRepeatInterval"],"0x0069":["US","1","OverlayBitsGrouped"],"0x0100":["US","1","OverlayBitsAllocated"],"0x0102":["US","1","OverlayBitPosition"],"0x0110":["CS","1","OverlayFormat"],"0x0200":["US","1","OverlayLocation"],"0x0800":["CS","1-n","OverlayCodeLabel"],"0x0802":["US","1","OverlayNumberOfTables"],"0x0803":["AT","1-n","OverlayCodeTableLocation"],"0x0804":["US","1","OverlayBitsForCodeWord"],"0x1001":["CS","1","OverlayActivationLayer"],"0x1100":["US","1","OverlayDescriptorGray"],"0x1101":["US","1","OverlayDescriptorRed"],"0x1102":["US","1","OverlayDescriptorGreen"],"0x1103":["US","1","OverlayDescriptorBlue"],"0x1200":["US","1-n","OverlaysGray"],"0x1201":["US","1-n","OverlaysRed"],"0x1202":["US","1-n","OverlaysGreen"],"0x1203":["US","1-n","OverlaysBlue"],"0x1301":["IS","1","ROIArea"],"0x1302":["DS","1","ROIMean"],"0x1303":["DS","1","ROIStandardDeviation"],"0x1500":["LO","1","OverlayLabel"],"0x3000":["ox","1","OverlayData"],"0x4000":["LT","1","OverlayComments"]},"0x7F00":{"0x0000":["UL","1","GenericGroupLength"],"0x0010":["ox","1","VariablePixelData"],"0x0011":["US","1","VariableNextDataGroup"],"0x0020":["OW","1","VariableCoefficientsSDVN"],"0x0030":["OW","1","VariableCoefficientsSDHN"],"0x0040":["OW","1","VariableCoefficientsSDDN"]},"0x7FE0":{"0x0000":["UL","1","GenericGroupLength"],"0x0001":["OV","1","ExtendedOffsetTable"],"0x0002":["OV","1","ExtendedOffsetTableLengths"],"0x0008":["OF","1","FloatPixelData"],"0x0009":["OD","1","DoubleFloatPixelData"],"0x0010":["ox","1","PixelData"],"0x0020":["OW","1","CoefficientsSDVN"],"0x0030":["OW","1","CoefficientsSDHN"],"0x0040":["OW","1","CoefficientsSDDN"]},"0xFFFA":{"0x0000":["UL","1","GenericGroupLength"],"0xFFFA":["SQ","1","DigitalSignaturesSequence"]},"0xFFFC":{"0x0000":["UL","1","GenericGroupLength"],"0xFFFC":["OB","1","DataSetTrailingPadding"]},"0xFFFE":{"0x0000":["UL","1","GenericGroupLength"],"0xE000":["NONE","1","Item"],"0xE00D":["NONE","1","ItemDelimitationItem"],"0xE0DD":["NONE","1","SequenceDelimitationItem"]}},t={x0000:"Command",x0002:"Meta Element",x0004:"File Set",x0008:"Identifying",x0009:"SPI Identifying",x0010:"Patient",x0012:"Clinical Trial",x0018:"Acquisition",x0019:"SPI Acquisition",x0020:"Image",x0021:"SPI Image",x0022:"Ophtalmology",x0028:"Image Presentation",x0032:"Study",x0038:"Visit",x003A:"Waveform",x0040:"Procedure",x0042:"Encapsulated Document",x0050:"Device Informations",x0054:"Nuclear Medicine",x0060:"Histogram",x0070:"Presentation State",x0072:"Hanging Protocol",x0088:"Storage",x0100:"Authorization",x0400:"Digital Signature",x1000:"Code Table",x1010:"Zonal Map",x2000:"Film Session",x2010:"Film Box",x2020:"Image Box",x2030:"Annotation",x2040:"Overlay Box",x2050:"Presentation LUT",x2100:"Print Job",x2110:"Printer",x2120:"Queue",x2130:"Print Content",x2200:"Media Creation",x3002:"RT Image",x3004:"RT Dose",x3006:"RT StructureSet",x3008:"RT Treatment",x300A:"RT Plan",x300C:"RT Relationship",x300E:"RT Approval",x4000:"Text",x4008:"Results",x4FFE:"MAC Parameters",x5000:"Curve",x5002:"Curve",x5004:"Curve",x5006:"Curve",x5008:"Curve",x500A:"Curve",x500C:"Curve",x500E:"Curve",x5400:"Waveform Data",x6000:"Overlays",x6002:"Overlays",x6004:"Overlays",x6008:"Overlays",x600A:"Overlays",x600C:"Overlays",x600E:"Overlays",xFFFC:"Generic",x7FE0:"Pixel Data",xFFFF:"Unknown"},n=["OB","OD","OF","OL","OV","OW","SQ","SV","UC","UN","UR","UT","UV","ox"],i=["SH","LO","UC","ST","LT","UT","PN"],r={AE:"string",AS:"string",AT:void 0,CS:"string",DA:"string",DS:"string",DT:"string",FL:"Float32",FD:"Float64",IS:"string",LO:"string",LT:"string",OB:"Uint8",OD:"Uint64",OF:"Uint32",OL:"Uint32",OV:"Uint64",OW:"Uint16",PN:"string",SH:"string",SL:"Int32",SQ:void 0,SS:"Int16",ST:"string",SV:"Int64",TM:"string",UC:"string",UI:"string",UL:"Uint32",UN:"Uint8",UR:"string",US:"Uint16",UT:"string",UV:"Uint64"};function s(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function l(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,u(e,t,"get"))}function c(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,u(e,t,"set"),n),n}function u(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var h=new WeakMap,d=new WeakMap;class S{constructor(e,t){if(s(this,h,{writable:!0,value:void 0}),s(this,d,{writable:!0,value:void 0}),!e||void 0===e)throw new Error("Cannot create tag with no group.");if(6!==e.length||!e.startsWith("0x"))throw new Error("Cannot create tag with badly formed group.");if(!t||void 0===t)throw new Error("Cannot create tag with no element.");if(6!==t.length||!t.startsWith("0x"))throw new Error("Cannot create tag with badly formed element.");c(this,h,e),c(this,d,t)}getGroup(){return l(this,h)}getElement(){return l(this,d)}toString(){return this.getKey()+": "+this.getNameFromDictionary()}equals(e){return null!=e&&this.getGroup()===e.getGroup()&&this.getElement()===e.getElement()}getKey(){return"x"+this.getGroup().substring(2)+this.getElement().substring(2)}getKey2(){return this.getGroup().substring(2)+this.getElement().substring(2)}getGroupName(){return t[this.getGroup().substring(1)]}isWithVR(){const e=this.getElement();return!("0xFFFE"===this.getGroup()&&("0xE000"===e||"0xE00D"===e||"0xE0DD"===e))}isPrivate(){return parseInt(this.getGroup().substring(2),16)%2==1}getInfoFromDictionary(){let t=null;return void 0!==e[this.getGroup()]&&void 0!==e[this.getGroup()][this.getElement()]&&(t=e[this.getGroup()][this.getElement()]),t}getVrFromDictionary(){let e=null;const t=this.getInfoFromDictionary();return null!==t&&(e=t[0]),e}getNameFromDictionary(){let e=null;const t=this.getInfoFromDictionary();return null!==t&&(e=t[2]),e}}function x(){return new S("0xFFFE","0xE000")}function g(e){return e.equals(x())}function p(){return new S("0xFFFE","0xE00D")}function m(e){return e.equals(p())}function f(){return new S("0xFFFE","0xE0DD")}function y(e){return e.equals(f())}function D(){return new S("0x7FE0","0x0010")}function v(e){return e.equals(D())}function w(t){if(null==t)return null;let n=null,i=null;const r=e,a=Object.keys(r);let o=null,s=!1;for(let e=0,l=a.length;e<l;++e){n=a[e],o=Object.keys(r[n]);for(let e=0,a=o.length;e<a;++e)if(i=o[e],r[n][i][2]===t){s=!0;break}if(s)break}let l=null;return s&&(l=new S(n,i)),l}function C(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function T(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,L(e,t,"get"))}function I(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,L(e,t,"set"),n),n}function L(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function b(){return new Int8Array(new Int16Array([1]).buffer)[0]>0}function P(e){const t=e.byteLength,n=new Uint8Array(e.buffer,e.byteOffset,t),i=e.BYTES_PER_ELEMENT;let r;for(let e=0;e<t;e+=i)for(let t=e+i-1,a=e;t>a;t--,a++)r=n[a],n[a]=n[t],n[t]=r}var A=new WeakMap,O=new WeakMap,F=new WeakMap,E=new WeakMap,R=new WeakMap;class M{constructor(e,t){C(this,A,{writable:!0,value:void 0}),C(this,O,{writable:!0,value:!0}),C(this,F,{writable:!0,value:b()}),C(this,E,{writable:!0,value:void 0}),C(this,R,{writable:!0,value:void 0}),I(this,A,e),void 0!==t&&I(this,O,t),I(this,E,T(this,O)!==T(this,F)),I(this,R,new DataView(e))}readUint16(e){return T(this,R).getUint16(e,T(this,O))}readInt16(e){return T(this,R).getInt16(e,T(this,O))}readUint32(e){return T(this,R).getUint32(e,T(this,O))}readBigUint64(e){return T(this,R).getBigUint64(e,T(this,O))}readInt32(e){return T(this,R).getInt32(e,T(this,O))}readBigInt64(e){return T(this,R).getBigInt64(e,T(this,O))}readFloat32(e){return T(this,R).getFloat32(e,T(this,O))}readFloat64(e){return T(this,R).getFloat64(e,T(this,O))}readBinaryArray(e,t){const n=new Uint8Array(T(this,A),e,t),i=8*n.length,r=new Uint8Array(i);let a=0,o=0;for(let e=0;e<i;++e)a=e%8,o=Math.floor(e/8),r[e]=255*(0!=(n[o]&1<<a));return r}readUint8Array(e,t){return new Uint8Array(T(this,A),e,t)}readInt8Array(e,t){return new Int8Array(T(this,A),e,t)}readUint16Array(e,t){const n=Uint16Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Uint16Array(T(this,A),e,i),T(this,E)&&P(r);else{r=new Uint16Array(i);for(let t=0;t<i;++t)r[t]=this.readUint16(e+n*t)}return r}readInt16Array(e,t){const n=Int16Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Int16Array(T(this,A),e,i),T(this,E)&&P(r);else{r=new Int16Array(i);for(let t=0;t<i;++t)r[t]=this.readInt16(e+n*t)}return r}readUint32Array(e,t){const n=Uint32Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Uint32Array(T(this,A),e,i),T(this,E)&&P(r);else{r=new Uint32Array(i);for(let t=0;t<i;++t)r[t]=this.readUint32(e+n*t)}return r}readUint64Array(e,t){const n=BigUint64Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new BigUint64Array(T(this,A),e,i),T(this,E)&&P(r);else{r=new BigUint64Array(i);for(let t=0;t<i;++t)r[t]=this.readBigUint64(e+n*t)}return r}readInt32Array(e,t){const n=Int32Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Int32Array(T(this,A),e,i),T(this,E)&&P(r);else{r=new Int32Array(i);for(let t=0;t<i;++t)r[t]=this.readInt32(e+n*t)}return r}readInt64Array(e,t){const n=BigInt64Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new BigInt64Array(T(this,A),e,i),T(this,E)&&P(r);else{r=new BigInt64Array(i);for(let t=0;t<i;++t)r[t]=this.readBigInt64(e+n*t)}return r}readFloat32Array(e,t){const n=Float32Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Float32Array(T(this,A),e,i),T(this,E)&&P(r);else{r=new Float32Array(i);for(let t=0;t<i;++t)r[t]=this.readFloat32(e+n*t)}return r}readFloat64Array(e,t){const n=Float64Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Float64Array(T(this,A),e,i),T(this,E)&&P(r);else{r=new Float64Array(i);for(let t=0;t<i;++t)r[t]=this.readFloat64(e+n*t)}return r}readHex(e){const t=this.readUint16(e).toString(16);return"0x0000".substring(0,6-t.length)+t.toUpperCase()}}function q(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,U(e,t,"get"))}function U(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Q=new WeakMap;class k{constructor(e){if(i={writable:!0,value:void 0},function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(t=this,n=Q),n.set(t,i),!e||void 0===e)throw new Error("Cannot create index with no values.");var t,n,i;if(0===e.length)throw new Error("Cannot create index with empty values.");if(!e.every((function(e){return!isNaN(e)})))throw new Error("Cannot create index with non number values.");!function(e,t,n){(function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}})(e,U(e,t,"set"),n)}(this,Q,e)}get(e){return q(this,Q)[e]}length(){return q(this,Q).length}toString(){return"("+q(this,Q).toString()+")"}getValues(){return q(this,Q).slice()}canCompare(e){return!!e&&this.length()===e.length()}equals(e){if(!this.canCompare(e))return!1;for(let t=0,n=this.length();t<n;++t)if(this.get(t)!==e.get(t))return!1;return!0}compare(e){if(!this.canCompare(e))return null;const t=[];for(let n=0,i=this.length();n<i;++n)this.get(n)!==e.get(n)&&t.push(n);return t}add(e){if(!this.canCompare(e))return null;const t=[];for(let n=0,i=this.length();n<i;++n)t.push(this.get(n)+e.get(n));return new k(t)}getWithNew2D(e,t){const n=[e,t];for(let e=2,t=this.length();e<t;++e)n.push(this.get(e));return new k(n)}toStringId(e){if(void 0===e){e=[];for(let t=0;t<this.length();++t)e.push(t)}for(let t=0;t<e.length;++t)if(e[t]>=this.length())throw new Error("Non valid dimension for toStringId.");let t="";for(let n=0;n<e.length;++n)0!==n&&(t+="_"),t+="#"+e[n]+"-"+this.get(e[n]);return t}}function B(e){const t=e.split("_");let n,i=0;for(let e=0;e<t.length;++e)n=parseInt(t[e].substring(1,2),10),n>i&&(i=n);if(0===i)throw new Error("No dimension found in point stringId");const r=new Array(i);r.fill(0);for(let e=0;e<t.length;++e){n=parseInt(t[e].substring(1,3),10);const i=parseInt(t[e].substring(3),10);r[n]=i}return new k(r)}function N(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,W(e,t,"get"))}function W(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var V=new WeakMap;class G{constructor(e){if(i={writable:!0,value:void 0},function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(t=this,n=V),n.set(t,i),!e||void 0===e)throw new Error("Cannot create size with no values.");var t,n,i;if(0===e.length)throw new Error("Cannot create size with empty values.");if(!e.every((function(e){return!isNaN(e)&&0!==e})))throw new Error("Cannot create size with non number or zero values.");!function(e,t,n){(function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}})(e,W(e,t,"set"),n)}(this,V,e)}get(e){return N(this,V)[e]}length(){return N(this,V).length}toString(){return"("+N(this,V).toString()+")"}getValues(){return N(this,V).slice()}moreThanOne(e){return this.length()>=e+1&&1!==this.get(e)}canScroll3D(e){let t=2;return void 0!==e&&(t=e.getThirdColMajorDirection()),this.moreThanOne(t)}canScroll(e){let t=this.canScroll3D(e);for(let e=3;e<this.length();++e)t=t||this.moreThanOne(e);return t}getDimSize(e,t){if(e>this.length())return null;if(void 0===t)t=0;else if(t<0||t>e)throw new Error("Invalid start value for getDimSize");let n=1;for(let i=t;i<e;++i)n*=this.get(i);return n}getTotalSize(e){return this.getDimSize(this.length(),e)}equals(e){if(!e)return!1;const t=this.length();if(t!==e.length())return!1;for(let n=0;n<t;++n)if(this.get(n)!==e.get(n))return!1;return!0}isInBounds(e,t){if(!e)return!1;const n=this.length();if(n!==e.length())return!1;if(void 0===t){t=[];for(let e=0;e<n;++e)t.push(e)}else for(let e=0;e<n;++e)if(t[e]>n-1)throw new Error("Wrong input dir value: "+t[e]);for(let n=0;n<t.length;++n)if(i=e.get(t[n]),r=this.get(t[n]),!(i>=0&&i<r))return!1;var i,r;return!0}indexToOffset(e,t){if(e.length()<this.length())throw new Error("Incompatible index and size length");if(void 0===t)t=0;else if(t<0||t>this.length()-1)throw new Error("Invalid start value for indexToOffset");let n=0;for(let i=t;i<this.length();++i)n+=e.get(i)*this.getDimSize(i,t);return n}offsetToIndex(e){const t=new Array(this.length());let n=e,i=0;for(let e=this.length()-1;e>0;--e)i=this.getDimSize(e),t[e]=Math.floor(n/i),n-=t[e]*i;return t[0]=n,new k(t)}get2D(){return{x:this.get(0),y:this.get(1)}}}function z(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,H(e,t,"get"))}function H(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var j=new WeakMap;class X{constructor(e){if(i={writable:!0,value:void 0},function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(t=this,n=j),n.set(t,i),!e||void 0===e)throw new Error("Cannot create spacing with no values.");var t,n,i;if(0===e.length)throw new Error("Cannot create spacing with empty values.");if(!e.every((function(e){return!isNaN(e)&&0!==e})))throw new Error("Cannot create spacing with non number or zero values.");!function(e,t,n){(function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}})(e,H(e,t,"set"),n)}(this,j,e)}get(e){return z(this,j)[e]}length(){return z(this,j).length}toString(){return"("+z(this,j).toString()+")"}getValues(){return z(this,j).slice()}equals(e){if(!e)return!1;const t=this.length();if(t!==e.length())return!1;for(let n=0;n<t;++n)if(this.get(n)!==e.get(n))return!1;return!0}get2D(){return{x:this.get(0),y:this.get(1)}}}const Y={levels:{TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4},level:3,trace:function(e){this.level<=this.levels.TRACE&&console.trace(e)},debug:function(e){this.level<=this.levels.DEBUG&&console.debug(e)},info:function(e){this.level<=this.levels.INFO&&console.info(e)},warn:function(e){this.level<=this.levels.WARN&&console.warn(e)},error:function(e){this.level<=this.levels.ERROR&&console.error(e)}};function _(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,K(e,t,"get"))}function K(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Z=new WeakMap;class J{constructor(e){var t,n,i;i={writable:!0,value:void 0},function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(t=this,n=Z),n.set(t,i),function(e,t,n){(function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}})(e,K(e,t,"set"),n)}(this,Z,e)}getDEFromKey(e){return _(this,Z)[e]}getFromKey(e,t){void 0===t&&(t=!1);let n=null;const i=_(this,Z)[e];return void 0!==i&&(n=1===i.value.length&&!1===t?i.value[0]:i.value),n}dumpToObject(){const e=Object.keys(_(this,Z)),t={};let n=null;for(let i=0,r=e.length;i<r;++i)n=_(this,Z)[e[i]],t[this.getTagName(n.tag)]=this.getElementAsObject(n);return t}getTagName(e){let t=e.getNameFromDictionary();return null===t&&(t=e.getKey2()),t}getElementAsObject(e){let t=null;const n=v(e.tag),i=e.vr;if("SQ"!==i||void 0===e.value||n)t=this.getElementValueAsString(e);else{t=[];const n=e.value;let i=null;for(let e=0;e<n.length;++e){i={};const r=Object.keys(n[e]);for(let t=0;t<r.length;++t){const a=n[e][r[t]],o=this.getTagName(a.tag);"Item"!==o&&(i[o]=this.getElementAsObject(a))}t.push(i)}}return{value:t,group:e.tag.getGroup(),element:e.tag.getElement(),vr:i,vl:e.vl}}dump(){const e=Object.keys(_(this,Z));let t="\n";t+="# Dicom-File-Format\n",t+="\n",t+="# Dicom-Meta-Information-Header\n",t+="# Used TransferSyntax: ",b()?t+="Little Endian Explicit\n":t+="NOT Little Endian Explicit\n";let n=null,i=!0;for(let r=0,a=e.length;r<a;++r)n=_(this,Z)[e[r]],i&&"0x0002"!==n.tag.getGroup()&&(t+="\n",t+="# Dicom-Data-Set\n",t+="# Used TransferSyntax: ",t+=de(re(_(this,Z).x00020010.value[0])),t+="\n",i=!1),t+=this.getElementAsString(n)+"\n";return t}getElementValueAsString(e,t){let n="";if(void 0===t&&(t=!0),null==e)return n;const i=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e};if("SQ"!==e.vr&&1===e.value.length&&""===e.value[0])n+="(no value available)";else if(v(e.tag)&&e.undefinedLength)n="(PixelSequence)";else if("DA"===e.vr&&t){const t=e.value[0];let i=4,r=6;8!==t.length&&(i=5,r=8),n=new Date(parseInt(t.substring(0,4),10),parseInt(t.substring(i,i+2),10)-1,parseInt(t.substring(r,r+2),10)).toLocaleDateString()}else if("TM"===e.vr&&t){const t=e.value[0];n=t.substring(0,2)+":"+(t.length>=4?t.substring(2,4):"00")+":"+(t.length>=6?t.substring(4,6):"00")}else{let r=!1;0!==e.vr.length&&(r="O"===e.vr[0].toUpperCase());const a="FL"===e.vr||"FD"===e.vr||"DS"===e.vr;let o="";for(let s=0,l=e.value.length;s<l;++s){if(o="",0!==s&&(o+="\\"),a){let n=e.value[s];"string"==typeof n&&(n=re(n));const r=Number(n);!i(r)&&t?o+=r.toPrecision(4):o+=r.toString()}else if(r){let t=e.value[s].toString(16);t="OB"===e.vr?"00".substring(0,2-t.length)+t:"0000".substring(0,4-t.length)+t,o+=t}else"string"==typeof e.value[s]?o+=re(e.value[s]):o+=e.value[s];if(!(n.length+o.length<=65)){n+="...";break}n+=o}}return n}getElementValueAsStringFromKey(e){return this.getElementValueAsString(this.getDEFromKey(e))}getElementAsString(e,t){t=t||"";const n=e.tag.getNameFromDictionary();let i=e.value.length,r=!1;0!==e.vr.length&&(r="O"===e.vr[0].toUpperCase()),m(e.tag)||y(e.tag)?i=0:r&&(i=1);const a=v(e.tag)&&e.undefinedLength;let o=null;o="(",o+=e.tag.getGroup().substring(2).toLowerCase(),o+=",",o+=e.tag.getElement().substring(2).toLowerCase(),o+=") ",o+=e.vr,"SQ"!==e.vr&&1===e.value.length&&""===e.value[0]?(o+=" (no value available)",i=0):"na"===e.vr?(o+=" ",o+=e.value[0]):a?o+=" (PixelSequence #="+i+")":"SQ"===e.vr?(o+=" (Sequence with",e.undefinedLength?o+=" undefined":o+=" explicit",o+=" length #=",o+=e.value.length,o+=")"):r||"pi"===e.vr||"UL"===e.vr||"US"===e.vr||"SL"===e.vr||"SS"===e.vr||"FL"===e.vr||"FD"===e.vr||"AT"===e.vr?(o+=" ",o+=this.getElementValueAsString(e,!1)):(o+=" [",o+=this.getElementValueAsString(e,!1),o+="]");const s=55-o.length;if(s>0)for(let e=0;e<s;++e)o+=" ";o+=" # ",e.vl<100&&(o+=" "),e.vl<10&&(o+=" "),o+=e.vl,o+=", ",o+=i,o+=" ",o+=null!==n?n:"Unknown Tag & Data";let l=null;if("SQ"===e.vr){let n=null;for(let i=0,r=e.value.length;i<r;++i){n=e.value[i];const r=Object.keys(n);if(0===r.length)continue;const a=n.xFFFEE000;l="(Item with",a.undefinedLength?l+=" undefined":l+=" explicit",l+=" length #="+(r.length-1)+")",a.value=[l],a.vr="na",o+="\n",o+=this.getElementAsString(a,t+"  ");for(let e=0,i=r.length;e<i;++e)"xFFFEE000"!==r[e]&&(o+="\n",o+=this.getElementAsString(n[r[e]],t+"    "));l="(ItemDelimitationItem",a.undefinedLength||(l+=" for re-encoding"),l+=")";const s={tag:p(),vr:"na",vl:"0",value:[l]};o+="\n",o+=this.getElementAsString(s,t+"  ")}l="(SequenceDelimitationItem",e.undefinedLength||(l+=" for re-encod."),l+=")";const i={tag:f(),vr:"na",vl:"0",value:[l]};o+="\n",o+=this.getElementAsString(i,t)}else if(a){let n=null;for(let i=0,r=e.value.length;i<r;++i)n=e.value[i],o+="\n",n.vr="pi",o+=this.getElementAsString(n,t+"  ");const i={tag:f(),vr:"na",vl:"0",value:["(SequenceDelimitationItem)"]};o+="\n",o+=this.getElementAsString(i,t)}return t+o}getFromGroupElement(e,t){return this.getFromKey(new S(e,t).getKey())}getFromName(e){let t=null;const n=w(e);return null!==n&&(t=this.getFromKey(n.getKey())),t}getImageSize(){const e=this.getFromKey("x00280010");if(!e)throw new Error("Missing or empty DICOM image number of rows");const t=this.getFromKey("x00280011");if(!t)throw new Error("Missing or empty DICOM image number of columns");return new G([t,e,1])}getPixelSpacing(){let e=1,t=1;const n=["x00280030","x00181164","x00182010","x00280034"];for(let i=0;i<n.length;++i){const r=this.getFromKey(n[i],!0);if(r&&2===r.length){e=parseFloat(r[0]),t=parseFloat(r[1]);break}}return 0===t&&(Y.warn("Zero column spacing."),t=1),0===e&&(Y.warn("Zero row spacing."),e=1),new X([t,e,1])}getTime(){}getPixelUnit(){let e=this.getFromKey("x00281054");return e||(e=this.getFromKey("x00541001")),e||"CT"===this.getFromKey("x00080060")&&(e="HU"),e}}function $(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function ee(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,ne(e,t,"set"),n),n}function te(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,ne(e,t,"get"))}function ne(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function ie(){return"0.32.0-beta.0"}function re(e){let t=e;return e&&(t=e.trim(),t[t.length-1]===String.fromCharCode("u200B")&&(t=t.substring(0,t.length-1))),t}class ae{decode(e){let t="";for(let n=0,i=e.length;n<i;++n)t+=String.fromCharCode(e[n]);return t}}function oe(e){return"1.2.840.10008.1.2"===e}function se(e){return"1.2.840.10008.1.2.2"===e}function le(e){return"1.2.840.10008.1.2.4.50"===e||"1.2.840.10008.1.2.4.51"===e}function ce(e){return"1.2.840.10008.1.2.4.57"===e||"1.2.840.10008.1.2.4.70"===e}function ue(e){return null!==e.match(/1.2.840.10008.1.2.4.9/)}function he(e){return null!==e.match(/1.2.840.10008.1.2.5/)}function de(e){let t="Unknown";return"1.2.840.10008.1.2"===e?t="Little Endian Implicit":"1.2.840.10008.1.2.1"===e?t="Little Endian Explicit":"1.2.840.10008.1.2.1.99"===e?t="Little Endian Deflated Explicit":"1.2.840.10008.1.2.2"===e?t="Big Endian Explicit":le(e)?t="1.2.840.10008.1.2.4.50"===e?"JPEG Baseline":"JPEG Extended, Process 2+4":ce(e)?t="1.2.840.10008.1.2.4.57"===e?"JPEG Lossless, Nonhierarchical (Processes 14)":"JPEG Lossless, Non-hierarchical, 1st Order Prediction":function(e){return null!==e.match(/1.2.840.10008.1.2.4.5/)&&!le()&&!ce()||null!==e.match(/1.2.840.10008.1.2.4.6/)}(e)?t="Retired JPEG":function(e){return null!==e.match(/1.2.840.10008.1.2.4.8/)}(e)?t="JPEG-LS":ue(e)?t="1.2.840.10008.1.2.4.91"===e?"JPEG 2000 (Lossless or Lossy)":"JPEG 2000 (Lossless only)":"1.2.840.10008.1.2.4.100"===e?t="MPEG2":he(e)&&(t="RLE"),t}function Se(e,t,n){let i=null;try{8===e?i=0===t?new Uint8Array(n):new Int8Array(n):16===e?i=0===t?new Uint16Array(n):new Int16Array(n):32===e&&(i=0===t?new Uint32Array(n):new Int32Array(n))}catch(e){if(e instanceof RangeError){const e=Math.floor(Math.log(n)/Math.log(2));Y.error("Cannot allocate array of size: "+n+" (>2^"+e+").")}}return i}function xe(e){return n.includes(e)}function ge(e,t){return t?8:xe(e)?12:8}var pe=new WeakMap,me=new WeakMap,fe=new WeakMap;class ye{constructor(){var e,t,n;e=this,n={},(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t="dicomElements"))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,$(this,pe,{writable:!0,value:void 0}),$(this,me,{writable:!0,value:new ae}),$(this,fe,{writable:!0,value:te(this,me)})}decodeString(e){return te(this,me).decode(e)}decodeSpecialString(e){return te(this,fe).decode(e)}getDefaultCharacterSet(){return te(this,pe)}setDefaultCharacterSet(e){ee(this,pe,e),this.setCharacterSet(e)}setDecoderCharacterSet(e){ee(this,fe,new TextDecoder(e))}getRawDicomElements(){return this.dicomElements}getDicomElements(){return new J(this.dicomElements)}readTag(e,t){const n=e.readHex(t);t+=Uint16Array.BYTES_PER_ELEMENT;const i=e.readHex(t);return t+=Uint16Array.BYTES_PER_ELEMENT,{tag:new S(n,i),endOffset:t}}readItemDataElement(e,t,n){const i={};let r=this.readDataElement(e,t,n);if(t=r.endOffset,y(r.tag))return{data:i,endOffset:r.endOffset,isSeqDelim:!0};if(i[r.tag.getKey()]={tag:r.tag,vr:"NONE",vl:r.vl,undefinedLength:r.undefinedLength},r.undefinedLength){let a=!1;for(;!a;)r=this.readDataElement(e,t,n),t=r.endOffset,a=m(r.tag),a||(i[r.tag.getKey()]=r)}else{const a=t;for(t-=r.vl;t<a;)r=this.readDataElement(e,t,n),t=r.endOffset,i[r.tag.getKey()]=r}return{data:i,endOffset:t,isSeqDelim:!1}}readPixelItemDataElement(e,t,n){const i=[];let r=this.readDataElement(e,t,n);const a=r.vl;t=r.endOffset;let o=!1;for(;!o;)r=this.readDataElement(e,t,n),t=r.endOffset,o=y(r.tag),o||(r.vr="OB",i.push(r));return{data:i,endOffset:t,offsetTableVl:a}}readDataElement(e,t,n){const i=this.readTag(e,t),r=i.tag;t=i.endOffset;let a=null,o=!1;r.isWithVR()?n?(a=r.getVrFromDictionary(),null===a&&(a="UN"),o=!0):(a=this.decodeString(e.readUint8Array(t,2)),t+=2*Uint8Array.BYTES_PER_ELEMENT,o=xe(a),o&&(t+=2*Uint8Array.BYTES_PER_ELEMENT)):(a="NONE",o=!0);let s=0;o?(s=e.readUint32(t),t+=Uint32Array.BYTES_PER_ELEMENT):(s=e.readUint16(t),t+=Uint16Array.BYTES_PER_ELEMENT);let l=!1;4294967295===s&&(l=!0,s=0),r.isPrivate()&&"UN"===a&&0===s&&(a="SQ");let c=t,u=c+s,h=null;if(v(r)&&l){const i=this.readPixelItemDataElement(e,t,n);t=i.endOffset,c+=i.offsetTableVl,h=i.data,u=t,s=t-c}else if("SQ"===a){let i;if(h=[],l){let r=!1;for(;!r;)i=this.readItemDataElement(e,t,n),r=i.isSeqDelim,t=i.endOffset,r||h.push(i.data);u=t,s=t-c}else if(0!==s){const r=t+s;for(;t<r;)i=this.readItemDataElement(e,t,n),h.push(i.data),t=i.endOffset;u=t,s=t-c}}const d={tag:r,vr:a,vl:s,startOffset:c,endOffset:u};return l&&(d.undefinedLength=l),h&&(d.items=h),d}interpretElement(e,t,n,a){const o=e.tag,s=e.vl,l=e.vr,c=e.startOffset;let u=null;const h=r[l];if(v(o))if(e.undefinedLength){u=[];for(let i=0;i<e.items.length;++i)u.push(this.interpretElement(e.items[i],t,n,a));delete e.items}else if(a>8&&"OB"===l&&Y.warn("Reading DICOM pixel data with bitsAllocated>8 and OB VR."),u=[],1===a)u.push(t.readBinaryArray(c,s));else if(8===a)0===n?u.push(t.readUint8Array(c,s)):u.push(t.readInt8Array(c,s));else{if(16!==a)throw new Error("Unsupported bits allocated: "+a);0===n?u.push(t.readUint16Array(c,s)):u.push(t.readInt16Array(c,s))}else if(void 0!==h)if("Uint8"===h)u=t.readUint8Array(c,s);else if("Uint16"===h)u=t.readUint16Array(c,s);else if("Uint32"===h)u=t.readUint32Array(c,s);else if("Uint64"===h)u=t.readUint64Array(c,s);else if("Int16"===h)u=t.readInt16Array(c,s);else if("Int32"===h)u=t.readInt32Array(c,s);else if("Int64"===h)u=t.readInt64Array(c,s);else if("Float32"===h)u=t.readFloat32Array(c,s);else if("Float64"===h)u=t.readFloat64Array(c,s);else{if("string"!==h)throw Error("Unknown VR type: "+h);{const e=t.readUint8Array(c,s);u=i.includes(l)?this.decodeSpecialString(e):this.decodeString(e),u=u.split("\\")}}else if("ox"===l)u=8===a?t.readUint8Array(c,s):t.readUint16Array(c,s);else if("xs"===l)u=0===n?t.readUint16Array(c,s):t.readInt16Array(c,s);else if("AT"===l){const e=t.readUint16Array(c,s);u=[];for(let t=0,n=e.length;t<n;t+=2){const n=e[t].toString(16),i=e[t+1].toString(16);let r="(";r+="0000".substring(0,4-n.length)+n.toUpperCase(),r+=",",r+="0000".substring(0,4-i.length)+i.toUpperCase(),r+=")",u.push(r)}}else if("SQ"===l){u=[];for(let i=0;i<e.items.length;++i){const r=e.items[i],o={},s=Object.keys(r);for(let e=0;e<s.length;++e){const i=r[s[e]];i.value=this.interpretElement(i,t,n,a),o[s[e]]=i}u.push(o)}delete e.items}else"NONE"===l||Y.warn("Unknown VR: "+l+" (for tag "+e.tag.getKey()+")"),u=[];return u}interpret(e,t,n,i){const r=Object.keys(e);for(let a=0;a<r.length;++a){const o=e[r[a]];void 0===o.value&&(o.value=this.interpretElement(o,t,n,i)),delete o.startOffset,delete o.endOffset}}parse(e){let t=0,n="",i=null;const r=new M(e);let a=new M(e);t=128;const o=this.decodeString(r.readUint8Array(t,4));if(t+=4*Uint8Array.BYTES_PER_ELEMENT,"DICM"===o){i=this.readDataElement(r,t,!1),i.value=this.interpretElement(i,r),t=i.endOffset,this.dicomElements[i.tag.getKey()]=i;const e=t+parseInt(i.value[0],10);for(;t<e;)i=this.readDataElement(r,t,!1),t=i.endOffset,this.dicomElements[i.tag.getKey()]=i;if(i=this.dicomElements.x00020010,void 0===i)throw new Error("Not a valid DICOM file (no TransferSyntaxUID found)");i.value=this.interpretElement(i,r),n=re(i.value[0])}else{Y.warn("No DICM prefix, trying to guess tansfer syntax."),i=this.readDataElement(a,0,!1);const e=function(e){const t="0x0008",n=e.tag.getGroup();if("0x0800"!==n&&n!==t)throw new Error("Not a valid DICOM file (no magic DICM word found and first element not in 0x0008 group)");const i=e.vr,r=i.charCodeAt(0),a=i.charCodeAt(1),o=!(r>=65&&r<=90&&a>=65&&a<=90);let s=null;if(n===t)s=o?"1.2.840.10008.1.2":"1.2.840.10008.1.2.1";else{if(o)throw new Error("Not a valid DICOM file (no magic DICM word foundand implicit VR big endian detected)");s="1.2.840.10008.1.2.2"}const l={tag:new S("0x0002","0x0010"),vr:"UI"};return l.value=[s+" "],l.vl=l.value[0].length,l.startOffset=e.startOffset,l.endOffset=l.startOffset+l.vl,l}(i);this.dicomElements[e.tag.getKey()]=e,n=re(e.value[0]),t=0}if(!function(e){return"1.2.840.10008.1.2"===e||"1.2.840.10008.1.2.1"===e||"1.2.840.10008.1.2.2"===e||le(e)||ce(e)||ue(e)||he(e)}(n))throw new Error("Unsupported DICOM transfer syntax: '"+n+"' ("+de(n)+")");let s=!1;for(oe(n)&&(s=!0),se(n)&&(a=new M(e,!1));t<e.byteLength;)i=this.readDataElement(a,t,s),t=i.endOffset,void 0===this.dicomElements[i.tag.getKey()]?this.dicomElements[i.tag.getKey()]=i:Y.warn("Not saving duplicate tag: "+i.tag.getKey());if(isNaN(t))throw new Error("Problem while parsing, bad offset");e.byteLength!==t&&Y.warn("Did not reach the end of the buffer: "+t+" != "+e.byteLength);let l=0,c=16;if(void 0!==this.dicomElements.x7FE00010&&(i=this.dicomElements.x00280103,void 0!==i?(i.value=this.interpretElement(i,a),l=i.value[0]):Y.warn("Reading DICOM pixel data with default pixelRepresentation."),i=this.dicomElements.x00280100,void 0!==i?(i.value=this.interpretElement(i,a),c=i.value[0]):Y.warn("Reading DICOM pixel data with default bitsAllocated.")),void 0!==this.getDefaultCharacterSet()&&this.setDecoderCharacterSet(this.getDefaultCharacterSet()),i=this.dicomElements.x00080005,void 0!==i){let e;i.value=this.interpretElement(i,a),1===i.value.length?e=re(i.value[0]):(e=re(i.value[1]),Y.warn("Unsupported character set with code extensions: '"+e+"'.")),this.setDecoderCharacterSet(function(e){let t="utf-8";return"ISO_IR 100"===e?t="iso-8859-1":"ISO_IR 101"===e?t="iso-8859-2":"ISO_IR 109"===e?t="iso-8859-3":"ISO_IR 110"===e?t="iso-8859-4":"ISO_IR 144"===e?t="iso-8859-5":"ISO_IR 127"===e?t="iso-8859-6":"ISO_IR 126"===e?t="iso-8859-7":"ISO_IR 138"===e?t="iso-8859-8":"ISO_IR 148"===e?t="iso-8859-9":"ISO_IR 13"===e?t="shift-jis":"ISO_IR 166"===e?t="iso-8859-11":"ISO 2022 IR 87"===e?t="iso-2022-jp":"ISO 2022 IR 149"===e||"ISO 2022 IR 58"===e||("ISO_IR 192"===e?t="utf-8":"GB18030"===e?t="gb18030":"GB2312"===e?t="gb2312":"GBK"===e&&(t="chinese")),t}(e))}if(this.interpret(this.dicomElements,a,l,c),i=this.dicomElements.x7FE00010,void 0!==i&&i.undefinedLength){let e=1;void 0!==this.dicomElements.x00280008&&(e=re(this.dicomElements.x00280008.value[0]));const t=i.value;if(t.length>1&&t.length>e){const n=t.length/e,r=[];let a=0;for(let i=0;i<e;++i){a=i*n;let e=0;for(let i=0;i<n;++i)e+=t[a+i].length;const o=new t[0].constructor(e);let s=0;for(let e=0;e<n;++e)o.set(t[a+e],s),s+=t[a+e].length;r[i]=o}i.value=r}}}}function De(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function ve(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Ce(e,t,"get"))}function we(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Ce(e,t,"set"),n),n}function Ce(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Te=new WeakMap,Ie=new WeakMap;class Le{constructor(e,t){De(this,Te,{writable:!0,value:!0}),De(this,Ie,{writable:!0,value:void 0}),void 0!==t&&we(this,Te,t),we(this,Ie,new DataView(e))}writeUint8(e,t){return ve(this,Ie).setUint8(e,t),e+Uint8Array.BYTES_PER_ELEMENT}writeInt8(e,t){return ve(this,Ie).setInt8(e,t),e+Int8Array.BYTES_PER_ELEMENT}writeUint16(e,t){return ve(this,Ie).setUint16(e,t,ve(this,Te)),e+Uint16Array.BYTES_PER_ELEMENT}writeInt16(e,t){return ve(this,Ie).setInt16(e,t,ve(this,Te)),e+Int16Array.BYTES_PER_ELEMENT}writeUint32(e,t){return ve(this,Ie).setUint32(e,t,ve(this,Te)),e+Uint32Array.BYTES_PER_ELEMENT}writeUint64(e,t){return ve(this,Ie).setBigUint64(e,t,ve(this,Te)),e+BigUint64Array.BYTES_PER_ELEMENT}writeInt32(e,t){return ve(this,Ie).setInt32(e,t,ve(this,Te)),e+Int32Array.BYTES_PER_ELEMENT}writeInt64(e,t){return ve(this,Ie).setBigInt64(e,t,ve(this,Te)),e+BigInt64Array.BYTES_PER_ELEMENT}writeFloat32(e,t){return ve(this,Ie).setFloat32(e,t,ve(this,Te)),e+Float32Array.BYTES_PER_ELEMENT}writeFloat64(e,t){return ve(this,Ie).setFloat64(e,t,ve(this,Te)),e+Float64Array.BYTES_PER_ELEMENT}writeHex(e,t){const n=parseInt(t.substring(2),16);return ve(this,Ie).setUint16(e,n,ve(this,Te)),e+Uint16Array.BYTES_PER_ELEMENT}writeBinaryArray(e,t){if(t.length%8!=0)throw new Error("Cannot write boolean array as binary.");let n=null,i=null;for(let r=0,a=t.length;r<a;r+=8){n=0;for(let e=0;e<8;++e)i=0===t[r+e]?0:1,n+=i<<e;e=this.writeUint8(e,n)}return e}writeUint8Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint8(e,t[n]);return e}writeInt8Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt8(e,t[n]);return e}writeUint16Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint16(e,t[n]);return e}writeInt16Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt16(e,t[n]);return e}writeUint32Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint32(e,t[n]);return e}writeUint64Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint64(e,t[n]);return e}writeInt32Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt32(e,t[n]);return e}writeInt64Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt64(e,t[n]);return e}writeFloat32Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeFloat32(e,t[n]);return e}writeFloat64Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeFloat64(e,t[n]);return e}}function be(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function Pe(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Oe(e,t,"get"))}function Ae(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Oe(e,t,"set"),n),n}function Oe(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}let Fe=0;function Ee(e){const t="1.2.826.0.1.3680043.9.7278.1.";let n="";if("ImplementationClassUID"===e)n=t+"0.32.0-beta.0";else{const i="."+(new Date).toISOString().replace(/\D/g,"").substring(0,14);Fe+=1;const r="."+Fe;n=t;const a=t.length+r.length+i.length,o=Math.min(e.length,64-a);if(o>1){let t="";for(let n=0;n<o;++n)t+=e.charCodeAt(n);n+=t.substring(0,o)}n+=i+r}return n}function Re(e){return e%2==0}function Me(e){const t=r[e];return void 0!==t&&"string"===t}function qe(e,t){const n=new Uint8Array(e.length+1);return n.set(e),n.set(t,e.length),n}class Ue{encode(e){const t=new Uint8Array(e.length);for(let n=0,i=e.length;n<i;++n)t[n]=e.charCodeAt(n);return t}}var Qe=new WeakMap,ke=new WeakMap,Be=new WeakMap,Ne=new WeakMap,We=new WeakMap,Ve=new WeakMap;function Ge(e){if("UN"===e.vr){const t=e.tag.getVrFromDictionary();null!==t&&e.vr!==t&&(e.vr=t,Y.info("Element "+e.tag.getGroup()+" "+e.tag.getElement()+" VR changed from UN to "+e.vr))}}function ze(e){const t=w(e);return{tag:t,vr:t.getVrFromDictionary()}}function He(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function je(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Ye(e,t,"get"))}function Xe(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Ye(e,t,"set"),n),n}function Ye(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var _e=new WeakMap,Ke=new WeakMap,Ze=new WeakMap,Je=new WeakMap;class $e{constructor(e,t){He(this,_e,{writable:!0,value:void 0}),He(this,Ke,{writable:!0,value:null}),He(this,Ze,{writable:!0,value:!1}),He(this,Je,{writable:!0,value:void 0}),Xe(this,_e,e),Xe(this,Je,Math.pow(2,t))}getRSI(){return je(this,_e)}isReady(){return je(this,Ze)}initialise(){if(!je(this,Ze)){Xe(this,Ke,new Float32Array(je(this,Je)));for(let e=0;e<je(this,Je);++e)je(this,Ke)[e]=je(this,_e).apply(e);Xe(this,Ze,!0)}}getLength(){return je(this,Je)}getValue(e){return je(this,Ke)[e]}}function et(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function tt(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,it(e,t,"get"))}function nt(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,it(e,t,"set"),n),n}function it(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var rt=new WeakMap,at=new WeakMap,ot=new WeakMap,st=new WeakMap,lt=new WeakMap,ct=new WeakMap;class ut{constructor(e,t){et(this,rt,{writable:!0,value:void 0}),et(this,at,{writable:!0,value:void 0}),et(this,ot,{writable:!0,value:null}),et(this,st,{writable:!0,value:null}),et(this,lt,{writable:!0,value:!1}),et(this,ct,{writable:!0,value:0}),nt(this,rt,e),nt(this,at,t)}getWindowLevel(){return tt(this,st)}isSigned(){return tt(this,at)}getRescaleLut(){return tt(this,rt)}isReady(){return tt(this,lt)}setWindowLevel(e){if(nt(this,st,e),nt(this,ct,0),tt(this,st).setSignedOffset(0),tt(this,at)){const e=tt(this,rt).getLength();nt(this,ct,e/2),tt(this,st).setSignedOffset(tt(this,rt).getRSI().getSlope()*tt(this,ct))}nt(this,lt,!1)}update(){if(tt(this,lt))return;tt(this,rt).isReady()||tt(this,rt).initialise();const e=tt(this,rt).getLength();tt(this,ot)||nt(this,ot,new Uint8ClampedArray(e));for(let t=0;t<e;++t)tt(this,ot)[t]=tt(this,st).apply(tt(this,rt).getValue(t));nt(this,lt,!0)}getLength(){return tt(this,ot).length}getValue(e){return tt(this,ot)[e+tt(this,ct)]}}const ht=256;function dt(e){const t=[];for(let n=0;n<ht;++n)t.push(e(n));return t}function St(e){return e}function xt(e){return 255-e}const gt={plain:{red:dt(St),green:dt(St),blue:dt(St)},invPlain:{red:dt(xt),green:dt(xt),blue:dt(xt)},rainbow:{blue:[0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204,208,212,216,220,224,228,232,236,240,244,248,252,255,247,239,231,223,215,207,199,191,183,175,167,159,151,143,135,127,119,111,103,95,87,79,71,63,55,47,39,31,23,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,16,24,32,40,48,56,64,72,80,88,96,104,112,120,128,136,144,152,160,168,176,184,192,200,208,216,224,232,240,248,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,251,249,247,245,243,241,239,237,235,233,231,229,227,225,223,221,219,217,215,213,211,209,207,205,203,201,199,197,195,193,192,189,186,183,180,177,174,171,168,165,162,159,156,153,150,147,144,141,138,135,132,129,126,123,120,117,114,111,108,105,102,99,96,93,90,87,84,81,78,75,72,69,66,63,60,57,54,51,48,45,42,39,36,33,30,27,24,21,18,15,12,9,6,3],red:[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,62,60,58,56,54,52,50,48,46,44,42,40,38,36,34,32,30,28,26,24,22,20,18,16,14,12,10,8,6,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204,208,212,216,220,224,228,232,236,240,244,248,252,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255]},hot:{red:dt((function(e){const t=3*e;return t>255?255:t})),green:dt((function(e){const t=ht/3;let n=0;return e>=t&&(n=3*(e-t),n>255)?255:n})),blue:dt((function(e){const t=ht/3;let n=0;return e>=2*t&&(n=3*(e-2*t),n>255)?255:n}))},hot_iron:{red:[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,255],blue:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204,208,212,216,220,224,228,232,236,240,244,248,252,255]},pet:{red:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,171,173,175,177,179,181,183,185,187,189,191,193,195,197,199,201,203,205,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,128,126,124,122,120,118,116,114,112,110,108,106,104,102,100,98,96,94,92,90,88,86,84,82,80,78,76,74,72,70,68,66,64,63,61,59,57,55,53,51,49,47,45,43,41,39,37,35,33,31,29,27,25,23,21,19,17,15,13,11,9,7,5,3,1,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,255],blue:[0,1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,185,187,189,191,193,195,197,199,201,203,205,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255,252,248,244,240,236,232,228,224,220,216,212,208,204,200,196,192,188,184,180,176,172,168,164,160,156,152,148,144,140,136,132,128,124,120,116,112,108,104,100,96,92,88,84,80,76,72,68,64,60,56,52,48,44,40,36,32,28,24,20,16,12,8,4,0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,85,89,93,97,101,105,109,113,117,121,125,129,133,137,141,145,149,153,157,161,165,170,174,178,182,186,190,194,198,202,206,210,214,218,222,226,230,234,238,242,246,250,255]},hot_metal_blue:{red:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,9,12,15,18,21,24,26,29,32,35,38,41,44,47,50,52,55,57,59,62,64,66,69,71,74,76,78,81,83,85,88,90,93,96,99,102,105,108,111,114,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,166,169,172,175,178,181,184,187,190,194,198,201,205,209,213,217,221,224,228,232,236,240,244,247,251,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,9,11,13,15,17,19,21,23,24,26,28,30,32,34,36,38,40,41,43,45,47,49,51,53,55,56,58,60,62,64,66,68,70,72,73,75,77,79,81,83,85,87,88,90,92,94,96,98,100,102,104,105,107,109,111,113,115,117,119,120,122,124,126,128,130,132,134,136,137,139,141,143,145,147,149,151,152,154,156,158,160,162,164,166,168,169,171,173,175,177,179,181,183,184,186,188,190,192,194,196,198,200,201,203,205,207,209,211,213,215,216,218,220,222,224,226,228,229,231,233,235,237,239,240,242,244,246,248,250,251,253,255],blue:[0,2,4,6,8,10,12,14,16,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,184,186,188,190,192,194,196,198,200,197,194,191,188,185,182,179,176,174,171,168,165,162,159,156,153,150,144,138,132,126,121,115,109,103,97,91,85,79,74,68,62,56,50,47,44,41,38,35,32,29,26,24,21,18,15,12,9,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,9,12,15,18,21,24,26,29,32,35,38,41,44,47,50,53,56,59,62,65,68,71,74,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,176,179,182,185,188,191,194,197,200,203,206,210,213,216,219,223,226,229,232,236,239,242,245,249,252,255]},pet_20step:{red:[0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,96,96,96,96,96,96,96,96,96,96,96,96,96,112,112,112,112,112,112,112,112,112,112,112,112,112,128,128,128,128,128,128,128,128,128,128,128,128,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,64,64,64,64,64,64,64,64,64,64,64,64,224,224,224,224,224,224,224,224,224,224,224,224,224,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,192,192,192,192,192,192,192,192,192,192,192,192,192,176,176,176,176,176,176,176,176,176,176,176,176,176,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,96,96,96,96,96,96,96,96,96,96,96,96,96,112,112,112,112,112,112,112,112,112,112,112,112,112,128,128,128,128,128,128,128,128,128,128,128,128,96,96,96,96,96,96,96,96,96,96,96,96,96,144,144,144,144,144,144,144,144,144,144,144,144,144,192,192,192,192,192,192,192,192,192,192,192,192,192,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,208,208,208,208,208,208,208,208,208,208,208,208,208,176,176,176,176,176,176,176,176,176,176,176,176,176,144,144,144,144,144,144,144,144,144,144,144,144,96,96,96,96,96,96,96,96,96,96,96,96,96,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255],blue:[0,0,0,0,0,0,0,0,0,0,0,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,112,112,112,112,112,112,112,112,112,112,112,112,128,128,128,128,128,128,128,128,128,128,128,128,128,176,176,176,176,176,176,176,176,176,176,176,176,176,192,192,192,192,192,192,192,192,192,192,192,192,192,224,224,224,224,224,224,224,224,224,224,224,224,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,64,64,64,64,64,64,64,64,64,64,64,64,80,80,80,80,80,80,80,80,80,80,80,80,80,96,96,96,96,96,96,96,96,96,96,96,96,96,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255]}};function pt(e,t,n){mt(e,t),t.set(e,n)}function mt(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function ft(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,vt(e,t,"get"))}function yt(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function Dt(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,vt(e,t,"set"),n),n}function vt(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}const wt={CT:{mediastinum:{center:40,width:400},lung:{center:-500,width:1500},bone:{center:500,width:2e3},brain:{center:40,width:80},head:{center:90,width:350}}};var Ct=new WeakMap,Tt=new WeakMap,It=new WeakMap,Lt=new WeakMap,bt=new WeakMap,Pt=new WeakMap,At=new WeakMap,Ot=new WeakMap,Ft=new WeakMap,Et=new WeakSet;class Rt{constructor(e,t){var n;if(mt(this,n=Et),n.add(this),pt(this,Ct,{writable:!0,value:void 0}),pt(this,Tt,{writable:!0,value:void 0}),pt(this,It,{writable:!0,value:0}),pt(this,Lt,{writable:!0,value:0}),pt(this,bt,{writable:!0,value:255}),pt(this,Pt,{writable:!0,value:null}),pt(this,At,{writable:!0,value:null}),pt(this,Ot,{writable:!0,value:null}),pt(this,Ft,{writable:!0,value:null}),t<1)throw new Error("Window width shall always be greater than or equal to 1");Dt(this,Ct,e),Dt(this,Tt,t),yt(this,Et,Mt).call(this)}getCenter(){return ft(this,Ct)}getWidth(){return ft(this,Tt)}setRange(e,t){Dt(this,Lt,parseInt(e,10)),Dt(this,bt,parseInt(t,10)),yt(this,Et,Mt).call(this)}setSignedOffset(e){Dt(this,It,e),yt(this,Et,Mt).call(this)}apply(e){return e<=ft(this,Pt)?ft(this,Lt):e>ft(this,At)?ft(this,bt):parseInt(e*ft(this,Ot)+ft(this,Ft),10)}equals(e){return null!==e&&this.getCenter()===e.getCenter()&&this.getWidth()===e.getWidth()}toString(){return this.getCenter()+", "+this.getWidth()}}function Mt(){const e=ft(this,Ct)+ft(this,It);Dt(this,Pt,e-.5-(ft(this,Tt)-1)/2),Dt(this,At,e-.5+(ft(this,Tt)-1)/2),Dt(this,Ot,(ft(this,bt)-ft(this,Lt))/(ft(this,Tt)-1)),Dt(this,Ft,(-(e-.5)/(ft(this,Tt)-1)+.5)*(ft(this,bt)-ft(this,Lt))+ft(this,Lt))}function qt(e){return function(e){return n=e,.001172549*(t={r:parseInt(n.substring(1,3),16),g:parseInt(n.substring(3,5),16),b:parseInt(n.substring(5,7),16)}).r+.002301961*t.g+447059e-9*t.b<.5;var t,n}(e)?"#fff":"#000"}const Ut={x:95.0489,y:100,z:108.884};function Qt(e){const t={Yellow:"#ffff00",Red:"#ff0000",White:"#ffffff",Green:"#008000",Blue:"#0000ff",Lime:"#00ff00",Fuchsia:"#ff00ff",Black:"#000000"};let n="#ffff00";return void 0!==t[e]&&(n=t[e]),n}function kt(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function Bt(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Wt(e,t,"get"))}function Nt(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Wt(e,t,"set"),n),n}function Wt(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Vt=new WeakMap,Gt=new WeakMap,zt=new WeakMap;class Ht{constructor(e,t,n){kt(this,Vt,{writable:!0,value:void 0}),kt(this,Gt,{writable:!0,value:void 0}),kt(this,zt,{writable:!0,value:void 0}),Nt(this,Vt,e),Nt(this,Gt,t),Nt(this,zt,n)}getX(){return Bt(this,Vt)}getY(){return Bt(this,Gt)}getZ(){return Bt(this,zt)}equals(e){return null!==e&&this.getX()===e.getX()&&this.getY()===e.getY()&&this.getZ()===e.getZ()}toString(){return"("+this.getX()+", "+this.getY()+", "+this.getZ()+")"}norm(){return Math.sqrt(this.getX()*this.getX()+this.getY()*this.getY()+this.getZ()*this.getZ())}crossProduct(e){return new Ht(this.getY()*e.getZ()-e.getY()*this.getZ(),this.getZ()*e.getX()-e.getZ()*this.getX(),this.getX()*e.getY()-e.getX()*this.getY())}dotProduct(e){return this.getX()*e.getX()+this.getY()*e.getY()+this.getZ()*e.getZ()}}function jt(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function Xt(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,_t(e,t,"get"))}function Yt(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,_t(e,t,"set"),n),n}function _t(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52));const Kt=1e4*Number.EPSILON;function Zt(e,t,n){return void 0===n&&(n=Number.EPSILON),Math.abs(e-t)<n}var Jt=new WeakMap,$t=new WeakMap;class en{constructor(e){jt(this,Jt,{writable:!0,value:void 0}),jt(this,$t,{writable:!0,value:void 0}),Yt(this,Jt,e)}get(e,t){return Xt(this,Jt)[3*e+t]}getInverse(){return void 0===Xt(this,$t)&&Yt(this,$t,function(e){const t=e.get(0,0),n=e.get(0,1),i=e.get(0,2),r=e.get(1,0),a=e.get(1,1),o=e.get(1,2),s=e.get(2,0),l=e.get(2,1),c=e.get(2,2),u=a*c-o*l,h=o*s-r*c,d=r*l-a*s;let S=t*u+n*h+i*d;if(0!==S)return S=1/S,new en([S*u,S*(i*l-n*c),S*(n*o-i*a),S*h,S*(t*c-i*s),S*(i*r-t*o),S*d,S*(n*s-t*l),S*(t*a-n*r)]);Y.warn("Cannot invert 3*3 matrix with zero determinant.")}(this)),Xt(this,$t)}equals(e,t){for(let n=0;n<3;++n)for(let i=0;i<3;++i)if(!Zt(this.get(n,i),e.get(n,i),t))return!1;return!0}toString(){let e="[";for(let t=0;t<3;++t){0!==t&&(e+=", \n ");for(let n=0;n<3;++n)0!==n&&(e+=", "),e+=this.get(t,n)}return e+="]",e}multiply(e){const t=[];for(let n=0;n<3;++n)for(let i=0;i<3;++i){let r=0;for(let t=0;t<3;++t)r+=this.get(n,t)*e.get(t,i);t.push(r)}return new en(t)}getAbs(){const e=[];for(let t=0;t<3;++t)for(let n=0;n<3;++n)e.push(Math.abs(this.get(t,n)));return new en(e)}multiplyArray3D(e){if(3!==e.length)throw new Error("Cannot multiply 3x3 matrix with non 3D array: ",e.length);const t=[];for(let n=0;n<3;++n){let i=0;for(let t=0;t<3;++t)i+=this.get(n,t)*e[t];t.push(i)}return t}multiplyVector3D(e){const t=this.multiplyArray3D([e.getX(),e.getY(),e.getZ()]);return new Ht(t[0],t[1],t[2])}multiplyPoint3D(e){const t=this.multiplyArray3D([e.getX(),e.getY(),e.getZ()]);return new gn(t[0],t[1],t[2])}multiplyIndex3D(e){const t=this.multiplyArray3D(e.getValues());return new k(t)}getRowAbsMax(e){const t=[Math.abs(this.get(e,0)),Math.abs(this.get(e,1)),Math.abs(this.get(e,2))],n=Math.max.apply(null,t),i=t.indexOf(n);return{value:this.get(e,i),index:i}}getColAbsMax(e){const t=[Math.abs(this.get(0,e)),Math.abs(this.get(1,e)),Math.abs(this.get(2,e))],n=Math.max.apply(null,t),i=t.indexOf(n);return{value:this.get(i,e),index:i}}asOneAndZeros(){const e=[];for(let t=0;t<3;++t){const n=this.getRowAbsMax(t),i=n.value>0?1:-1;for(let t=0;t<3;++t)t===n.index?e.push(1*i):e.push(0)}return new en(e)}getThirdColMajorDirection(){return this.getColAbsMax(2).index}}function tn(){return new en([1,0,0,0,1,0,0,0,1])}function nn(){return new en([1,0,0,0,0,1,0,-1,0])}function rn(e){let t=null;return"axial"===e?t=tn():"coronal"===e?t=nn():"sagittal"===e&&(t=new en([0,0,-1,1,0,0,0,-1,0])),t}function an(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function on(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,ln(e,t,"get"))}function sn(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,ln(e,t,"set"),n),n}function ln(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var cn=new WeakMap,un=new WeakMap;class hn{constructor(e,t){an(this,cn,{writable:!0,value:void 0}),an(this,un,{writable:!0,value:void 0}),sn(this,cn,e),sn(this,un,t)}getX(){return on(this,cn)}getY(){return on(this,un)}equals(e){return null!==e&&this.getX()===e.getX()&&this.getY()===e.getY()}toString(){return"("+this.getX()+", "+this.getY()+")"}getDistance(e){return Math.sqrt((this.getX()-e.getX())*(this.getX()-e.getX())+(this.getY()-e.getY())*(this.getY()-e.getY()))}getRound(){return new hn(Math.round(this.getX()),Math.round(this.getY()))}}var dn=new WeakMap,Sn=new WeakMap,xn=new WeakMap;class gn{constructor(e,t,n){an(this,dn,{writable:!0,value:void 0}),an(this,Sn,{writable:!0,value:void 0}),an(this,xn,{writable:!0,value:void 0}),sn(this,dn,e),sn(this,Sn,t),sn(this,xn,n)}getX(){return on(this,dn)}getY(){return on(this,Sn)}getZ(){return on(this,xn)}equals(e){return null!==e&&this.getX()===e.getX()&&this.getY()===e.getY()&&this.getZ()===e.getZ()}isSimilar(e,t){return null!==e&&Zt(this.getX(),e.getX(),t)&&Zt(this.getY(),e.getY(),t)&&Zt(this.getZ(),e.getZ(),t)}toString(){return"("+this.getX()+", "+this.getY()+", "+this.getZ()+")"}getDistance(e){return Math.sqrt((this.getX()-e.getX())*(this.getX()-e.getX())+(this.getY()-e.getY())*(this.getY()-e.getY())+(this.getZ()-e.getZ())*(this.getZ()-e.getZ()))}minus(e){return new Ht(this.getX()-e.getX(),this.getY()-e.getY(),this.getZ()-e.getZ())}}var pn=new WeakMap;class mn{constructor(e){if(an(this,pn,{writable:!0,value:void 0}),!e||void 0===e)throw new Error("Cannot create point with no values.");if(0===e.length)throw new Error("Cannot create point with empty values.");if(!e.every((function(e){return!isNaN(e)})))throw new Error("Cannot create point with non number values.");sn(this,pn,e)}get(e){return on(this,pn)[e]}length(){return on(this,pn).length}toString(){return"("+on(this,pn).toString()+")"}getValues(){return on(this,pn).slice()}canCompare(e){return!!e&&this.length()===e.length()}equals(e){if(!this.canCompare(e))return!1;for(let t=0,n=this.length();t<n;++t)if(this.get(t)!==e.get(t))return!1;return!0}compare(e){if(!this.canCompare(e))return null;const t=[];for(let n=0,i=this.length();n<i;++n)this.get(n)!==e.get(n)&&t.push(n);return t}get3D(){return new gn(this.get(0),this.get(1),this.get(2))}add(e){if(!this.canCompare(e))return null;const t=[],n=this.getValues(),i=e.getValues();for(let e=0;e<n.length;++e)t.push(n[e]+i[e]);return new mn(t)}mergeWith3D(e){const t=this.getValues();return t[0]=e.getX(),t[1]=e.getY(),t[2]=e.getZ(),new mn(t)}}function fn(e,t,n,i,r,a,o,s){void 0===o&&(o=!1),void 0===s&&(s=!1);let l=t;o?(a*=-1,s?l-=(r-1)*i:i*=-1):s&&(l+=(r-1)*i,i*=-1);const c=a-r*i;let u=0,h=0;return{next:function(){if(u<n){const t={value:e(l),done:!1,index:l};return l+=i,++u,++h,h===r&&(h=0,l+=c),t}return{done:!0,index:l}}}}function yn(e){const t=[];let n=e.next();for(;!n.done;)t.push(n.value),n=e.next();return t}function Dn(e,t,n,i){const r=e.getGeometry().getSize();let a=2;i&&void 0!==i&&(a=i.getColAbsMax(2).index);const o=t.getValues(),s=new k(o.map((function(e,t){return t===a||t>2?e:0})));let l=r.indexToOffset(s);void 0===n&&(n=!1);let c=null;c=n?function(t){return e.getRescaledValueAtOffset(t)}:function(t){return e.getValueAtOffset(t)};const u=r.get(0),h=r.get(1),d=r.get(2);let S=r.getDimSize(2);const x=e.getNumberOfComponents(),g=1===e.getPlanarConfiguration(),p=function(e,t,n,i,r,a,o,s){return 1===x?fn(e,t,n,i,r,a,o,s):3===x?function(e,t,n,i,r,a,o,s,l){const c=[];return l?(c.push(fn(e,t,n,i,r,a,o,s)),c.push(fn(e,t+n*i,n,i,r,a,o,s)),c.push(fn(e,t+2*n*i,n,i,r,a,o,s))):(i*=3,a*=3,c.push(fn(e,t,n,i,r,a,o,s)),c.push(fn(e,t+1,n,i,r,a,o,s)),c.push(fn(e,t+2,n,i,r,a,o,s))),{next:function(){const e=c[0].next(),t=c[1].next(),n=c[2].next();return e.done?{done:!0,index:n.index}:{value:[e.value,t.value,n.value],done:!1,index:[e.index,t.index,n.index]}}}}(e,3*t,n,i,r,a,o,s,g):void 0};let m=null;if(i&&void 0!==i){const e=i.getColAbsMax(0),t=i.getColAbsMax(2),n=!1,r=!1;let a=null;if(2===t.index)a=u*h,m=0===e.index?p(c,l,a,1,u,u,n,r):p(c,l,a,u,h,1,n,r);else if(0===t.index)a=d*h,m=1===e.index?p(c,l,a,u,h,S,n,r):p(c,l,a,S,d,u,n,r);else{if(1!==t.index)throw new Error("Unknown direction: "+t.index);a=d*u,m=0===e.index?p(c,l,a,1,u,S,n,r):p(c,l,a,S,d,1,n,r)}}else if(1===e.getNumberOfComponents())m=function(e,t,n,i){void 0===i&&(i=1);let r=t;return{next:function(){if(r<n){const t={value:e(r),done:!1,index:r};return r+=i,t}return{done:!0,index:n}}}}(c,l,l+S);else{if(3!==e.getNumberOfComponents())throw new Error("Unsupported number of components: "+e.getNumberOfComponents());l*=3,S*=3,m=function(e,t,n,i,r){void 0===i&&(i=1),void 0===r&&(r=!1);let a=t,o=1;r?o=(n-t)/3:i*=3;let s=a+o,l=a+2*o;return{next:function(){if(a<n){const t={value:[e(a),e(s),e(l)],done:!1,index:[a,s,l]};return a+=i,s+=i,l+=i,t}return{done:!0,index:[n]}}}}(c,l,l+S,1,g)}return m}function vn(e,t){let n=0,i=0;return{next:function(){if(n<t){i+1<e.length&&n>=e[i+1].index&&++i;const t={value:e[i].colour,done:!1,index:n};return++n,t}return{done:!0,index:t}}}}function wn(e,t){var n=function(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)}(e,t);return function(e,t){return t.get?t.get.call(e):t.value}(e,n)}var Cn=new WeakMap;class Tn{constructor(){var e,t,n;n={writable:!0,value:{}},function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e=this,t=Cn),t.set(e,n),function(e,t,n){(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(this,"fireEvent",(e=>{if(void 0===wn(this,Cn)[e.type])return;const t=wn(this,Cn)[e.type].slice();for(let n=0;n<t.length;++n)t[n](e)}))}add(e,t){void 0===wn(this,Cn)[e]&&(wn(this,Cn)[e]=[]),wn(this,Cn)[e].push(t)}remove(e,t){if(void 0!==wn(this,Cn)[e])for(let n=0;n<wn(this,Cn)[e].length;++n)wn(this,Cn)[e][n]===t&&wn(this,Cn)[e].splice(n,1)}}function In(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function Ln(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Pn(e,t,"get"))}function bn(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Pn(e,t,"set"),n),n}function Pn(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}const An=["wlchange","wlpresetadd","colourchange","positionchange","opacitychange","alphafuncchange"];var On=new WeakMap,Fn=new WeakMap,En=new WeakMap,Rn=new WeakMap,Mn=new WeakMap,qn=new WeakMap,Un=new WeakMap,Qn=new WeakMap,kn=new WeakMap,Bn=new WeakMap,Nn=new WeakMap;class Wn{constructor(e){In(this,On,{writable:!0,value:void 0}),In(this,Fn,{writable:!0,value:{}}),In(this,En,{writable:!0,value:{minmax:{name:"minmax"}}}),In(this,Rn,{writable:!0,value:null}),In(this,Mn,{writable:!0,value:null}),In(this,qn,{writable:!0,value:gt.plain}),In(this,Un,{writable:!0,value:null}),In(this,Qn,{writable:!0,value:void 0}),In(this,kn,{writable:!0,value:new Tn}),In(this,Bn,{writable:!0,value:function(e,t){return 255}}),In(this,Nn,{writable:!0,value:e=>{Ln(this,kn).fireEvent(e)}}),bn(this,On,e),Ln(this,On).addEventListener("appendframe",(()=>{const e=this.getCurrentIndex();if(3===e.length()){const t=e.getValues();t.push(0),this.setCurrentIndex(new k(t))}}))}getImage(){return Ln(this,On)}setImage(e){bn(this,On,e)}getOrientation(){return Ln(this,Qn)}setOrientation(e){bn(this,Qn,e)}init(){this.setInitialIndex()}setInitialIndex(){const e=Ln(this,On).getGeometry().getSize(),t=new Array(e.length());t.fill(0),t[0]=Math.floor(e.get(0)/2),t[1]=Math.floor(e.get(1)/2),t[2]=Math.floor(e.get(2)/2),this.setCurrentIndex(new k(t),!0)}getPlaybackMilliseconds(e){return e||(e=10),Math.round(1e3/e)}getAlphaFunction(){return Ln(this,Bn)}setAlphaFunction(e){bn(this,Bn,e),Ln(this,Nn).call(this,{type:"alphafuncchange"})}getCurrentWindowLut(e){this.getCurrentIndex()||this.setInitialIndex();const t=this.getCurrentIndex();void 0===e&&(e=Ln(this,On).getRescaleSlopeAndIntercept(t));let n=null;if(Ln(this,Rn)&&void 0!==Ln(this,En)[Ln(this,Rn)]&&void 0!==Ln(this,En)[Ln(this,Rn)].perslice&&!0===Ln(this,En)[Ln(this,Rn)].perslice){const e=Ln(this,On).getSecondaryOffset(t);n=Ln(this,En)[Ln(this,Rn)].wl[e]}n||(Ln(this,Mn)||this.setWindowLevelPresetById(0,!0),n=Ln(this,Mn));let i=Ln(this,Fn)[e.toString()];if(void 0===i){const e=new $e(Ln(this,On).getRescaleSlopeAndIntercept(0),Ln(this,On).getMeta().BitsStored),t=new ut(e,Ln(this,On).getMeta().IsSigned);this.addWindowLut(t),i=t}const r=i.getWindowLevel();return n.equals(r)||(i.setWindowLevel(n),i.update(),r&&r.getWidth()===n.getWidth()&&r.getCenter()===n.getCenter()||Ln(this,Nn).call(this,{type:"wlchange",value:[n.getCenter(),n.getWidth()],wc:n.getCenter(),ww:n.getWidth(),skipGenerate:!0})),i}addWindowLut(e){const t=e.getRescaleLut().getRSI();Ln(this,Fn)[t.toString()]=e}getWindowPresets(){return Ln(this,En)}getWindowPresetsNames(){return Object.keys(Ln(this,En))}setWindowPresets(e){bn(this,En,e)}setDefaultColourMap(e){bn(this,qn,e)}addWindowPresets(e){const t=Object.keys(e);let n=null;for(let i=0;i<t.length;++i)if(n=t[i],void 0!==Ln(this,En)[n]){if(void 0!==Ln(this,En)[n].perslice&&!0===Ln(this,En)[n].perslice)throw new Error("Cannot add perslice preset");Ln(this,En)[n]=e[n]}else Ln(this,En)[n]=e[n],Ln(this,Nn).call(this,{type:"wlpresetadd",name:n})}getColourMap(){return Ln(this,qn)}setColourMap(e){bn(this,qn,e),Ln(this,Nn).call(this,{type:"colourchange",wc:this.getCurrentWindowLut().getWindowLevel().getCenter(),ww:this.getCurrentWindowLut().getWindowLevel().getWidth()})}getCurrentPosition(){return Ln(this,Un)}getCurrentIndex(){const e=this.getCurrentPosition();return e?this.getImage().getGeometry().worldToIndex(e):null}canSetPosition(e){const t=Ln(this,On).getGeometry(),n=t.worldToIndex(e),i=[this.getScrollIndex()];return 4===n.length()&&i.push(3),t.isIndexInBounds(n,i)}getOrigin(e){const t=Ln(this,On).getGeometry();let n=0;return void 0!==e&&(n=t.worldToIndex(e).get(2)),t.getOrigins()[n]}setCurrentPosition(e,t){const n=Ln(this,On).getGeometry(),i=n.worldToIndex(e),r=[this.getScrollIndex()];return 4===i.length()&&r.push(3),n.isIndexInBounds(i,r)?this.setCurrentIndex(i,t):(t||Ln(this,Nn).call(this,{type:"positionchange",value:[i.getValues(),e.getValues()],valid:!1}),!1)}setCurrentIndex(e,t){void 0===t&&(t=!1);const n=Ln(this,On).getGeometry(),i=n.indexToWorld(e),r=[this.getScrollIndex()];if(4===e.length()&&r.push(3),!n.isIndexInBounds(e,r))return!1;let a=null,o=null;if(this.getCurrentPosition()&&(o=this.getCurrentIndex()),o)if(o.canCompare(e))a=o.compare(e);else{a=[];const t=Math.min(o.length(),e.length());for(let n=0;n<t;++n)o.get(n)!==e.get(n)&&a.push(n);const n=Math.max(o.length(),e.length());for(let e=t;e<n;++e)a.push(e)}else{a=[];for(let t=0;t<e.length();++t)a.push(t)}if(bn(this,Un,i),!t){const t={type:"positionchange",value:[e.getValues(),i.getValues()],diffDims:a,data:{imageUid:Ln(this,On).getImageUid(e)}};if(Ln(this,On).canQuantify()){const n=Ln(this,On).getRescaledValueAtIndex(e);t.value.push(n)}Ln(this,Nn).call(this,t)}return!0}setWindowLevel(e,t,n,i){if(t<1)return;void 0===n&&(n="manual"),void 0===i&&(i=!1);const r=new Rt(e,t);if(!r.equals(Ln(this,Mn))){const a=!Ln(this,Mn)||Ln(this,Mn).getWidth()!==t,o=!Ln(this,Mn)||Ln(this,Mn).getCenter()!==e;bn(this,Mn,r),bn(this,Rn,n),(a||o)&&Ln(this,Nn).call(this,{type:"wlchange",value:[e,t],wc:e,ww:t,skipGenerate:i})}}setWindowLevelPreset(e,t){const n=this.getWindowPresets()[e];if(void 0===n)throw new Error("Unknown window level preset: '"+e+"'");"minmax"===e&&void 0===n.wl&&(n.wl=[this.getWindowLevelMinMax()]);let i=n.wl[0];if(void 0!==n.perslice&&!0===n.perslice){const e=Ln(this,On).getSecondaryOffset(this.getCurrentIndex());i=n.wl[e]}this.setWindowLevel(i.getCenter(),i.getWidth(),e,t)}setWindowLevelPresetById(e,t){const n=Object.keys(this.getWindowPresets());this.setWindowLevelPreset(n[e],t)}clone(){const e=new Wn(this.getImage());for(const t in Ln(this,Fn))e.addWindowLut(Ln(this,Fn)[t]);return e.setListeners(this.getListeners()),e}addEventListener(e,t){Ln(this,kn).add(e,t)}removeEventListener(e,t){Ln(this,kn).remove(e,t)}getWindowLevelMinMax(){const e=this.getImage().getRescaledDataRange(),t=e.min;let n=e.max-t;return n<1&&(Y.warn("Zero or negative window width, defaulting to one."),n=1),new Rt(t+n/2,n)}setWindowLevelMinMax(){const e=this.getWindowLevelMinMax();this.setWindowLevel(e.getCenter(),e.getWidth(),"minmax")}generateImageData(e,t){void 0===t&&(this.getCurrentIndex()||this.setInitialIndex(),t=this.getCurrentIndex());const n=this.getImage(),i=Dn(n,t,!1,this.getOrientation()),r=n.getPhotometricInterpretation();switch(r){case"MONOCHROME1":case"MONOCHROME2":!function(e,t,n,i,r){let a=0,o=0,s=t.next();for(;!s.done;)o=i.getValue(s.value),e.data[a]=r.red[o],e.data[a+1]=r.green[o],e.data[a+2]=r.blue[o],e.data[a+3]=n(s.value,s.index),a+=4,s=t.next()}(e,i,this.getAlphaFunction(),this.getCurrentWindowLut(),this.getColourMap());break;case"PALETTE COLOR":!function(e,t,n,i,r){const a=function(e){return e>>8};r&&Y.info("Scaling 16bits data to 8bits.");let o=0,s=0,l=t.next();for(;!l.done;)s=l.value,r?(e.data[o]=a(i.red[s]),e.data[o+1]=a(i.green[s]),e.data[o+2]=a(i.blue[s])):(e.data[o]=i.red[s],e.data[o+1]=i.green[s],e.data[o+2]=i.blue[s]),e.data[o+3]=n(s,l.index),o+=4,l=t.next()}(e,i,this.getAlphaFunction(),this.getColourMap(),16===n.getMeta().BitsStored);break;case"RGB":!function(e,t,n){let i=0,r=t.next();for(;!r.done;)e.data[i]=r.value[0],e.data[i+1]=r.value[1],e.data[i+2]=r.value[2],e.data[i+3]=n(r.value,r.index),i+=4,r=t.next()}(e,i,this.getAlphaFunction(),this.getCurrentWindowLut());break;case"YBR_FULL":!function(e,t,n){let i=0,r=null,a=t.next();for(;!a.done;)o=a.value[0],s=a.value[1],r={r:o+1.402*((l=a.value[2])-128),g:o-.34414*(s-128)-.71414*(l-128),b:o+1.772*(s-128)},e.data[i]=r.r,e.data[i+1]=r.g,e.data[i+2]=r.b,e.data[i+3]=n(a.value,a.index),i+=4,a=t.next();var o,s,l}(e,i,this.getAlphaFunction());break;default:throw new Error("Unsupported photometric interpretation: "+r)}}incrementIndex(e,t){const n=this.getCurrentIndex(),i=new Array(n.length());i.fill(0),e<i.length?i[e]=1:console.warn("Cannot increment given index: ",e,i.length);const r=new k(i),a=n.add(r);return this.setCurrentIndex(a,t)}decrementIndex(e,t){const n=this.getCurrentIndex(),i=new Array(n.length());i.fill(0),e<i.length?i[e]=-1:console.warn("Cannot decrement given index: ",e,i.length);const r=new k(i),a=n.add(r);return this.setCurrentIndex(a,t)}getScrollIndex(){let e=null;const t=this.getOrientation();return e=void 0!==t?t.getThirdColMajorDirection():2,e}decrementScrollIndex(e){return this.decrementIndex(this.getScrollIndex(),e)}incrementScrollIndex(e){return this.incrementIndex(this.getScrollIndex(),e)}}class Vn{create(e,t){const n=new Wn(t);if("MONOCHROME1"===t.getPhotometricInterpretation())n.setDefaultColourMap(gt.invPlain);else if("PALETTE COLOR"===t.getPhotometricInterpretation()){const e=t.getMeta().paletteLut;void 0!==e&&n.setDefaultColourMap(e)}let i={};if(void 0!==t.getMeta().windowPresets&&(i=t.getMeta().windowPresets),i.minmax={name:"minmax"},void 0!==wt){const e=t.getMeta().Modality;for(const t in wt[e]){const n=wt[e][t];i[t]={wl:new Rt(n.center,n.width),name:t}}}return n.setWindowPresets(i),n.init(),n}}function Gn(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function zn(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,jn(e,t,"get"))}function Hn(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,jn(e,t,"set"),n),n}function jn(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Xn=new WeakMap,Yn=new WeakMap;class _n{constructor(e,t){Gn(this,Xn,{writable:!0,value:void 0}),Gn(this,Yn,{writable:!0,value:void 0}),Hn(this,Xn,e),Hn(this,Yn,t)}getSlope(){return zn(this,Xn)}getIntercept(){return zn(this,Yn)}apply(e){return e*zn(this,Xn)+zn(this,Yn)}equals(e){return null!==e&&this.getSlope()===e.getSlope()&&this.getIntercept()===e.getIntercept()}toString(){return this.getSlope()+", "+this.getIntercept()}isID(){return 1===this.getSlope()&&0===this.getIntercept()}}function Kn(e,t){Jn(e,t),t.add(e)}function Zn(e,t,n){Jn(e,t),t.set(e,n)}function Jn(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function $n(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function ei(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,ni(e,t,"get"))}function ti(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,ni(e,t,"set"),n),n}function ni(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var ii=new WeakMap,ri=new WeakMap,ai=new WeakMap,oi=new WeakMap,si=new WeakMap,li=new WeakMap,ci=new WeakMap,ui=new WeakMap,hi=new WeakMap,di=new WeakMap,Si=new WeakMap,xi=new WeakMap,gi=new WeakMap,pi=new WeakMap,mi=new WeakMap,fi=new WeakSet,yi=new WeakSet,Di=new WeakSet,vi=new WeakMap;class wi{constructor(e,t,n){Kn(this,Di),Kn(this,yi),Kn(this,fi),Zn(this,ii,{writable:!0,value:void 0}),Zn(this,ri,{writable:!0,value:void 0}),Zn(this,ai,{writable:!0,value:void 0}),Zn(this,oi,{writable:!0,value:new _n(1,0)}),Zn(this,si,{writable:!0,value:null}),Zn(this,li,{writable:!0,value:!0}),Zn(this,ci,{writable:!0,value:!0}),Zn(this,ui,{writable:!0,value:"MONOCHROME2"}),Zn(this,hi,{writable:!0,value:0}),Zn(this,di,{writable:!0,value:void 0}),Zn(this,Si,{writable:!0,value:{}}),Zn(this,xi,{writable:!0,value:null}),Zn(this,gi,{writable:!0,value:null}),Zn(this,pi,{writable:!0,value:null}),Zn(this,mi,{writable:!0,value:new Tn}),Zn(this,vi,{writable:!0,value:e=>{ei(this,mi).fireEvent(e)}}),ti(this,ii,e),ti(this,ri,t),ti(this,ai,n),ti(this,di,ei(this,ri).length/ei(this,ii).getSize().getTotalSize())}getImageUid(e){let t=ei(this,ai)[0];return 1!==ei(this,ai).length&&void 0!==e&&(t=ei(this,ai)[this.getSecondaryOffset(e)]),t}getGeometry(){return ei(this,ii)}getBuffer(){return ei(this,ri)}canQuantify(){return 1===this.getNumberOfComponents()}canWindowLevel(){return null!==this.getPhotometricInterpretation().match(/MONOCHROME/)}canScroll(e){const t=this.getGeometry().getSize();let n=1;return void 0!==ei(this,Si).numberOfFiles&&(n=ei(this,Si).numberOfFiles),t.canScroll(e)||1!==n}getSecondaryOffset(e){return ei(this,ii).getSize().indexToOffset(e,2)}getRescaleSlopeAndIntercept(e){let t=ei(this,oi);if(!this.isConstantRSI()){if(void 0===e)throw new Error("Cannot get non constant RSI with empty slice index.");const n=this.getSecondaryOffset(e);void 0!==ei(this,si)[n]?t=ei(this,si)[n]:Y.warn("undefined non constant rsi at "+n)}return t}setRescaleSlopeAndIntercept(e,t){if(ti(this,li,ei(this,li)&&e.isID()),ei(this,ci)){if(!ei(this,oi).equals(e))if("undefined"==typeof index)ti(this,oi,e);else{ti(this,ci,!1),ti(this,si,[]);for(let e=0,t=$n(this,fi,Ci).call(this);e<t;++e)ei(this,si).push(e);ti(this,oi,null),ei(this,si).splice(t,0,e)}}else{if("undefined"==typeof index)throw new Error("Cannot store non constant RSI with empty slice index.");ei(this,si).splice(t,0,e)}}isIdentityRSI(){return ei(this,li)}isConstantRSI(){return ei(this,ci)}getPhotometricInterpretation(){return ei(this,ui)}setPhotometricInterpretation(e){ti(this,ui,e)}getPlanarConfiguration(){return ei(this,hi)}setPlanarConfiguration(e){ti(this,hi,e)}getNumberOfComponents(){return ei(this,di)}getMeta(){return ei(this,Si)}setMeta(e){ti(this,Si,e)}getValueAtOffset(e){return ei(this,ri)[e]}getOffsets(e){1===ei(this,di)?e=[e]:3===ei(this,di)&&void 0!==e.r&&(e=[e.r,e.g,e.b]);const t=[];let n;for(let i=0;i<ei(this,ri).length;i+=ei(this,di)){n=!0;for(let t=0;t<ei(this,di);++t)if(ei(this,ri)[i+t]!==e[t]){n=!1;break}n&&t.push(i)}return t}hasValues(e){if(void 0===e||0===e.length)return[];const t=[];for(let n=0;n<e.length;++n)1===ei(this,di)?t.push([e[n]]):3===ei(this,di)&&t.push([e[n].r,e[n].g,e[n].b]);let n;1===ei(this,di)?n=function(e,t){return e[0]===t[0]}:3===ei(this,di)&&(n=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]});const i=function(e){return function(t){return n(t,e)}},r=new Array(e.length);r.fill(!1);const a=t.slice();let o,s;for(let e=0,n=ei(this,ri).length;e<n;e+=ei(this,di)){s=[];for(let n=0;n<a.length;++n){o=!0;for(let t=0;t<ei(this,di);++t)if(ei(this,ri)[e+t]!==a[n][t]){o=!1;break}o&&(r[t.findIndex(i(a[n]))]=!0,s.push(n))}for(let e=0;e<s.length;++e)a.splice(s[e],1);if(0===a.length)break}return r}clone(){const e=ei(this,ri).slice(0),t=new wi(this.getGeometry(),e,ei(this,ai));if(this.isConstantRSI())t.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());else for(let e=0;e<$n(this,fi,Ci).call(this);++e)t.setRescaleSlopeAndIntercept($n(this,yi,Ti).call(this,e),e);return t.setPhotometricInterpretation(this.getPhotometricInterpretation()),t.setPlanarConfiguration(this.getPlanarConfiguration()),t.setMeta(this.getMeta()),t}appendSlice(e){if(null===e)throw new Error("Cannot append null slice");const t=e.getGeometry().getSize();let n=ei(this,ii).getSize();if(1!==t.get(2))throw new Error("Cannot append more than one slice");if(n.get(0)!==t.get(0))throw new Error("Cannot append a slice with different number of columns");if(n.get(1)!==t.get(1))throw new Error("Cannot append a slice with different number of rows");if(!ei(this,ii).getOrientation().equals(e.getGeometry().getOrientation(),1e-4))throw new Error("Cannot append a slice with different orientation");if(ei(this,ui)!==e.getPhotometricInterpretation())throw new Error("Cannot append a slice with different photometric interpretation");for(const t in ei(this,Si))if("windowPresets"!==t&&"numberOfFiles"!==t&&"custom"!==t&&ei(this,Si)[t]!==e.getMeta()[t])throw new Error("Cannot append a slice with different "+t);const i=e.getGeometry().getInitialTime();let r=!1;void 0===i||ei(this,ii).hasSlicesAtTime(i)||(this.appendFrame(e.getGeometry().getOrigin(),i),n=ei(this,ii).getSize(),r=!0);const a=function(e,t){const n=t.getInitialTime(),i=[];return i.push(0),i.push(0),i.push(e.getSliceIndex(t.getOrigin(),n)),void 0!==n&&i.push(n),new k(i)}(ei(this,ii),e.getGeometry()),o=ei(this,di)*n.getDimSize(2);if(void 0===ei(this,Si).numberOfFiles)throw new Error("Missing number of files for buffer manipulation.");const s=o*ei(this,Si).numberOfFiles;ei(this,ri).length!==s&&$n(this,Di,Ii).call(this,s);const l=a.get(2);let c=l;void 0!==i&&(c+=ei(this,ii).getCurrentNumberOfSlicesBeforeTime(i));const u=c*o,h=ei(this,ii).getCurrentTotalNumberOfSlices()*o;u<h&&ei(this,ri).set(ei(this,ri).subarray(u,h),u+o),ei(this,ri).set(e.getBuffer(),u),r||ei(this,ii).appendOrigin(e.getGeometry().getOrigin(),l,i),this.setRescaleSlopeAndIntercept(e.getRescaleSlopeAndIntercept(),c);const d=ei(this,ai).length;if(ei(this,ai).splice(c,0,e.getImageUid()),void 0!==ei(this,Si).windowPresets){const t=ei(this,Si).windowPresets,n=e.getMeta().windowPresets,i=Object.keys(n);let r=null;for(let e=0;e<i.length;++e){r=i[e];const a=n[r],o=t[r];if(void 0!==o){if((void 0===o.perslice||!1===o.perslice)&&!o.wl[0].equals(a.wl[0])){o.perslice=!0;for(let e=0;e<d-1;++e)o.wl.push(o.wl[0])}void 0!==o.perslice&&!0===o.perslice&&t[r].wl.splice(c,0,a.wl[0])}else t[r]=n[r]}}}appendFrameBuffer(e,t){const n=ei(this,ii).getSize(),i=ei(this,di)*n.getDimSize(2);if(void 0===ei(this,Si).numberOfFiles)throw new Error("Missing number of files for frame buffer manipulation.");const r=i*ei(this,Si).numberOfFiles;ei(this,ri).length!==r&&$n(this,Di,Ii).call(this,r),t>=ei(this,Si).numberOfFiles?Y.warn("Ignoring frame at index "+t+" (size: "+ei(this,Si).numberOfFiles+")"):(ei(this,ri).set(e,i*t),this.appendFrame())}appendFrame(e,t){ei(this,ii).appendFrame(e,t),ei(this,vi).call(this,{type:"appendframe"})}getDataRange(){return ei(this,xi)||ti(this,xi,this.calculateDataRange()),ei(this,xi)}getRescaledDataRange(){return ei(this,gi)||ti(this,gi,this.calculateRescaledDataRange()),ei(this,gi)}getHistogram(){if(!ei(this,pi)){const e=this.calculateHistogram();ti(this,xi,e.dataRange),ti(this,gi,e.rescaledDataRange),ti(this,pi,e.histogram)}return ei(this,pi)}addEventListener(e,t){ei(this,mi).add(e,t)}removeEventListener(e,t){ei(this,mi).remove(e,t)}setAtOffsets(e,t){let n;for(let i=0,r=e.length;i<r;++i)n=e[i],ei(this,ri)[n]=t.r,ei(this,ri)[n+1]=t.g,ei(this,ri)[n+2]=t.b;ei(this,vi).call(this,{type:"imagechange"})}setAtOffsetsAndGetOriginals(e,t){const n=[];for(let i=0;i<e.length;++i){const r=e[i];let a=3*r[0],o={r:ei(this,ri)[a],g:ei(this,ri)[a+1],b:ei(this,ri)[a+2]};const s=[];s.push({index:0,colour:o});for(let e=0;e<r.length;++e){a=3*r[e];const n={r:ei(this,ri)[a],g:ei(this,ri)[a+1],b:ei(this,ri)[a+2]};o.r===n.r&&o.g===n.g&&o.b===n.b||(s.push({index:e,colour:n}),o=n),ei(this,ri)[a]=t.r,ei(this,ri)[a+1]=t.g,ei(this,ri)[a+2]=t.b}n.push(s)}return ei(this,vi).call(this,{type:"imagechange"}),n}setAtOffsetsWithIterator(e,t){for(let n=0;n<e.length;++n){const i=e[n];let r;r=void 0!==t&&void 0!==t.r?vn([{index:0,colour:t}],i.length):vn(t[n],i.length);let a=r.next();for(;!a.done;){const e=3*i[a.index];ei(this,ri)[e]=a.value.r,ei(this,ri)[e+1]=a.value.g,ei(this,ri)[e+2]=a.value.b,a=r.next()}}ei(this,vi).call(this,{type:"imagechange"})}getValue(e,t,n,i){const r=new k([e,t,n,i||0]);return this.getValueAtOffset(this.getGeometry().getSize().indexToOffset(r))}getValueAtIndex(e){return this.getValueAtOffset(this.getGeometry().getSize().indexToOffset(e))}getRescaledValue(e,t,n,i){void 0===i&&(i=0);let r=this.getValue(e,t,n,i);if(!this.isIdentityRSI())if(this.isConstantRSI())r=this.getRescaleSlopeAndIntercept().apply(r);else{const a=new k([e,t,n,i]);r=this.getRescaleSlopeAndIntercept(a).apply(r)}return r}getRescaledValueAtIndex(e){return this.getRescaledValueAtOffset(this.getGeometry().getSize().indexToOffset(e))}getRescaledValueAtOffset(e){let t=this.getValueAtOffset(e);if(!this.isIdentityRSI())if(this.isConstantRSI())t=this.getRescaleSlopeAndIntercept().apply(t);else{const n=this.getGeometry().getSize().offsetToIndex(e);t=this.getRescaleSlopeAndIntercept(n).apply(t)}return t}calculateDataRange(){let e=this.getValueAtOffset(0),t=e,n=0;const i=this.getGeometry().getSize();let r=i.getTotalSize();i.length()>=3&&(r=i.getDimSize(3));for(let i=0;i<r;++i)n=this.getValueAtOffset(i),n>t&&(t=n),n<e&&(e=n);return{min:e,max:t}}calculateRescaledDataRange(){if(this.isIdentityRSI())return this.getDataRange();if(this.isConstantRSI()){const e=this.getDataRange(),t=this.getRescaleSlopeAndIntercept().apply(e.min),n=this.getRescaleSlopeAndIntercept().apply(e.max);return{min:t<n?t:n,max:t>n?t:n}}{let e=this.getRescaledValueAtOffset(0),t=e,n=0;const i=this.getGeometry().getSize();let r=i.getTotalSize();3===i.length()&&(r=i.getDimSize(3));for(let i=0;i<r;++i)n=this.getRescaledValueAtOffset(i),n>t&&(t=n),n<e&&(e=n);return{min:e,max:t}}}calculateHistogram(){const e=this.getGeometry().getSize(),t=[];let n=this.getValueAtOffset(0),i=n,r=0,a=this.getRescaledValueAtOffset(0),o=a,s=0;for(let l=0,c=e.getTotalSize();l<c;++l)r=this.getValueAtOffset(l),r>i&&(i=r),r<n&&(n=r),s=this.getRescaledValueAtOffset(l),s>o&&(o=s),s<a&&(a=s),t[s]=(t[s]||0)+1;const l={min:n,max:i},c={min:a,max:o},u=[];for(let e=a;e<=o;++e)u.push([e,t[e]||0]);return{dataRange:l,rescaledDataRange:c,histogram:u}}convolute2D(e){if(9!==e.length)throw new Error("The convolution matrix does not have a length of 9; it has "+e.length);const t=this.clone(),n=t.getBuffer(),i=this.getGeometry().getSize(),r=i.getDimSize(2)*this.getNumberOfComponents();for(let t=0;t<i.get(2);++t)this.convoluteBuffer(e,n,t*r);return t}convoluteBuffer(e,t,n){const i=this.getGeometry().getSize(),r=i.get(0),a=i.get(1),o=this.getNumberOfComponents();let s=1,l=1;3===o&&(0===this.getPlanarConfiguration()?s=3:l=i.getDimSize(2));const c=[];c[0]=(-r-1)*s,c[1]=-r*s,c[2]=(1-r)*s,c[3]=-s,c[4]=0,c[5]=1*s,c[6]=(r-1)*s,c[7]=r*s,c[8]=(r+1)*s;const u=[];u[0]=c[4],u[1]=c[4],u[2]=c[5],u[3]=c[4],u[4]=c[4],u[5]=c[5],u[6]=c[7],u[7]=c[7],u[8]=c[8];const h=[];h[0]=c[1],h[1]=c[1],h[2]=c[2],h[3]=c[4],h[4]=c[4],h[5]=c[5],h[6]=c[7],h[7]=c[7],h[8]=c[8];const d=[];d[0]=c[1],d[1]=c[1],d[2]=c[2],d[3]=c[4],d[4]=c[4],d[5]=c[5],d[6]=c[4],d[7]=c[4],d[8]=c[5];const S=[];S[0]=c[3],S[1]=c[4],S[2]=c[5],S[3]=c[3],S[4]=c[4],S[5]=c[5],S[6]=c[6],S[7]=c[7],S[8]=c[8];const x=[];x[0]=c[0],x[1]=c[1],x[2]=c[2],x[3]=c[3],x[4]=c[4],x[5]=c[5],x[6]=c[3],x[7]=c[4],x[8]=c[5];const g=[];g[0]=c[3],g[1]=c[4],g[2]=c[4],g[3]=c[3],g[4]=c[4],g[5]=c[4],g[6]=c[6],g[7]=c[7],g[8]=c[7];const p=[];p[0]=c[0],p[1]=c[1],p[2]=c[1],p[3]=c[3],p[4]=c[4],p[5]=c[4],p[6]=c[6],p[7]=c[7],p[8]=c[7];const m=[];m[0]=c[0],m[1]=c[1],m[2]=c[1],m[3]=c[3],m[4]=c[4],m[5]=c[4],m[6]=c[3],m[7]=c[4],m[8]=c[4];let f=n,y=0,D=[];for(let n=0;n<o;++n){f+=n*l;for(let n=0;n<a;++n)for(let i=0;i<r;++i){D=c,0===i&&0===n?D=u:0===i&&n===a-1?D=d:i===r-1&&0===n?D=g:i===r-1&&n===a-1?D=m:0===i&&n!==a-1&&0!==n?D=h:i===r-1&&n!==a-1&&0!==n?D=p:0!==i&&i!==r-1&&0===n?D=S:0!==i&&i!==r-1&&n===a-1&&(D=x),y=0;for(let t=0;t<9;++t)y+=this.getValueAtOffset(f+D[t])*e[t];t[f]=y,f+=s}}}transform(e){const t=this.clone(),n=t.getBuffer();for(let i=0,r=n.length;i<r;++i)n[i]=e(t.getValueAtOffset(i));return t}compose(e,t){const n=this.clone(),i=n.getBuffer();for(let n=0,r=i.length;n<r;++n)i[n]=Math.floor(t(this.getValueAtOffset(n),e.getValueAtOffset(n)));return n}}function Ci(){return ei(this,ii).getSize().getTotalSize(2)}function Ti(e){return ei(this,si)[e]}function Ii(e){let t=ei(this,ri);if(ti(this,ri,Se(8*ei(this,ri).BYTES_PER_ELEMENT,ei(this,Si).IsSigned?1:0,e)),null===ei(this,ri))throw new Error("Cannot reallocate data for image.");ei(this,ri).set(t),t=null}function Li(e,t,n){bi(e,t),t.set(e,n)}function bi(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Pi(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Oi(e,t,"get"))}function Ai(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Oi(e,t,"set"),n),n}function Oi(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Fi=new WeakMap,Ei=new WeakMap,Ri=new WeakMap,Mi=new WeakMap,qi=new WeakMap,Ui=new WeakMap,Qi=new WeakMap,ki=new WeakSet;class Bi{constructor(e,t,n,i,r){var a;bi(this,a=ki),a.add(this),Li(this,Fi,{writable:!0,value:void 0}),Li(this,Ei,{writable:!0,value:void 0}),Li(this,Ri,{writable:!0,value:void 0}),Li(this,Mi,{writable:!0,value:{}}),Li(this,qi,{writable:!0,value:void 0}),Li(this,Ui,{writable:!0,value:new tn}),Li(this,Qi,{writable:!0,value:!1}),Ai(this,Fi,[e]),Ai(this,Ei,t),Ai(this,Ri,n),void 0!==r&&(Ai(this,qi,r),Pi(this,Mi)[r]=[e]),void 0!==i&&Ai(this,Ui,i)}getInitialTime(){return Pi(this,qi)}getCurrentTotalNumberOfSlices(){const e=Object.keys(Pi(this,Mi));if(0===e.length)return Pi(this,Fi).length;let t=0;for(let n=0;n<e.length;++n)t+=Pi(this,Mi)[e[n]].length;return t}hasSlicesAtTime(e){return void 0!==Pi(this,Mi)[e]}getCurrentNumberOfSlicesBeforeTime(e){const t=Object.keys(Pi(this,Mi));if(0===t.length)return;let n=0;for(let i=0;i<t.length;++i){const r=t[i];if(parseInt(r,10)===e)break;n+=Pi(this,Mi)[r].length}return n}getOrigin(){return Pi(this,Fi)[0]}getOrigins(){return Pi(this,Fi)}includesOrigin(e,t){for(let n=0;n<Pi(this,Fi).length;++n)if(Pi(this,Fi)[n].isSimilar(e,t))return!0;return!1}getSize(e){let t=Pi(this,Ei);if(e&&void 0!==e){let n=Wi([Pi(this,Ei).get(0),Pi(this,Ei).get(1),Pi(this,Ei).get(2)],e);n=n.map(Math.abs),t=new G(n.concat(Pi(this,Ei).getValues().slice(3)))}return t}getSpacing(e){Pi(this,Qi)&&(function(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}(this,ki,Ni).call(this),Ai(this,Qi,!1));let t=Pi(this,Ri);if(e&&void 0!==e){let n=Wi([Pi(this,Ri).get(0),Pi(this,Ri).get(1),Pi(this,Ri).get(2)],e);n=n.map(Math.abs),t=new X(n)}return t}getRealSpacing(){return this.getSpacing(Pi(this,Ui).getInverse().asOneAndZeros())}getOrientation(){return Pi(this,Ui)}getSliceIndex(e,t){let n=Pi(this,Fi);void 0!==t&&(n=Pi(this,Mi)[t]);let i=0,r=e.getDistance(n[0]),a=0;for(let t=0;t<n.length;++t)a=e.getDistance(n[t]),a<r&&(r=a,i=t);const o=n[i],s=e.minus(o);return new Ht(Pi(this,Ui).get(0,2),Pi(this,Ui).get(1,2),Pi(this,Ui).get(2,2)).dotProduct(s)>0?i+1:i}appendOrigin(e,t,n){if(void 0!==n&&Pi(this,Mi)[n].splice(t,0,e),void 0===n||n===Pi(this,qi)){Ai(this,Qi,!0),Pi(this,Fi).splice(t,0,e);const n=Pi(this,Ei).getValues();n[2]+=1,Ai(this,Ei,new G(n))}}appendFrame(e,t){Pi(this,Mi)[t]=[e];const n=Pi(this,Ei).getValues(),i=Pi(this,Ri).getValues();4===n.length?n[3]+=1:(n.push(2),i.push(1)),Ai(this,Ei,new G(n)),Ai(this,Ri,new X(i))}toString(){return"Origin: "+this.getOrigin()+", Size: "+this.getSize()+", Spacing: "+this.getSpacing()+", Orientation: "+this.getOrientation()}equals(e){return null!==e&&this.getOrigin().equals(e.getOrigin())&&this.getSize().equals(e.getSize())&&this.getSpacing().equals(e.getSpacing())}isInBounds(e){return this.isIndexInBounds(this.worldToIndex(e))}isIndexInBounds(e,t){return this.getSize().isInBounds(e,t)}indexToWorld(e){const t=this.getSpacing(),n=new gn(e.get(0)*t.get(0),e.get(1)*t.get(1),e.get(2)*t.get(2)),i=this.getOrientation().multiplyPoint3D(n),r=e.getValues(),a=this.getOrigin();return r[0]=a.getX()+i.getX(),r[1]=a.getY()+i.getY(),r[2]=a.getZ()+i.getZ(),new mn(r)}pointToWorld(e){const t=this.getSpacing(),n=new gn(e.getX()*t.get(0),e.getY()*t.get(1),e.getZ()*t.get(2)),i=this.getOrientation().multiplyPoint3D(n),r=this.getOrigin();return new gn(r.getX()+i.getX(),r.getY()+i.getY(),r.getZ()+i.getZ())}worldToIndex(e){const t=this.getOrigin(),n=new gn(e.get(0)-t.getX(),e.get(1)-t.getY(),e.get(2)-t.getZ()),i=this.getOrientation().getInverse().multiplyPoint3D(n),r=e.getValues(),a=this.getSpacing();return r[0]=Math.round(i.getX()/a.get(0)),r[1]=Math.round(i.getY()/a.get(1)),r[2]=Math.round(i.getZ()/a.get(2)),new k(r)}worldToPoint(e){const t=this.getOrigin(),n=new gn(e.get(0)-t.getX(),e.get(1)-t.getY(),e.get(2)-t.getZ()),i=this.getOrientation().getInverse().multiplyPoint3D(n),r=e.getValues(),a=this.getSpacing();return r[0]=i.getX()/a.get(0),r[1]=i.getY()/a.get(1),r[2]=i.getZ()/a.get(2),new gn(r[0],r[1],r[2])}}function Ni(){const e=Vi(Pi(this,Fi),Pi(this,Ui));if(void 0!==e&&Pi(this,Ri).get(2)!==e){Y.trace("Updating slice spacing.");const t=Pi(this,Ri).getValues();t[2]=e,Ai(this,Ri,new X(t))}}function Wi(e,t){return t.getInverse().multiplyArray3D(e)}function Vi(e,t,n){if(void 0===n&&(n=!0),e.length<=1)return;const i=t.getInverse();let r=i.multiplyVector3D(e[0]),a=i.multiplyVector3D(e[1]),o=Math.abs(r.getZ()-a.getZ());const s=[];for(let t=0;t<e.length-1;++t){r=i.multiplyVector3D(e[t]),a=i.multiplyVector3D(e[t+1]);const l=Math.abs(r.getZ()-a.getZ());if(0===l)throw new Error("Zero slice spacing."+r.toString()+" "+a.toString());l<o&&(o=l),n&&(Zt(o,l,Kt)||s.push(Math.abs(o-l)))}if(n&&0!==s.length){const e=function(e,t){return e+t},t=s.reduce(e)/s.length;t>1e-4&&Y.warn("Varying slice spacing, mean delta: "+t.toFixed(3)+" ("+s.length+" case(s))")}return o}function Gi(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function zi(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,ji(e,t,"get"))}function Hi(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,ji(e,t,"set"),n),n}function ji(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Xi=new WeakMap,Yi=new WeakMap,_i=new WeakMap,Ki=new WeakMap;class Zi{constructor(e,t,n){Gi(this,Xi,{writable:!0,value:void 0}),Gi(this,Yi,{writable:!0,value:void 0}),Gi(this,_i,{writable:!0,value:void 0}),Gi(this,Ki,{writable:!0,value:void 0}),Hi(this,Xi,e),Hi(this,Yi,t),Hi(this,_i,n),Hi(this,Ki,function(e,t){let n=e.asOneAndZeros().multiply(t);return e.asOneAndZeros().getAbs().equals(nn().getAbs())&&(n=n.getAbs()),n}(t,n))}getOffset3DFromPlaneOffset(e){const t=new Ht(e.x,e.y,0),n=this.getTargetDeOrientedVector3D(t);return new Ht(n.getX()*zi(this,Xi).get(0),n.getY()*zi(this,Xi).get(1),n.getZ()*zi(this,Xi).get(2))}getPlaneOffsetFromOffset3D(e){const t=new Ht(e.x/zi(this,Xi).get(0),e.y/zi(this,Xi).get(1),e.z/zi(this,Xi).get(2)),n=this.getTargetOrientedVector3D(t);return{x:n.getX(),y:n.getY()}}getTargetOrientedVector3D(e){let t=e;return void 0!==zi(this,Ki)&&(t=zi(this,Ki).getInverse().multiplyVector3D(e)),t}getTargetDeOrientedVector3D(e){let t=e;return void 0!==zi(this,Ki)&&(t=zi(this,Ki).multiplyVector3D(e)),t}getImageOrientedVector3D(e){let t=e;if(void 0!==zi(this,_i)){const i=(n=[e.getX(),e.getY(),e.getZ()],zi(this,_i).multiplyArray3D(n));t=new Ht(i[0],i[1],i[2])}var n;return t}getImageDeOrientedVector3D(e){let t=e;if(void 0!==zi(this,_i)){const n=Wi([e.getX(),e.getY(),e.getZ()],zi(this,_i));t=new Ht(n[0],n[1],n[2])}return t}getTargetOrientedPositiveXYZ(e){const t=Wi([e.x,e.y,e.z],zi(this,Ki));return{x:t[0],y:t[1],z:t[2]}}getScrollIndex(){let e=null;return e=void 0!==zi(this,_i)?zi(this,_i).getThirdColMajorDirection():2,e}getNativeScrollIndex(){let e=null;return e=void 0!==zi(this,Yi)?zi(this,Yi).getThirdColMajorDirection():2,e}}function Ji(e,t,n){$i(e,t),t.set(e,n)}function $i(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function er(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function tr(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,ir(e,t,"get"))}function nr(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,ir(e,t,"set"),n),n}function ir(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var rr=new WeakMap,ar=new WeakMap,or=new WeakMap,sr=new WeakSet;class lr{constructor(e){var t;$i(this,t=sr),t.add(this),Ji(this,rr,{writable:!0,value:void 0}),Ji(this,ar,{writable:!0,value:void 0}),Ji(this,or,{writable:!0,value:[]}),nr(this,rr,e),nr(this,ar,e.getMeta().custom.segments)}hasSegment(e){return void 0!==this.getSegment(e)}maskHasSegments(e){const t=[],n=[];for(let i=0;i<e.length;++i){const r=this.getSegment(e[i]);void 0!==r?t.push(r.displayValue):(Y.warn("Unknown segment in maskHasSegments: "+e[i]),n.push(i))}const i=tr(this,rr).hasValues(t);for(let e=0;e<n.length;++e)i.splice(n[e],0,!1);return i}getSegment(e){return tr(this,ar).find((function(t){return t.number===e}))}getSegments(){return tr(this,ar)}setSegments(e){nr(this,ar,e)}setHiddenSegments(e){nr(this,or,e)}isHidden(e){return-1!==er(this,sr,cr).call(this,e)}addToHidden(e){this.isHidden(e)?Y.warn("Segment is allready in the hidden list: "+e):tr(this,or).push(e)}removeFromHidden(e){const t=er(this,sr,cr).call(this,e);-1!==t?tr(this,or).splice(t,1):Y.warn("Segment is not in the hidden list: "+e)}getAlphaFunc(){const e=[{r:0,g:0,b:0}];for(let t=0;t<tr(this,or).length;++t){const n=this.getSegment(tr(this,or)[t]);void 0!==n&&e.push(n.displayValue)}return function(t){for(let n=0;n<e.length;++n)if(t[0]===e[n].r&&t[1]===e[n].g&&t[2]===e[n].b)return 0;return 255}}deleteSegment(e,t,n){const i=new xr(tr(this,rr),this.getSegment(e));i.onExecute=t,i.onUndo=t,i.isValid()&&(i.execute(),n(i),this.isHidden(e)&&this.removeFromHidden(e))}}function cr(e){return tr(this,or).findIndex((function(t){return t===e}))}var ur=new WeakMap,hr=new WeakMap,dr=new WeakMap,Sr=new WeakMap;class xr{constructor(e,t,n){Ji(this,ur,{writable:!0,value:void 0}),Ji(this,hr,{writable:!0,value:void 0}),Ji(this,dr,{writable:!0,value:void 0}),Ji(this,Sr,{writable:!0,value:void 0}),nr(this,ur,e),nr(this,hr,t),nr(this,dr,void 0!==n&&n),nr(this,Sr,e.getOffsets(t.displayValue))}getName(){return"Delete-segment"}isValid(){return 0!==tr(this,Sr).length}execute(){tr(this,ur).setAtOffsets(tr(this,Sr),{r:0,g:0,b:0}),tr(this,dr)||this.onExecute({type:"masksegmentdelete",segmentnumber:tr(this,hr).number})}undo(){tr(this,ur).setAtOffsets(tr(this,Sr),tr(this,hr).displayValue),this.onUndo({type:"masksegmentredraw",segmentnumber:tr(this,hr).number})}onExecute(e){}onUndo(e){}}function gr(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function pr(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,fr(e,t,"set"),n),n}function mr(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,fr(e,t,"get"))}function fr(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var yr=new WeakMap,Dr=new WeakMap,vr=new WeakMap,wr=new WeakMap,Cr=new WeakMap,Tr=new WeakMap,Ir=new WeakMap,Lr=new WeakMap;class br{constructor(e,t){if(gr(this,yr,{writable:!0,value:void 0}),gr(this,Dr,{writable:!0,value:void 0}),gr(this,vr,{writable:!0,value:void 0}),gr(this,wr,{writable:!0,value:void 0}),gr(this,Cr,{writable:!0,value:null}),gr(this,Tr,{writable:!0,value:mr(this,Dr)}),gr(this,Ir,{writable:!0,value:new Tn}),gr(this,Lr,{writable:!0,value:e=>{e.dataid=mr(this,Tr),mr(this,Ir).fireEvent(e)}}),void 0===e.getImage())throw new Error("View does not have an image, cannot setup controller");pr(this,yr,e),pr(this,Dr,t),pr(this,vr,new Zi(e.getImage().getGeometry().getRealSpacing(),e.getImage().getGeometry().getOrientation(),e.getOrientation())),"SEG"===e.getImage().getMeta().Modality&&pr(this,wr,new lr(e.getImage()))}getPlaneHelper(){return mr(this,vr)}isMask(){return"undefined"!=typeof maskSegmentHelper}getMaskSegmentHelper(){return mr(this,wr)}applyHiddenSegments(){this.isMask&&this.setViewAlphaFunction(mr(this,wr).getAlphaFunc())}deleteSegment(e,t){this.isMask&&mr(this,wr).deleteSegment(e,mr(this,Lr),t)}initialise(){this.setWindowLevelPresetById(0),this.setCurrentPosition(this.getPositionFromPlanePoint(0,0))}getWindowLevelPresetsNames(){return mr(this,yr).getWindowPresetsNames()}addWindowLevelPresets(e){return mr(this,yr).addWindowPresets(e)}setWindowLevelPreset(e){mr(this,yr).setWindowLevelPreset(e)}setWindowLevelPresetById(e){mr(this,yr).setWindowLevelPresetById(e)}isPlaying(){return null!==mr(this,Cr)}getCurrentPosition(){return mr(this,yr).getCurrentPosition()}getCurrentIndex(){return mr(this,yr).getCurrentIndex()}getCurrentOrientedIndex(){let e=mr(this,yr).getCurrentIndex();if(void 0!==mr(this,yr).getOrientation()){const t=mr(this,vr).getImageDeOrientedVector3D(new Ht(e.get(0),e.get(1),e.get(2)));e=new k([t.getX(),t.getY(),t.getZ()])}return e}getScrollIndex(){return mr(this,yr).getScrollIndex()}getCurrentScrollIndexValue(){return mr(this,yr).getCurrentIndex().get(mr(this,yr).getScrollIndex())}getOrigin(e){return mr(this,yr).getOrigin(e)}getCurrentScrollPosition(){const e=mr(this,yr).getScrollIndex();return mr(this,yr).getCurrentPosition().get(e)}generateImageData(e,t){mr(this,yr).generateImageData(e,t)}setImage(e,t){mr(this,yr).setImage(e),pr(this,Tr,t)}get2DSpacing(){const e=mr(this,yr).getImage().getGeometry().getSpacing();return[e.get(0),e.get(1)]}getRescaledImageValue(e){const t=mr(this,yr).getImage();if(!t.canQuantify())return;const n=t.getGeometry(),i=n.worldToIndex(e);let r;return n.isIndexInBounds(i)&&(r=t.getRescaledValueAtIndex(i)),r}getPixelUnit(){return mr(this,yr).getImage().getMeta().pixelUnit}getImageRegionValues(e,t){let n=mr(this,yr).getImage();const i=mr(this,yr).getOrientation();let r=this.getCurrentIndex(),a=!0;if(!i.equals(tn())){const e=yn(Dn(n,r,a,i)),t=n.getGeometry().getSize(i).getValues();t[2]=1;const o=new G(t),s=n.getGeometry().getSpacing(i).getValues();s[2]=1;const l=new X(s),c=new gn(0,0,0),u=new Bi(c,o,l);n=new wi(u,e),r=new k([0,0,0]),a=!1}const o=function(e,t,n,i,r){if(1!==e.getNumberOfComponents())throw new Error("Unsupported number of components for region iterator: "+e.getNumberOfComponents());void 0===n&&(n=!1);let a=null;a=n?function(t){return e.getRescaledValueAtOffset(t)}:function(t){return e.getValueAtOffset(t)};const o=e.getGeometry().getSize();void 0===i&&(i=new hn(0,0)),void 0===r&&(r=new hn(o.get(0)-1,o.get(1)));const s=o.indexToOffset(t.getWithNew2D(i.getX(),i.getY())),l=o.indexToOffset(t.getWithNew2D(r.getX(),r.getY()-1)),c=Math.max(1,r.getX()-i.getX());return function(e,t,n,i,r,a){let o=t,s=0;return{next:function(){if(o<n){const t={value:e(o),done:!1,index:o};return s+=1,o+=1,s===r&&(s=0,o+=a),t}return{done:!0,index:n}}}}(a,s,l+1,0,c,o.get(0)-c)}(n,r,a,e,t);let s=[];return o&&(s=yn(o)),s}getImageVariableRegionValues(e){const t=function(e,t,n,i){if(1!==e.getNumberOfComponents())throw new Error("Unsupported number of components for region iterator: "+e.getNumberOfComponents());void 0===n&&(n=!1);let r=null;r=n?function(t){return e.getRescaledValueAtOffset(t)}:function(t){return e.getValueAtOffset(t)};const a=e.getGeometry().getSize(),o=[];let s,l=null,c=null,u=null;for(let e=0;e<i.length;++e){s=i[e];const t=s[1][0]-s[0][0];0!==t&&(u=e,l||(l=s[0]),o.push([s[0][0],t,a.get(0)-s[1][0]]))}if(null!==u&&(c=i[u][1]),0!==o.length)return function(e,t,n,i,r){let a=t,o=0,s=0;return{next:function(){if(a<n){const t={value:e(a),done:!1,index:a};return s+=1,a+=1,s===r[o][1]&&(s=0,a+=r[o][2],o+=1,o<r.length&&(a+=r[o][0])),t}return{done:!0,index:n}}}}(r,a.indexToOffset(t.getWithNew2D(l[0],l[1])),a.indexToOffset(t.getWithNew2D(c[0],c[1]))+1,0,o)}(mr(this,yr).getImage(),this.getCurrentIndex(),!0,e);let n=[];return t&&(n=yn(t)),n}canQuantifyImage(){return mr(this,yr).getImage().canQuantify()}canWindowLevel(){return mr(this,yr).getImage().canWindowLevel()}canScroll(){return mr(this,yr).getImage().canScroll(mr(this,yr).getOrientation())}getImageSize(){return mr(this,yr).getImage().getGeometry().getSize(mr(this,yr).getOrientation())}getImageWorldSize(){const e=mr(this,yr).getImage().getGeometry(),t=e.getSize(mr(this,yr).getOrientation()).get2D(),n=e.getSpacing(mr(this,yr).getOrientation()).get2D();return{x:t.x*n.x,y:t.y*n.y}}getImageRescaledDataRange(){return mr(this,yr).getImage().getRescaledDataRange()}equalImageMeta(e){const t=mr(this,yr).getImage().getMeta(),n=Object.keys(e);for(let i=0;i<n.length;++i){const r=n[i];if(void 0===t[r])return!1;if(t[r]!==e[r])return!1}return!0}canSetPosition(e){return mr(this,yr).canSetPosition(e)}setCurrentPosition(e,t){return mr(this,yr).setCurrentPosition(e,t)}getPositionFromPlanePoint(e,t){const n=this.getCurrentScrollIndexValue(),i=new gn(e,t,n),r=mr(this,vr).getImageOrientedVector3D(i),a=mr(this,yr).getImage().getGeometry().pointToWorld(r);return this.getCurrentPosition().mergeWith3D(a)}getPlanePositionFromPosition(e){const t=mr(this,yr).getImage().getGeometry().worldToPoint(e),n=mr(this,vr).getImageDeOrientedVector3D(t);return{x:n.getX(),y:n.getY()}}setCurrentIndex(e,t){return mr(this,yr).setCurrentIndex(e,t)}getPlanePositionFromPlanePoint(e){const t=this.getCurrentScrollIndexValue(),n=new gn(e.x,e.y,t),i=mr(this,vr).getTargetDeOrientedVector3D(n),r=mr(this,yr).getImage().getGeometry().getRealSpacing();return new gn(i.getX()*r.get(0),i.getY()*r.get(1),i.getZ()*r.get(2))}getOffset3DFromPlaneOffset(e){return mr(this,vr).getOffset3DFromPlaneOffset(e)}incrementIndex(e,t){return mr(this,yr).incrementIndex(e,t)}decrementIndex(e,t){return mr(this,yr).decrementIndex(e,t)}decrementScrollIndex(e){return mr(this,yr).decrementScrollIndex(e)}incrementScrollIndex(e){return mr(this,yr).incrementScrollIndex(e)}play(){if(this.canScroll())if(null===mr(this,Cr)){const e=mr(this,yr).getImage(),t=e.getMeta().RecommendedDisplayFrameRate,n=mr(this,yr).getPlaybackMilliseconds(t),i=e.getGeometry().getSize().canScroll3D();pr(this,Cr,setInterval((()=>{let e=!1;if(e=i?this.incrementScrollIndex():this.incrementIndex(3),!e){const e=this.getCurrentIndex().getValues(),t=mr(this,yr).getOrientation();i?e[t.getThirdColMajorDirection()]=0:e[3]=0;const n=new k(e),r=mr(this,yr).getImage().getGeometry();this.setCurrentPosition(r.indexToWorld(n))}}),n))}else this.stop()}stop(){null!==mr(this,Cr)&&(clearInterval(mr(this,Cr)),pr(this,Cr,null))}getWindowLevel(){return{width:mr(this,yr).getCurrentWindowLut().getWindowLevel().getWidth(),center:mr(this,yr).getCurrentWindowLut().getWindowLevel().getCenter()}}setWindowLevel(e,t){mr(this,yr).setWindowLevel(e,t)}getColourMap(){return mr(this,yr).getColourMap()}setColourMap(e){mr(this,yr).setColourMap(e)}setViewAlphaFunction(e){mr(this,yr).setAlphaFunction(e)}setColourMapFromName(e){if(!gt[e])throw new Error("Unknown colour map: '"+e+"'");this.setColourMap(gt[e])}addEventListener(e,t){mr(this,Ir).add(e,t)}removeEventListener(e,t){mr(this,Ir).remove(e,t)}}const Pr=["mousedown","mousemove","mouseup","mouseout","wheel","dblclick","touchstart","touchmove","touchend"];function Ar(e,t){return Ar(e,t)}const Or={};function Fr(e){let t=0,n=0;if(0!==e.length&&void 0!==e[0].target){let i=e[0].target.offsetParent;for(;i;)isNaN(i.offsetLeft)||(t+=i.offsetLeft),isNaN(i.offsetTop)||(n+=i.offsetTop),i=i.offsetParent}else Y.debug("No touch target offset parent.");const i=[];for(let r=0;r<e.length;++r)i.push({x:e[r].pageX-t,y:e[r].pageY-n});return i}function Er(e){let t=[];return void 0!==e.targetTouches&&0!==e.targetTouches.length?t=Fr(e.targetTouches):void 0!==e.changedTouches&&0!==e.changedTouches.length?t=Fr(e.changedTouches):t.push({x:e.offsetX,y:e.offsetY}),t}function Rr(e,t){const n=document.createElement("canvas");n.width=e,n.height=t;const i=document.createElement("canvas");i.width=1,i.height=1;const r=n.getContext("2d"),a=i.getContext("2d");return r&&(r.fillRect(e-1,t-1,1,1),a.drawImage(n,e-1,t-1,1,1,0,0,1,1)),a&&0!==a.getImageData(0,0,1,1).data[3]}function Mr(e,t){Qr(e,t),t.add(e)}function qr(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ur(e,t,n){Qr(e,t),t.set(e,n)}function Qr(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function kr(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function Br(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Wr(e,t,"get"))}function Nr(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Wr(e,t,"set"),n),n}function Wr(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Vr=new WeakMap,Gr=new WeakMap,zr=new WeakMap,Hr=new WeakMap,jr=new WeakMap,Xr=new WeakMap,Yr=new WeakMap,_r=new WeakMap,Kr=new WeakMap,Zr=new WeakMap,Jr=new WeakMap,$r=new WeakMap,ea=new WeakMap,ta=new WeakMap,na=new WeakMap,ia=new WeakMap,ra=new WeakMap,aa=new WeakMap,oa=new WeakMap,sa=new WeakMap,la=new WeakMap,ca=new WeakSet,ua=new WeakMap,ha=new WeakSet,da=new WeakMap,Sa=new WeakMap,xa=new WeakMap,ga=new WeakMap;class pa{constructor(e){Mr(this,ha),Mr(this,ca),Ur(this,Vr,{writable:!0,value:void 0}),Ur(this,Gr,{writable:!0,value:null}),Ur(this,zr,{writable:!0,value:null}),Ur(this,Hr,{writable:!0,value:null}),Ur(this,jr,{writable:!0,value:null}),Ur(this,Xr,{writable:!0,value:!0}),Ur(this,Yr,{writable:!0,value:null}),Ur(this,_r,{writable:!0,value:void 0}),Ur(this,Kr,{writable:!0,value:void 0}),Ur(this,Zr,{writable:!0,value:1}),Ur(this,Jr,{writable:!0,value:{x:1,y:1}}),Ur(this,$r,{writable:!0,value:{x:1,y:1}}),Ur(this,ea,{writable:!0,value:{x:0,y:0}}),Ur(this,ta,{writable:!0,value:{x:0,y:0}}),Ur(this,na,{writable:!0,value:{x:0,y:0}}),Ur(this,ia,{writable:!0,value:{x:0,y:0}}),Ur(this,ra,{writable:!0,value:{x:0,y:0}}),Ur(this,aa,{writable:!0,value:null}),Ur(this,oa,{writable:!0,value:null}),Ur(this,sa,{writable:!0,value:new Tn}),Ur(this,la,{writable:!0,value:!1}),qr(this,"onimageset",(e=>{Br(this,oa)===e.dataid&&(Br(this,Gr).setImage(e.value[0],Br(this,oa)),kr(this,ca,ma).call(this,Br(this,Gr).getImageSize().get2D()),Nr(this,aa,!0))})),qr(this,"onimagechange",(e=>{Br(this,oa)===e.dataid&&Nr(this,aa,!0)})),Ur(this,ua,{writable:!0,value:e=>{e.srclayerid=this.getId(),e.dataid=Br(this,oa),Br(this,sa).fireEvent(e)}}),Ur(this,da,{writable:!0,value:e=>{void 0!==e.skipGenerate&&!0===e.skipGenerate||(Nr(this,aa,!0),this.draw())}}),Ur(this,Sa,{writable:!0,value:e=>{void 0!==e.skipGenerate&&!0===e.skipGenerate||(Nr(this,aa,!0),this.draw())}}),Ur(this,xa,{writable:!0,value:e=>{if(void 0===e.skipGenerate||!0!==e.skipGenerate){let t=!0;if(void 0!==e.valid&&(t=e.valid),t){const t=[0,1,2],n=t.indexOf(Br(this,Gr).getScrollIndex());t.splice(n,1),0===e.diffDims.filter((function(e){return-1===t.indexOf(e)})).length&&Br(this,Xr)||(Nr(this,Xr,!0),Nr(this,aa,!0),this.draw())}else Br(this,Xr)&&(Nr(this,Xr,!1),this.clear())}}}),Ur(this,ga,{writable:!0,value:e=>{void 0!==e.skipGenerate&&!0===e.skipGenerate||(Nr(this,aa,!0),this.draw())}}),Nr(this,Vr,e),Br(this,Vr).className+=" viewLayer"}getDataIndex(){return Br(this,oa)}enableImageSmoothing(e){Nr(this,la,e)}setView(e,t){Nr(this,oa,t),e.addEventListener("wlchange",Br(this,da)),e.addEventListener("colourchange",Br(this,Sa)),e.addEventListener("positionchange",Br(this,xa)),e.addEventListener("alphafuncchange",Br(this,ga));for(let t=0;t<An.length;++t)e.addEventListener(An[t],Br(this,ua));Nr(this,Gr,new br(e,t))}getViewController(){return Br(this,Gr)}getImageData(){return Br(this,Yr)}getId(){return Br(this,Vr).id}getBaseSize(){return Br(this,_r)}getImageWorldSize(){return Br(this,Gr).getImageWorldSize()}getOpacity(){return Br(this,Zr)}setOpacity(e){if(e===Br(this,Zr))return;Nr(this,Zr,Math.min(Math.max(e,0),1));const t={type:"opacitychange",value:[Br(this,Zr)]};Br(this,ua).call(this,t)}addFlipOffsetX(){Br(this,ra).x+=Br(this,zr).width/Br(this,Jr).x,Br(this,ea).x+=Br(this,ra).x}addFlipOffsetY(){Br(this,ra).y+=Br(this,zr).height/Br(this,Jr).y,Br(this,ea).y+=Br(this,ra).y}setScale(e,t){const n=Br(this,Gr).getPlaneHelper(),i=n.getTargetOrientedPositiveXYZ(e),r={x:Br(this,$r).x*i.x,y:Br(this,$r).y*i.y};if(1===Math.abs(e.x)&&1===Math.abs(e.y)&&1===Math.abs(e.z)){const e={x:Br(this,ea).x-Br(this,ia).x,y:Br(this,ea).y-Br(this,ia).y};Nr(this,ia,{x:0,y:0}),Nr(this,ea,e)}else if(void 0!==t){let e=n.getPlaneOffsetFromOffset3D({x:t.getX(),y:t.getY(),z:t.getZ()});e={x:e.x+Br(this,ta).x,y:e.y+Br(this,ta).y};const i=Xo(Br(this,ea),Br(this,Jr),r,e),a={x:Br(this,ia).x+i.x-Br(this,ea).x,y:Br(this,ia).y+i.y-Br(this,ea).y};Nr(this,ia,a),Nr(this,ea,i)}Nr(this,Jr,r)}setBaseOffset(e,t){const n=Br(this,Gr).getPlaneHelper(),i=n.getNativeScrollIndex(),r=n.getPlaneOffsetFromOffset3D({x:0===i?e.getX():t.getX(),y:1===i?e.getY():t.getY(),z:2===i?e.getZ():t.getZ()}),a=Br(this,ta).x!==r.x||Br(this,ta).y!==r.y;return a&&(Nr(this,ea,{x:Br(this,ea).x-Br(this,ta).x+r.x,y:Br(this,ea).y-Br(this,ta).y+r.y}),Nr(this,ta,r)),a}setOffset(e){const t=Br(this,Gr).getPlaneHelper().getPlaneOffsetFromOffset3D(e);Nr(this,ea,{x:t.x+Br(this,na).x+Br(this,ta).x+Br(this,ia).x+Br(this,ra).x,y:t.y+Br(this,na).y+Br(this,ta).y+Br(this,ia).y+Br(this,ra).y})}displayToPlaneIndex(e,t){const n=this.displayToPlanePos(e,t);return new k([Math.floor(n.x),Math.floor(n.y)])}displayToPlaneScale(e,t){return{x:e/Br(this,Jr).x,y:t/Br(this,Jr).y}}displayToPlanePos(e,t){const n=this.displayToPlaneScale(e,t);return{x:n.x+Br(this,ea).x,y:n.y+Br(this,ea).y}}planePosToDisplay(e,t){return{x:(e-Br(this,ea).x+Br(this,ta).x)*Br(this,Jr).x,y:(t-Br(this,ea).y+Br(this,ta).y)*Br(this,Jr).y}}displayToMainPlanePos(e,t){const n=this.displayToPlanePos(e,t);return{x:n.x-Br(this,ta).x,y:n.y-Br(this,ta).y}}display(e){Br(this,Vr).style.display=e?"":"none"}isVisible(){return""===Br(this,Vr).style.display}draw(){if(!Br(this,Xr))return;let e={type:"renderstart",layerid:this.getId(),dataid:this.getDataIndex()};Br(this,ua).call(this,e),Br(this,aa)&&kr(this,ha,fa).call(this),Br(this,jr).globalAlpha=Br(this,Zr),this.clear(),Br(this,jr).setTransform(Br(this,Jr).x,0,0,Br(this,Jr).y,-1*Br(this,ea).x*Br(this,Jr).x,-1*Br(this,ea).y*Br(this,Jr).y),Br(this,jr).imageSmoothingEnabled=Br(this,la),Br(this,jr).drawImage(Br(this,Hr),0,0),e={type:"renderend",layerid:this.getId(),dataid:this.getDataIndex()},Br(this,ua).call(this,e)}initialise(e,t,n){Nr(this,Kr,t),Nr(this,Zr,Math.min(Math.max(n,0),1)),Nr(this,zr,document.createElement("canvas")),Br(this,Vr).appendChild(Br(this,zr)),Br(this,zr).getContext?(Nr(this,jr,Br(this,zr).getContext("2d")),Br(this,jr)?(Nr(this,Hr,document.createElement("canvas")),kr(this,ca,ma).call(this,e),Nr(this,aa,!0)):alert("Error: failed to get the 2D context.")):alert("Error: no canvas.getContext method.")}fitToContainer(e,t,n){let i=!1;if(Br(this,zr).width!==t.x||Br(this,zr).height!==t.y){if(!Rr(t.x,t.y))throw new Error("Cannot resize canvas "+t.x+", "+t.y);Br(this,zr).width=t.x,Br(this,zr).height=t.y,i=!0}const r=Br(this,Jr).x/Br(this,$r).x,a=Br(this,Jr).y/Br(this,$r).y,o={x:e*Br(this,Kr).x,y:e*Br(this,Kr).y},s={x:r*o.x,y:a*o.y};r===s.x&&a===s.y||(Nr(this,$r,o),Nr(this,Jr,s),i=!0);const l={x:n.x/o.x,y:n.y/o.y};Br(this,na).x===l.x&&Br(this,na).y===l.y||(Nr(this,na,l),Nr(this,ea,{x:Br(this,na).x+Br(this,ta).x+Br(this,ia).x+Br(this,ra).x,y:Br(this,na).y+Br(this,ta).y+Br(this,ia).y+Br(this,ra).y}),i=!0),i&&this.draw()}bindInteraction(){Br(this,Vr).style.pointerEvents="auto";const e=Pr;for(let t=0;t<e.length;++t)Br(this,Vr).addEventListener(e[t],Br(this,ua),{passive:!0})}unbindInteraction(){Br(this,Vr).style.pointerEvents="none";const e=Pr;for(let t=0;t<e.length;++t)Br(this,Vr).removeEventListener(e[t],Br(this,ua))}addEventListener(e,t){Br(this,sa).add(e,t)}removeEventListener(e,t){Br(this,sa).remove(e,t)}setCurrentPosition(e,t){return Br(this,Gr).setCurrentPosition(e)}clear(){Br(this,jr).save(),Br(this,jr).setTransform(1,0,0,1,0,0),Br(this,jr).clearRect(0,0,Br(this,zr).width,Br(this,zr).height),Br(this,jr).restore()}align(e){Br(this,zr).style.top=e.getCanvas().offsetTop,Br(this,zr).style.left=e.getCanvas().offsetLeft}}function ma(e){if(!Rr(e.x,e.y))throw new Error("Cannot create canvas with size "+e.x+", "+e.y);Nr(this,_r,e),Br(this,Hr).width=Br(this,_r).x,Br(this,Hr).height=Br(this,_r).y,Br(this,jr).clearRect(0,0,Br(this,_r).x,Br(this,_r).y),Nr(this,Yr,Br(this,jr).createImageData(Br(this,_r).x,Br(this,_r).y))}function fa(){Br(this,Gr).generateImageData(Br(this,Yr)),Br(this,Hr).getContext("2d").putImageData(Br(this,Yr),0,0),Nr(this,aa,!1)}function ya(e,t,n){if(null==e||null==t)return!1;const i=n>0?0|n:0;return e.substring(i,i+t.length)===t}function Da(e,t){return null!=e&&null!=t&&e.substring(e.length-t.length)===t}function va(e){const t=[];if(null==e)return t;const n=/{(\w+)}/g;let i=n.exec(e);for(;i;)t.push(i[1]),i=n.exec(e);return t}function wa(e,t){let n="";if(null==e)return n;if(n=e,null==t)return n;const i=va(e);for(let e=0;e<i.length;++e){const r=t[i[e]];if(null!=r&&null!==r.value&&void 0!==r.value){let t=r.value.toPrecision(4);null!==r.unit&&void 0!==r.unit&&0!==r.unit.length&&("degree"!==r.unit&&(t+=" "),t+=r.unit);const a="{"+i[e]+"}";n=n.replace(a,t)}}return n}function Ca(e){let t=null;if(null!=e&&"."!==e[0]){const n=e.toLowerCase().split(".");1!==n.length&&(t=n.pop(),/[a-z]/.test(t)&&!t.includes("/")||(t=null))}return t}function Ta(e){const t=new Uint8Array(e.length);for(let n=0,i=e.length;n<i;n++)t[n]=e.charCodeAt(n);return t}function Ia(e,t){const n=Math.pow(10,t),i=.01/n;return Math.round(e*n+i)/n}var La=a(196),ba=a.n(La);function Pa(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function Aa(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Fa(e,t,"get"))}function Oa(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Fa(e,t,"set"),n),n}function Fa(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function Ea(e){let t="shape";return e instanceof ba().Line?t=4===e.points().length?"line":6===e.points().length?"protractor":"roi":e instanceof ba().Rect?t="rectangle":e instanceof ba().Ellipse&&(t="ellipse"),t}var Ra=new WeakMap,Ma=new WeakMap,qa=new WeakMap,Ua=new WeakMap,Qa=new WeakMap;class ka{constructor(e,t,n,i){Pa(this,Ra,{writable:!0,value:void 0}),Pa(this,Ma,{writable:!0,value:void 0}),Pa(this,qa,{writable:!0,value:void 0}),Pa(this,Ua,{writable:!0,value:void 0}),Pa(this,Qa,{writable:!0,value:void 0}),Oa(this,Ra,e),Oa(this,Ma,t),Oa(this,qa,n),Oa(this,Ua,void 0!==i&&i),Oa(this,Qa,e.getParent())}getName(){return"Draw-"+Aa(this,Ma)}execute(){Aa(this,Qa).add(Aa(this,Ra)),Aa(this,qa).draw(),Aa(this,Ua)||this.onExecute({type:"drawcreate",id:Aa(this,Ra).id()})}undo(){Aa(this,Ra).remove(),Aa(this,qa).draw(),this.onUndo({type:"drawdelete",id:Aa(this,Ra).id()})}onExecute(e){}onUndo(e){}}var Ba=new WeakMap,Na=new WeakMap,Wa=new WeakMap,Va=new WeakMap;class Ga{constructor(e,t,n,i){Pa(this,Ba,{writable:!0,value:void 0}),Pa(this,Na,{writable:!0,value:void 0}),Pa(this,Wa,{writable:!0,value:void 0}),Pa(this,Va,{writable:!0,value:void 0}),Oa(this,Ba,e),Oa(this,Na,t),Oa(this,Wa,n),Oa(this,Va,i)}getName(){return"Move-"+Aa(this,Na)}execute(){Aa(this,Ba).move(Aa(this,Wa)),Aa(this,Va).draw(),this.onExecute({type:"drawmove",id:Aa(this,Ba).id()})}undo(){const e={x:-Aa(this,Wa).x,y:-Aa(this,Wa).y};Aa(this,Ba).move(e),Aa(this,Va).draw(),this.onUndo({type:"drawmove",id:Aa(this,Ba).id()})}onExecute(e){}onUndo(e){}}var za=new WeakMap,Ha=new WeakMap,ja=new WeakMap,Xa=new WeakMap,Ya=new WeakMap,_a=new WeakMap,Ka=new WeakMap;class Za{constructor(e,t,n,i,r,a,o){Pa(this,za,{writable:!0,value:void 0}),Pa(this,Ha,{writable:!0,value:void 0}),Pa(this,ja,{writable:!0,value:void 0}),Pa(this,Xa,{writable:!0,value:void 0}),Pa(this,Ya,{writable:!0,value:void 0}),Pa(this,_a,{writable:!0,value:void 0}),Pa(this,Ka,{writable:!0,value:void 0}),Oa(this,za,e),Oa(this,Ha,t),Oa(this,ja,n),Oa(this,Xa,i),Oa(this,Ya,r),Oa(this,_a,a),Oa(this,Ka,o)}getName(){return"Change-"+Aa(this,za)}execute(){Aa(this,Ha).update(Aa(this,Xa),Aa(this,Ka),Aa(this,_a)),Aa(this,Ya).draw(),this.onExecute({type:"drawchange",id:Aa(this,Xa).getParent().id()})}undo(){Aa(this,Ha).update(Aa(this,ja),Aa(this,Ka),Aa(this,_a)),Aa(this,Ya).draw(),this.onUndo({type:"drawchange",id:Aa(this,ja).getParent().id()})}onExecute(e){}onUndo(e){}}var Ja=new WeakMap,$a=new WeakMap,eo=new WeakMap,to=new WeakMap;class no{constructor(e,t,n){Pa(this,Ja,{writable:!0,value:void 0}),Pa(this,$a,{writable:!0,value:void 0}),Pa(this,eo,{writable:!0,value:void 0}),Pa(this,to,{writable:!0,value:void 0}),Oa(this,Ja,e),Oa(this,$a,t),Oa(this,eo,n),Oa(this,to,e.getParent())}getName(){return"Delete-"+Aa(this,$a)}execute(){Aa(this,Ja).remove(),Aa(this,eo).draw(),this.onExecute({type:"drawdelete",id:Aa(this,Ja).id()})}undo(){Aa(this,to).add(Aa(this,Ja)),Aa(this,eo).draw(),this.onUndo({type:"drawcreate",id:Aa(this,Ja).id()})}onExecute(e){}onUndo(e){}}function io(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function ro(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,oo(e,t,"get"))}function ao(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,oo(e,t,"set"),n),n}function oo(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function so(e){return"shape"===e.name()}function lo(e){return e.name().startsWith("shape-")}function co(e){return"label"===e.name()}function uo(e){return"position-group"===e.name()}function ho(e){return function(t){return t.id()===e}}function So(e){return"anchor"!==e.name()&&"label"!==e.name()}var xo=new WeakMap,go=new WeakMap;class po{constructor(e){io(this,xo,{writable:!0,value:void 0}),io(this,go,{writable:!0,value:null}),ao(this,xo,e)}getCurrentPosGroup(){const e=ro(this,xo).getChildren((e=>e.id()===ro(this,go)));let t=null;return 1===e.length?t=e[0]:0===e.length?(t=new(ba().Group),t.name("position-group"),t.id(ro(this,go)),t.visible(!0),ro(this,xo).add(t)):Y.warn("Unexpected number of draw position groups."),t}reset(){ao(this,xo,null)}getGroup(e){const t=ro(this,xo).findOne("#"+e);return void 0===t&&Y.warn("Cannot find node with id: "+e),t}activateDrawLayer(e,t){const n=[t];for(let t=3;t<e.length();++t)n.push(t);ao(this,go,e.toStringId(n));const i=ro(this,xo).getChildren(uo);let r;for(let e=0,t=i.length;e<t;++e)r=!1,i[e].id()===ro(this,go)&&(r=!0),i[e].visible(r);ro(this,xo).draw()}getDrawDisplayDetails(){const e=[],t=ro(this,xo).getChildren();for(let n=0,i=t.length;n<i;++n){const i=B(t[n].id()),r=t[n].getChildren();for(let t=0,n=r.length;t<n;++t){const n=r[t].getChildren(so)[0],a=r[t].getChildren(co)[0].getChildren()[0];let o=n.className;if("Line"===o){const e=r[t].getChildren(lo);if(n.closed())o="Roi";else if(0!==e.length){const t=e[0].name();o=-1!==t.indexOf("triangle")?"Arrow":-1!==t.indexOf("arc")?"Protractor":"Ruler"}}"Rect"===o&&(o="Rectangle"),e.push({id:r[t].id(),position:i.toString(),type:o,color:n.stroke(),meta:a.meta})}}return e}getDrawStoreDetails(){const e={},t=ro(this,xo).getChildren(uo);let n,i;for(let r=0,a=t.length;r<a;++r){n=t[r].getChildren();for(let t=0,r=n.length;t<r;++t){i=n[t];const r=i.find(".anchor");for(let e=0;e<r.length;++e)r[e].remove();const a=i.find(".text");1!==a.length&&Y.warn("There should not be more than one text per shape."),e[i.id()]={meta:a[0].meta}}}return e}setDrawings(e,t,n,i){const r=ba().Node.create(e).getChildren(uo);for(let e=0,a=r.length;e<a;++e){const a=r[e];let o=ro(this,xo).getChildren(ho(a.id()))[0];void 0===o&&(o=new(ba().Group)({id:a.id(),name:"position-group",visible:!1}),ro(this,xo).add(o));const s=a.getChildren();for(let e=0,r=s.length;e<r;++e){const e=s[0];o.add(e);const r=e.getChildren(so)[0],a=new ka(e,r.className,ro(this,xo));if(a.onExecute=n,a.onUndo=n,t){const n=t[e.id()],i=e.getChildren(co)[0].getText();i.meta=n.meta,i.setText(wa(i.meta.textExpr,i.meta.quantification))}a.execute(),i(a)}}}updateDraw(e){const t=ro(this,xo).findOne("#"+e.id);if(void 0===t)return void Y.warn("[updateDraw] Cannot find group with id: "+e.id);const n=t.getChildren(so);for(let t=0;t<n.length;++t)n[t].stroke(e.color);const i=t.getChildren(lo);for(let t=0;t<i.length;++t)void 0!==i[t].stroke()?i[t].stroke(e.color):void 0!==i[t].fill()&&i[t].fill(e.color);const r=t.getChildren(co)[0],a=qt(e.color),o=r.getChildren();for(let t=0;t<o.length;++t)if(o[t].fill(e.color),"Text"===o[t].className){const n=o[t];n.shadowColor(a),void 0!==e.meta&&(n.meta=e.meta,n.setText(wa(n.meta.textExpr,n.meta.quantification)),r.setVisible(0!==n.meta.textExpr.length))}ro(this,xo).draw()}deleteDrawGroup(e,t,n){const i=Ea(e.getChildren(so)[0]),r=new no(e,i,ro(this,xo));r.onExecute=t,r.onUndo=t,r.execute(),n(r)}deleteDraw(e,t,n){const i=this.getGroup(e);return void 0!==i&&(this.deleteDrawGroup(i,t,n),!0)}deleteDraws(e,t){const n=ro(this,xo).getChildren();for(;n.length;)this.deleteDrawGroup(n[0],e,t)}}function mo(e,t,n){fo(e,t),t.set(e,n)}function fo(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function yo(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,vo(e,t,"get"))}function Do(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,vo(e,t,"set"),n),n}function vo(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var wo=new WeakMap,Co=new WeakMap,To=new WeakMap,Io=new WeakMap,Lo=new WeakMap,bo=new WeakMap,Po=new WeakMap,Ao=new WeakMap,Oo=new WeakMap,Fo=new WeakMap,Eo=new WeakMap,Ro=new WeakMap,Mo=new WeakMap,qo=new WeakMap,Uo=new WeakSet;class Qo{constructor(e){var t;fo(this,t=Uo),t.add(this),mo(this,wo,{writable:!0,value:void 0}),mo(this,Co,{writable:!0,value:null}),mo(this,To,{writable:!0,value:void 0}),mo(this,Io,{writable:!0,value:void 0}),mo(this,Lo,{writable:!0,value:{x:1,y:1}}),mo(this,bo,{writable:!0,value:{x:0,y:0}}),mo(this,Po,{writable:!0,value:{x:0,y:0}}),mo(this,Ao,{writable:!0,value:{x:0,y:0}}),mo(this,Oo,{writable:!0,value:{x:0,y:0}}),mo(this,Fo,{writable:!0,value:null}),mo(this,Eo,{writable:!0,value:void 0}),mo(this,Ro,{writable:!0,value:null}),mo(this,Mo,{writable:!0,value:new Tn}),mo(this,qo,{writable:!0,value:e=>{e.srclayerid=this.getId(),e.dataid=yo(this,Ro),yo(this,Mo).fireEvent(e)}}),Do(this,wo,e),yo(this,wo).className+=" drawLayer"}getDataIndex(){return yo(this,Ro)}getKonvaStage(){return yo(this,Co)}getKonvaLayer(){return yo(this,Co).getLayers()[0]}getDrawController(){return yo(this,Fo)}setPlaneHelper(e){Do(this,Eo,e)}getId(){return yo(this,wo).id}getBaseSize(){return yo(this,To)}getOpacity(){return yo(this,Co).opacity()}setOpacity(e){yo(this,Co).opacity(Math.min(Math.max(e,0),1))}addFlipOffsetX(){const e=yo(this,Co).scale(),t=yo(this,Co).size();yo(this,Oo).x+=t.width/e.x;const n=yo(this,Co).offset();n.x+=yo(this,Oo).x,yo(this,Co).offset(n)}addFlipOffsetY(){const e=yo(this,Co).scale(),t=yo(this,Co).size();yo(this,Oo).y+=t.height/e.y;const n=yo(this,Co).offset();n.y+=yo(this,Oo).y,yo(this,Co).offset(n)}setScale(e,t){const n=yo(this,Eo).getTargetOrientedPositiveXYZ(e),i={x:yo(this,Lo).x*n.x,y:yo(this,Lo).y*n.y},r=yo(this,Co).offset();if(1===Math.abs(e.x)&&1===Math.abs(e.y)&&1===Math.abs(e.z)){const e={x:r.x-yo(this,Ao).x,y:r.y-yo(this,Ao).y};Do(this,Ao,{x:0,y:0}),yo(this,Co).offset(e)}else if(void 0!==t){let e=yo(this,Eo).getPlaneOffsetFromOffset3D({x:t.getX(),y:t.getY(),z:t.getZ()});e={x:e.x+yo(this,bo).x,y:e.y+yo(this,bo).y};const n=Xo(r,yo(this,Co).scale(),i,e),a={x:yo(this,Ao).x+n.x-r.x,y:yo(this,Ao).y+n.y-r.y};Do(this,Ao,a),yo(this,Co).offset(n)}yo(this,Co).scale(i),function(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}(this,Uo,ko).call(this,i)}setOffset(e){const t=yo(this,Eo).getPlaneOffsetFromOffset3D(e);yo(this,Co).offset({x:t.x+yo(this,Po).x+yo(this,bo).x+yo(this,Ao).x+yo(this,Oo).x,y:t.y+yo(this,Po).y+yo(this,bo).y+yo(this,Ao).y+yo(this,Oo).y})}setBaseOffset(e,t){const n=yo(this,Eo).getNativeScrollIndex(),i=yo(this,Eo).getPlaneOffsetFromOffset3D({x:0===n?e.getX():t.getX(),y:1===n?e.getY():t.getY(),z:2===n?e.getZ():t.getZ()}),r=yo(this,bo).x!==i.x||yo(this,bo).y!==i.y;if(r){const e=yo(this,Co).offset();yo(this,Co).offset({x:e.x-yo(this,bo).x+i.x,y:e.y-yo(this,bo).y+i.y}),Do(this,bo,i)}return r}display(e){yo(this,wo).style.display=e?"":"none"}isVisible(){return""===yo(this,wo).style.display}draw(){yo(this,Co).draw()}initialise(e,t,n){Do(this,To,e),Do(this,Io,t),Do(this,Ro,n),Do(this,Co,new(ba().Stage)({container:yo(this,wo),width:yo(this,To).x,height:yo(this,To).y,listening:!1})),yo(this,Co).getContent().setAttribute("style","");const i=new(ba().Layer)({listening:!1,visible:!0});yo(this,Co).add(i),Do(this,Fo,new po(i))}fitToContainer(e,t,n){yo(this,Co).setWidth(t.x),yo(this,Co).setHeight(t.y);const i=yo(this,Co).scale().x/yo(this,Lo).x,r=yo(this,Co).scale().y/yo(this,Lo).y;Do(this,Lo,{x:e*yo(this,Io).x,y:e*yo(this,Io).y}),yo(this,Co).scale({x:i*yo(this,Lo).x,y:r*yo(this,Lo).y}),Do(this,Po,{x:n.x/yo(this,Lo).x,y:n.y/yo(this,Lo).y}),yo(this,Co).offset({x:yo(this,Po).x+yo(this,bo).x+yo(this,Ao).x+yo(this,Oo).x,y:yo(this,Po).y+yo(this,bo).y+yo(this,Ao).y+yo(this,Oo).y})}isGroupVisible(e){const t=yo(this,Fo).getGroup(e);return void 0!==t&&t.isVisible()}toogleGroupVisibility(e){const t=yo(this,Fo).getGroup(e);return void 0!==t&&(t.visible(!t.isVisible()),this.draw(),!0)}deleteDraw(e,t){yo(this,Fo).deleteDraw(e,yo(this,qo),t)}deleteDraws(e){yo(this,Fo).deleteDraws(yo(this,qo),e)}bindInteraction(){yo(this,Co).listening(!0),yo(this,wo).style.pointerEvents="auto";const e=Pr;for(let t=0;t<e.length;++t)yo(this,wo).addEventListener(e[t],yo(this,qo))}unbindInteraction(){yo(this,Co).listening(!1),yo(this,wo).style.pointerEvents="none";const e=Pr;for(let t=0;t<e.length;++t)yo(this,wo).removeEventListener(e[t],yo(this,qo))}setCurrentPosition(e,t){return this.getDrawController().activateDrawLayer(t,yo(this,Eo).getScrollIndex()),!0}addEventListener(e,t){yo(this,Mo).add(e,t)}removeEventListener(e,t){yo(this,Mo).remove(e,t)}}function ko(e){const t=2/e.x,n=2/e.y,i=yo(this,Co).find("Label");for(let e=0;e<i.length;++e)i[e].scale({x:t,y:n})}function Bo(e,t){Wo(e,t),t.add(e)}function No(e,t,n){Wo(e,t),t.set(e,n)}function Wo(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Vo(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function Go(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Ho(e,t,"get"))}function zo(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Ho(e,t,"set"),n),n}function Ho(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function jo(e){let t=null;const n=e.target.closest(".layer");return n&&void 0!==n.id&&(t=function(e){const t=e.split("-layer-");return 2!==t.length&&Y.warn("Not the expected layer div id format..."),{groupDivId:t[0],layerId:t[1]}}(n.id)),t}function Xo(e,t,n,i){const r=(i.x-e.x)*t.x,a=(i.y-e.y)*t.y;return{x:i.x-r/n.x,y:i.y-a/n.y}}var Yo=new WeakMap,_o=new WeakMap,Ko=new WeakMap,Zo=new WeakMap,Jo=new WeakMap,$o=new WeakMap,es=new WeakMap,ts=new WeakMap,ns=new WeakMap,is=new WeakMap,rs=new WeakMap,as=new WeakMap,os=new WeakSet,ss=new WeakSet,ls=new WeakSet,cs=new WeakSet,us=new WeakSet,hs=new WeakMap;class ds{constructor(e){var t,n,i;Bo(this,us),Bo(this,cs),Bo(this,ls),Bo(this,ss),Bo(this,os),No(this,Yo,{writable:!0,value:void 0}),No(this,_o,{writable:!0,value:[]}),No(this,Ko,{writable:!0,value:{x:1,y:1,z:1}}),No(this,Zo,{writable:!0,value:{x:1,y:1,z:1}}),No(this,Jo,{writable:!0,value:{x:0,y:0,z:0}}),No(this,$o,{writable:!0,value:null}),No(this,es,{writable:!0,value:null}),No(this,ts,{writable:!0,value:new Tn}),No(this,ns,{writable:!0,value:void 0}),No(this,is,{writable:!0,value:!1}),No(this,rs,{writable:!0,value:void 0}),No(this,as,{writable:!0,value:e=>{Vo(this,cs,ps).call(this)}}),t=this,i=e=>{for(let e=0;e<Go(this,_o).length;++e)Go(this,_o)[e]instanceof pa&&(Go(this,_o)[e].removeEventListener("positionchange",this.updateLayersToPositionChange),Go(this,_o)[e].removeEventListener("positionchange",Go(this,hs)));const t=new k(e.value[0]),n=new mn(e.value[1]);zo(this,rs,n),Go(this,is)&&Vo(this,cs,ps).call(this,n);let i=null,r=null;for(let a=0;a<Go(this,_o).length;++a){let o=!1;if(Go(this,_o)[a]instanceof pa){const e=Go(this,_o)[a].getViewController(),t=e.getOrigin(),s=e.getOrigin(n);if(r){if(e.canSetPosition(n)&&void 0!==s){const e=i.minus(t),n=new Ht(e.getX(),e.getY(),e.getZ()),l=r.minus(s),c=new Ht(l.getX(),l.getY(),l.getZ());o=Go(this,_o)[a].setBaseOffset(n,c)}}else i=t,r=s}let s=!1;Go(this,_o)[a].getId()!==e.srclayerid&&(s=Go(this,_o)[a].setCurrentPosition(n,t)),!s&&o&&Go(this,_o)[a].draw()}for(let e=0;e<Go(this,_o).length;++e)Go(this,_o)[e]instanceof pa&&(Go(this,_o)[e].addEventListener("positionchange",this.updateLayersToPositionChange),Go(this,_o)[e].addEventListener("positionchange",Go(this,hs)))},(n=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(n="updateLayersToPositionChange"))in t?Object.defineProperty(t,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[n]=i,No(this,hs,{writable:!0,value:e=>{Go(this,ts).fireEvent(e)}}),zo(this,Yo,e)}getTargetOrientation(){return Go(this,ns)}setTargetOrientation(e){zo(this,ns,e)}getShowCrosshair(){return Go(this,is)}setShowCrosshair(e){zo(this,is,e),e?(this.addEventListener("offsetchange",Go(this,as)),this.addEventListener("zoomchange",Go(this,as)),Vo(this,cs,ps).call(this)):(this.removeEventListener("offsetchange",Go(this,as)),this.removeEventListener("zoomchange",Go(this,as)),Vo(this,us,ms).call(this))}getDivId(){return Go(this,Yo).id}getScale(){return Go(this,Ko)}getBaseScale(){return Go(this,Zo)}getAddedScale(){return{x:Go(this,Ko).x/Go(this,Zo).x,y:Go(this,Ko).y/Go(this,Zo).y,z:Go(this,Ko).z/Go(this,Zo).z}}getOffset(){return Go(this,Jo)}getNumberOfLayers(){return Go(this,_o).length}getActiveViewLayer(){return Go(this,_o)[Go(this,$o)]}getViewLayersByDataIndex(e){const t=[];for(let n=0;n<Go(this,_o).length;++n)Go(this,_o)[n]instanceof pa&&Go(this,_o)[n].getDataIndex()===e&&t.push(Go(this,_o)[n]);return t}searchViewLayers(e){const t=[];for(let n=0;n<Go(this,_o).length;++n)Go(this,_o)[n]instanceof pa&&Go(this,_o)[n].getViewController().equalImageMeta(e)&&t.push(Go(this,_o)[n]);return t}getViewDataIndices(){const e=[];for(let t=0;t<Go(this,_o).length;++t)Go(this,_o)[t]instanceof pa&&e.push(Go(this,_o)[t].getDataIndex());return e}getActiveDrawLayer(){return Go(this,_o)[Go(this,es)]}getDrawLayersByDataIndex(e){const t=[];for(let n=0;n<Go(this,_o).length;++n)Go(this,_o)[n]instanceof Qo&&Go(this,_o)[n].getDataIndex()===e&&t.push(Go(this,_o)[n]);return t}setActiveViewLayer(e){zo(this,$o,e)}setActiveViewLayerByDataIndex(e){for(let t=0;t<Go(this,_o).length;++t)if(Go(this,_o)[t]instanceof pa&&Go(this,_o)[t].getDataIndex()===e){this.setActiveViewLayer(t);break}}setActiveDrawLayer(e){zo(this,es,e)}setActiveDrawLayerByDataIndex(e){for(let t=0;t<Go(this,_o).length;++t)if(Go(this,_o)[t]instanceof Qo&&Go(this,_o)[t].getDataIndex()===e){this.setActiveDrawLayer(t);break}}addViewLayer(){const e=Go(this,_o).length,t=Vo(this,ls,gs).call(this);Go(this,Yo).append(t);const n=new pa(t);return Go(this,_o).push(n),this.setActiveViewLayer(e),Vo(this,os,Ss).call(this,n),n}addDrawLayer(){zo(this,es,Go(this,_o).length);const e=Vo(this,ls,gs).call(this);Go(this,Yo).append(e);const t=new Qo(e);return Go(this,_o).push(t),Vo(this,ss,xs).call(this,t),t}empty(){zo(this,_o,[]),zo(this,$o,null),zo(this,es,null);const e=Go(this,Yo).getElementsByClassName("layer");if(e)for(;e.length>0;)e[0].remove()}calculateFitScale(){if(0===Go(this,Yo).offsetWidth&&0===Go(this,Yo).offsetHeight)throw new Error("Cannot fit to zero sized container.");const e=this.getMaxSize();if(void 0!==e)return Math.min(Go(this,Yo).offsetWidth/e.x,Go(this,Yo).offsetHeight/e.y)}setFitScale(e){const t=this.getMaxSize();if(void 0===t)return;const n={x:Go(this,Yo).offsetWidth,y:Go(this,Yo).offsetHeight},i={x:-.5*(n.x-Math.floor(t.x*e)),y:-.5*(n.y-Math.floor(t.y*e))};for(let t=0;t<Go(this,_o).length;++t)Go(this,_o)[t].fitToContainer(e,n,i);Go(this,is)&&Vo(this,cs,ps).call(this)}getMaxSize(){let e={x:0,y:0};for(let t=0;t<Go(this,_o).length;++t)if(Go(this,_o)[t]instanceof pa){const n=Go(this,_o)[t].getImageWorldSize();n.x>e.x&&(e.x=n.x),n.y>e.y&&(e.y=n.y)}return 0===e.x&&0===e.y&&(e=void 0),e}flipScaleZ(){Go(this,Zo).z*=-1,this.setScale(Go(this,Zo))}addScale(e,t){const n={x:Go(this,Ko).x*(1+e),y:Go(this,Ko).y*(1+e),z:Go(this,Ko).z*(1+e)};this.setScale(n,t)}setScale(e,t){zo(this,Ko,e);for(let e=0;e<Go(this,_o).length;++e)Go(this,_o)[e].setScale(Go(this,Ko),t);const n=[e.x,e.y,e.z];void 0!==t&&(n.push(t.getX()),n.push(t.getY()),n.push(t.getZ())),Go(this,hs).call(this,{type:"zoomchange",value:n})}addTranslation(e){this.setOffset({x:Go(this,Jo).x-e.x,y:Go(this,Jo).y-e.y,z:Go(this,Jo).z-e.z})}setOffset(e){zo(this,Jo,e);for(let e=0;e<Go(this,_o).length;++e)Go(this,_o)[e].setOffset(Go(this,Jo));Go(this,hs).call(this,{type:"offsetchange",value:[Go(this,Jo).x,Go(this,Jo).y,Go(this,Jo).z]})}reset(){this.setScale(Go(this,Zo)),this.setOffset({x:0,y:0,z:0})}draw(){for(let e=0;e<Go(this,_o).length;++e)Go(this,_o)[e].draw()}display(e){for(let t=0;t<Go(this,_o).length;++t)Go(this,_o)[t].display(e)}addEventListener(e,t){Go(this,ts).add(e,t)}removeEventListener(e,t){Go(this,ts).remove(e,t)}}function Ss(e){e.addEventListener("positionchange",this.updateLayersToPositionChange);for(let t=0;t<An.length;++t)e.addEventListener(An[t],Go(this,hs));e.addEventListener("renderstart",Go(this,hs)),e.addEventListener("renderend",Go(this,hs))}function xs(e){e.addEventListener("drawcreate",Go(this,hs)),e.addEventListener("drawdelete",Go(this,hs))}function gs(){const e=document.createElement("div");return e.id=this.getDivId()+"-layer-"+Go(this,_o).length,e.className="layer",e.style.pointerEvents="none",e}function ps(e){void 0===e&&(e=Go(this,rs)),Vo(this,us,ms).call(this);const t=Go(this,_o)[0],n=t.getViewController().getPlanePositionFromPosition(e),i=t.planePosToDisplay(n.x,n.y),r=document.createElement("hr");r.id=this.getDivId()+"-scroll-crosshair-horizontal",r.className="horizontal",r.style.width=Go(this,Yo).offsetWidth+"px",r.style.left="0px",r.style.top=i.y+"px";const a=document.createElement("hr");a.id=this.getDivId()+"-scroll-crosshair-vertical",a.className="vertical",a.style.width=Go(this,Yo).offsetHeight+"px",a.style.left=i.x+"px",a.style.top="0px",Go(this,Yo).appendChild(r),Go(this,Yo).appendChild(a)}function ms(){let e=document.getElementById(this.getDivId()+"-scroll-crosshair-horizontal");e&&e.remove(),e=document.getElementById(this.getDivId()+"-scroll-crosshair-vertical"),e&&e.remove()}function fs(e,t){Ds(e,t),t.add(e)}function ys(e,t,n){Ds(e,t),t.set(e,n)}function Ds(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function vs(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function ws(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Ts(e,t,"set"),n),n}function Cs(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Ts(e,t,"get"))}function Ts(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function Is(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const Ls={WindowLevelBinder:class{constructor(){Is(this,"getEventType",(function(){return"wlchange"})),Is(this,"getCallback",(function(e){return function(t){const n=e.getViewLayersByDataIndex(t.dataid);0!==n.length&&n[0].getViewController().setWindowLevel(t.value[0],t.value[1])}}))}},PositionBinder:class{constructor(){Is(this,"getEventType",(function(){return"positionchange"})),Is(this,"getCallback",(function(e){return function(t){const n=t.value[1],i=e.getActiveViewLayer().getViewController(),r=i.getCurrentPosition(),a=r.length(),o=n.length;o!==a&&(o===a-1?n.push(r.get(a-1)):o===a+1&&n.pop()),i.setCurrentPosition(new mn(n))}}))}},ZoomBinder:class{constructor(){Is(this,"getEventType",(function(){return"zoomchange"})),Is(this,"getCallback",(function(e){return function(t){const n={x:t.value[0],y:t.value[1],z:t.value[2]};let i;6===t.value.length&&(i=new gn(t.value[3],t.value[4],t.value[5])),e.setScale(n,i),e.draw()}}))}},OffsetBinder:class{constructor(){Is(this,"getEventType",(function(){return"offsetchange"})),Is(this,"getCallback",(function(e){return function(t){e.setOffset({x:t.value[0],y:t.value[1],z:t.value[2]}),e.draw()}}))}},OpacityBinder:class{constructor(){Is(this,"getEventType",(function(){return"opacitychange"})),Is(this,"getCallback",(function(e){return function(t){if(void 0===t.dataid)return;const n=e.getViewLayersByDataIndex(t.dataid);0!==n.length&&(n[0].setOpacity(t.value),n[0].draw())}}))}}};var bs=new WeakMap,Ps=new WeakMap,As=new WeakMap,Os=new WeakMap,Fs=new WeakSet,Es=new WeakSet,Rs=new WeakSet;class Ms{constructor(){fs(this,Rs),fs(this,Es),fs(this,Fs),ys(this,bs,{writable:!0,value:[]}),ys(this,Ps,{writable:!0,value:null}),ys(this,As,{writable:!0,value:[]}),ys(this,Os,{writable:!0,value:null})}getLayerGroup(e){return Cs(this,bs)[e]}getNumberOfLayerGroups(){return Cs(this,bs).length}getActiveLayerGroup(){return this.getLayerGroup(Cs(this,Ps))}getViewLayersByDataIndex(e){let t=[];for(let n=0;n<Cs(this,bs).length;++n)t=t.concat(Cs(this,bs)[n].getViewLayersByDataIndex(e));return t}getDrawLayersByDataIndex(e){let t=[];for(let n=0;n<Cs(this,bs).length;++n)t=t.concat(Cs(this,bs)[n].getDrawLayersByDataIndex(e));return t}addLayerGroup(e){ws(this,Ps,Cs(this,bs).length);const t=new ds(e),n=Cs(this,Os)&&0!==Cs(this,Os).length;return n&&this.unbindLayerGroups(),Cs(this,bs).push(t),n&&this.bindLayerGroups(),t}getLayerGroupByDivId(e){return Cs(this,bs).find((function(t){return t.getDivId()===e}))}setBinders(e){if(null==e)throw new Error("Cannot set null or undefined binders");0!==Cs(this,As).length&&this.unbindLayerGroups(),ws(this,As,e.slice()),this.bindLayerGroups()}empty(){this.unbindLayerGroups();for(let e=0;e<Cs(this,bs).length;++e)Cs(this,bs)[e].empty();ws(this,bs,[]),ws(this,Ps,null)}reset(){for(let e=0;e<Cs(this,bs).length;++e)Cs(this,bs)[e].reset()}draw(){for(let e=0;e<Cs(this,bs).length;++e)Cs(this,bs)[e].draw()}syncLayerGroupScale(){let e;const t=[];for(let n=0;n<Cs(this,bs).length;++n){const i=Cs(this,bs)[n].calculateFitScale();void 0!==i&&(t.push(n),(void 0===e||i<e)&&(e=i))}if(void 0!==e)for(let n=0;n<Cs(this,bs).length;++n)t.includes(n)&&Cs(this,bs)[n].setFitScale(e)}bindLayerGroups(){if(0!==Cs(this,bs).length&&1!==Cs(this,bs).length&&0!==Cs(this,As).length){ws(this,Os,new Array(Cs(this,bs).length));for(let e=0;e<Cs(this,bs).length;++e)for(let t=0;t<Cs(this,As).length;++t)vs(this,Es,Us).call(this,e,Cs(this,As)[t])}}unbindLayerGroups(){if(0!==Cs(this,bs).length&&1!==Cs(this,bs).length&&0!==Cs(this,As).length&&Cs(this,Os)){for(let e=0;e<Cs(this,bs).length;++e)for(let t=0;t<Cs(this,As).length;++t)vs(this,Rs,Qs).call(this,e,Cs(this,As)[t]);ws(this,Os,null)}}}function qs(e,t){void 0===Cs(this,Os)[t]&&(Cs(this,Os)[t]=[]);let n=Cs(this,Os)[t].find((function(t){return t.binder===e}));return void 0===n&&(n={binder:e,callback:n=>{vs(this,Rs,Qs).call(this,t,e),e.getCallback(Cs(this,bs)[t])(n),vs(this,Es,Us).call(this,t,e)}},Cs(this,Os)[t].push(n)),n.callback}function Us(e,t){for(let n=0;n<Cs(this,bs).length;++n)n!==e&&Cs(this,bs)[e].addEventListener(t.getEventType(),vs(this,Fs,qs).call(this,t,n))}function Qs(e,t){for(let n=0;n<Cs(this,bs).length;++n)n!==e&&Cs(this,bs)[e].removeEventListener(t.getEventType(),vs(this,Fs,qs).call(this,t,n))}function ks(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function Bs(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Ws(e,t,"set"),n),n}function Ns(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Ws(e,t,"get"))}function Ws(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Vs=new WeakMap,Gs=new WeakMap,zs=new WeakMap,Hs=new WeakMap,js=new WeakMap,Xs=new WeakMap,Ys=new WeakMap,_s=new WeakMap,Ks=new WeakMap,Zs=new WeakMap;class Js{constructor(){ks(this,Vs,{writable:!0,value:10}),ks(this,Gs,{writable:!0,value:"Verdana"}),ks(this,zs,{writable:!0,value:"#fff"}),ks(this,Hs,{writable:!0,value:"#ffff80"}),ks(this,js,{writable:!0,value:{x:1,y:1}}),ks(this,Xs,{writable:!0,value:{x:1,y:1}}),ks(this,Ys,{writable:!0,value:2}),ks(this,_s,{writable:!0,value:{x:.25,y:.25}}),ks(this,Ks,{writable:!0,value:.2}),ks(this,Zs,{writable:!0,value:3})}getFontFamily(){return Ns(this,Gs)}getFontSize(){return Ns(this,Vs)}getStrokeWidth(){return Ns(this,Ys)}getTextColour(){return Ns(this,zs)}getLineColour(){return Ns(this,Hs)}setLineColour(e){Bs(this,Hs,e)}setBaseScale(e){Bs(this,js,e)}setZoomScale(e){Bs(this,Xs,e)}getBaseScale(){return Ns(this,js)}getZoomScale(){return Ns(this,Xs)}scale(e){return e/Ns(this,js).x}applyZoomScale(e){return{x:2*e/Ns(this,Xs).x,y:2*e/Ns(this,Xs).y}}getShadowOffset(){return Ns(this,_s)}getTagOpacity(){return Ns(this,Ks)}getTextPadding(){return Ns(this,Zs)}getFontStr(){return"normal "+this.getFontSize()+"px sans-serif"}getLineHeight(){return this.getFontSize()+this.getFontSize()/5}getScaledFontSize(){return this.scale(this.getFontSize())}getScaledStrokeWidth(){return this.scale(this.getStrokeWidth())}getShadowLineColour(){return qt(this.getLineColour())}}function $s(e,t){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.add(e)}function el(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}var tl=new WeakSet,nl=new WeakSet,il=new WeakSet,rl=new WeakSet,al=new WeakSet;class ol{constructor(){$s(this,al),$s(this,rl),$s(this,il),$s(this,nl),$s(this,tl)}toJSON(e){const t=e.getActiveLayerGroup(),n=t.getActiveViewLayer().getViewController(),i=n.getCurrentIndex(),r=t.getActiveDrawLayer(),a=r.getDrawController();return JSON.stringify({version:"0.5","window-center":n.getWindowLevel().center,"window-width":n.getWindowLevel().width,position:i.getValues(),scale:e.getAddedScale(),offset:e.getOffset(),drawings:r.getKonvaLayer().toObject(),drawingsDetails:a.getDrawStoreDetails()})}fromJSON(e){const t=JSON.parse(e);let n=null;if("0.1"===t.version)n=el(this,tl,sl).call(this,t);else if("0.2"===t.version)n=el(this,nl,ll).call(this,t);else if("0.3"===t.version)n=el(this,il,cl).call(this,t);else if("0.4"===t.version)n=el(this,rl,ul).call(this,t);else{if("0.5"!==t.version)throw new Error("Unknown state file format version: '"+t.version+"'.");n=el(this,al,hl).call(this,t)}return n}apply(e,t){const n=e.getActiveLayerGroup().getActiveViewLayer().getViewController();n.setWindowLevel(t["window-center"],t["window-width"]),n.setCurrentIndex(new k(t.position));const i=e.getActiveLayerGroup().getBaseScale();let r=null,a=null;if(void 0!==t.scaleCenter){r={x:t.scale*i.x,y:t.scale*i.y,z:1};const e=t.scaleCenter.x-t.scaleCenter.x*t.scale,n=t.scaleCenter.y-t.scaleCenter.y*t.scale,o=e+t.translation.x*r.x,s=n+t.translation.y*r.y;a={x:-o/r.x,y:-s/r.y,z:0}}else r={x:t.scale.x*i.x,y:t.scale.y*i.y,z:i.z},a={x:t.offset.x,y:t.offset.y,z:0};e.getActiveLayerGroup().setScale(r),e.getActiveLayerGroup().setOffset(a),e.render(0),e.setDrawings(t.drawings,t.drawingsDetails)}}function sl(e){const t=function(e){const t=[],n={};let i,r;for(let a=0,o=e.length;a<o;++a){t[a]=[];for(let o=0,s=e[a].length;o<s;++o){i=e[a][o];const s=[];for(let e=0,t=i.length;e<t;++e){r=ba().Node.create(i[e]),r.visible(!0);let t={x:0,y:0};const a=r.getChildren((function(e){return"shape"===e.name()}))[0];if(a.stroke(Qt(a.stroke())),"line-group"===r.name()){r.name("ruler-group");const e=new(ba().Line)({points:[a.points()[0],a.points()[1],a.points()[0],a.points()[1]],name:"shape-tick0"});r.add(e);const t=new(ba().Line)({points:[a.points()[2],a.points()[3],a.points()[2],a.points()[3]],name:"shape-tick1"});r.add(t)}const o=r.getChildren((function(e){return"arc"===e.name()}));1===o.length&&o[0].name("shape-arc");const l=r.getChildren((function(e){return"text"===e.name()}));let c=new(ba().Text)({name:"text",text:""});1===l.length?(t.x=l[0].x(),t.y=l[0].y(),l[0].remove(),c=l[0]):0!==a.points().length&&(t={x:a.points()[0],y:a.points()[1]});const u=new(ba().Label)({x:t.x,y:t.y,name:"label"});u.add(c),u.add(new(ba().Tag)),r.add(u),s.push(JSON.stringify(r.toObject()));let h=c.text();const d=h.length;let S=null;"ruler-group"===r.name()?(S={length:{value:parseFloat(h.substring(0,d-2)),unit:h.substring(-2)}},h="{length}"):"ellipse-group"===r.name()||"rectangle-group"===r.name()?(S={surface:{value:parseFloat(h.substring(0,d-3)),unit:h.substring(-3)}},h="{surface}"):"protractor-group"!==r.name()&&"rectangle-group"!==r.name()||(S={angle:{value:parseFloat(h.substring(0,d-1)),unit:h.substring(-1)}},h="{angle}"),n[r.id()]={textExpr:h,longText:"",quant:S}}t[a].push(s)}}return{drawings:t,drawingsDetails:n}}(e.drawings);return e.drawings=dl(t.drawings).toObject(),e.drawingsDetails=Sl(t.drawingsDetails),(e=xl(e)).drawings=gl(e.drawings),e}function ll(e){return e.drawings=dl(e.drawings).toObject(),e.drawingsDetails=Sl(function(e){const t={},n="string"==typeof e?JSON.parse(e):e;for(let e=0,i=n.length;e<i;++e)for(let i=0,r=n[e].length;i<r;++i)for(let r=0,a=n[e][i].length;r<a;++r){const a=n[e][i][r];t[a.id]={textExpr:a.textExpr,longText:a.longText,quant:a.quant}}return t}(e.drawingsDetails)),(e=xl(e)).drawings=gl(e.drawings),e}function cl(e){return e.drawingsDetails=Sl(e.drawingsDetails),(e=xl(e)).drawings=gl(e.drawings),e}function ul(e){return(e=xl(e)).drawings=gl(e.drawings),e}function hl(e){return e}function dl(e){let t,n,i;const r=new(ba().Layer)({listening:!1,visible:!0}),a="string"==typeof e?JSON.parse(e):e;for(let e=0,s=a.length;e<s;++e)for(let s=0,l=a[e].length;s<l;++s)if(n=a[e][s],0!==n.length){i=new(ba().Group)({id:(o=new k([1,1,e,s]),"slice-"+o.get(2)+"_frame-"+(4===o.length()?o.get(3):0)),name:"position-group",visible:!1});for(let e=0,r=n.length;e<r;++e)t=ba().Node.create(n[e]),t.draggable(!0),t.getChildren().forEach((function(e){e.draggable(!1)})),i.add(t);r.add(i)}var o;return r}function Sl(e){const t={},n=Object.keys(e);for(let i=0,r=n.length;i<r;++i){const r=e[n[i]];t[n[i]]={meta:{textExpr:r.textExpr,longText:r.longText,quantification:r.quant}}}return t}function xl(e){const t=e.position;return e.position=[t.i,t.j,t.k],e}function gl(e){const t=e.children;for(let e=0,n=t.length;e<n;++e){const n=t[e],i=n.attrs.id.split("_"),r=parseInt(i[0].substring(6),10),a=parseInt(i[1].substring(6),10);let o="#2-";o+=0===r&&0!==a?a:r,n.attrs.id=o}return e}function pl(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function ml(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,yl(e,t,"set"),n),n}function fl(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,yl(e,t,"get"))}function yl(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Dl=new WeakMap,vl=new WeakMap,wl=new WeakMap,Cl=new WeakMap;class Tl{constructor(){pl(this,Dl,{writable:!0,value:[]}),pl(this,vl,{writable:!0,value:0}),pl(this,wl,{writable:!0,value:new Tn}),pl(this,Cl,{writable:!0,value:e=>{fl(this,wl).fireEvent(e)}})}getStackSize(){return fl(this,Dl).length}getCurrentStackIndex(){return fl(this,vl)}add(e){var t;ml(this,Dl,fl(this,Dl).slice(0,fl(this,vl))),fl(this,Dl).push(e),ml(this,vl,(t=fl(this,vl),++t)),fl(this,Cl).call(this,{type:"undoadd",command:e.getName()})}undo(){var e;fl(this,vl)>0&&(ml(this,vl,(e=fl(this,vl),--e)),fl(this,Dl)[fl(this,vl)].undo(),fl(this,Cl).call(this,{type:"undo",command:fl(this,Dl)[fl(this,vl)].getName()}))}redo(){var e;fl(this,vl)<fl(this,Dl).length&&(fl(this,Dl)[fl(this,vl)].execute(),fl(this,Cl).call(this,{type:"redo",command:fl(this,Dl)[fl(this,vl)].getName()}),ml(this,vl,(e=fl(this,vl),++e)))}addEventListener(e,t){fl(this,wl).add(e,t)}removeEventListener(e,t){fl(this,wl).remove(e,t)}}function Il(e,t){bl(e,t),t.add(e)}function Ll(e,t,n){bl(e,t),t.set(e,n)}function bl(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Pl(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function Al(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Fl(e,t,"get"))}function Ol(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Fl(e,t,"set"),n),n}function Fl(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var El=new WeakMap,Rl=new WeakMap,Ml=new WeakMap,ql=new WeakMap,Ul=new WeakSet,Ql=new WeakSet;class kl{constructor(e){Il(this,Ql),Il(this,Ul),Ll(this,El,{writable:!0,value:void 0}),Ll(this,Rl,{writable:!0,value:null}),Ll(this,Ml,{writable:!0,value:[]}),Ll(this,ql,{writable:!0,value:{}}),Ol(this,El,e)}init(){for(const e in Al(this,El))Al(this,El)[e].init();window.addEventListener("keydown",Pl(this,Ql,Nl).call(this,"window","keydown"),!0)}getToolList(){return Al(this,El)}hasTool(e){return void 0!==this.getToolList()[e]}getSelectedTool(){return Al(this,Rl)}getSelectedToolEventHandler(e){return this.getSelectedTool()[e]}setSelectedTool(e){if(!this.hasTool(e))throw new Error("Unknown tool: '"+e+"'");Al(this,Rl)&&Al(this,Rl).activate(!1),Ol(this,Rl,Al(this,El)[e]),Al(this,Rl).activate(!0)}setToolFeatures(e){this.getSelectedTool()&&this.getSelectedTool().setFeatures(e)}bindLayer(e,t){void 0!==Al(this,ql)[t]&&Pl(this,Ul,Bl).call(this,Al(this,ql)[t]),e.bindInteraction();const n=Pr;for(let t=0;t<n.length;++t)e.addEventListener(n[t],Pl(this,Ql,Nl).call(this,e.getId(),n[t]));Al(this,ql)[t]=e}}function Bl(e){e.unbindInteraction();const t=Pr;for(let n=0;n<t.length;++n)e.removeEventListener(t[n],Pl(this,Ql,Nl).call(this,e.getId(),t[n]))}function Nl(e,t){const n=e=>{if(Al(this,Rl)){const t=Al(this,Rl)[e.type];t&&t(e)}};if(void 0===Al(this,Ml)[e]&&(Al(this,Ml)[e]=[]),void 0===Al(this,Ml)[e][t]){let i=null;i="keydown"===t||"touchend"===t?function(e){n(e)}:function(e){!function(e){const t=Er(e);e._x=t[0].x,e._y=t[0].y,2===t.length&&(e._x1=t[1].x,e._y1=t[1].y)}(e),n(e)},Al(this,Ml)[e][t]=i}return Al(this,Ml)[e][t]}function Wl(e,t){Gl(e,t),t.add(e)}function Vl(e,t,n){Gl(e,t),t.set(e,n)}function Gl(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function zl(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function Hl(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Xl(e,t,"get"))}function jl(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Xl(e,t,"set"),n),n}function Xl(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Yl=new WeakMap,_l=new WeakMap,Kl=new WeakMap,Zl=new WeakSet,Jl=new WeakSet;class $l{constructor(e){var t,n,i;Wl(this,Jl),Wl(this,Zl),Vl(this,Yl,{writable:!0,value:[]}),Vl(this,_l,{writable:!0,value:2}),Vl(this,Kl,{writable:!0,value:void 0}),t=this,i=e=>{if(!e.lengthComputable)return;if(void 0===e.subindex)return;if(void 0===e.index)return;const t=100*e.loaded/e.total;Hl(this,Yl)[e.index][e.subindex]=t;let n=null;n=void 0!==e.item?e.item:{loaded:zl(this,Zl,ec).call(this,e.index),total:100,source:e.source},Hl(this,Kl).call(this,{lengthComputable:!0,loaded:zl(this,Jl,tc).call(this),total:100,item:n})},(n=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(n="onprogress"))in t?Object.defineProperty(t,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[n]=i,jl(this,Kl,e)}setNumberOfDimensions(e){jl(this,_l,e)}setNToLoad(e){for(let t=0;t<e;++t){Hl(this,Yl)[t]=[];for(let e=0;e<Hl(this,_l);++e)Hl(this,Yl)[t][e]=0}}getMonoProgressHandler(e,t){return n=>{n.index=e,n.subindex=t,this.onprogress(n)}}getUndefinedMonoProgressHandler(e){return t=>{t.subindex=e,this.onprogress(t)}}}function ec(e){let t=0;for(let n=0;n<Hl(this,_l);++n)t+=Hl(this,Yl)[e][n];return t/Hl(this,_l)}function tc(){let e=0;const t=Hl(this,Yl).length;for(let n=0;n<t;++n)e+=zl(this,Zl,ec).call(this,n);return Math.round(e/t)}function nc(e){return new URL(e,window.location.origin)}function ic(e){const t={};let n=null;if(e&&-1!==(n=e.indexOf("?"))){t.base=e.substring(0,n);let i=e.indexOf("#");-1===i&&(i=e.length);const r=e.substring(n+1,i);t.query=function(e){const t={};if(e){const n=e.split("&");for(let e=0;e<n.length;++e){const i=n[e].split("=");t[i[0]]?(t[i[0]]instanceof Array||(t[i[0]]=[t[i[0]]]),t[i[0]].push(i[1])):t[i[0]]=i[1]}}return t}(r)}return t}function rc(e,t){oc(e,t),t.add(e)}function ac(e,t,n){oc(e,t),t.set(e,n)}function oc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function sc(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function lc(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,uc(e,t,"set"),n),n}function cc(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,uc(e,t,"get"))}function uc(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}const hc={Text:0,ArrayBuffer:1};var dc=new WeakMap,Sc=new WeakMap,xc=new WeakMap,gc=new WeakMap,pc=new WeakMap,mc=new WeakMap,fc=new WeakMap,yc=new WeakSet,Dc=new WeakSet,vc=new WeakSet,wc=new WeakSet,Cc=new WeakSet,Tc=new WeakMap,Ic=new WeakMap,Lc=new WeakMap,bc=new WeakSet,Pc=new WeakSet,Ac=new WeakSet;class Oc{constructor(){rc(this,Ac),rc(this,Pc),rc(this,bc),rc(this,Cc),rc(this,wc),rc(this,vc),rc(this,Dc),rc(this,yc),ac(this,dc,{writable:!0,value:null}),ac(this,Sc,{writable:!0,value:[]}),ac(this,xc,{writable:!0,value:null}),ac(this,gc,{writable:!0,value:0}),ac(this,pc,{writable:!0,value:0}),ac(this,mc,{writable:!0,value:void 0}),ac(this,fc,{writable:!0,value:void 0}),ac(this,Tc,{writable:!0,value:e=>{this.onloaditem(e),cc(this,Ic).call(this)}}),ac(this,Ic,{writable:!0,value:e=>{var t;lc(this,gc,(t=cc(this,gc),++t)),cc(this,gc)===cc(this,dc).length&&this.onload({source:cc(this,dc)})}}),ac(this,Lc,{writable:!0,value:e=>{var t;lc(this,pc,(t=cc(this,pc),++t)),cc(this,pc)===2*cc(this,dc).length&&this.onloadend({source:cc(this,dc)})}})}getDefaultCharacterSet(){return cc(this,fc)}setDefaultCharacterSet(e){lc(this,fc,e)}load(e,t){this.onloadstart({source:e}),1===e.length&&(Da(e[0],"DICOMDIR")||Da(e[0],".dcmdir"))?sc(this,Ac,kc).call(this,e[0],t):sc(this,Pc,Qc).call(this,e,t)}abort(){lc(this,mc,!0);for(let e=0;e<cc(this,Sc).length;++e)4!==cc(this,Sc)[e].readyState&&cc(this,Sc)[e].abort();cc(this,xc)&&cc(this,xc).isLoading()&&cc(this,xc).abort()}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}function Fc(e){lc(this,dc,e),lc(this,gc,0),lc(this,pc,0),lc(this,mc,!1),sc(this,vc,Rc).call(this),sc(this,Cc,qc).call(this)}function Ec(e){cc(this,Sc).push(e)}function Rc(){lc(this,Sc,[])}function Mc(e){lc(this,xc,e)}function qc(){lc(this,xc,null)}function Uc(e,t){return n=>{n.source=t,e(n)}}function Qc(e,t){if(void 0===e||0===e.length)return;sc(this,yc,Fc).call(this,e);const n=new $l(this.onprogress);n.setNToLoad(e.length);const i=[];for(let e=0;e<Xh.length;++e)i.push(new Xh[e]);let r=e[0],a=null,o=!1;for(let s=0;s<i.length;++s)if(a=i[s],a.canLoadUrl(r,t)){o=!0,a.setOptions({numberOfFiles:e.length,defaultCharacterSet:this.getDefaultCharacterSet()}),a.onprogress=n.getUndefinedMonoProgressHandler(1),void 0===a.onloaditem?a.onload=cc(this,Tc):(a.onloaditem=this.onloaditem,a.onload=cc(this,Ic)),a.onloadend=cc(this,Lc),a.onerror=this.onerror,a.onabort=this.onabort,sc(this,wc,Mc).call(this,a);break}if(!o)throw new Error("No loader found for url: "+r);const s=function(e,t,n){return i=>{const r=i.target.status;200!==r&&0!==r?(this.onerror({source:t,error:"GET "+i.target.responseURL+" "+i.target.status+" ("+i.target.statusText+")",target:i.target}),cc(this,Lc).call(this)):e.load(i.target.response,t,n)}};let l=0;const c=()=>{cc(this,Lc).call(this),l<cc(this,Sc).length-1&&!cc(this,mc)&&(++l,cc(this,Sc)[l].send(null))};for(let i=0;i<e.length;++i){if(r=e[i],!a.canLoadUrl(r,t))throw new Error("Input url of different type: "+r);const o=new XMLHttpRequest;if(o.open("GET",r,!0),void 0!==t){if(void 0!==t.requestHeaders){const e=t.requestHeaders;for(let t=0;t<e.length;++t)void 0!==e[t].name&&void 0!==e[t].value&&o.setRequestHeader(e[t].name,e[t].value)}void 0!==t.withCredentials&&(o.withCredentials=t.withCredentials)}o.onprogress=sc(this,bc,Uc).call(this,n.getMonoProgressHandler(i,0),r),o.onload=s(a,r,i),o.onloadend=c,o.onerror=sc(this,bc,Uc).call(this,this.onerror,r),o.onabort=sc(this,bc,Uc).call(this,this.onabort,r),a.loadUrlAs()===hc.ArrayBuffer&&(o.responseType="arraybuffer"),sc(this,Dc,Ec).call(this,o)}let u=cc(this,Sc).length;void 0!==t&&void 0!==t.batchSize&&0!==u&&(u=Math.min(t.batchSize,cc(this,Sc).length));for(let e=0;e<u;++e)cc(this,mc)||(l=e,cc(this,Sc)[l].send(null))}function kc(e,t){const n=new XMLHttpRequest;n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=n=>{const i=n.target.status;if(200!==i&&0!==i)return this.onerror({source:e,error:"GET "+n.target.responseURL+" "+n.target.status+" ("+n.target.statusText+")",target:n.target}),void this.onloadend({});const r=function(e){const t=new ye;t.parse(e);const n=t.getRawDicomElements();if(void 0===n.x00041220||void 0===n.x00041220.value)return void Y.warn("No Directory Record Sequence found in DICOMDIR.");const i=n.x00041220.value;if(0===i.length)return void Y.warn("The Directory Record Sequence of the DICOMDIR is empty.");const r=[];let a=null,o=null;for(let e=0;e<i.length;++e){if(void 0===i[e].x00041430||void 0===i[e].x00041430.value)continue;const t=re(i[e].x00041430.value[0]);if("STUDY"===t)o=[],r.push(o);else if("SERIES"===t)a=[],o.push(a);else if("IMAGE"===t){if(void 0===i[e].x00041500||void 0===i[e].x00041500.value)continue;const t=i[e].x00041500.value;let n="";for(let e=0;e<t.length;++e)0!==e&&(n+="/"),n+=re(t[e]);a.push(n)}}return r}(n.target.response)[0][0],a=e.split("/").slice(0,-1).join("/"),o=[];for(let e=0;e<r.length;++e)o.push(a+"/"+r[e]);sc(this,Pc,Qc).call(this,o,t)},n.onerror=t=>{sc(this,bc,Uc).call(this,this.onerror,e)(t),this.onloadend({})},n.onabort=t=>{sc(this,bc,Uc).call(this,this.onabort,e)(t),this.onloadend({})},n.send(null)}class Bc{checkElements(e){if(!e.getFromKey("x00280011"))throw new Error("Missing or empty DICOM image number of columns");if(!e.getFromKey("x00280010"))throw new Error("Missing or empty DICOM image number of rows")}create(e,t,n){const i=e.getFromKey("x00280011");if(!i)throw new Error("Missing or empty DICOM image number of columns");const r=e.getFromKey("x00280010");if(!r)throw new Error("Missing or empty DICOM image number of rows");const a=[i,r,1],o=e.getFromKey("x00280008");o&&a.push(o);const s=new G(a),l=e.getPixelSpacing(),c=re(e.getFromKey("x00020010")),u=ue(c),h=le(c),d=ce(c),S=e.getFromKey("x00200032");let x=new Array(0,0,0);S&&(x=[parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2])]);const g=e.getFromKey("x00200037");let p;if(g){const e=new Ht(parseFloat(g[0]),parseFloat(g[1]),parseFloat(g[2])),t=new Ht(parseFloat(g[3]),parseFloat(g[4]),parseFloat(g[5])),n=e.crossProduct(t);p=new en([e.getX(),t.getX(),n.getX(),e.getY(),t.getY(),n.getY(),e.getZ(),t.getZ(),n.getZ()])}const m=new gn(x[0],x[1],x[2]),f=e.getTime(),y=new Bi(m,s,l,p,f),D=re(e.getFromKey("x00080018"));let v=e.getFromKey("x00280002");v||(v=1);const w=s.getTotalSize()*v;if(w!==t.length){if(Y.warn("Badly sized pixel buffer: "+t.length+" != "+w),!(w<t.length))throw new Error("Underestimated buffer size, can't fix it...");t=t.slice(0,s.getTotalSize())}const C=new wi(y,t,[D]),T=e.getFromKey("x00280004");if(T){let e=re(T).toUpperCase();(u||h||d)&&"MONOCHROME1"!==e&&"MONOCHROME2"!==e&&(e="RGB"),"RGB"===e&&1===v&&(e="PALETTE COLOR"),C.setPhotometricInterpretation(e)}const I=e.getFromKey("x00280006");I&&C.setPlanarConfiguration(I);let L=1;const b=e.getFromKey("x00281053");b&&(L=parseFloat(b));let P=0;const A=e.getFromKey("x00281052");A&&(P=parseFloat(A));const O=new _n(L,P);C.setRescaleSlopeAndIntercept(O);const F={numberOfFiles:n,Modality:e.getFromKey("x00080060"),SOPClassUID:e.getFromKey("x00080016"),StudyInstanceUID:e.getFromKey("x0020000D"),SeriesInstanceUID:e.getFromKey("x0020000E"),BitsStored:e.getFromKey("x00280101"),PixelRepresentation:e.getFromKey("x00280103")};F.IsSigned=1===F.PixelRepresentation;const E=e.getPixelUnit();E&&(F.pixelUnit=E);const R=e.getFromKey("x00200052");R&&(F.FrameOfReferenceUID=R);const M={},q=e.getFromKey("x00281050",!0),U=e.getFromKey("x00281051",!0),Q=e.getFromKey("x00281055",!0);if(q&&U){let e;for(let t=0;t<q.length;++t){const n=parseFloat(q[t],10),i=parseFloat(U[t],10);n&&i&&0!==i&&(e="",Q&&(e=re(Q[t])),""===e&&(e="Default"+t),M[e]={wl:[new Rt(n,i)],name:e}),0===i&&Y.warn("Zero window width found in DICOM.")}}if(F.windowPresets=M,"PALETTE COLOR"===C.getPhotometricInterpretation()){let t=e.getFromKey("x00281201"),n=e.getFromKey("x00281202"),i=e.getFromKey("x00281203");const r=e.getFromKey("x00281101");if(void 0!==r&&3===r.length)if(16===r[2]){let a=!1,o=r[0];0===o&&(o=65536);const s=e.getDEFromKey("x00281201").vl;if(s!==2*o&&(a=!0,Y.info("16bits lut but size is not double. desc: "+o+" vl: "+s)),8===parseInt(e.getFromKey("x00280100"),10)&&(a=!0,Y.info("Scaling 16bits color lut since bits allocated is 8.")),a){const e=function(e){return e>>8};t=t.map(e),n=n.map(e),i=i.map(e)}}else if(8===r[2]){Y.info("Scaling 16bits color lut since the lut descriptor is 8.");let e=t.slice(0);t=new Uint8Array(e.buffer),e=n.slice(0),n=new Uint8Array(e.buffer),e=i.slice(0),i=new Uint8Array(e.buffer)}F.paletteLut={red:t,green:n,blue:i}}const k=e.getFromKey("x00082144");return k&&(F.RecommendedDisplayFrameRate=parseInt(k,10)),C.setMeta(F),C}}function Nc(e,t){return null!==e&&null!==t&&void 0!==e&&void 0!==t&&function(e,t){return null!==e&&null!==t&&void 0!==e&&void 0!==t&&(e.length===t.length&&e.every((function(e,n){return e===t[n]})))}(e.slice().sort(),t.slice().sort())}function Wc(e){return String.fromCharCode.apply(String,e)}function Vc(e,t,n,i){(void 0===n||n<0||n>=e.length)&&(n=0),(void 0===i||i<=n||i>e.length)&&(i=e.length);for(let r=n;r<i;++r)if(t(e[r],r,e))return r}function Gc(e){return function(t,n,i){for(let t=0;t<e.length;++t)if(i[n+t]!==e[t])return!1;return!0}}function zc(e,t){return JSON.stringify(e)===JSON.stringify(t)}function Hc(e,t){let n=e.getFromKey(t.tag);if(1===t.type||2===t.type){if(null==n)throw new Error("Missing or empty "+t.name)}else if(null==n)return;let i=!1;if(Array.isArray(n)){n=n.map((function(e){return re(e)}));for(let e=0;e<t.enum.length;++e){if(!Array.isArray(t.enum[e]))throw new Error("Cannot compare array and non array tag value.");if(Nc(t.enum[e],n)){i=!0;break}}}else"string"==typeof n&&(n=re(n)),i=t.enum.includes(n);if(!i)throw new Error("Unsupported "+t.name+" value: "+n)}const jc=[{name:"TransferSyntaxUID",tag:"x00020010",type:"1",enum:["1.2.840.10008.1.2.1"]},{name:"MediaStorageSOPClassUID",tag:"x00020002",type:"1",enum:["1.2.840.10008.5.1.4.1.1.66.4"]},{name:"SOPClassUID",tag:"x00020002",type:"1",enum:["1.2.840.10008.5.1.4.1.1.66.4"]},{name:"Modality",tag:"x00080060",type:"1",enum:["SEG"]},{name:"SegmentationType",tag:"x00620001",type:"1",enum:["BINARY"]},{name:"DimensionOrganizationType",tag:"x00209311",type:"3",enum:["3D"]},{name:"ImageType",tag:"x00080008",type:"1",enum:[["DERIVED","PRIMARY"]]},{name:"SamplesPerPixel",tag:"x00280002",type:"1",enum:[1]},{name:"PhotometricInterpretation",tag:"x00280004",type:"1",enum:["MONOCHROME2"]},{name:"PixelRepresentation",tag:"x00280103",type:"1",enum:[0]},{name:"BitsAllocated",tag:"x00280100",type:"1",enum:[1]},{name:"BitsStored",tag:"x00280101",type:"1",enum:[1]},{name:"HighBit",tag:"x00280102",type:"1",enum:[0]}];function Xc(e){const t={meaning:re(e.x00080104.value[0])};if(e.x00080100)t.value=e.x00080100.value[0];else if(e.x00080119)t.longValue=e.x00080119.value[0];else{if(!e.x00080120)throw Error("Invalid code with no value, no long value and no urn value.");t.urnValue=e.x00080120.value[0]}if(void 0!==t.value||void 0!==t.longValue){if(!e.x00080102)throw Error("No coding sheme designator when code value or long value is present");t.schemeDesignator=e.x00080102.value[0]}return t}function Yc(e){const t={number:e.x00620004.value[0],label:re(e.x00620005.value[0]),algorithmType:re(e.x00620008.value[0])};if(e.x00620009&&(t.algorithmName=re(e.x00620009.value[0])),void 0!==e.x0062000C)t.displayValue=e.x006200C.value;else if(void 0!==e.x0062000D){const i=e.x0062000D.value,r=function(e){return function(e){function t(e){let t=null;return t=e<=.0031308?12.92*e:1.055*Math.pow(e,.416666667)-.055,Math.min(1,Math.max(0,t))}const n=e.x/100,i=e.y/100,r=e.z/100;return{r:Math.round(255*t(3.2406*n-1.5372*i-.4986*r)),g:Math.round(255*t(-.9689*n+1.8758*i+.0415*r)),b:Math.round(255*t(.0557*n-.204*i+1.057*r))}}(function(e){function t(e){let t=null;return t=e>.206896552?Math.pow(e,3):.128418549*e-.017712903,t}const n=Ut,i=(e.l+16)/116;return{x:n.x*t(i+e.a/500),y:n.y*t(i),z:n.z*t(i-e.b/200)}}(e))}({l:.001525902*(n={l:i[0],a:i[1],b:i[2]}).l,a:.003891051*n.a-128,b:.003891051*n.b-128});t.displayValue=r}var n;if(void 0===e.x00620003)throw Error("Missing Segmented Property Category Code Sequence.");if(t.propertyCategoryCode=Xc(e.x00620003.value[0]),void 0===e.x0062000F)throw Error("Missing Segmented Property Type Code Sequence.");return t.propertyTypeCode=Xc(e.x0062000F.value[0]),void 0!==e.x00620020&&(t.trackingId=e.x00620020.value[0],t.trackingUid=e.x00620021.value[0]),t}function _c(e){if(void 0===e.x00280030)return null;const t=e.x00280030,n=[parseFloat(t.value[0]),parseFloat(t.value[1])];return void 0!==e.x00180050?n.push(parseFloat(e.x00180050.value[0])):void 0!==e.x00180088&&n.push(parseFloat(e.x00180088.value[0])),new X(n)}function Kc(e){const t=[];if(void 0!==e.x00089124){const n=e.x00089124.value;for(let e=0;e<n.length;++e){const i=[];if(void 0!==n[e].x00082112){const t=n[e].x00082112.value;for(let e=0;e<t.length;++e){const n={};void 0!==t[e].x00081150&&(n.referencedSOPClassUID=t[e].x00081150.value[0]),void 0!==t[e].x00081155&&(n.referencedSOPInstanceUID=t[e].x00081155.value[0]),i.push(n)}}t.push(i)}}const n=e.x00209111.value[0].x00209157.value,i=e.x0062000A.value[0].x0062000B.value[0],r=e.x00209113.value[0].x00200032.value;for(let e=0;e<r.length;++e)r[e]=parseFloat(r[e],10);const a={dimIndex:n,imagePosPat:r,derivationImages:t,refSegmentNumber:i};if(void 0!==e.x00209116){const t=e.x00209116;if(0!==t.value.length){const e=t.value[0].x00200037.value;void 0!==e&&(a.imageOrientationPatient=e)}}if(void 0!==e.x00289110){const t=e.x00289110;if(0!==t.value.length){const e=_c(t.value[0]);void 0!==e&&(a.spacing=e)}else Y.warn("No shared functional group pixel measure sequence items.")}return a}class Zc{create(e,t){for(let t=0;t<jc.length;++t)Hc(e,jc[t]);const n=e.getFromKey("x00280011");if(!n)throw new Error("Missing or empty DICOM image number of columns");const i=e.getFromKey("x00280010");if(!i)throw new Error("Missing or empty DICOM image number of rows");const r=n*i;let a=e.getFromKey("x00280008");if(a=a?parseInt(a,10):1,a!==t.length/r)throw new Error("Buffer and numberOfFrames meta are not equal."+a+" "+t.length/r);const o=function(e){const t=e.getFromKey("x00209221",!0);if(!t||1!==t.length)throw new Error("Unsupported dimension organization sequence length");const n=re(t[0].x00209164.value[0]),i=[],r=e.getFromKey("x00209222",!0);if(r){if(2!==r.length)throw new Error("Unsupported dimension index sequence length");let e;for(let t=0;t<r.length;++t){const a=re(r[t].x00209164.value[0]);if(a!==n)throw new Error("Dimension Index Sequence contains a unknown Dimension Organization");e=re(r[t].x00209165.value[0]);const o={DimensionOrganizationUID:a,DimensionIndexPointer:e};void 0!==r[t].x00209421&&(o.DimensionDescriptionLabel=re(r[t].x00209421.value[0])),i.push(o)}if("(0020,0032)"!==e)throw new Error("Unsupported non image position as last index")}return{organizations:{value:[{DimensionOrganizationUID:n}]},indices:{value:i}}}(e),s=e.getFromKey("x00620002",!0);if(!s||void 0===s)throw new Error("Missing or empty segmentation sequence");const l=[];let c=!1;for(let e=0;e<s.length;++e){const t=Yc(s[e]);void 0!==t.displayValue.r&&void 0!==t.displayValue.g&&void 0!==t.displayValue.b&&(c=!0),l.push(t)}const u=e.getImageSize();let h,d;const S=e.getFromKey("x52009229",!0);if(S&&0!==S.length){const e=S[0];if(void 0!==e.x00209116){const t=e.x00209116;0!==t.value.length?d=t.value[0].x00200037.value:Y.warn("No shared functional group plane orientation sequence items.")}if(void 0!==e.x00289110){const t=e.x00289110;0!==t.value.length?h=_c(t.value[0]):Y.warn("No shared functional group pixel measure sequence items.")}}const x=function(e,t){return e.some((function(e){return zc(t,e)}))},g=function(e,t){return e.findIndex((function(e){return zc(t,e)}))},p=e.getFromKey("x52009230",!0);if(!p||void 0===p)throw new Error("Missing or empty per frame functional sequence");if(a!==p.length)throw new Error("perFrameFuncGroupSequence meta and numberOfFrames are not equal.");const m=[];for(let e=0;e<p.length;++e)m.push(Kc(p[e]));const f=[];for(let e=0;e<m.length;++e){if(x(f,m[e].imagePosPat)||f.push(m[e].imagePosPat),void 0!==m[e].imageOrientationPatient)if(void 0===d)d=m[e].imageOrientationPatient;else if(!Nc(d,m[e].imageOrientationPatient))throw new Error("Unsupported multi orientation dicom seg.");if(void 0!==m[e].spacing)if(void 0===h)h=m[e].spacing;else if(!h.equals(m[e].spacing))throw new Error("Unsupported multi resolution dicom seg.")}if(void 0===h)throw new Error("No spacing found for DICOM SEG");if(void 0===d)throw new Error("No imageOrientationPatient found for DICOM SEG");const y=new Ht(parseFloat(d[0]),parseFloat(d[1]),parseFloat(d[2])),D=new Ht(parseFloat(d[3]),parseFloat(d[4]),parseFloat(d[5])),v=y.crossProduct(D),w=new en([y.getX(),D.getX(),v.getX(),y.getY(),D.getY(),v.getY(),y.getZ(),D.getZ(),v.getZ()]);f.sort(function(e){const t=e.getInverse();return function(e,n){const i=t.multiplyArray3D(e),r=t.multiplyArray3D(n);return i[2]-r[2]}}(w));const C=function(e){return new gn(e[0],e[1],e[2])},T=[];for(let e=0;e<f.length;++e)T.push(C(f[e]));let I=h;const L=Vi(T,w,!1),b=h.getValues();void 0!==L&&L!==b[2]&&(b[2]=L,I=new X(b));const P=new Bi(T[0],u,I,w),A=function(e){let t=e>1e-4;return t&&(t=e>.001,t||Y.warn("Using larger real world epsilon in SEG pos pat adding")),t},O=[];O.push(f[0]);let F=0;for(let e=1;e<f.length;++e){++F;let t=new k([0,0,F]),n=P.indexToWorld(t).get3D();const i=T[e];let r=i.getDistance(n);const a=r;for(;A(r);)if(Y.debug("Adding intermediate pos pats for DICOM seg at "+n.toString()),O.push([n.getX(),n.getY(),n.getZ()]),++F,t=new k([0,0,F]),n=P.indexToWorld(t).get3D(),r=i.getDistance(n),r>a)throw new Error("Test distance is increasing when adding intermediate pos pats");O.push(f[e])}const E=O.length,R=new Bi(T[0],u,I,w),M=[0];for(let e=1;e<E;++e)R.appendOrigin(C(O[e]),e),M.push(e);const q=function(e){return function(t){return t.number===e}},U=c?3:1,Q=new t.constructor(U*r*E);Q.fill(0);let B=null,N=null;for(let e=0;e<m.length;++e){F=g(O,m[e].imagePosPat),N=r*e,B=r*F;const n=l.find(q(m[e].refSegmentNumber)).displayValue;for(let e=0;e<r;++e)if(0!==t[N+e]){const t=U*(B+e);c?(Q[t]=n.r,Q[t+1]=n.g,Q[t+2]=n.b):Q[t]=n}}const W=new wi(R,Q,M);c&&W.setPhotometricInterpretation("RGB");const V=function(){const e={};for(let t=0;t<jc.length;++t){const n=jc[t];e[n.name]=n.enum[0]}return e}();V.StudyDate=e.getFromKey("x00080020"),V.StudyTime=e.getFromKey("x00080030"),V.StudyInstanceUID=e.getFromKey("x0020000D"),V.StudyID=e.getFromKey("x00200010"),V.SeriesInstanceUID=e.getFromKey("x0020000E"),V.SeriesNumber=e.getFromKey("x00200011"),V.ReferringPhysicianName=e.getFromKey("x00080090"),V.PatientName=re(e.getFromKey("x00100010")),V.PatientID=re(e.getFromKey("x00100020")),V.PatientBirthDate=e.getFromKey("x00100030"),V.PatientSex=re(e.getFromKey("x00100040")),V.Manufacturer=e.getFromKey("x00080070"),V.ManufacturerModelName=e.getFromKey("x00081090"),V.DeviceSerialNumber=e.getFromKey("x00181000"),V.SoftwareVersions=e.getFromKey("x00181020"),V.DimensionOrganizationSequence=o.organizations,V.DimensionIndexSequence=o.indices,V.custom={segments:l,frameInfos:m,SOPInstanceUID:e.getFromKey("x00080018")},V.numberOfFiles=E;const G=e.getFromKey("x00200052");G&&(V.FrameOfReferenceUID=G);const z=e.getFromKey("x00282110");return z&&(V.LossyImageCompression=z),W.setMeta(V),W}}function Jc(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function $c(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}var eu=new WeakSet;class tu{constructor(e){var t,n;(function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")})(t=this,n=eu),n.add(t),Jc(this,"handleWorkerError",(e=>{$c(this,eu,nu).call(this),this.onerror({error:e}),this.onworkend({type:"work-end"})})),this.poolSize=e,this.taskQueue=[],this.freeThreads=[];for(let t=0;t<e;++t)this.freeThreads.push(new iu(this));this.runningThreads=[]}addWorkerTask(e){if(this.freeThreads.length===this.poolSize&&this.onworkstart({type:"work-start"}),this.freeThreads.length>0){const t=this.freeThreads.shift();this.runningThreads.push(t),t.run(e)}else this.taskQueue.push(e)}abort(){$c(this,eu,nu).call(this),this.onabort({type:"work-abort"}),this.onworkend({type:"work-end"})}onTaskEnd(e){if(this.taskQueue.length>0){const t=this.taskQueue.shift();e.run(t)}else{e.stop(),this.freeThreads.push(e);for(let t=0;t<this.runningThreads.length;++t)this.runningThreads[t].getId()===e.getId()&&this.runningThreads.splice(t,1);this.freeThreads.length===this.poolSize&&(this.onwork({type:"work"}),this.onworkend({type:"work-end"}))}}onworkstart(e){}onworkitem(e){}onwork(e){}onworkend(e){}onerror(e){}onabort(e){}}function nu(){this.taskQueue=[];for(let e=0;e<this.runningThreads.length;++e)this.runningThreads[e].stop();this.runningThreads=[]}class iu{constructor(e){Jc(this,"onmessage",(e=>{e.itemNumber=this.runningTask.info.itemNumber,e.numberOfItems=this.runningTask.info.numberOfItems,e.dataIndex=this.runningTask.info.dataIndex,this.parentPool.onworkitem(e),this.parentPool.onTaskEnd(this)})),Jc(this,"onerror",(e=>{e.itemNumber=this.runningTask.info.itemNumber,e.numberOfItems=this.runningTask.info.numberOfItems,e.dataIndex=this.runningTask.info.dataIndex,this.parentPool.handleWorkerError(e),this.stop()})),this.parentPool=e,this.id=Math.random().toString(36).substring(2,15),this.runningTask=null,this.worker}getId(){return this.id}run(e){this.runningTask=e,"undefined"==typeof worker&&(this.worker=new Worker(this.runningTask.script),this.worker.onmessage=this.onmessage,this.worker.onerror=this.onerror),this.worker.postMessage(this.runningTask.startMessage)}stop(){this.worker.terminate()}}class ru{constructor(e,t,n){this.script=e,this.startMessage=t,this.info=n}}function au(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function ou(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,lu(e,t,"get"))}function su(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,lu(e,t,"set"),n),n}function lu(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}const cu="undefined"!=typeof JpegImage,uu="undefined"!=typeof jpeg&&void 0!==jpeg.lossless,hu="undefined"!=typeof JpxImage,du={};var Su=new WeakMap,xu=new WeakMap,gu=new WeakMap;class pu{constructor(e,t){au(this,Su,{writable:!0,value:void 0}),au(this,xu,{writable:!0,value:new tu(10)}),au(this,gu,{writable:!0,value:!1}),su(this,Su,e)}decode(e,t,n){ou(this,gu)||(su(this,gu,!0),ou(this,xu).onworkstart=this.ondecodestart,ou(this,xu).onworkitem=this.ondecodeditem,ou(this,xu).onwork=this.ondecoded,ou(this,xu).onworkend=this.ondecodeend,ou(this,xu).onerror=this.onerror,ou(this,xu).onabort=this.onabort);const i=new ru(ou(this,Su),{buffer:e,meta:t},n);ou(this,xu).addWorkerTask(i)}abort(){ou(this,xu).abort()}ondecodestart(e){}ondecodeditem(e){}ondecoded(e){}ondecodeend(e){}onerror(e){}onabort(e){}}var mu=new WeakMap,fu=new WeakMap,yu=new WeakMap;class Du{constructor(e,t){au(this,mu,{writable:!0,value:void 0}),au(this,fu,{writable:!0,value:void 0}),au(this,yu,{writable:!0,value:0}),su(this,mu,e),su(this,fu,t)}decode(e,t,n){var i;su(this,yu,(i=ou(this,yu),++i));let r=null,a=null;if("jpeg-lossless"===ou(this,mu)){if(!uu)throw new Error("No JPEG Lossless decoder provided");const n=t.bitsAllocated/8,i=new Uint8Array(e);r=new jpeg.lossless.Decoder;const o=r.decode(i.buffer,0,i.buffer.byteLength,n);8===t.bitsAllocated?a=t.isSigned?new Int8Array(o.buffer):new Uint8Array(o.buffer):16===t.bitsAllocated&&(a=t.isSigned?new Int16Array(o.buffer):new Uint16Array(o.buffer))}else if("jpeg-baseline"===ou(this,mu)){if(!cu)throw new Error("No JPEG Baseline decoder provided");r=new JpegImage,r.parse(e),a=r.getData(r.width,r.height)}else if("jpeg2000"===ou(this,mu)){if(!hu)throw new Error("No JPEG 2000 decoder provided");r=new JpxImage,r.parse(e),a=r.tiles[0].items}else"rle"===ou(this,mu)&&(r=new dwvdecoder.RleDecoder,a=r.decode(e,t.bitsAllocated,t.isSigned,t.sliceSize,t.samplesPerPixel,t.planarConfiguration));this.ondecodeditem({data:[a],dataIndex:n.dataIndex,numberOfItems:n.numberOfItems,itemNumber:n.itemNumber}),ou(this,yu)===ou(this,fu)&&(this.ondecoded({}),this.ondecodeend({}))}abort(){this.onabort({}),this.ondecodeend({})}ondecodestart(e){}ondecodeditem(e){}ondecoded(e){}ondecodeend(e){}onerror(e){}onabort(e){}}var vu=new WeakMap,wu=new WeakMap;class Cu{constructor(e,t){au(this,vu,{writable:!0,value:!1}),au(this,wu,{writable:!0,value:null}),su(this,wu,void 0!==du&&void 0!==du[e]?new pu(du[e],t):new Du(e,t))}decode(e,t,n){ou(this,vu)||(su(this,vu,!0),ou(this,wu).ondecodestart=this.ondecodestart,ou(this,wu).ondecodeditem=this.ondecodeditem,ou(this,wu).ondecoded=this.ondecoded,ou(this,wu).ondecodeend=this.ondecodeend,ou(this,wu).onerror=this.onerror,ou(this,wu).onabort=this.onabort),ou(this,wu).decode(e,t,n)}abort(){ou(this,wu).abort()}ondecodestart(e){}ondecodeditem(e){}ondecoded(e){}ondecodeend(e){}onerror(e){}onabort(e){}}function Tu(e,t){Lu(e,t),t.add(e)}function Iu(e,t,n){Lu(e,t),t.set(e,n)}function Lu(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function bu(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function Pu(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Ou(e,t,"get"))}function Au(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Ou(e,t,"set"),n),n}function Ou(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Fu=new WeakMap,Eu=new WeakMap,Ru=new WeakMap,Mu=new WeakMap,qu=new WeakMap,Uu=new WeakSet,Qu=new WeakSet;class ku{constructor(){Tu(this,Qu),Tu(this,Uu),Iu(this,Fu,{writable:!0,value:void 0}),Iu(this,Eu,{writable:!0,value:null}),Iu(this,Ru,{writable:!0,value:[]}),Iu(this,Mu,{writable:!0,value:[]}),Iu(this,qu,{writable:!0,value:[]})}setOptions(e){Au(this,Fu,e)}convert(e,t,n){this.onloadstart({source:t,dataIndex:n});const i=new ye,r=new Bc;void 0!==Pu(this,Fu).defaultCharacterSet&&i.setDefaultCharacterSet(Pu(this,Fu).defaultCharacterSet);try{i.parse(e),r.checkElements(i.getDicomElements())}catch(e){return this.onerror({error:e,source:t}),void this.onloadend({source:t})}const a=i.getRawDicomElements().x7FE00010.value;i.getRawDicomElements().x7FE00010.value=[];const o=function(e){let t=null;return ue(e)?t="jpeg2000":le(e)?t="jpeg-baseline":ce(e)?t="jpeg-lossless":he(e)&&(t="rle"),t}(re(i.getRawDicomElements().x00020010.value[0])),s=null!==o;if(Pu(this,Ru)[n]=i,Pu(this,Mu)[n]=a[0],s){const e={bitsAllocated:i.getRawDicomElements().x00280100.value[0],isSigned:1===i.getRawDicomElements().x00280103.value[0]},t=i.getRawDicomElements().x00280011,r=i.getRawDicomElements().x00280010;void 0!==t&&void 0!==r&&(e.sliceSize=t.value[0]*r.value[0]);const s=i.getRawDicomElements().x00280002;void 0!==s&&(e.samplesPerPixel=s.value[0]);const l=i.getRawDicomElements().x00280006;void 0!==l&&(e.planarConfiguration=l.value[0]);const c=a.length;null===Pu(this,Eu)&&(Au(this,Eu,new Cu(o,c)),Pu(this,Eu).ondecodeditem=e=>{bu(this,Qu,Nu).call(this,e),e.itemNumber+1===e.numberOfItems&&(this.onload(e),this.onloadend(e))},Pu(this,Eu).onerror=this.onerror,Pu(this,Eu).onabort=this.onabort);for(let t=0;t<c;++t)Pu(this,Eu).decode(a[t],e,{itemNumber:t,numberOfItems:c,dataIndex:n})}else this.onprogress({lengthComputable:!0,loaded:100,total:100,index:n,source:t}),bu(this,Uu,Bu).call(this,n,t),this.onload({source:t}),this.onloadend({source:t})}abort(){Pu(this,Eu)&&Pu(this,Eu).abort()}onloadstart(e){}onloaditem(e){}onprogress(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}function Bu(e,t){const n=Pu(this,Ru)[e].getDicomElements(),i=re(n.getFromKey("x00080060"));let r;r=i&&"SEG"===i?new Zc:new Bc;try{const i=r.create(n,Pu(this,Mu)[e],Pu(this,Fu).numberOfFiles);this.onloaditem({data:{image:i,info:Pu(this,Ru)[e].getRawDicomElements()},source:t})}catch(e){this.onerror({error:e,source:t}),this.onloadend({source:t})}}function Nu(e){this.onprogress({lengthComputable:!0,loaded:e.itemNumber+1,total:e.numberOfItems,index:e.dataIndex,source:origin});const t=e.dataIndex,n=e.data[0];if(1!==e.numberOfItems){if(void 0===Pu(this,qu)[t]){Pu(this,qu)[t]=n.length;const i=e.numberOfItems*Pu(this,qu)[t];try{Pu(this,Mu)[t]=new n.constructor(i)}catch(e){if(e instanceof RangeError){const e=Math.floor(Math.log(i)/Math.log(2));Y.error("Cannot allocate "+n.constructor.name+" of size: "+i+" (>2^"+e+") for decompressed data.")}return Pu(this,Eu).abort(),this.onerror({error:e,source:origin}),void this.onloadend({source:origin})}}n.length!==Pu(this,qu)[t]&&Y.warn("Unsupported varying decompressed data size: "+n.length+" != "+Pu(this,qu)[t]),Pu(this,Mu)[t].set(n,Pu(this,qu)[t]*e.itemNumber)}else Pu(this,Mu)[t]=n;0===e.itemNumber&&bu(this,Uu,Bu).call(this,t,origin)}function Wu(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function Vu(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,zu(e,t,"get"))}function Gu(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,zu(e,t,"set"),n),n}function zu(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Hu=new WeakMap,ju=new WeakMap,Xu=new WeakMap;function Yu(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,_u(e,t,"set"),n),n}function _u(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Ku=new WeakMap;function Zu(e,t){$u(e,t),t.add(e)}function Ju(e,t,n){$u(e,t),t.set(e,n)}function $u(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function eh(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function th(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,ih(e,t,"set"),n),n}function nh(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,ih(e,t,"get"))}function ih(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var rh=new WeakMap,ah=new WeakMap,oh=new WeakMap,sh=new WeakMap,lh=new WeakMap,ch=new WeakSet,uh=new WeakSet,hh=new WeakSet,dh=new WeakSet,Sh=new WeakMap,xh=new WeakMap;class gh{constructor(){Zu(this,dh),Zu(this,hh),Zu(this,uh),Zu(this,ch),Ju(this,rh,{writable:!0,value:null}),Ju(this,ah,{writable:!0,value:null}),Ju(this,oh,{writable:!0,value:0}),Ju(this,sh,{writable:!0,value:0}),Ju(this,lh,{writable:!0,value:void 0}),Ju(this,Sh,{writable:!0,value:e=>{var t;th(this,oh,(t=nh(this,oh),++t)),nh(this,oh)===nh(this,rh).length&&this.onload({source:nh(this,rh)})}}),Ju(this,xh,{writable:!0,value:e=>{var t;th(this,sh,(t=nh(this,sh),++t)),nh(this,sh)===nh(this,rh).length&&this.onloadend({source:nh(this,rh)})}})}getDefaultCharacterSet(){return nh(this,lh)}setDefaultCharacterSet(e){th(this,lh,e)}load(e){if(void 0===e||0===e.length)return;eh(this,ch,ph).call(this,e),this.onloadstart({source:e});const t=new $l(this.onprogress);t.setNToLoad(e.length),t.setNumberOfDimensions(1);const n=[];for(let e=0;e<Xh.length;++e)n.push(new Xh[e]);let i=e[0],r=null,a=!1;for(let o=0;o<n.length;++o)if(r=n[o],r.canLoadMemory(i)){a=!0,r.setOptions({numberOfFiles:e.length,defaultCharacterSet:this.getDefaultCharacterSet()}),r.onprogress=t.getUndefinedMonoProgressHandler(0),void 0===r.onloaditem?r.onload=eh(this,dh,yh):(r.onloaditem=this.onloaditem,r.onload=nh(this,Sh)),r.onloadend=nh(this,xh),r.onerror=this.onerror,r.onabort=this.onabort,eh(this,uh,mh).call(this,r);break}if(!a)throw new Error("No loader found for data: "+i.filename);for(let t=0;t<e.length;++t){if(i=e[t],!r.canLoadMemory(i))throw new Error("Input data of different type: "+i.filename);r.load(i.data,i.filename,t)}}abort(){nh(this,ah)&&nh(this,ah).isLoading()&&nh(this,ah).abort()}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}function ph(e){th(this,rh,e),th(this,oh,0),th(this,sh,0),eh(this,hh,fh).call(this)}function mh(e){th(this,ah,e)}function fh(){th(this,ah,null)}function yh(e){this.onloaditem(e),nh(this,Sh).call(this)}function Dh(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,vh(e,t,"set"),n),n}function vh(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var wh=new WeakMap;function Ch(e){const t=e.data.length,n=new Uint8Array(t/4*3);let i=0;for(let r=0;r<t;r+=4)n[i]=e.data[r],n[i+1]=e.data[r+1],n[i+2]=e.data[r+2],i+=3;return n}function Th(e,t,n,i,r,a){const o=new G([e,t,1]),s=new X([1,1,1]),l=new gn(0,0,n),c=new Bi(l,o,s),u=new wi(c,i,[a]);u.setPhotometricInterpretation("RGB");const h={BitsStored:8};return void 0!==r&&(h.numberOfFiles=r),u.setMeta(h),u}function Ih(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Lh(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,bh(e,t,"set"),n),n}function bh(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Ph=new WeakMap,Ah=new WeakSet;function Oh(e,t){let n=t;n&&"jpg"!==n||(n="jpeg");const i=new Blob([e],{type:"image/"+n});return window.URL.createObjectURL(i)}var Fh=new WeakSet;function Eh(e,t){const n=new Uint8Array(e);let i="";for(let e=0;e<n.byteLength;++e)i+=String.fromCharCode(n[e]);return"data:video/"+t+";base64,"+window.btoa(i)}var Rh=a(290),Mh=a.n(Rh);function qh(e,t,n){Uh(e,t),t.set(e,n)}function Uh(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Qh(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function kh(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Nh(e,t,"set"),n),n}function Bh(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Nh(e,t,"get"))}function Nh(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Wh=new WeakMap,Vh=new WeakMap,Gh=new WeakMap,zh=new WeakMap,Hh=new WeakSet;function jh(e,t,n){Bh(this,Gh).push({filename:Bh(this,Vh),data:e});const i=100*Bh(this,Gh).length/Bh(this,zh).length;if(this.onprogress({lengthComputable:!0,loaded:i/2,total:100,index:n,item:{loaded:i,total:100,source:t}}),Bh(this,Gh).length<Bh(this,zh).length){const e=Bh(this,Gh).length;kh(this,Vh,Bh(this,zh)[e].name),Bh(this,zh)[e].async("arrayBuffer").then((e=>{Qh(this,Hh,jh).call(this,e,t,n)}))}else{const e=new gh;e.onprogress=e=>{e.loaded=50+e.loaded/2,e.index=n,this.onprogress(e)},e.onloaditem=this.onloaditem,e.onload=this.onload,e.onloadend=e=>{kh(this,Wh,!1),this.onloadend(e)},e.onerror=this.onerror,e.onabort=this.onabort,e.load(Bh(this,Gh))}}const Xh=[class{constructor(){Wu(this,Hu,{writable:!0,value:{}}),Wu(this,ju,{writable:!0,value:!1}),Wu(this,Xu,{writable:!0,value:new ku})}setOptions(e){Gu(this,Hu,e)}isLoading(){return Vu(this,ju)}load(e,t,n){Vu(this,ju)||(Vu(this,Xu).setOptions(Vu(this,Hu)),Vu(this,Xu).onloadstart=this.onloadstart,Vu(this,Xu).onprogress=this.onprogress,Vu(this,Xu).onloaditem=this.onloaditem,Vu(this,Xu).onload=this.onload,Vu(this,Xu).onloadend=e=>{Gu(this,ju,!1),this.onloadend(e)},Vu(this,Xu).onerror=this.onerror,Vu(this,Xu).onabort=this.onabort),Gu(this,ju,!0),Vu(this,Xu).convert(e,t,n)}abort(){Gu(this,ju,!1),Vu(this,Xu).abort()}canLoadFile(e){const t=Ca(e.name);return null===t||"dcm"===t}canLoadUrl(e,t){if(void 0!==t&&void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name&&ya(e.value,"application/dicom")&&"+"!==e.value[18]};return void 0!==t.requestHeaders.find(e)}const n=nc(e),i=Ca(n.pathname),r=null===i,a="dcm"===i,o=n.searchParams.get("contentType");return null!=o?"application/dicom"===o:r||a}canLoadMemory(e){return void 0!==e["Content-Type"]&&"application/dicom"===e["Content-Type"]||void 0!==e.filename&&this.canLoadFile({name:e.filename})}loadFileAs(){return td.ArrayBuffer}loadUrlAs(){return hc.ArrayBuffer}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{constructor(){var e,t,n;n={writable:!0,value:!1},function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e=this,t=Ku),t.set(e,n)}setOptions(e){}isLoading(){return function(e,t){return t.get?t.get.call(e):t.value}(this,_u(this,Ku,"get"))}load(e,t,n){Yu(this,Ku,!0),this.onloadstart({source:t});try{this.onprogress({lengthComputable:!0,loaded:100,total:100,index:n,source:t}),this.onload({data:e,source:t})}catch(e){this.onerror({error:e,source:t})}finally{Yu(this,Ku,!1),this.onloadend({source:t})}}abort(){Yu(this,Ku,!1),this.onabort({}),this.onloadend({})}canLoadFile(e){return"json"===Ca(e.name)}canLoadUrl(e,t){if(void 0!==t&&void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name&&ya(e.value,"application/json")&&ya(e.value,"application/dicom+json")};return void 0!==t.requestHeaders.find(e)}return"json"===Ca(nc(e).pathname)}canLoadMemory(e){return!(void 0===e["Content-Type"]||!e["Content-Type"].includes("json"))||void 0!==e.filename&&this.canLoadFile({name:e.filename})}loadFileAs(){return td.Text}loadUrlAs(){return hc.Text}onloadstart(e){}onprogress(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{constructor(){var e,t,n;n={writable:!0,value:!1},function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e=this,t=wh),t.set(e,n)}setOptions(e){}isLoading(){return function(e,t){return t.get?t.get.call(e):t.value}(this,vh(this,wh,"get"))}load(e,t,n){this.onloadstart({source:t}),Dh(this,wh,!0);const i=new gh;i.onprogress=e=>{e.loaded=50+e.loaded/2,e.index=n,this.onprogress(e)},i.onloaditem=this.onloaditem,i.onload=this.onload,i.onloadend=e=>{Dh(this,wh,!1),this.onloadend(e)},i.onerror=this.onerror,i.onabort=this.onabort,i.load(function(e){const t=new Uint8Array(e),n=[];if(0===t.length)return n;const i=Gc(new Uint8Array([13,10,13,10]));let r=Vc(t,i,0);if(void 0===r)throw new Error("Can't find the end of the first multipart header");const a=Wc(t.slice(0,r)).split("\r\n");let o;for(let e=0;e<a.length;++e)if("-"===a[e][0]&&"-"===a[e][1]){o=a[e];break}if(void 0===o)throw new Error("Can't find the boundary between multi-parts");const s=Gc(Ta(o)),l=o.length;let c=Vc(t,s,0);for(;void 0!==r;){const e={},a=Wc(t.slice(c+l,r)).split("\r\n");for(let t=0;t<a.length;++t){const n=a[t],i=n.indexOf(":");if(-1!==i){const t=n.substring(0,i).trim(),r=n.substring(i+1).trim();e[t]=r}}if(c=Vc(t,s,r),void 0===c)break;const o=r+4,u=c-2;e.data=o<u?t.slice(o,u).buffer:new Uint8Array,n.push(e),r=Vc(t,i,c+l)}return n}(e))}abort(){Dh(this,wh,!1),this.onabort({}),this.onloadend({})}canLoadFile(e){return!1}canLoadUrl(e,t){if(void 0!==t&&void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name&&ya(e.value,"multipart/related")};return void 0!==t.requestHeaders.find(e)}return!1}canLoadMemory(e){return!1}loadFileAs(){return td.ArrayBuffer}loadUrlAs(){return hc.ArrayBuffer}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{constructor(){var e;Ih(this,e=Ah),e.add(this),function(e,t,n){Ih(e,t),t.set(e,{writable:!0,value:!1})}(this,Ph)}setOptions(e){}isLoading(){return!0}load(e,t,n){Lh(this,Ph,!1);const i=new Image;if(i.onload=e=>{try{(function(e,t){return t.get?t.get.call(e):t.value})(this,bh(this,Ph,"get"))||(this.onprogress({lengthComputable:!0,loaded:100,total:100,index:n,source:t}),this.onload(function(e,t){const n=e.width,i=e.height,r=document.createElement("canvas");r.width=n,r.height=i;const a=r.getContext("2d");a.drawImage(e,0,0);const o=a.getImageData(0,0,n,i),s={};"string"==typeof e.origin?s.origin={value:e.origin}:(s.fileName={value:e.origin.name},s.fileType={value:e.origin.type},s.fileLastModifiedDate={value:e.origin.lastModifiedDate}),s.imageWidth={value:n},s.imageHeight={value:i};const l=e.index?e.index:0;return s.imageUid={value:l},{data:{image:Th(n,i,l,Ch(o),1,l),info:s},source:t}}(e.target,t)))}catch(e){this.onerror({error:e,source:t})}finally{this.onloadend({source:t})}},i.origin=t,i.index=n,"string"==typeof t){const n=t.split(".").pop().toLowerCase();i.src=function(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}(this,Ah,Oh).call(this,e,n)}else i.src=e}abort(){Lh(this,Ph,!0),this.onabort({}),this.onloadend({})}canLoadFile(e){return void 0!==e.type&&e.type.match("image.*")}canLoadUrl(e,t){if(void 0!==t&&void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name&&ya(e.value,"image/")};return void 0!==t.requestHeaders.find(e)}const n=nc(e),i=Ca(n.pathname),r="jpeg"===i||"jpg"===i||"png"===i||"gif"===i,a=n.searchParams.get("contentType");return null!=a?"image/jpeg"===a||"image/png"===a||"image/gif"===a:r}canLoadMemory(e){return void 0!==e.filename&&this.canLoadFile({name:e.filename})}loadFileAs(){return td.DataURL}loadUrlAs(){return hc.ArrayBuffer}onloadstart(e){}onprogress(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{constructor(){var e,t;(function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")})(e=this,t=Fh),t.add(e)}setOptions(e){}isLoading(){return!0}load(e,t,n){const i=document.createElement("video");if("string"==typeof t){const n=t.split(".").pop().toLowerCase();i.src=function(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}(this,Fh,Eh).call(this,e,n)}else i.src=e;i.file=t,i.index=n,i.onloadedmetadata=e=>{try{!function(e,t,n,i,r,a,o){const s=e.videoWidth,l=e.videoHeight,c=Math.ceil(30*e.duration),u={};e.file&&(u.fileName={value:e.file.name},u.fileType={value:e.file.type},u.fileLastModifiedDate={value:e.file.lastModifiedDate}),u.imageWidth={value:s},u.imageHeight={value:l},u.numberOfFrames={value:c},u.imageUid={value:0};const h=document.createElement("canvas");h.width=s,h.height=l;const d=h.getContext("2d");e.addEventListener("seeked",(function h(){(function(){i({lengthComputable:!0,loaded:S,total:c,index:a,source:o}),d.drawImage(e,0,0);const n=Ch(d.getImageData(0,0,s,l));0===S?(x=Th(s,l,1,n,c,a),t({data:{image:x,info:u},source:o})):x.appendFrameBuffer(n,S),++S})(),g+=1/30,g<=this.duration?this.currentTime=g:(n({source:o}),r({source:o}),e.removeEventListener("seeked",h))}),!1);let S=0,x=null,g=0;e.currentTime=g}(e.target,this.onloaditem,this.onload,this.onprogress,this.onloadend,n,t)}catch(e){this.onerror({error:e,source:t}),this.onloadend({source:t})}}}abort(){this.onabort({}),this.onloadend({})}canLoadFile(e){return void 0!==e.type&&e.type.match("video.*")}canLoadUrl(e,t){if(void 0!==t&&void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name&&ya(e.value,"video/")};return void 0!==t.requestHeaders.find(e)}const n=Ca(nc(e).pathname);return"mp4"===n||"ogg"===n||"webm"===n}canLoadMemory(e){return void 0!==e.filename&&this.canLoadFile({name:e.filename})}loadFileAs(){return td.DataURL}loadUrlAs(){return hc.ArrayBuffer}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{constructor(){var e;Uh(this,e=Hh),e.add(this),qh(this,Wh,{writable:!0,value:!1}),qh(this,Vh,{writable:!0,value:""}),qh(this,Gh,{writable:!0,value:[]}),qh(this,zh,{writable:!0,value:null})}setOptions(e){}isLoading(){return Bh(this,Wh)}load(e,t,n){this.onloadstart({source:t}),kh(this,Wh,!0),Mh().loadAsync(e).then((e=>{kh(this,Gh,[]),kh(this,zh,e.file(/.*\.dcm/));const i=Bh(this,Gh).length;kh(this,Vh,Bh(this,zh)[i].name),Bh(this,zh)[i].async("arrayBuffer").then((e=>{Qh(this,Hh,jh).call(this,e,t,n)}))}))}abort(){kh(this,Wh,!1),this.onabort({}),this.onloadend({})}canLoadFile(e){return"zip"===Ca(e.name)}canLoadUrl(e,t){if(void 0!==t&&void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name&&ya(e.value,"application/zip")};return void 0!==t.requestHeaders.find(e)}return"zip"===Ca(nc(e).pathname)}canLoadMemory(e){return!(void 0===e["Content-Type"]||!e["Content-Type"].includes("zip"))||void 0!==e.filename&&this.canLoadFile({name:e.filename})}loadFileAs(){return td.ArrayBuffer}loadUrlAs(){return hc.ArrayBuffer}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}];function Yh(e,t){Kh(e,t),t.add(e)}function _h(e,t,n){Kh(e,t),t.set(e,n)}function Kh(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Zh(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function Jh(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,ed(e,t,"set"),n),n}function $h(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,ed(e,t,"get"))}function ed(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}const td={Text:0,ArrayBuffer:1,DataURL:2};var nd=new WeakMap,id=new WeakMap,rd=new WeakMap,ad=new WeakMap,od=new WeakMap,sd=new WeakMap,ld=new WeakSet,cd=new WeakSet,ud=new WeakSet,hd=new WeakSet,dd=new WeakSet,Sd=new WeakMap,xd=new WeakMap,gd=new WeakMap,pd=new WeakSet;class md{constructor(){Yh(this,pd),Yh(this,dd),Yh(this,hd),Yh(this,ud),Yh(this,cd),Yh(this,ld),_h(this,nd,{writable:!0,value:null}),_h(this,id,{writable:!0,value:[]}),_h(this,rd,{writable:!0,value:null}),_h(this,ad,{writable:!0,value:0}),_h(this,od,{writable:!0,value:0}),_h(this,sd,{writable:!0,value:void 0}),_h(this,Sd,{writable:!0,value:e=>{this.onloaditem(e),$h(this,xd).call(this)}}),_h(this,xd,{writable:!0,value:e=>{var t;Jh(this,ad,(t=$h(this,ad),++t)),$h(this,ad)===$h(this,nd).length&&this.onload({source:$h(this,nd)})}}),_h(this,gd,{writable:!0,value:e=>{var t;Jh(this,od,(t=$h(this,od),++t)),$h(this,od)===2*$h(this,nd).length&&this.onloadend({source:$h(this,nd)})}})}getDefaultCharacterSet(){return $h(this,sd)}setDefaultCharacterSet(e){Jh(this,sd,e)}load(e){if(void 0===e||0===e.length)return;Zh(this,ld,fd).call(this,e),this.onloadstart({source:e});const t=new $l(this.onprogress);t.setNToLoad(e.length);const n=[];for(let e=0;e<Xh.length;++e)n.push(new Xh[e]);let i=e[0],r=null,a=!1;for(let o=0;o<n.length;++o)if(r=n[o],r.canLoadFile(i)){a=!0,r.setOptions({numberOfFiles:e.length,defaultCharacterSet:this.getDefaultCharacterSet()}),r.onprogress=t.getUndefinedMonoProgressHandler(1),void 0===r.onloaditem?r.onload=$h(this,Sd):(r.onloaditem=this.onloaditem,r.onload=$h(this,xd)),r.onloadend=$h(this,gd),r.onerror=this.onerror,r.onabort=this.onabort,Zh(this,hd,vd).call(this,r);break}if(!a)throw new Error("No loader found for file: "+i.name);const o=function(e,t,n){return i=>{e.load(i.target.result,t,n)}};for(let n=0;n<e.length;++n){if(i=e[n],!r.canLoadFile(i))throw new Error("Input file of different type: "+i);const a=new FileReader;Zh(this,cd,yd).call(this,a),a.onprogress=Zh(this,pd,Cd).call(this,t.getMonoProgressHandler(n,0),i),a.onload=o(r,i,n),a.onloadend=$h(this,gd),a.onerror=Zh(this,pd,Cd).call(this,this.onerror,i),a.onabort=Zh(this,pd,Cd).call(this,this.onabort,i),r.loadFileAs()===td.Text?a.readAsText(i):r.loadFileAs()===td.DataURL?a.readAsDataURL(i):r.loadFileAs()===td.ArrayBuffer&&a.readAsArrayBuffer(i)}}abort(){for(let e=0;e<$h(this,id).length;++e)1===$h(this,id)[e].readyState&&$h(this,id)[e].abort();$h(this,rd)&&$h(this,rd).isLoading()&&$h(this,rd).abort()}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}function fd(e){Jh(this,nd,e),Jh(this,ad,0),Jh(this,od,0),Zh(this,ud,Dd).call(this),Zh(this,dd,wd).call(this)}function yd(e){$h(this,id).push(e)}function Dd(){Jh(this,id,[])}function vd(e){Jh(this,rd,e)}function wd(){Jh(this,rd,null)}function Cd(e,t){return n=>{n.source=t,e(n)}}function Td(e,t){Ld(e,t),t.add(e)}function Id(e,t,n){Ld(e,t),t.set(e,n)}function Ld(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function bd(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function Pd(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Od(e,t,"get"))}function Ad(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Od(e,t,"set"),n),n}function Od(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Fd=new WeakMap,Ed=new WeakMap,Rd=new WeakMap,Md=new WeakSet,qd=new WeakSet,Ud=new WeakSet,Qd=new WeakSet,kd=new WeakSet,Bd=new WeakSet,Nd=new WeakSet;class Wd{constructor(e){Td(this,Nd),Td(this,Bd),Td(this,kd),Td(this,Qd),Td(this,Ud),Td(this,qd),Td(this,Md),Id(this,Fd,{writable:!0,value:void 0}),Id(this,Ed,{writable:!0,value:{}}),Id(this,Rd,{writable:!0,value:-1}),Ad(this,Fd,e)}loadFiles(e){"json"===e[0].name.split(".").pop().toLowerCase()?bd(this,Qd,Hd).call(this,e[0]):bd(this,qd,Gd).call(this,e)}loadURLs(e,t){"json"===e[0].split(".").pop().toLowerCase()?bd(this,kd,jd).call(this,e[0],t):bd(this,Ud,zd).call(this,e,t)}loadImageObject(e){const t=new gh;bd(this,Bd,Xd).call(this,e,t,"image")}abort(){const e=Object.keys(Pd(this,Ed));for(let t=0;t<e.length;++t)Pd(this,Ed)[t].loader.abort(),delete Pd(this,Ed)[t]}onloadstart(e){}onprogress(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}function Vd(){var e;return Ad(this,Rd,(e=Pd(this,Rd),++e)),Pd(this,Rd)}function Gd(e){const t=new md;t.setDefaultCharacterSet(Pd(this,Fd)),bd(this,Bd,Xd).call(this,e,t,"image")}function zd(e,t){const n=new Oc;n.setDefaultCharacterSet(Pd(this,Fd)),bd(this,Bd,Xd).call(this,e,n,"image",t)}function Hd(e){const t=new md;bd(this,Bd,Xd).call(this,[e],t,"state")}function jd(e,t){const n=new Oc;bd(this,Bd,Xd).call(this,[e],n,"state",t)}function Xd(e,t,n,i){const r={loadtype:n},a=bd(this,Md,Vd).call(this);r.loadid=a,t.onloadstart=e=>{Pd(this,Ed)[a]={loader:t,isFirstItem:!0},bd(this,Nd,Yd).call(this,this.onloadstart,r)(e)},t.onprogress=bd(this,Nd,Yd).call(this,this.onprogress,r),t.onloaditem=e=>{const t={loadtype:n,loadid:a};void 0!==Pd(this,Ed)[a]&&(t.isfirstitem=Pd(this,Ed)[a].isFirstItem),bd(this,Nd,Yd).call(this,this.onloaditem,t)(e),void 0!==Pd(this,Ed)[a]&&Pd(this,Ed)[a].isFirstItem&&(Pd(this,Ed)[a].isFirstItem=!1)},t.onload=bd(this,Nd,Yd).call(this,this.onload,r),t.onloadend=e=>{delete Pd(this,Ed)[a],bd(this,Nd,Yd).call(this,this.onloadend,r)(e)},t.onerror=bd(this,Nd,Yd).call(this,this.onerror,r),t.onabort=bd(this,Nd,Yd).call(this,this.onabort,r);try{t.load(e,i)}catch(e){return this.onerror({error:e,loadid:a}),void this.onloadend({loadid:a})}}function Yd(e,t){return function(n){const i=Object.keys(t);for(let e=0;e<i.length;++e){const r=i[e];n[r]=t[r]}e(n)}}function _d(e){const t=typeof e;return"function"===t||"object"===t&&!!e}function Kd(e,t){Jd(e,t),t.add(e)}function Zd(e,t,n){Jd(e,t),t.set(e,n)}function Jd(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function $d(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function eS(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,tS(e,t,"get"))}function tS(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var nS=new WeakMap,iS=new WeakMap,rS=new WeakMap,aS=new WeakSet,oS=new WeakSet;class sS{constructor(){Kd(this,oS),Kd(this,aS),Zd(this,nS,{writable:!0,value:{}}),Zd(this,iS,{writable:!0,value:new Tn}),Zd(this,rS,{writable:!0,value:e=>{eS(this,iS).fireEvent(e)}})}length(){return Object.keys(eS(this,nS)).length}reset(){var e,t;t=[],function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e=this,tS(e,nS,"set"),t)}get(e){return eS(this,nS)[e]}setImage(e,t){eS(this,nS)[e].image=t,eS(this,rS).call(this,{type:"imageset",value:[t],dataid:e}),t.addEventListener("imagechange",$d(this,aS,lS).call(this,e))}addNew(e,t,n){if(void 0!==eS(this,nS)[e])throw new Error("Index already used in storage: "+e);eS(this,nS)[e]={image:t,meta:$d(this,oS,cS).call(this,n)},t.addEventListener("imagechange",$d(this,aS,lS).call(this,e))}update(e,t,n){const i=eS(this,nS)[e];i.image.appendSlice(t);let r="";r=void 0!==n.x00020010?"InstanceNumber":"imageUid",i.meta=function(e,t,n,i){const r={};if(!n)throw new Error("Cannot merge object with an undefined id key: "+n);if(!Object.prototype.hasOwnProperty.call(e,n))throw new Error("Id key not found in first object while merging: "+n+", obj: "+e);if(!Object.prototype.hasOwnProperty.call(t,n))throw new Error("Id key not found in second object while merging: "+n+", obj: "+t);let a=!1;if(Object.prototype.hasOwnProperty.call(e[n],"merged")&&e[n].merged&&(a=!0),!Object.prototype.hasOwnProperty.call(e[n],i))throw new Error("Id value not found in first object while merging: "+n+", valueKey: "+i+", ojb: "+e);if(!Object.prototype.hasOwnProperty.call(t[n],i))throw new Error("Id value not found in second object while merging: "+n+", valueKey: "+i+", ojb: "+t);const o=e[n][i],s=t[n][i];if(a){for(let e=0;e<o.length;++e)if(o[e]===s)throw new Error("The first object already contains id2: "+s+", id1: "+o);r[n]=e[n],r[n][i].push(s)}else{if(o===s)throw new Error("Cannot merge object with same ids: "+o+", id2: "+s);r[n]={value:[o,s],merged:!0}}const l=Object.keys(e),c=Object.keys(t).filter((function(e){return l.indexOf(e)<0})),u=l.concat(c);for(let l=0,c=u.length;l<c;++l){const c=u[l];if(c!==n){let n=null,l=null;Object.prototype.hasOwnProperty.call(e,c)&&(n=e[c],Object.prototype.hasOwnProperty.call(n,i)&&(l=n[i]));let u,h=null,d=null;if(Object.prototype.hasOwnProperty.call(t,c)&&(h=t[c],Object.prototype.hasOwnProperty.call(h,i)&&(d=h[i])),d!==l)if(u={},a){if(_d(l))u[i]=l;else{u[i]={};for(let e=0;e<o.length;e++)u[i][o[e]]=n}u[i][s]=h}else{const e={};e[o]=n,e[s]=h,u[i]=e}else u=n;r[c]=u}}return r}(i.meta,$d(this,oS,cS).call(this,n),r,"value")}addEventListener(e,t){eS(this,iS).add(e,t)}removeEventListener(e,t){eS(this,iS).remove(e,t)}}function lS(e){return t=>{t.dataid=e,eS(this,rS).call(this,t)}}function cS(e){let t=null;return t=void 0!==e.x00020010?new J(e).dumpToObject():e,t}function uS(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function hS(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,SS(e,t,"get"))}function dS(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,SS(e,t,"set"),n),n}function SS(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var xS=new WeakMap,gS=new WeakMap;class pS{constructor(e){uS(this,xS,{writable:!0,value:void 0}),uS(this,gS,{writable:!0,value:0}),dS(this,xS,e)}wheel(e){let t=52;if(1===e.deltaMode&&(t=5.99),dS(this,gS,hS(this,gS)+e.deltaY),Math.abs(hS(this,gS))<t)return;dS(this,gS,0);const n=e.deltaY<0,i=jo(e),r=hS(this,xS).getLayerGroupByDivId(i.groupDivId).getActiveViewLayer().getViewController(),a=r.getImageSize();a.canScroll3D()?n?r.incrementScrollIndex():r.decrementScrollIndex():a.moreThanOne(3)&&(n?r.incrementIndex(3):r.decrementIndex(3))}}function mS(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function fS(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function yS(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,vS(e,t,"get"))}function DS(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,vS(e,t,"set"),n),n}function vS(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var wS=new WeakMap,CS=new WeakMap,TS=new WeakMap;function IS(e,t){PS(e,t),t.add(e)}function LS(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function bS(e,t,n){PS(e,t),t.set(e,n)}function PS(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function AS(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,ES(e,t,"get"))}function OS(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function FS(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,ES(e,t,"set"),n),n}function ES(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var RS=new WeakMap,MS=new WeakMap,qS=new WeakMap,US=new WeakMap,QS=new WeakMap,kS=new WeakSet,BS=new WeakSet;function NS(e){OS(this,BS,WS).call(this);const t=jo(e),n=AS(this,RS).getLayerGroupByDivId(t.groupDivId).getActiveViewLayer(),i=n.getViewController(),r=n.displayToPlanePos(e._x,e._y),a=i.getPositionFromPlanePoint(r.x,r.y),o=i.getRescaledImageValue(a);if(void 0!==o){const t=document.createElement("span");t.id="scroll-tooltip",document.getElementById(n.getId()).parentElement.appendChild(t),t.style.left=e._x+10+"px",t.style.top=e._y+10+"px";let r=Ia(o,3);void 0!==i.getPixelUnit()&&(r+=" "+i.getPixelUnit()),t.appendChild(document.createTextNode(r))}}function WS(){const e=document.getElementById("scroll-tooltip");e&&e.remove()}function VS(e,t){const n=e.split(".");if(2!==n.length)throw new Error("Unexpected translation key length.");if("unit"!==n[0])throw new Error("Unexpected translation key prefix.");return{mm:"mm",cm2:"cm²",degree:"°"}[n[1]]}function GS(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function zS(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,jS(e,t,"get"))}function HS(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,jS(e,t,"set"),n),n}function jS(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var XS=new WeakMap,YS=new WeakMap;class _S{constructor(e,t){GS(this,XS,{writable:!0,value:void 0}),GS(this,YS,{writable:!0,value:void 0}),HS(this,XS,e),HS(this,YS,t)}getBegin(){return zS(this,XS)}getEnd(){return zS(this,YS)}equals(e){return null!==e&&this.getBegin().equals(e.getBegin())&&this.getEnd().equals(e.getEnd())}getDeltaX(){return this.getEnd().getX()-this.getBegin().getX()}getDeltaY(){return this.getEnd().getY()-this.getBegin().getY()}getLength(){return Math.sqrt(this.getDeltaX()*this.getDeltaX()+this.getDeltaY()*this.getDeltaY())}getWorldLength(e,t){let n=null;if(null!==e&&null!==t){const i=this.getDeltaX()*e,r=this.getDeltaY()*t;n=Math.sqrt(i*i+r*r)}return n}getMidpoint(){return new hn(parseInt((this.getBegin().getX()+this.getEnd().getX())/2,10),parseInt((this.getBegin().getY()+this.getEnd().getY())/2,10))}getSlope(){return this.getDeltaY()/this.getDeltaX()}getIntercept(){return(this.getEnd().getX()*this.getBegin().getY()-this.getBegin().getX()*this.getEnd().getY())/this.getDeltaX()}getInclination(){return 180-180*Math.atan2(this.getDeltaY(),this.getDeltaX())/Math.PI}quantify(e){const t={},n=e.get2DSpacing(),i=this.getWorldLength(n[0],n[1]);return null!==i&&(t.length={value:i,unit:VS("unit.mm")}),t}}function KS(e,t){const n=e.getDeltaX(),i=e.getDeltaY(),r=t.getDeltaX(),a=t.getDeltaY(),o=n*r+i*a,s=n*a-i*r;return 360-(180-180*Math.atan2(s,o)/Math.PI)}function ZS(e,t,n){let i=0,r=0,a=0,o=0;if(0!==e.getSlope()){const s=-1/e.getSlope(),l=t.getY()-s*t.getX(),c=n/(2*Math.sqrt(1+s*s));i=t.getX()-c,r=s*i+l,a=t.getX()+c,o=s*a+l}else i=t.getX(),r=t.getY()-n/2,a=t.getX(),o=t.getY()+n/2;return new _S(new hn(i,r),new hn(a,o))}function JS(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function $S(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function ex(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,nx(e,t,"get"))}function tx(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,nx(e,t,"set"),n),n}function nx(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var ix=new WeakMap,rx=new WeakMap;function ax(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ox(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function sx(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,cx(e,t,"get"))}function lx(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,cx(e,t,"set"),n),n}function cx(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var ux=new WeakMap,hx=new WeakMap,dx=new WeakMap;function Sx(e,t){return function(e){return null!=e&&e.includes("median","p25","p75")}(t)?function(e){const t=xx(e);return e.sort((function(e,t){return e-t})),t.median=gx(e,.5),t.p25=gx(e,.25),t.p75=gx(e,.75),t}(e):xx(e)}function xx(e){let t=e[0],n=t,i=0,r=0,a=0;const o=e.length;for(let s=0;s<o;++s)a=e[s],a<t?t=a:a>n&&(n=a),i+=a,r+=a*a;const s=i/o,l=r/o-s*s;return{min:t,max:n,mean:s,stdDev:Math.sqrt(l)}}function gx(e,t){if(0===e.length)throw new Error("Empty array provided for percentile calculation.");if(t<0||t>1)throw new Error("Invalid ratio provided for percentile calculation: "+t);if(0===t)return e[0];if(1===t)return e[e.length-1];const n=(e.length-1)*t,i=Math.floor(n),r=e[i];return r+(e[i+1]-r)*(n-i)}function px(){return Math.random().toString(36).substring(2,15)}function mx(e,t){yx(e,t),t.add(e)}function fx(e,t,n){yx(e,t),t.set(e,n)}function yx(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Dx(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function vx(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Cx(e,t,"get"))}function wx(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Cx(e,t,"set"),n),n}function Cx(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function Tx(e,t,n,i){const r=i.applyZoomScale(3);return new(ba().Ellipse)({x:e,y:t,stroke:"#999",fill:"rgba(100,100,100,0.7",strokeWidth:i.getStrokeWidth(),strokeScaleEnabled:!1,radius:{x:Math.abs(r.x),y:Math.abs(r.y)},name:"anchor",id:n.toString(),dragOnTop:!1,draggable:!0,visible:!1})}var Ix=new WeakMap,Lx=new WeakMap,bx=new WeakMap,Px=new WeakMap,Ax=new WeakMap,Ox=new WeakMap,Fx=new WeakMap,Ex=new WeakSet,Rx=new WeakSet,Mx=new WeakSet,qx=new WeakSet,Ux=new WeakSet,Qx=new WeakSet,kx=new WeakSet;class Bx{constructor(e){mx(this,kx),mx(this,Qx),mx(this,Ux),mx(this,qx),mx(this,Mx),mx(this,Rx),mx(this,Ex),fx(this,Ix,{writable:!0,value:void 0}),fx(this,Lx,{writable:!0,value:null}),fx(this,bx,{writable:!0,value:null}),fx(this,Px,{writable:!0,value:null}),fx(this,Ax,{writable:!0,value:null}),fx(this,Ox,{writable:!0,value:!1}),fx(this,Fx,{writable:!0,value:null}),wx(this,Ix,e)}setFactoryList(e){wx(this,Lx,e)}setShape(e){if(wx(this,Px,e),vx(this,Px)){Dx(this,Mx,Vx).call(this);const e=vx(this,Px).getParent(),t=Object.keys(vx(this,Lx));wx(this,bx,null);for(let n=0;n<t.length;++n){const i=new(vx(this,Lx)[t[n]]);if(i.isFactoryGroup(e)){wx(this,bx,i);break}}if(null===vx(this,bx))throw new Error("Could not find a factory to update shape.");Dx(this,qx,Gx).call(this)}}setViewController(e){wx(this,Ax,e)}getShape(){return vx(this,Px)}isActive(){return vx(this,Ox)}setDrawEventCallback(e){wx(this,Fx,e)}enable(){wx(this,Ox,!0),vx(this,Px)&&(Dx(this,Rx,Wx).call(this,!0),vx(this,Px).getLayer()&&vx(this,Px).getLayer().draw())}disable(){wx(this,Ox,!1),vx(this,Px)&&(Dx(this,Rx,Wx).call(this,!1),vx(this,Px).getLayer()&&vx(this,Px).getLayer().draw())}resetAnchors(){Dx(this,Mx,Vx).call(this),Dx(this,qx,Gx).call(this),Dx(this,Rx,Wx).call(this,!0)}setAnchorsActive(e){let t=null;t=e?e=>{Dx(this,Qx,Hx).call(this,e)}:e=>{Dx(this,kx,jx).call(this,e)},Dx(this,Ex,Nx).call(this,t)}}function Nx(e){vx(this,Px)&&vx(this,Px).getParent()&&vx(this,Px).getParent().find(".anchor").forEach(e)}function Wx(e){Dx(this,Ex,Nx).call(this,(function(t){t.visible(e)}))}function Vx(){Dx(this,Ex,Nx).call(this,(function(e){e.remove()}))}function Gx(){if(!vx(this,Px)||!vx(this,Px).getLayer())return;const e=vx(this,Px).getParent(),t=vx(this,bx).getAnchors(vx(this,Px),vx(this,Ix).getStyle());for(let n=0;n<t.length;++n)Dx(this,Qx,Hx).call(this,t[n]),e.add(t[n])}function zx(e){const t=e.getParent(),n=e.id(),i=e.x(),r=e.y();return{getParent:function(){return t},id:function(){return n},x:function(){return i},y:function(){return r}}}function Hx(e){let t=null;const n=Ea(vx(this,Px));e.on("dragstart.edit",(e=>{const n=e.target;t=Dx(this,Ux,zx).call(this,n),e.cancelBubble=!0})),e.on("dragmove.edit",(e=>{const t=e.target,n=jo(e.evt);!function(e,t){const n=t.getParent();Rg(t,{x:-n.x(),y:-n.y()},{x:e.x-n.x(),y:e.y-n.y()})}(vx(this,Ix).getLayerGroupByDivId(n.groupDivId).getActiveDrawLayer().getBaseSize(),t),vx(this,bx).update(t,vx(this,Ix).getStyle(),vx(this,Ax)),t.getLayer()?t.getLayer().draw():Y.warn("No layer to draw the anchor!"),e.cancelBubble=!0})),e.on("dragend.edit",(e=>{const i=e.target,r=Dx(this,Ux,zx).call(this,i),a=new Za(n,vx(this,bx),t,r,i.getLayer(),vx(this,Ax),vx(this,Ix).getStyle());a.onExecute=vx(this,Fx),a.onUndo=vx(this,Fx),a.execute(),vx(this,Ix).addToUndoStack(a),t=r,e.cancelBubble=!0})),e.on("mousedown touchstart",(e=>{e.target.moveToTop()})),e.on("mouseover.edit",(e=>{const t=e.target;t.stroke("#ddd"),t.getLayer()?t.getLayer().draw():Y.warn("No layer to draw the anchor!")})),e.on("mouseout.edit",(e=>{const t=e.target;t.stroke("#999"),t.getLayer()?t.getLayer().draw():Y.warn("No layer to draw the anchor!")}))}function jx(e){e.off("dragstart.edit"),e.off("dragmove.edit"),e.off("dragend.edit"),e.off("mousedown touchstart"),e.off("mouseover.edit"),e.off("mouseout.edit")}function Xx(e,t){Kx(e,t),t.add(e)}function Yx(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _x(e,t,n){Kx(e,t),t.set(e,n)}function Kx(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Zx(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function Jx(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,eg(e,t,"get"))}function $x(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,eg(e,t,"set"),n),n}function eg(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var tg=new WeakMap,ng=new WeakMap,ig=new WeakMap,rg=new WeakMap,ag=new WeakMap,og=new WeakMap,sg=new WeakMap,lg=new WeakMap,cg=new WeakMap,ug=new WeakMap,hg=new WeakMap,dg=new WeakMap,Sg=new WeakMap,xg=new WeakMap,gg=new WeakMap,pg=new WeakMap,mg=new WeakMap,fg=new WeakSet,yg=new WeakSet,Dg=new WeakSet,vg=new WeakSet,wg=new WeakSet,Cg=new WeakSet,Tg=new WeakSet,Ig=new WeakMap;function Lg(e,t){const n=t.getActiveDrawLayer().getKonvaLayer();Jx(this,ug)&&(Jx(this,ug).destroy(),$x(this,ug,null));const i=t.getActiveViewLayer().getViewController();$x(this,ug,Jx(this,lg).create(e,Jx(this,ag),i)),Jx(this,ug).getChildren(so)[0].listening(!1),n.listening(!1),n.add(Jx(this,ug)),n.draw()}function bg(e,t){const n=t.getActiveDrawLayer().getKonvaLayer();Jx(this,ug)&&(Jx(this,ug).destroy(),$x(this,ug,null));const i=t.getActiveViewLayer().getViewController(),r=t.getActiveDrawLayer().getDrawController(),a=Jx(this,lg).create(e,Jx(this,ag),i);a.id(px()),r.getCurrentPosGroup().add(a),n.listening(!0),$x(this,cg,new ka(a,Jx(this,hg),n)),Jx(this,cg).onExecute=Jx(this,Ig),Jx(this,cg).onUndo=Jx(this,Ig),Jx(this,cg).execute(),Jx(this,tg).addToUndoStack(Jx(this,cg)),this.setShapeOn(a,t)}function Pg(e){Zx(this,vg,Ag).call(this,!0,e)}function Ag(e,t){const n=t.getActiveDrawLayer().getDrawController().getCurrentPosGroup().getChildren();e?n.forEach((e=>{this.setShapeOn(e,t)})):n.forEach((e=>{Zx(this,wg,Og).call(this,e)}));const i=t.getActiveDrawLayer().getKonvaLayer();0!==n.length&&i.listening(!0),i.draw()}function Og(e){e.off("mouseover"),e.off("mouseout"),e.draggable(!1),e.off("dragstart.draw"),e.off("dragmove.draw"),e.off("dragend.draw"),e.off("dblclick")}function Fg(e,t){const n=t.getActiveDrawLayer().getKonvaStage();return{x:n.offset().x+e.x/n.scale().x,y:n.offset().y+e.y/n.scale().y}}function Eg(){if(void 0!==Jx(this,gg)&&(document.body.style.cursor=Jx(this,gg)),void 0!==Jx(this,xg)){Jx(this,xg).opacity(1);const e=Jx(this,ag).getLineColour();Jx(this,xg).getChildren(So).forEach((function(t){t.stroke(e)}))}}function Rg(e,t,n){let i=!1;return e.x()<t.x?(e.x(t.x),i=!0):e.x()>n.x&&(e.x(n.x),i=!0),e.y()<t.y?(e.y(t.y),i=!0):e.y()>n.y&&(e.y(n.y),i=!0),i}function Mg(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,qg(e,t,"get"))}function qg(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Ug=new WeakMap;class Qg{constructor(){var e,t,n;n={writable:!0,value:[]},function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e=this,t=Ug),t.set(e,n)}getPoint(e){return Mg(this,Ug)[e]}getLength(){return Mg(this,Ug).length}addPoint(e){Mg(this,Ug).push(e)}addPoints(e){var t,n,i;t=this,n=Ug,i=Mg(this,Ug).concat(e),function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(t,qg(t,n,"set"),i)}}class kg{getGroupName(){return"roi-group"}getNPoints(){}getTimeout(){return 100}isFactoryGroup(e){return this.getGroupName()===e.name()}create(e,t,n){const i=new Qg;i.addPoints(e);const r=[];for(let e=0;e<i.getLength();++e)r.push(i.getPoint(e).getX()),r.push(i.getPoint(e).getY());const a=new(ba().Line)({points:r,stroke:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape",closed:!0}),o=new(ba().Text)({fontSize:t.getFontSize(),fontFamily:t.getFontFamily(),fill:t.getLineColour(),name:"text"});let s="";s="",o.setText(""),o.meta={textExpr:"",quantification:{}};const l=new(ba().Label)({x:i.getPoint(0).getX(),y:i.getPoint(0).getY()+t.scale(10),scale:t.applyZoomScale(1),visible:0!=="".length,name:"label"});l.add(o),l.add(new(ba().Tag)({fill:t.getLineColour(),opacity:t.getTagOpacity()}));const c=new(ba().Group);return c.name(this.getGroupName()),c.add(l),c.add(a),c.visible(!0),c}getAnchors(e,t){const n=e.points(),i=[];for(let r=0;r<n.length;r+=2){const a=n[r]+e.x(),o=n[r+1]+e.y(),s=r;i.push(Tx(a,o,s,t))}return i}update(e,t,n){const i=e.getParent(),r=i.getChildren((function(e){return"shape"===e.name()}))[0],a=i.getChildren((function(e){return"label"===e.name()}))[0],o=i.getChildren((function(t){return t.id()===e.id()}))[0];o.x(e.x()),o.y(e.y());const s=r.points();s[e.id()]=e.x()-r.x(),s[e.id()+1]=e.y()-r.y(),r.points(s);const l=a.getText();l.setText(l.meta.textExpr);const c={x:s[0]+r.x(),y:s[1]+r.y()+t.scale(10)};a.position(c)}}var Bg=a(680),Ng=a.n(Bg);function Wg(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Vg(e,t){zg(e,t),t.add(e)}function Gg(e,t,n){zg(e,t),t.set(e,n)}function zg(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Hg(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function jg(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Yg(e,t,"get"))}function Xg(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Yg(e,t,"set"),n),n}function Yg(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var _g=new WeakMap,Kg=new WeakMap,Zg=new WeakMap,Jg=new WeakMap,$g=new WeakMap,ep=new WeakMap,tp=new WeakMap,np=new WeakMap,ip=new WeakMap,rp=new WeakMap,ap=new WeakMap,op=new WeakMap,sp=new WeakMap,lp=new WeakMap,cp=new WeakMap,up=new WeakMap,hp=new WeakMap,dp=new WeakMap,Sp=new WeakMap,xp=new WeakSet,gp=new WeakSet,pp=new WeakMap;function mp(e,t,n){Xg(this,lp,[]);const i={data:jg(this,$g).data,width:jg(this,$g).width,height:jg(this,$g).height,bytes:4};Xg(this,ep,Ng().floodFill(i,e.x,e.y,t)),Xg(this,ep,Ng().gaussBlurOnlyBorder(jg(this,ep),jg(this,Kg)));let r=Ng().traceContours(jg(this,ep));if(r=Ng().simplifyContours(r,jg(this,Zg),jg(this,Jg)),r.length>0&&r[0].points[0].x){if(n)return r[0].points;for(let e=0,t=r[0].points.length;e<t;e++)jg(this,lp).push(new hn(r[0].points[e].x,r[0].points[e].y));return jg(this,lp)}return!1}function fp(e,t,n){if(Xg(this,sp,Hg(this,xp,mp).call(this,e,t)),jg(this,sp)){const e=new kg;Xg(this,ap,e.create(jg(this,sp),jg(this,hp))),jg(this,ap).id(px());const t=n.getActiveDrawLayer();return t.getDrawController().getCurrentPosGroup().add(jg(this,ap)),Xg(this,rp,new ka(jg(this,ap),"floodfill",t.getKonvaLayer())),jg(this,rp).onExecute=jg(this,pp),jg(this,rp).onUndo=jg(this,pp),jg(this,rp).execute(),jg(this,_g).addToUndoStack(jg(this,rp)),!0}return!1}class yp{constructor(e,t){this.pointArray=e?e.slice():[],this.controlPointIndexArray=t?t.slice():[]}getPoint(e){return this.pointArray[e]}isControlPoint(e){const t=this.pointArray.indexOf(e);if(-1!==t)return-1!==this.controlPointIndexArray.indexOf(t);throw new Error("Error: isControlPoint called with not in list point.")}getLength(){return this.pointArray.length}addPoint(e){this.pointArray.push(e)}addControlPoint(e){const t=this.pointArray.indexOf(e);if(-1===t)throw new Error("Cannot mark a non registered point as control point.");this.controlPointIndexArray.push(t)}addPoints(e){this.pointArray=this.pointArray.concat(e)}appenPath(e){const t=this.pointArray.length;this.pointArray=this.pointArray.concat(e.pointArray);const n=[];for(let i=0;i<e.controlPointIndexArray.length;++i)n[i]=e.controlPointIndexArray[i]+t;this.controlPointIndexArray=this.controlPointIndexArray.concat(n)}}class Dp{constructor(e,t){this.bucketCount=1<<e,this.mask=this.bucketCount-1,this.size=0,this.loc=0,this.cost=void 0!==t?t:function(e){return e},this.buckets=this.buildArray(this.bucketCount)}push(e){const t=this.getBucket(e);e.next=this.buckets[t],this.buckets[t]=e,this.size++}pop(){if(0===this.size)throw new Error("Cannot pop, bucketQueue is empty.");for(;null===this.buckets[this.loc];)this.loc=(this.loc+1)%this.bucketCount;const e=this.buckets[this.loc];return this.buckets[this.loc]=e.next,e.next=null,this.size--,e}remove(e){if(!e)return!1;const t=this.getBucket(e);let n=this.buckets[t];for(;null!==n&&(null===n.next||e.x!==n.next.x||e.y!==n.next.y);)n=n.next;return null!==n&&(n.next=n.next.next,this.size--,!0)}isEmpty(){return 0===this.size}getBucket(e){return this.cost(e)&this.mask}buildArray(e){const t=new Array(e);for(let e=0;e<t.length;e++)t[e]=null;return t}}const vp=2/(3*Math.PI);function wp(e,t,n,i,r){const a=e[i][n],o=t[i][n];let s=Math.sqrt(a*a+o*o);s=Math.max(s,1e-100),r.x=a/s,r.y=o/s}class Cp{constructor(){this.width=-1,this.height=-1,this.curPoint=null,this.searchGranBits=8,this.searchGran=1<<this.earchGranBits,this.pointsPerPost=500,this.greyscale=null,this.laplace=null,this.gradient=null,this.gradX=null,this.gradY=null,this.parents=null,this.working=!1,this.trained=!1,this.trainingPoints=null,this.edgeWidth=2,this.trainingLength=32,this.edgeGran=256,this.edgeTraining=null,this.gradPointsNeeded=32,this.gradGran=1024,this.gradTraining=null,this.insideGran=256,this.insideTraining=null,this.outsideGran=256,this.outsideTraining=null}getTrainingIdx(e,t){return Math.round((e-1)*t)}getTrainedEdge(e){return this.edgeTraining[this.getTrainingIdx(this.edgeGran,e)]}getTrainedGrad(e){return this.gradTraining[this.getTrainingIdx(this.gradGran,e)]}getTrainedInside(e){return this.insideTraining[this.getTrainingIdx(this.insideGran,e)]}getTrainedOutside(e){return this.outsideTraining[this.getTrainingIdx(this.outsideGran,e)]}setWorking(e){this.working=e}setDimensions(e,t){this.width=e,this.height=t}setData(e){if(-1===this.width||-1===this.height)throw new Error("Dimensions have not been set.");this.greyscale=function(e,t,n){const i=[];for(let r=0;r<n;r++){i[r]=[];for(let n=0;n<t;n++){const a=4*(r*t+n);i[r][n]=(e[a]+e[a+1]+e[a+2])/765}}return i.dx=function(e,t){return e+1===this[t].length&&e--,this[t][e+1]-this[t][e]},i.dy=function(e,t){return t+1===this.length&&t--,this[t][e]-this[t+1][e]},i.gradMagnitude=function(e,t){const n=this.dx(e,t),i=this.dy(e,t);return Math.sqrt(n*n+i*i)},i.laplace=function(e,t){let n=-16*this[t][e];return n+=this[t-2][e],n+=this[t-1][e-1]+2*this[t-1][e]+this[t-1][e+1],n+=this[t][e-2]+2*this[t][e-1]+2*this[t][e+1]+this[t][e+2],n+=this[t+1][e-1]+2*this[t+1][e]+this[t+1][e+1],n+=this[t+2][e],n},i}(e,this.width,this.height),this.laplace=function(e){const t=[];t[0]=[],t[1]=[];for(let n=1;n<e.length;n++)t[0][n]=1,t[1][n]=1;for(let n=2;n<e.length-2;n++){t[n]=[],t[n][0]=1,t[n][1]=1;for(let i=2;i<e[n].length-2;i++)t[n][i]=e.laplace(i,n)>.33?0:1;t[n][e[n].length-2]=1,t[n][e[n].length-1]=1}t[e.length-2]=[],t[e.length-1]=[];for(let n=1;n<e.length;n++)t[e.length-2][n]=1,t[e.length-1][n]=1;return t}(this.greyscale),this.gradient=function(e){const t=[];let n=0,i=0,r=0;for(r=0;r<e.length-1;r++){for(t[r]=[],i=0;i<e[r].length-1;i++)t[r][i]=e.gradMagnitude(i,r),n=Math.max(t[r][i],n);t[r][e[r].length-1]=t[r][e.length-2]}t[e.length-1]=[];for(let n=0;n<t[0].length;n++)t[e.length-1][n]=t[e.length-2][n];for(r=0;r<t.length;r++)for(i=0;i<t[r].length;i++)t[r][i]=1-t[r][i]/n;return t}(this.greyscale),this.gradX=function(e){const t=[];for(let n=0;n<e.length;n++){t[n]=[];for(let i=0;i<e[n].length-1;i++)t[n][i]=e.dx(i,n);t[n][e[n].length-1]=t[n][e[n].length-2]}return t}(this.greyscale),this.gradY=function(e){const t=[];for(let n=0;n<e.length-1;n++){t[n]=[];for(let i=0;i<e[n].length;i++)t[n][i]=e.dy(i,n)}t[e.length-1]=[];for(let n=0;n<e[0].length;n++)t[e.length-1][n]=t[e.length-2][n];return t}(this.greyscale);const t=function(e,t,n,i){const r={inside:[],outside:[]},a={x:-1,y:-1};for(let o=0;o<t.length;o++){r.inside[o]=[],r.outside[o]=[];for(let s=0;s<t[o].length;s++){wp(t,n,s,o,a);let l=Math.round(s+e*a.y),c=Math.round(o-e*a.x),u=Math.round(s-e*a.y),h=Math.round(o+e*a.x);l=Math.max(Math.min(l,t[o].length-1),0),u=Math.max(Math.min(u,t[o].length-1),0),c=Math.max(Math.min(c,t.length-1),0),h=Math.max(Math.min(h,t.length-1),0),r.inside[o][s]=i[c][l],r.outside[o][s]=i[h][u]}}return r}(this.edgeWidth,this.gradX,this.gradY,this.greyscale);this.inside=t.inside,this.outside=t.outside,this.edgeTraining=[],this.gradTraining=[],this.insideTraining=[],this.outsideTraining=[]}findTrainingPoints(e){const t=[];if(null!==this.parents)for(let n=0;n<this.trainingLength&&e;n++)t.push(e),e=this.parents[e.y][e.x];return t}resetTraining(){this.trained=!1}doTraining(e){if(this.trainingPoints=this.findTrainingPoints(e),this.trainingPoints.length<8)return;const t=[];this.calculateTraining(t,this.edgeGran,this.greyscale,this.edgeTraining),this.calculateTraining(t,this.gradGran,this.gradient,this.gradTraining),this.calculateTraining(t,this.insideGran,this.inside,this.insideTraining),this.calculateTraining(t,this.outsideGran,this.outside,this.outsideTraining),this.trainingPoints.length<this.gradPointsNeeded&&this.addInStaticGrad(this.trainingPoints.length,this.gradPointsNeeded),this.trained=!0}calculateTraining(e,t,n,i){let r=0;for(e.length=t,r=0;r<t;r++)e[r]=0;let a=1;for(r=0;r<this.trainingPoints.length;r++){const i=this.trainingPoints[r],o=this.getTrainingIdx(t,n[i.y][i.x]);e[o]+=1,a=Math.max(a,e[o])}for(r=0;r<t;r++)e[r]=1-e[r]/a;!function(e,t){t[0]=.4*e[0]+.5*e[1]+.1*e[1],t[1]=.25*e[0]+.4*e[1]+.25*e[2]+.1*e[3];for(let n=2;n<e.length-2;n++)t[n]=.05*e[n-2]+.25*e[n-1]+.4*e[n]+.25*e[n+1]+.05*e[n+2];const n=e.length;t[n-2]=.25*e[n-1]+.4*e[n-2]+.25*e[n-3]+.1*e[n-4],t[n-1]=.4*e[n-1]+.5*e[n-2]+.1*e[n-3]}(e,i)}addInStaticGrad(e,t){for(let n=0;n<this.gradGran;n++)this.gradTraining[n]=Math.min(this.gradTraining[n],1-n*(t-e)/(t*this.gradGran))}gradDirection(e,t,n,i){return function(e,t,n,i,r,a){const o={x:-1,y:-1},s={x:-1,y:-1};wp(e,t,n,i,o),wp(e,t,r,a,s);let l=o.y*(r-n)-o.x*(a-i),c=s.y*(r-n)-s.x*(a-i);return l<0&&(l=-l,c=-c),n!==r&&i!==a&&(l*=Math.SQRT1_2,c*=Math.SQRT1_2),vp*(Math.acos(l)+Math.acos(c))}(this.gradX,this.gradY,e,t,n,i)}dist(e,t,n,i){let r=this.gradient[i][n];e!==n&&t!==i||(r*=Math.SQRT1_2);const a=this.laplace[i][n],o=this.gradDirection(e,t,n,i);return this.trained?.3*this.getTrainedGrad(r)+.3*a+.1*(o+this.getTrainedEdge(this.greyscale[t][e])+this.getTrainedInside(this.inside[t][e])+this.getTrainedOutside(this.outside[t][e])):.43*r+.43*a+.11*o}adj(e){const t=[],n=Math.max(e.x-1,0),i=Math.max(e.y-1,0),r=Math.min(e.x+1,this.greyscale[0].length-1),a=Math.min(e.y+1,this.greyscale.length-1);let o=0;for(let s=i;s<=a;s++)for(let i=n;i<=r;i++)i===e.x&&s===e.y||(t[o++]={x:i,y:s});return t}setPoint(e){this.setWorking(!0),this.curPoint=e;let t=0,n=0;for(this.visited=[],n=0;n<this.height;n++)for(this.visited[n]=[],t=0;t<this.width;t++)this.visited[n][t]=!1;for(this.parents=[],n=0;n<this.height;n++)this.parents[n]=[];for(this.cost=[],n=0;n<this.height;n++)for(this.cost[n]=[],t=0;t<this.width;t++)this.cost[n][t]=Number.MAX_VALUE;this.pq=new Dp(this.searchGranBits,(function(e){return Math.round(this.searchGran*this.costArr[e.y][e.x])})),this.pq.searchGran=this.searchGran,this.pq.costArr=this.cost,this.pq.push(e),this.cost[e.y][e.x]=0}doWork(){if(!this.working)return;this.timeout=null;let e=0;const t=[];for(;!this.pq.isEmpty()&&e<this.pointsPerPost;){const n=this.pq.pop();t.push(n),t.push(this.parents[n.y][n.x]),this.visited[n.y][n.x]=!0;const i=this.adj(n);for(let e=0;e<i.length;e++){const t=i[e],r=this.cost[n.y][n.x]+this.dist(n.x,n.y,t.x,t.y);r<this.cost[t.y][t.x]&&(this.cost[t.y][t.x]!==Number.MAX_VALUE&&this.pq.remove(t),this.cost[t.y][t.x]=r,this.parents[t.y][t.x]=n,this.pq.push(t))}e++}return t}}function Tp(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ip(e,t){bp(e,t),t.add(e)}function Lp(e,t,n){bp(e,t),t.set(e,n)}function bp(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Pp(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function Ap(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Fp(e,t,"get"))}function Op(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Fp(e,t,"set"),n),n}function Fp(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Ep=new WeakMap,Rp=new WeakMap,Mp=new WeakMap,qp=new WeakMap,Up=new WeakMap,Qp=new WeakMap,kp=new WeakMap,Bp=new WeakMap,Np=new WeakMap,Wp=new WeakMap,Vp=new WeakSet,Gp=new WeakSet,zp=new WeakMap,Hp=new WeakSet,jp=new WeakMap;function Xp(e){const t=e.get(1);for(let e=0;e<t;++e)Ap(this,Bp)[e]=[]}function Yp(){Op(this,Qp,new yp),Op(this,kp,new yp)}function _p(){Ap(this,jp).call(this,{type:"drawcreate",id:Ap(this,qp).id()}),Ap(this,Mp).onExecute=Ap(this,jp),Ap(this,Mp).onUndo=Ap(this,jp),Ap(this,Ep).addToUndoStack(Ap(this,Mp)),Op(this,Rp,!1)}function Kp(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function Zp(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,$p(e,t,"get"))}function Jp(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,$p(e,t,"set"),n),n}function $p(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var em=new WeakMap,tm=new WeakMap;class nm{constructor(e,t){Kp(this,em,{writable:!0,value:void 0}),Kp(this,tm,{writable:!0,value:void 0}),Jp(this,em,e),Jp(this,tm,t)}getCenter(){return Zp(this,em)}getRadius(){return Zp(this,tm)}equals(e){return null!==e&&this.getCenter().equals(e.getCenter())&&this.getRadius()===e.getRadius()}getSurface(){return Math.PI*this.getRadius()*this.getRadius()}getWorldSurface(e,t){return function(e,t,n){let i=null;return null!==t&&null!==n&&(i=e*t*n),i}(this.getSurface(),e,t)}getRound(){const e=this.getCenter().getX(),t=this.getCenter().getY(),n=this.getRadius(),i=Math.pow(n,2),r=t+n,a=[];for(let o=t-n;o<r;++o){const n=i-Math.pow(o-t,2);if(Math.abs(n)<1e-7)continue;const r=Math.sqrt(n);r<.5||a.push([[Math.round(e-r),Math.round(o)],[Math.round(e+r),Math.round(o)]])}return a}quantify(e,t){const n={},i=e.get2DSpacing(),r=this.getWorldSurface(i[0],i[1]);if(null!==r&&(n.surface={value:r/100,unit:VS("unit.cm2")}),e.canQuantifyImage()){const i=this.getRound();if(0!==i.length){const r=Sx(e.getImageVariableRegionValues(i),t);n.min={value:r.min,unit:""},n.max={value:r.max,unit:""},n.mean={value:r.mean,unit:""},n.stdDev={value:r.stdDev,unit:""},void 0!==r.median&&(n.median={value:r.median,unit:""}),void 0!==r.p25&&(n.p25={value:r.p25,unit:""}),void 0!==r.p75&&(n.p75={value:r.p75,unit:""})}}return n}}function im(e,t){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.add(e)}function rm(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}var am=new WeakSet,om=new WeakSet;function sm(e,t){const n=e.getChildren((function(e){return"shape"===e.name()}))[0],i=e.getChildren((function(e){return"label"===e.name()}))[0],r=new hn(e.x()+n.x(),e.y()+n.y()),a=new nm(r,n.radius()),o=i.getText(),s=a.quantify(t,va(o.meta.textExpr));o.setText(wa(o.meta.textExpr,s)),o.meta.quantification=s}function lm(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function cm(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,hm(e,t,"get"))}function um(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,hm(e,t,"set"),n),n}function hm(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var dm=new WeakMap,Sm=new WeakMap,xm=new WeakMap;class gm{constructor(e,t,n){lm(this,dm,{writable:!0,value:void 0}),lm(this,Sm,{writable:!0,value:void 0}),lm(this,xm,{writable:!0,value:void 0}),um(this,dm,e),um(this,Sm,t),um(this,xm,n)}getCenter(){return cm(this,dm)}getA(){return cm(this,Sm)}getB(){return cm(this,xm)}equals(e){return null!==e&&this.getCenter().equals(e.getCenter())&&this.getA()===e.getA()&&this.getB()===e.getB()}getSurface(){return Math.PI*this.getA()*this.getB()}getWorldSurface(e,t){return function(e,t,n){let i=null;return null!==t&&null!==n&&(i=e*t*n),i}(this.getSurface(),e,t)}getRound(){const e=this.getCenter().getX(),t=this.getCenter().getY(),n=this.getA(),i=this.getB(),r=n/i,a=Math.pow(i,2),o=t+i,s=[];for(let n=t-i;n<o;++n){const i=a-Math.pow(n-t,2);if(Math.abs(i)<1e-7)continue;const o=r*Math.sqrt(i);o<.5||s.push([[Math.round(e-o),Math.round(n)],[Math.round(e+o),Math.round(n)]])}return s}quantify(e,t){const n={},i=e.get2DSpacing(),r=this.getWorldSurface(i[0],i[1]);if(null!==r&&(n.surface={value:r/100,unit:VS("unit.cm2")}),e.canQuantifyImage()){const i=this.getRound();if(0!==i.length){const r=Sx(e.getImageVariableRegionValues(i),t);n.min={value:r.min,unit:""},n.max={value:r.max,unit:""},n.mean={value:r.mean,unit:""},n.stdDev={value:r.stdDev,unit:""},void 0!==r.median&&(n.median={value:r.median,unit:""}),void 0!==r.p25&&(n.p25={value:r.p25,unit:""}),void 0!==r.p75&&(n.p75={value:r.p75,unit:""})}}return n}}function pm(e,t){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.add(e)}function mm(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}var fm=new WeakSet,ym=new WeakSet;function Dm(e,t){const n=e.getChildren((function(e){return"shape"===e.name()}))[0],i=e.getChildren((function(e){return"label"===e.name()}))[0],r=new hn(e.x()+n.x(),e.y()+n.y()),a=new gm(r,n.radius().x,n.radius().y),o=i.getText(),s=a.quantify(t,va(o.meta.textExpr));o.setText(wa(o.meta.textExpr,s)),o.meta.quantification=s}function vm(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function wm(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Tm(e,t,"get"))}function Cm(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Tm(e,t,"set"),n),n}function Tm(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Im=new WeakMap,Lm=new WeakMap;class bm{constructor(e,t){vm(this,Im,{writable:!0,value:void 0}),vm(this,Lm,{writable:!0,value:void 0}),Cm(this,Im,new hn(Math.min(e.getX(),t.getX()),Math.min(e.getY(),t.getY()))),Cm(this,Lm,new hn(Math.max(e.getX(),t.getX()),Math.max(e.getY(),t.getY())))}getBegin(){return wm(this,Im)}getEnd(){return wm(this,Lm)}equals(e){return null!==e&&this.getBegin().equals(e.getBegin())&&this.getEnd().equals(e.getEnd())}getSurface(){const e=this.getBegin(),t=this.getEnd();return Math.abs(t.getX()-e.getX())*Math.abs(t.getY()-e.getY())}getWorldSurface(e,t){return function(e,t,n){let i=null;return null!==t&&null!==n&&(i=e*t*n),i}(this.getSurface(),e,t)}getRealWidth(){return this.getEnd().getX()-this.getBegin().getX()}getRealHeight(){return this.getEnd().getY()-this.getBegin().getY()}getWidth(){return Math.abs(this.getRealWidth())}getHeight(){return Math.abs(this.getRealHeight())}getRound(){return{min:this.getBegin().getRound(),max:this.getEnd().getRound()}}quantify(e,t){const n={},i=e.get2DSpacing(),r=this.getWorldSurface(i[0],i[1]);if(null!==r&&(n.surface={value:r/100,unit:VS("unit.cm2")}),e.canQuantifyImage()){const i=this.getRound(),r=Sx(e.getImageRegionValues(i.min,i.max),t);n.min={value:r.min,unit:""},n.max={value:r.max,unit:""},n.mean={value:r.mean,unit:""},n.stdDev={value:r.stdDev,unit:""},void 0!==r.median&&(n.median={value:r.median,unit:""}),void 0!==r.p25&&(n.p25={value:r.p25,unit:""}),void 0!==r.p75&&(n.p75={value:r.p75,unit:""})}return n}}function Pm(e,t){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.add(e)}function Am(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}var Om=new WeakSet,Fm=new WeakSet;function Em(e,t){const n=e.getChildren((function(e){return"shape"===e.name()}))[0],i=e.getChildren((function(e){return"label"===e.name()}))[0],r=new hn(e.x()+n.x(),e.y()+n.y()),a=new hn(r.getX()+n.width(),r.getY()+n.height()),o=new bm(r,a),s=i.getText(),l=o.quantify(t,va(s.meta.textExpr));s.setText(wa(s.meta.textExpr,l)),s.meta.quantification=l}function Rm(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function Mm(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Um(e,t,"set"),n),n}function qm(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Um(e,t,"get"))}function Um(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var Qm=new WeakMap,km=new WeakMap,Bm=new WeakMap;class Nm{constructor(){Rm(this,Qm,{writable:!0,value:0}),Rm(this,km,{writable:!0,value:0}),Rm(this,Bm,{writable:!0,value:null})}getMin(){return qm(this,Qm)}setMin(e){Mm(this,Qm,e)}getMax(){return qm(this,km)}setMax(e){Mm(this,km,e)}getName(){return"Threshold"}setOriginalImage(e){Mm(this,Bm,e)}getOriginalImage(){return qm(this,Bm)}update(){const e=this.getOriginalImage(),t=e.getDataRange().min;return e.transform((e=>e<this.getMin()||e>this.getMax()?t:e))}}var Wm=new WeakMap;class Vm{constructor(){Rm(this,Wm,{writable:!0,value:null})}getName(){return"Sharpen"}setOriginalImage(e){Mm(this,Wm,e)}getOriginalImage(){return qm(this,Wm)}update(){return this.getOriginalImage().convolute2D([0,-1,0,-1,5,-1,0,-1,0])}}var Gm=new WeakMap;class zm{constructor(){Rm(this,Gm,{writable:!0,value:null})}getName(){return"Sobel"}setOriginalImage(e){Mm(this,Gm,e)}getOriginalImage(){return qm(this,Gm)}update(){const e=this.getOriginalImage(),t=e.convolute2D([1,0,-1,2,0,-2,1,0,-1]),n=e.convolute2D([1,2,1,0,0,0,-1,-2,-1]);return t.compose(n,(function(e,t){return Math.sqrt(e*e+t*t)}))}}function Hm(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function jm(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,Ym(e,t,"get"))}function Xm(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,Ym(e,t,"set"),n),n}function Ym(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var _m=new WeakMap,Km=new WeakMap,Zm=new WeakMap,Jm=new WeakMap,$m=new WeakMap,ef=new WeakMap,tf=new WeakMap,nf=new WeakMap,rf=new WeakMap,af=new WeakMap,of=new WeakMap,sf=new WeakMap;class lf{constructor(e,t){Hm(this,of,{writable:!0,value:void 0}),Hm(this,sf,{writable:!0,value:void 0}),Xm(this,of,e),Xm(this,sf,t)}getName(){return"Filter-"+jm(this,of).getName()}execute(){jm(this,sf).setLastImage(jm(this,of).update()),jm(this,sf).render(0);const e={type:"filterrun",id:this.getName()};this.onExecute(e)}undo(){jm(this,sf).setLastImage(jm(this,of).getOriginalImage()),jm(this,sf).render(0);const e={type:"filterundo",id:this.getName()};this.onUndo(e)}onExecute(e){}onUndo(e){}}const cf={WindowLevel:class{constructor(e){fS(this,wS,{writable:!0,value:void 0}),fS(this,CS,{writable:!0,value:!1}),fS(this,TS,{writable:!0,value:void 0}),mS(this,"mousedown",(e=>{DS(this,CS,!0),this.x0=e._x,this.y0=e._y})),mS(this,"mousemove",(e=>{if(!yS(this,CS))return;const t=jo(e),n=yS(this,wS).getLayerGroupByDivId(t.groupDivId).getActiveViewLayer().getViewController(),i=e._x-this.x0,r=this.y0-e._y,a=n.getImageRescaledDataRange(),o=.01*(a.max-a.min),s=parseInt(n.getWindowLevel().center,10),l=parseInt(n.getWindowLevel().width,10),c=s+Math.round(r*o);let u=l+Math.round(i*o);var h;u=(h=u)<1?1:h,n.addWindowLevelPresets({manual:{wl:[new Rt(c,u)],name:"manual"}}),n.setWindowLevelPreset("manual"),this.x0=e._x,this.y0=e._y})),mS(this,"mouseup",(e=>{yS(this,CS)&&DS(this,CS,!1)})),mS(this,"mouseout",(e=>{this.mouseup(e)})),mS(this,"touchstart",(e=>{this.mousedown(e)})),mS(this,"touchmove",(e=>{this.mousemove(e)})),mS(this,"touchend",(e=>{this.mouseup(e)})),mS(this,"dblclick",(e=>{const t=jo(e),n=yS(this,wS).getLayerGroupByDivId(t.groupDivId).getActiveViewLayer(),i=n.displayToPlaneIndex(e._x,e._y),r=n.getViewController(),a=yS(this,wS).getImage(n.getDataIndex());r.setWindowLevel(parseInt(a.getRescaledValueAtIndex(r.getCurrentIndex().getWithNew2D(i.get(0),i.get(1))),10),parseInt(r.getWindowLevel().width,10))})),mS(this,"wheel",(e=>{yS(this,TS).wheel(e)})),mS(this,"keydown",(e=>{e.context="WindowLevel",yS(this,wS).onKeydown(e)})),DS(this,wS,e),DS(this,TS,new pS(e))}activate(e){}init(){}},Scroll:class{constructor(e){IS(this,BS),IS(this,kS),bS(this,RS,{writable:!0,value:void 0}),bS(this,MS,{writable:!0,value:!1}),bS(this,qS,{writable:!0,value:void 0}),bS(this,US,{writable:!0,value:null}),bS(this,QS,{writable:!0,value:!1}),LS(this,"mousedown",(e=>{OS(this,BS,WS).call(this);const t=jo(e),n=AS(this,RS).getLayerGroupByDivId(t.groupDivId).getActiveViewLayer(),i=n.getViewController();i.isPlaying()&&i.stop(),FS(this,MS,!0),this.x0=e._x,this.y0=e._y;const r=n.displayToPlanePos(e._x,e._y),a=i.getPositionFromPlanePoint(r.x,r.y);i.setCurrentPosition(a)})),LS(this,"mousemove",(e=>{if(!AS(this,MS))return void(AS(this,QS)&&OS(this,kS,NS).call(this,e));const t=jo(e),n=AS(this,RS).getLayerGroupByDivId(t.groupDivId).getActiveViewLayer().getViewController(),i=e._y-this.y0,r=Math.abs(i)>15;r&&n.canScroll()&&(i>0?n.decrementScrollIndex():n.incrementScrollIndex());const a=e._x-this.x0,o=Math.abs(a)>15,s=n.getImageSize();o&&s.moreThanOne(3)&&(a>0?n.incrementIndex(3):n.decrementIndex(3)),o&&(this.x0=e._x),r&&(this.y0=e._y)})),LS(this,"mouseup",(e=>{AS(this,MS)&&FS(this,MS,!1)})),LS(this,"mouseout",(e=>{this.mouseup(e),OS(this,BS,WS).call(this)})),LS(this,"touchstart",(e=>{FS(this,US,setTimeout(this.dblclick,500)),this.mousedown(e)})),LS(this,"touchmove",(e=>{null!==AS(this,US)&&(clearTimeout(AS(this,US)),FS(this,US,null)),this.mousemove(e)})),LS(this,"touchend",(e=>{null!==AS(this,US)&&(clearTimeout(AS(this,US)),FS(this,US,null)),this.mouseup(e)})),LS(this,"wheel",(e=>{AS(this,qS).wheel(e)})),LS(this,"keydown",(e=>{e.context="Scroll",AS(this,RS).onKeydown(e)})),LS(this,"dblclick",(e=>{const t=jo(e);AS(this,RS).getLayerGroupByDivId(t.groupDivId).getActiveViewLayer().getViewController().play()})),FS(this,RS,e),FS(this,qS,new pS(e))}activate(e){e||OS(this,BS,WS).call(this)}setFeatures(e){void 0!==e.displayTooltip&&FS(this,QS,e.displayTooltip)}init(){}},ZoomAndPan:class{constructor(e){$S(this,ix,{writable:!0,value:void 0}),$S(this,rx,{writable:!0,value:!1}),JS(this,"mousedown",(e=>{tx(this,rx,!0),this.x0=e._x,this.y0=e._y})),JS(this,"twotouchdown",(e=>{tx(this,rx,!0),this.x0=e._x,this.y0=e._y;const t=new hn(e._x,e._y),n=new hn(e._x1,e._y1);this.line0=new _S(t,n),this.midPoint=this.line0.getMidpoint()})),JS(this,"mousemove",(e=>{if(!ex(this,rx))return;const t=e._x-this.x0,n=e._y-this.y0,i=jo(e),r=ex(this,ix).getLayerGroupByDivId(i.groupDivId),a=r.getActiveViewLayer(),o=a.getViewController(),s=a.displayToPlaneScale(t,n),l=o.getOffset3DFromPlaneOffset(s);r.addTranslation({x:l.getX(),y:l.getY(),z:l.getZ()}),r.draw(),this.x0=e._x,this.y0=e._y})),JS(this,"twotouchmove",(e=>{if(!ex(this,rx))return;const t=new hn(e._x,e._y),n=new hn(e._x1,e._y1),i=new _S(t,n).getLength()/this.line0.getLength(),r=jo(e),a=ex(this,ix).getLayerGroupByDivId(r.groupDivId),o=a.getActiveViewLayer(),s=o.getViewController();if(1===i){const t=e._y-this.y0;if(Math.abs(t)<15)return;s.getImageSize().canScroll(2)&&(t>0?s.incrementIndex(2):s.decrementIndex(2))}else{const e=(i-1)/10;if(Math.abs(e)%.1<=.05){const t=o.displayToMainPlanePos(this.midPoint.getX(),this.midPoint.getY()),n=s.getPlanePositionFromPlanePoint(t);a.addScale(e,n),a.draw()}}})),JS(this,"mouseup",(e=>{ex(this,rx)&&tx(this,rx,!1)})),JS(this,"mouseout",(e=>{this.mouseup(e)})),JS(this,"touchstart",(e=>{const t=e.targetTouches;1===t.length?this.mousedown(e):2===t.length&&this.twotouchdown(e)})),JS(this,"touchmove",(e=>{const t=e.targetTouches;1===t.length?this.mousemove(e):2===t.length&&this.twotouchmove(e)})),JS(this,"touchend",(e=>{this.mouseup(e)})),JS(this,"wheel",(e=>{const t=-e.deltaY/500,n=jo(e),i=ex(this,ix).getLayerGroupByDivId(n.groupDivId),r=i.getActiveViewLayer(),a=r.getViewController(),o=r.displayToMainPlanePos(e._x,e._y),s=a.getPlanePositionFromPlanePoint(o);i.addScale(t,s),i.draw()})),JS(this,"keydown",(e=>{e.context="ZoomAndPan",ex(this,ix).onKeydown(e)})),tx(this,ix,e)}activate(e){}init(){}},Opacity:class{constructor(e){ox(this,ux,{writable:!0,value:void 0}),ox(this,hx,{writable:!0,value:!1}),ox(this,dx,{writable:!0,value:void 0}),ax(this,"mousedown",(e=>{lx(this,hx,!0),this.x0=e._x,this.y0=e._y})),ax(this,"mousemove",(e=>{if(!sx(this,hx))return;const t=e._x-this.x0;if(Math.abs(t)>15){const n=jo(e),i=sx(this,ux).getLayerGroupByDivId(n.groupDivId).getActiveViewLayer(),r=i.getOpacity();i.setOpacity(r+t/200),i.draw(),this.x0=e._x}})),ax(this,"mouseup",(e=>{sx(this,hx)&&lx(this,hx,!1)})),ax(this,"mouseout",(e=>{this.mouseup(e)})),ax(this,"touchstart",(e=>{this.mousedown(e)})),ax(this,"touchmove",(e=>{this.mousemove(e)})),ax(this,"touchend",(e=>{this.mouseup(e)})),ax(this,"wheel",(e=>{sx(this,dx).wheel(e)})),ax(this,"keydown",(e=>{e.context="Opacity",sx(this,ux).onKeydown(e)})),lx(this,ux,e),lx(this,dx,new pS(e))}activate(e){}init(){}},Draw:class{constructor(e){Xx(this,Tg),Xx(this,Cg),Xx(this,wg),Xx(this,vg),Xx(this,Dg),Xx(this,yg),Xx(this,fg),_x(this,tg,{writable:!0,value:void 0}),_x(this,ng,{writable:!0,value:void 0}),_x(this,ig,{writable:!0,value:void 0}),_x(this,rg,{writable:!0,value:void 0}),_x(this,ag,{writable:!0,value:void 0}),_x(this,og,{writable:!0,value:!1}),_x(this,sg,{writable:!0,value:null}),_x(this,lg,{writable:!0,value:null}),_x(this,cg,{writable:!0,value:null}),_x(this,ug,{writable:!0,value:null}),_x(this,hg,{writable:!0,value:0}),_x(this,dg,{writable:!0,value:[]}),_x(this,Sg,{writable:!0,value:null}),_x(this,xg,{writable:!0,value:void 0}),_x(this,gg,{writable:!0,value:void 0}),_x(this,pg,{writable:!0,value:"pointer"}),_x(this,mg,{writable:!0,value:{}}),Yx(this,"mousedown",(e=>{if(Jx(this,og))return;const t=jo(e),n=Jx(this,tg).getLayerGroupByDivId(t.groupDivId),i=n.getActiveDrawLayer().getKonvaStage(),r=i.getIntersection({x:e._x,y:e._y});if(Jx(this,ag).setZoomScale(i.scale()),r){const e=r.getParent().find(".shape")[0];if(e&&e!==Jx(this,ig).getShape()){Jx(this,ig).disable(),Jx(this,ig).setShape(e);const t=n.getActiveViewLayer().getViewController();Jx(this,ig).setViewController(t),Jx(this,ig).enable()}}else{Jx(this,ig).disable(),Jx(this,ig).setShape(null),Jx(this,ig).setViewController(null),$x(this,og,!0),$x(this,lg,new(Jx(this,sg)[Jx(this,hg)])),$x(this,dg,[]);const t=n.getActiveViewLayer().displayToPlanePos(e._x,e._y);$x(this,Sg,new hn(t.x,t.y)),Jx(this,dg).push(Jx(this,Sg))}})),Yx(this,"mousemove",(e=>{if(!Jx(this,og))return;const t=jo(e),n=Jx(this,tg).getLayerGroupByDivId(t.groupDivId),i=n.getActiveViewLayer().displayToPlanePos(e._x,e._y);(Math.abs(i.x-Jx(this,Sg).getX())>0||Math.abs(i.y-Jx(this,Sg).getY())>0)&&(1!==Jx(this,dg).length&&void 0!==Jx(this,dg)[Jx(this,dg).length-1].tmp&&Jx(this,dg).pop(),$x(this,Sg,new hn(i.x,i.y)),Jx(this,Sg).tmp=!0,Jx(this,dg).push(Jx(this,Sg)),Zx(this,fg,Lg).call(this,Jx(this,dg),n))})),Yx(this,"mouseup",(e=>{if(Jx(this,og))if(0!==Jx(this,dg).length)if(Jx(this,dg).length===Jx(this,lg).getNPoints()){const t=jo(e),n=Jx(this,tg).getLayerGroupByDivId(t.groupDivId);Zx(this,yg,bg).call(this,Jx(this,dg),n),$x(this,og,!1)}else void 0!==Jx(this,dg)[Jx(this,dg).length-1].tmp&&delete Jx(this,dg)[Jx(this,dg).length-1].tmp;else Y.warn("Draw mouseup but no points...")})),Yx(this,"dblclick",(e=>{if(void 0!==Jx(this,lg).getNPoints())return;if(!Jx(this,og))return;if(0===Jx(this,dg).length)return void Y.warn("Draw dblclick but no points...");const t=jo(e),n=Jx(this,tg).getLayerGroupByDivId(t.groupDivId);Zx(this,yg,bg).call(this,Jx(this,dg),n),$x(this,og,!1)})),Yx(this,"mouseout",(e=>{this.mouseup(e)})),Yx(this,"touchstart",(e=>{this.mousedown(e)})),Yx(this,"touchmove",(e=>{if(!Jx(this,og))return;const t=jo(e),n=Jx(this,tg).getLayerGroupByDivId(t.groupDivId),i=n.getActiveViewLayer().displayToPlanePos(e._x,e._y);(Math.abs(i.x-Jx(this,Sg).getX())>0||Math.abs(i.y-Jx(this,Sg).getY())>0)&&(1!==Jx(this,dg).length&&Jx(this,dg).pop(),$x(this,Sg,new hn(i.x,i.y)),Jx(this,dg).push(Jx(this,Sg)),Jx(this,dg).length<Jx(this,lg).getNPoints()&&(clearTimeout(this.timer),this.timer=setTimeout((function(){Jx(this,dg).push(Jx(this,Sg))}),Jx(this,lg).getTimeout())),Zx(this,fg,Lg).call(this,Jx(this,dg),n))})),Yx(this,"touchend",(e=>{this.dblclick(e)})),Yx(this,"wheel",(e=>{Jx(this,ng).wheel(e)})),Yx(this,"keydown",(e=>{let t;if(Jx(this,og)||(e.context="Draw",Jx(this,tg).onKeydown(e)),("Delete"===e.key||"Backspace"===e.key)&&Jx(this,ig).isActive()){const e=Jx(this,ig).getShape().getParent();t=e.getLayer();const n=Ea(e.getChildren(so)[0]),i=new no(e,n,t);i.onExecute=Jx(this,Ig),i.onUndo=Jx(this,Ig),i.execute(),Jx(this,tg).addToUndoStack(i)}"Escape"===e.key&&null!==Jx(this,ug)&&(t=Jx(this,ug).getLayer(),Jx(this,ug).destroy(),$x(this,ug,null),$x(this,og,!1),$x(this,dg,[]),t.draw())})),_x(this,Ig,{writable:!0,value:e=>{if(void 0!==Jx(this,mg)[e.type])for(let t=0;t<Jx(this,mg)[e.type].length;++t)Jx(this,mg)[e.type][t](e)}}),$x(this,tg,e),$x(this,ng,new pS(e)),$x(this,ig,new Bx(e)),Jx(this,ig).setDrawEventCallback(Jx(this,Ig)),$x(this,ag,e.getStyle()),$x(this,rg,new(ba().Group));const t=new(ba().Line)({points:[-10,-10,10,10],stroke:"red"}),n=new(ba().Line)({points:[10,-10,-10,10],stroke:"red"});Jx(this,rg).width(20),Jx(this,rg).height(20),Jx(this,rg).add(t),Jx(this,rg).add(n)}activate(e){Jx(this,ig).disable(),Jx(this,ig).setShape(null),Jx(this,ig).setViewController(null);const t=Jx(this,tg).getActiveLayerGroup();Zx(this,vg,Ag).call(this,e,t),e?($x(this,gg,document.body.style.cursor),Jx(this,tg).addEventListener("positionchange",(()=>{Zx(this,Dg,Pg).call(this,t)})),this.setFeatures({lineColour:Jx(this,ag).getLineColour()})):(Zx(this,Tg,Eg).call(this),$x(this,gg,void 0),Jx(this,tg).removeEventListener("positionchange",(()=>{Zx(this,Dg,Pg).call(this,t)})))}setShapeOn(e,t){const n=()=>{document.body.style.cursor=Jx(this,pg),e.opacity(.75)};e.on("mouseover",(()=>{$x(this,xg,e),n()})),e.on("mouseout",(()=>{Zx(this,Tg,Eg).call(this),$x(this,xg,void 0)}));const i=t.getActiveDrawLayer().getKonvaLayer();e.draggable(!0);let r={x:e.x(),y:e.y()};const a=Ea(e.getChildren(so)[0]);let o=null;e.on("dragstart.draw",(()=>{o=e.getChildren(so)[0].stroke();const n=t.getActiveDrawLayer().getKonvaStage(),r=n.scale(),a={x:1/r.x,y:1/r.y};Jx(this,rg).x(n.offset().x+n.width()/(2*r.x)),Jx(this,rg).y(n.offset().y+n.height()/(15*r.y)),Jx(this,rg).scale(a),i.add(Jx(this,rg)),Jx(this,ig).setAnchorsActive(!1),i.draw()})),e.on("dragmove.draw",(n=>{const r=n.target;let a;!function(e,t){const n=t.getChildren(so)[0],i=function(e){const t=e.find(".anchor");if(0===t.length)return;let n=t[0].x(),i=t[0].y();for(let e=0;e<t.length;++e)n=Math.min(n,t[e].x()),i=Math.min(i,t[e].y());return{x:n,y:i}}(t);if(void 0===i)return null;Rg(t,{x:-i.x,y:-i.y},{x:e.x-(i.x+Math.abs(n.width())),y:e.y-(i.y+Math.abs(n.height()))})}(t.getActiveDrawLayer().getBaseSize(),r);const s=Object.keys(Jx(this,sg));for(let t=0;t<s.length&&(a=new(Jx(this,sg)[s[t]]),!a.isFactoryGroup(e));++t);if(void 0===a)throw new Error("Cannot find factory to update quantification.");if(void 0!==a.updateQuantification){const e=t.getActiveViewLayer().getViewController();a.updateQuantification(r,e)}const l=Er(n.evt)[0],c=Zx(this,Cg,Fg).call(this,l,t),u=Jx(this,rg).width()*Jx(this,rg).scaleX()/2,h=Jx(this,rg).height()*Jx(this,rg).scaleY()/2;Math.abs(c.x-Jx(this,rg).x())<u&&Math.abs(c.y-Jx(this,rg).y())<h?(Jx(this,rg).getChildren().forEach((function(e){e.stroke("orange")})),e.getChildren(So).forEach((function(e){e.stroke("red")}))):(Jx(this,rg).getChildren().forEach((function(e){e.stroke("red")})),e.getChildren(So).forEach((function(e){void 0!==e.stroke&&e.stroke(o)}))),i.draw()})),e.on("dragend.draw",(n=>{const s=n.target;if(Jx(this,rg).remove(),void 0===n||void 0===n.evt)return;const l=s.x(),c=s.y(),u=Er(n.evt)[0],h=Zx(this,Cg,Fg).call(this,u,t),d=Jx(this,rg).width()*Jx(this,rg).scaleX()/2,S=Jx(this,rg).height()*Jx(this,rg).scaleY()/2;if(Math.abs(h.x-Jx(this,rg).x())<d&&Math.abs(h.y-Jx(this,rg).y())<S){s.x(r.x),s.y(r.y),Jx(this,ig).disable(),Jx(this,ig).setShape(null),Jx(this,ig).setViewController(null),e.getChildren(So).forEach((function(e){e.stroke(o)})),document.body.style.cursor=Jx(this,gg);const t=new no(s,a,i);t.onExecute=Jx(this,Ig),t.onUndo=Jx(this,Ig),t.execute(),Jx(this,tg).addToUndoStack(t)}else{const e={x:l-r.x,y:c-r.y};if(0!==e.x||0!==e.y){const t=new Ga(s,a,e,i);t.onExecute=Jx(this,Ig),t.onUndo=Jx(this,Ig),Jx(this,tg).addToUndoStack(t),Jx(this,Ig).call(this,{type:"drawmove",id:s.id()})}Jx(this,ig).setAnchorsActive(!0),Jx(this,ig).resetAnchors()}i.draw(),r={x:s.x(),y:s.y()}})),e.on("dblclick",(e=>{const t=e.target,n=t.findOne("Label");if(void 0===n)throw new Error("Could not find the shape label.");const r=n.getText(),a=t.id(),o=function(e){r.meta=e,r.setText(wa(r.meta.textExpr,r.meta.quantification)),n.setVisible(0!==r.meta.textExpr.length),Jx(this,Ig).call(this,{type:"drawchange",id:a}),i.draw()};if(void 0!==Or.openRoiDialog)Or.openRoiDialog(r.meta,o);else{const e=Ar("Label",r.meta.textExpr);null!==e&&(r.meta.textExpr=e,o(r.meta))}}))}setOptions(e){$x(this,sg,e),Jx(this,ig).setFactoryList(e)}getOptionsType(){return"factory"}setFeatures(e){if(void 0!==e.shapeColour&&Jx(this,ag).setLineColour(e.shapeColour),void 0!==e.shapeName){if(!this.hasShape(e.shapeName))throw new Error("Unknown shape: '"+e.shapeName+"'");$x(this,hg,e.shapeName)}void 0!==e.mouseOverCursor&&$x(this,pg,e.mouseOverCursor)}init(){}getEventNames(){return["drawcreate","drawchange","drawmove","drawdelete","drawlabelchange"]}addEventListener(e,t){void 0===Jx(this,mg)[e]&&(Jx(this,mg)[e]=[]),Jx(this,mg)[e].push(t)}removeEventListener(e,t){if(void 0!==Jx(this,mg)[e])for(let n=0;n<Jx(this,mg)[e].length;++n)Jx(this,mg)[e][n]===t&&Jx(this,mg)[e].splice(n,1)}hasShape(e){return void 0!==Jx(this,sg)[e]}},Floodfill:class{constructor(e){Vg(this,gp),Vg(this,xp),Gg(this,_g,{writable:!0,value:void 0}),Gg(this,Kg,{writable:!0,value:5}),Gg(this,Zg,{writable:!0,value:0}),Gg(this,Jg,{writable:!0,value:2e3}),Gg(this,$g,{writable:!0,value:null}),Gg(this,ep,{writable:!0,value:null}),Gg(this,tp,{writable:!0,value:10}),Gg(this,np,{writable:!0,value:null}),Gg(this,ip,{writable:!0,value:!1}),Gg(this,rp,{writable:!0,value:null}),Gg(this,ap,{writable:!0,value:null}),Gg(this,op,{writable:!0,value:void 0}),Gg(this,sp,{writable:!0,value:null}),Gg(this,lp,{writable:!0,value:[]}),Gg(this,cp,{writable:!0,value:!1}),Gg(this,up,{writable:!0,value:void 0}),Gg(this,hp,{writable:!0,value:new Js}),Gg(this,dp,{writable:!0,value:new Tn}),Gg(this,Sp,{writable:!0,value:e=>{const t=jo(e),n=jg(this,_g).getLayerGroupByDivId(t.groupDivId).getActiveViewLayer().displayToPlaneIndex(e._x,e._y);return{x:n.get(0),y:n.get(1)}}}),Wg(this,"mousedown",(e=>{const t=jo(e),n=jg(this,_g).getLayerGroupByDivId(t.groupDivId),i=n.getActiveViewLayer(),r=n.getActiveDrawLayer();Xg(this,$g,i.getImageData()),jg(this,$g)?(jg(this,hp).setZoomScale(r.getKonvaLayer().getAbsoluteScale()),Xg(this,ip,!0),Xg(this,op,jg(this,Sp).call(this,e)),Hg(this,gp,fp).call(this,jg(this,op),jg(this,tp),n),this.onThresholdChange(jg(this,tp))):Y.error("No image found")})),Wg(this,"mousemove",(e=>{if(!jg(this,ip))return;const t=jg(this,Sp).call(this,e);Xg(this,np,Math.round(Math.sqrt(Math.pow(jg(this,op).x-t.x,2)+Math.pow(jg(this,op).y-t.y,2))/2)),Xg(this,np,jg(this,np)<jg(this,tp)?jg(this,tp):jg(this,np)-jg(this,tp)),this.modifyThreshold(jg(this,np))})),Wg(this,"mouseup",(e=>{if(Xg(this,ip,!1),jg(this,cp)){const t=jo(e),n=jg(this,_g).getLayerGroupByDivId(t.groupDivId);this.extend(n)}})),Wg(this,"mouseout",(e=>{this.mouseup(e)})),Wg(this,"touchstart",(e=>{this.mousedown(e)})),Wg(this,"touchmove",(e=>{this.mousemove(e)})),Wg(this,"touchend",(e=>{this.mouseup(e)})),Wg(this,"keydown",(e=>{e.context="Floodfill",jg(this,_g).onKeydown(e)})),Gg(this,pp,{writable:!0,value:e=>{jg(this,dp).fireEvent(e)}}),Xg(this,_g,e)}setExtend(e){Xg(this,cp,e)}getExtend(){return jg(this,cp)}extend(e,t,n){if(!jg(this,op))throw"'initialpoint' not found. User must click before use extend!";jg(this,ap)&&jg(this,ap).destroy();const i=n.getActiveViewLayer().getViewController(),r=i.getCurrentIndex(),a=i.getImageSize(),o=jg(this,np)||jg(this,tp);for(let e=r.get(2),s=t||a.get(2);e<s&&Hg(this,gp,fp).call(this,jg(this,op),o,n);e++)i.incrementIndex(2);i.setCurrentPosition(r);for(let t=r.get(2),a=e||0;t>a&&Hg(this,gp,fp).call(this,jg(this,op),o,n);t--)i.decrementIndex(2);i.setCurrentPosition(r)}modifyThreshold(e,t){if(t||!jg(this,ap))throw"No shape found";t=jg(this,ap).getChildren((function(e){return"shape"===e.name()}))[0],clearTimeout(jg(this,up)),Xg(this,up,setTimeout((()=>{if(Xg(this,sp,Hg(this,xp,mp).call(this,jg(this,op),e,!0)),!jg(this,sp))return!1;const n=[];for(let e=0,t=jg(this,sp).length;e<t;++e)n.push(jg(this,sp)[e].x),n.push(jg(this,sp)[e].y);t.setPoints(n),t.getLayer().draw(),this.onThresholdChange(e)}),100))}onThresholdChange(e){}activate(e){e&&(jg(this,hp).setBaseScale(jg(this,_g).getBaseScale()),this.setFeatures({shapeColour:jg(this,hp).getLineColour()}))}init(){}getEventNames(){return["drawcreate","drawchange","drawmove","drawdelete"]}addEventListener(e,t){jg(this,dp).add(e,t)}removeEventListener(e,t){jg(this,dp).remove(e,t)}setFeatures(e){void 0!==e.shapeColour&&jg(this,hp).setLineColour(e.shapeColour)}},Livewire:class{constructor(e){Ip(this,Hp),Ip(this,Gp),Ip(this,Vp),Lp(this,Ep,{writable:!0,value:void 0}),Lp(this,Rp,{writable:!0,value:!1}),Lp(this,Mp,{writable:!0,value:null}),Lp(this,qp,{writable:!0,value:null}),Lp(this,Up,{writable:!0,value:new Js}),Lp(this,Qp,{writable:!0,value:new yp}),Lp(this,kp,{writable:!0,value:new yp}),Lp(this,Bp,{writable:!0,value:[]}),Lp(this,Np,{writable:!0,value:5}),Lp(this,Wp,{writable:!0,value:new Tn}),Lp(this,zp,{writable:!0,value:new Cp}),Tp(this,"mousedown",(e=>{const t=jo(e),n=Ap(this,Ep).getLayerGroupByDivId(t.groupDivId),i=n.getActiveViewLayer(),r=i.getViewController().getImageSize(),a=i.displayToPlaneIndex(e._x,e._y);if(Ap(this,Rp))if(Math.abs(a.get(0)-this.x0)<Ap(this,Np)&&Math.abs(a.get(1)-this.y0)<Ap(this,Np))Pp(this,Hp,_p).call(this);else{Op(this,Qp,Ap(this,kp)),Pp(this,Vp,Xp).call(this,r);const e={x:a.get(0),y:a.get(1)};Ap(this,zp).doTraining(e),Ap(this,Qp).addControlPoint(Ap(this,kp).getPoint(0))}else{Op(this,Rp,!0),this.x0=a.get(0),this.y0=a.get(1),Pp(this,Gp,Yp).call(this),Pp(this,Vp,Xp).call(this,r),Op(this,qp,null);const e=n.getActiveDrawLayer();Ap(this,Up).setZoomScale(e.getKonvaLayer().getAbsoluteScale());const t={x:a.get(0),y:a.get(1)};Ap(this,zp).doTraining(t);const i=new hn(a.get(0),a.get(1));Ap(this,Qp).addPoint(i),Ap(this,Qp).addControlPoint(i)}})),Tp(this,"mousemove",(e=>{if(!Ap(this,Rp))return;const t=jo(e),n=Ap(this,Ep).getLayerGroupByDivId(t.groupDivId),i=n.getActiveViewLayer().displayToPlaneIndex(e._x,e._y);let r={x:i.get(0),y:i.get(1)};Ap(this,zp).setPoint(r);let a=0,o=!1;for(;!Ap(this,Bp)[r.y][r.x]&&!o;)if(a=Ap(this,zp).doWork(),0===a.length)o=!0;else for(let e=0;e<a.length-1;e+=2){const t=a[e],n=a[e+1];Ap(this,Bp)[t.y][t.x]=n}for(Op(this,kp,new yp),o=!1;r&&!o;)Ap(this,kp).addPoint(new hn(r.x,r.y)),Ap(this,Bp)[r.y]&&Ap(this,Bp)[r.y][r.x]?r=Ap(this,Bp)[r.y][r.x]:o=!0;Ap(this,kp).appenPath(Ap(this,Qp)),Ap(this,qp)&&Ap(this,qp).destroy();const s=new kg;Op(this,qp,s.create(Ap(this,kp).pointArray,Ap(this,Up))),Ap(this,qp).id(px());const l=n.getActiveDrawLayer();l.getDrawController().getCurrentPosGroup().add(Ap(this,qp)),Op(this,Mp,new ka(Ap(this,qp),"livewire",l.getKonvaLayer())),Ap(this,Mp).execute()})),Tp(this,"mouseout",(e=>{this.mouseup(e)})),Tp(this,"dblclick",(e=>{Pp(this,Hp,_p).call(this)})),Tp(this,"touchstart",(e=>{this.mousedown(e)})),Tp(this,"touchmove",(e=>{this.mousemove(e)})),Tp(this,"touchend",(e=>{this.mouseup(e)})),Tp(this,"keydown",(e=>{e.context="Livewire",Ap(this,Ep).onKeydown(e)})),Lp(this,jp,{writable:!0,value:e=>{Ap(this,Wp).fireEvent(e)}}),Op(this,Ep,e)}mouseup(e){}activate(e){if(e){const e=Ap(this,Ep).getActiveLayerGroup().getActiveViewLayer(),t=e.getViewController().getImageSize();Ap(this,zp).setDimensions(t.get(0),t.get(1)),Ap(this,zp).setData(e.getImageData().data),Ap(this,Up).setBaseScale(Ap(this,Ep).getBaseScale()),this.setFeatures({shapeColour:Ap(this,Up).getLineColour()})}}init(){}getEventNames(){return["drawcreate","drawchange","drawmove","drawdelete"]}addEventListener(e,t){Ap(this,Wp).add(e,t)}removeEventListener(e,t){Ap(this,Wp).remove(e,t)}setFeatures(e){void 0!==e.shapeColour&&Ap(this,Up).setLineColour(e.shapeColour)}}},uf={draw:{ArrowFactory:class{getGroupName(){return"line-group"}getNPoints(){return 2}getTimeout(){return 0}isFactoryGroup(e){return this.getGroupName()===e.name()}create(e,t,n){const i=new _S(e[0],e[1]),r=new(ba().Line)({points:[i.getBegin().getX(),i.getBegin().getY(),i.getEnd().getX(),i.getEnd().getY()],stroke:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"}),a=ZS(i,e[0],t.scale(10)),o=ZS(i,e[1],t.scale(10));r.hitFunc((function(e){e.beginPath(),e.moveTo(a.getBegin().getX(),a.getBegin().getY()),e.lineTo(a.getEnd().getX(),a.getEnd().getY()),e.lineTo(o.getEnd().getX(),o.getEnd().getY()),e.lineTo(o.getBegin().getX(),o.getBegin().getY()),e.closePath(),e.fillStrokeShape(this)}));const s=new hn(i.getBegin().getX(),i.getBegin().getY()-10),l=new _S(i.getBegin(),s),c=KS(i,l),u=c*Math.PI/180,h=5*t.getScaledStrokeWidth(),d=new(ba().RegularPolygon)({x:i.getBegin().getX()+h*Math.sin(u),y:i.getBegin().getY()+h*Math.cos(u),sides:3,radius:h,rotation:-c,fill:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape-triangle"}),S=new(ba().Text)({fontSize:t.getFontSize(),fontFamily:t.getFontFamily(),fill:t.getLineColour(),padding:t.getTextPadding(),shadowColor:t.getShadowLineColour(),shadowOffset:t.getShadowOffset(),name:"text"});let x="";x="",S.setText(""),S.meta={textExpr:"",quantification:{}};const g=i.getBegin().getX()>i.getEnd().getX()?0:-1,p=i.getBegin().getY()>i.getEnd().getY()?-1:0,m=new(ba().Label)({x:i.getEnd().getX()+g*S.width(),y:i.getEnd().getY()+p*t.applyZoomScale(15).y,scale:t.applyZoomScale(1),visible:0!=="".length,name:"label"});m.add(S),m.add(new(ba().Tag)({fill:t.getLineColour(),opacity:t.getTagOpacity()}));const f=new(ba().Group);return f.name(this.getGroupName()),f.add(m),f.add(d),f.add(r),f.visible(!0),f}getAnchors(e,t){const n=e.points(),i=[];return i.push(Tx(n[0]+e.x(),n[1]+e.y(),"begin",t)),i.push(Tx(n[2]+e.x(),n[3]+e.y(),"end",t)),i}update(e,t,n){const i=e.getParent(),r=i.getChildren((function(e){return"shape"===e.name()}))[0],a=i.getChildren((function(e){return"shape-triangle"===e.name()}))[0],o=i.getChildren((function(e){return"label"===e.name()}))[0],s=i.getChildren((function(e){return"begin"===e.id()}))[0],l=i.getChildren((function(e){return"end"===e.id()}))[0];switch(e.id()){case"begin":s.x(e.x()),s.y(e.y());break;case"end":l.x(e.x()),l.y(e.y())}const c=s.x()-r.x(),u=s.y()-r.y(),h=l.x()-r.x(),d=l.y()-r.y();r.points([c,u,h,d]);const S=new hn(s.x(),s.y()),x=new hn(l.x(),l.y()),g=new _S(S,x),p=new hn(c,u),m=new hn(h,d),f=ZS(g,p,10),y=ZS(g,m,10);r.hitFunc((function(e){e.beginPath(),e.moveTo(f.getBegin().getX(),f.getBegin().getY()),e.lineTo(f.getEnd().getX(),f.getEnd().getY()),e.lineTo(y.getEnd().getX(),y.getEnd().getY()),e.lineTo(y.getBegin().getX(),y.getBegin().getY()),e.closePath(),e.fillStrokeShape(this)}));const D=new hn(g.getBegin().getX(),g.getBegin().getY()-10),v=new _S(g.getBegin(),D),w=KS(g,v),C=w*Math.PI/180;a.x(g.getBegin().getX()+a.radius()*Math.sin(C)),a.y(g.getBegin().getY()+a.radius()*Math.cos(C)),a.rotation(-w);const T=o.getText();T.setText(T.meta.textExpr);const I=g.getBegin().getX()>g.getEnd().getX()?0:-1,L=g.getBegin().getY()>g.getEnd().getY()?-1:0,b={x:g.getEnd().getX()+I*T.width(),y:g.getEnd().getY()+L*t.applyZoomScale(15).y};o.position(b)}},CircleFactory:class{constructor(){im(this,om),im(this,am)}getGroupName(){return"circle-group"}getNPoints(){return 2}getTimeout(){return 0}isFactoryGroup(e){return this.getGroupName()===e.name()}create(e,t,n){const i=Math.abs(e[0].getX()-e[1].getX()),r=Math.abs(e[0].getY()-e[1].getY()),a=Math.round(Math.sqrt(i*i+r*r)),o=new nm(e[0],a),s=new(ba().Circle)({x:o.getCenter().getX(),y:o.getCenter().getY(),radius:o.getRadius(),stroke:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"}),l=new(ba().Text)({fontSize:t.getFontSize(),fontFamily:t.getFontFamily(),fill:t.getLineColour(),padding:t.getTextPadding(),shadowColor:t.getShadowLineColour(),shadowOffset:t.getShadowOffset(),name:"text"});let c="";c="{surface}";const u=o.quantify(n,va(c));l.setText(wa(c,u)),l.meta={textExpr:c,quantification:u};const h=new(ba().Label)({x:o.getCenter().getX(),y:o.getCenter().getY(),scale:t.applyZoomScale(1),visible:0!==c.length,name:"label"});h.add(l),h.add(new(ba().Tag)({fill:t.getLineColour(),opacity:t.getTagOpacity()}));const d=new(ba().Group);return d.name(this.getGroupName()),d.add(h),d.add(s),d.visible(!0),d}getAnchors(e,t){const n=e.x(),i=e.y(),r=e.radius(),a=[];return a.push(Tx(n-r,i,"left",t)),a.push(Tx(n+r,i,"right",t)),a.push(Tx(n,i-r,"bottom",t)),a.push(Tx(n,i+r,"top",t)),a}update(e,t,n){const i=e.getParent(),r=i.getChildren((function(e){return"shape"===e.name()}))[0],a=i.getChildren((function(e){return"label"===e.name()}))[0],o=i.getChildren((function(e){return"left"===e.id()}))[0],s=i.getChildren((function(e){return"right"===e.id()}))[0],l=i.getChildren((function(e){return"bottom"===e.id()}))[0],c=i.getChildren((function(e){return"top"===e.id()}))[0];const u={x:r.x(),y:r.y()};let h;switch(e.id()){case"left":h=u.x-e.x(),o.y(s.y()),s.x(u.x+h),l.y(u.y-h),c.y(u.y+h);break;case"right":h=e.x()-u.x,s.y(o.y()),o.x(u.x-h),l.y(u.y-h),c.y(u.y+h);break;case"bottom":h=u.y-e.y(),l.x(c.x()),o.x(u.x-h),s.x(u.x+h),c.y(u.y+h);break;case"top":h=e.y()-u.y,c.x(l.x()),o.x(u.x-h),s.x(u.x+h),l.y(u.y-h);break;default:Y.error("Unhandled anchor id: "+e.id())}r.radius(Math.abs(h));const d=new hn(i.x()+u.x,i.y()+u.y),S=(new nm(d,h),{x:u.x,y:u.y});a.position(S),rm(this,am,sm).call(this,i,n)}updateQuantification(e,t){rm(this,am,sm).call(this,e,t)}},EllipseFactory:class{constructor(){pm(this,ym),pm(this,fm)}getGroupName(){return"ellipse-group"}getNPoints(){return 2}getTimeout(){return 0}isFactoryGroup(e){return this.getGroupName()===e.name()}create(e,t,n){const i=Math.abs(e[0].getX()-e[1].getX()),r=Math.abs(e[0].getY()-e[1].getY()),a=new gm(e[0],i,r),o=new(ba().Ellipse)({x:a.getCenter().getX(),y:a.getCenter().getY(),radius:{x:a.getA(),y:a.getB()},stroke:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"}),s=new(ba().Text)({fontSize:t.getFontSize(),fontFamily:t.getFontFamily(),fill:t.getLineColour(),padding:t.getTextPadding(),shadowColor:t.getShadowLineColour(),shadowOffset:t.getShadowOffset(),name:"text"});let l="";l="{surface}";const c=a.quantify(n,va(l));s.setText(wa(l,c)),s.meta={textExpr:l,quantification:c};const u=new(ba().Label)({x:a.getCenter().getX(),y:a.getCenter().getY(),scale:t.applyZoomScale(1),visible:0!==l.length,name:"label"});u.add(s),u.add(new(ba().Tag)({fill:t.getLineColour(),opacity:t.getTagOpacity()}));const h=new(ba().Group);return h.name(this.getGroupName()),h.add(u),h.add(o),h.visible(!0),h}getAnchors(e,t){const n=e.x(),i=e.y(),r=e.radius(),a=[];return a.push(Tx(n-r.x,i-r.y,"topLeft",t)),a.push(Tx(n+r.x,i-r.y,"topRight",t)),a.push(Tx(n+r.x,i+r.y,"bottomRight",t)),a.push(Tx(n-r.x,i+r.y,"bottomLeft",t)),a}update(e,t,n){const i=e.getParent(),r=i.getChildren((function(e){return"shape"===e.name()}))[0],a=i.getChildren((function(e){return"label"===e.name()}))[0],o=i.getChildren((function(e){return"topLeft"===e.id()}))[0],s=i.getChildren((function(e){return"topRight"===e.id()}))[0],l=i.getChildren((function(e){return"bottomRight"===e.id()}))[0],c=i.getChildren((function(e){return"bottomLeft"===e.id()}))[0];switch(e.id()){case"topLeft":o.x(e.x()),o.y(e.y()),s.y(e.y()),c.x(e.x());break;case"topRight":s.x(e.x()),s.y(e.y()),o.y(e.y()),l.x(e.x());break;case"bottomRight":l.x(e.x()),l.y(e.y()),c.y(e.y()),s.x(e.x());break;case"bottomLeft":c.x(e.x()),c.y(e.y()),l.y(e.y()),o.x(e.x());break;default:Y.error("Unhandled anchor id: "+e.id())}const u=(s.x()-o.x())/2,h=(l.y()-s.y())/2,d={x:o.x()+u,y:s.y()+h};r.position(d);const S={x:Math.abs(u),y:Math.abs(h)};S&&r.radius(S);const x=new hn(i.x()+d.x,i.y()+d.y),g=(new gm(x,S.x,S.y),{x:d.x,y:d.y});a.position(g),mm(this,fm,Dm).call(this,i,n)}updateQuantification(e,t){mm(this,fm,Dm).call(this,e,t)}},FreeHandFactory:class{getGroupName(){return"freeHand-group"}getNPoints(){}getTimeout(){return 25}isFactoryGroup(e){return this.getGroupName()===e.name()}create(e,t,n){const i=[];for(let t=0;t<e.length;++t)i.push(e[t].getX()),i.push(e[t].getY());const r=new(ba().Line)({points:i,stroke:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape",tension:.5}),a=new(ba().Text)({fontSize:t.getFontSize(),fontFamily:t.getFontFamily(),fill:t.getLineColour(),name:"text"});let o="";o="",a.setText(""),a.meta={textExpr:"",quantification:{}};const s=new(ba().Label)({x:e[0].getX(),y:e[0].getY()+t.scale(10),scale:t.applyZoomScale(1),visible:0!=="".length,name:"label"});s.add(a),s.add(new(ba().Tag)({fill:t.getLineColour(),opacity:t.getTagOpacity()}));const l=new(ba().Group);return l.name(this.getGroupName()),l.add(s),l.add(r),l.visible(!0),l}getAnchors(e,t){const n=e.points(),i=[];for(let r=0;r<n.length;r+=2){const a=n[r]+e.x(),o=n[r+1]+e.y(),s=r;i.push(Tx(a,o,s,t))}return i}update(e,t,n){const i=e.getParent(),r=i.getChildren((function(e){return"shape"===e.name()}))[0],a=i.getChildren((function(e){return"label"===e.name()}))[0],o=i.getChildren((function(t){return t.id()===e.id()}))[0];o.x(e.x()),o.y(e.y());const s=r.points();s[e.id()]=e.x()-r.x(),s[e.id()+1]=e.y()-r.y(),r.points(s.concat());const l=a.getText();l.setText(l.meta.textExpr);const c={x:s[0]+r.x(),y:s[1]+r.y()+t.scale(10)};a.position(c)}},ProtractorFactory:class{getGroupName(){return"protractor-group"}getNPoints(){return 3}getTimeout(){return 500}isFactoryGroup(e){return this.getGroupName()===e.name()}create(e,t,n){const i=new _S(e[0],e[1]),r=[];for(let t=0;t<e.length;++t)r.push(e[t].getX()),r.push(e[t].getY());const a=new(ba().Line)({points:r,stroke:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"}),o=new(ba().Group);if(o.name(this.getGroupName()),3===e.length){const n=new _S(e[1],e[2]);a.hitFunc((function(t){t.beginPath(),t.moveTo(e[0].getX(),e[0].getY()),t.lineTo(e[1].getX(),e[1].getY()),t.lineTo(e[2].getX(),e[2].getY()),t.closePath(),t.fillStrokeShape(this)}));let r=KS(i,n),s=i.getInclination();r>180&&(r=360-r,s+=r);const l=new(ba().Text)({fontSize:t.getFontSize(),fontFamily:t.getFontFamily(),fill:t.getLineColour(),padding:t.getTextPadding(),shadowColor:t.getShadowLineColour(),shadowOffset:t.getShadowOffset(),name:"text"});let c="";c="{angle}";const u={angle:{value:r,unit:VS("unit.degree")}};l.setText(wa(c,u)),l.meta={textExpr:c,quantification:u};const h=(i.getMidpoint().getX()+n.getMidpoint().getX())/2,d=(i.getMidpoint().getY()+n.getMidpoint().getY())/2,S=new(ba().Label)({x:h,y:d-t.applyZoomScale(15).y,scale:t.applyZoomScale(1),visible:0!==c.length,name:"label"});S.add(l),S.add(new(ba().Tag)({fill:t.getLineColour(),opacity:t.getTagOpacity()}));const x=33*Math.min(i.getLength(),n.getLength())/100,g=new(ba().Arc)({innerRadius:x,outerRadius:x,stroke:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,angle:r,rotation:-s,x:e[1].getX(),y:e[1].getY(),name:"shape-arc"});o.add(S),o.add(g)}return o.add(a),o.visible(!0),o}getAnchors(e,t){const n=e.points(),i=[];return i.push(Tx(n[0]+e.x(),n[1]+e.y(),"begin",t)),i.push(Tx(n[2]+e.x(),n[3]+e.y(),"mid",t)),i.push(Tx(n[4]+e.x(),n[5]+e.y(),"end",t)),i}update(e,t,n){const i=e.getParent(),r=i.getChildren((function(e){return"shape"===e.name()}))[0],a=i.getChildren((function(e){return"label"===e.name()}))[0],o=i.getChildren((function(e){return"shape-arc"===e.name()}))[0],s=i.getChildren((function(e){return"begin"===e.id()}))[0],l=i.getChildren((function(e){return"mid"===e.id()}))[0],c=i.getChildren((function(e){return"end"===e.id()}))[0];switch(e.id()){case"begin":s.x(e.x()),s.y(e.y());break;case"mid":l.x(e.x()),l.y(e.y());break;case"end":c.x(e.x()),c.y(e.y())}const u=s.x()-r.x(),h=s.y()-r.y(),d=l.x()-r.x(),S=l.y()-r.y(),x=c.x()-r.x(),g=c.y()-r.y();r.points([u,h,d,S,x,g]),r.hitFunc((function(e){e.beginPath(),e.moveTo(u,h),e.lineTo(d,S),e.lineTo(x,g),e.closePath(),e.fillStrokeShape(this)}));const p=new hn(s.x(),s.y()),m=new hn(l.x(),l.y()),f=new hn(c.x(),c.y()),y=new _S(p,m),D=new _S(m,f);let v=KS(y,D),w=y.getInclination();v>180&&(v=360-v,w+=v);const C=a.getText(),T={angle:{value:v,unit:VS("unit.degree")}};C.setText(wa(C.meta.textExpr,T)),C.meta.quantification=T;const I={x:(y.getMidpoint().getX()+D.getMidpoint().getX())/2,y:(y.getMidpoint().getY()+D.getMidpoint().getY())/2-t.applyZoomScale(15).y};a.position(I);const L=33*Math.min(y.getLength(),D.getLength())/100;o.innerRadius(L),o.outerRadius(L),o.angle(v),o.rotation(-w);const b={x:l.x(),y:l.y()};o.position(b)}},RectangleFactory:class{constructor(){Pm(this,Fm),Pm(this,Om)}getGroupName(){return"rectangle-group"}getNPoints(){return 2}getTimeout(){return 0}isFactoryGroup(e){return this.getGroupName()===e.name()}create(e,t,n){const i=new bm(e[0],e[1]),r=new(ba().Rect)({x:i.getBegin().getX(),y:i.getBegin().getY(),width:i.getWidth(),height:i.getHeight(),stroke:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"}),a=new(ba().Text)({fontSize:t.getFontSize(),fontFamily:t.getFontFamily(),fill:t.getLineColour(),padding:t.getTextPadding(),shadowColor:t.getShadowLineColour(),shadowOffset:t.getShadowOffset(),name:"text"});let o="";o="{surface}";const s=i.quantify(n,va(o));a.setText(wa(o,s)),a.meta={textExpr:o,quantification:s};const l=new(ba().Label)({x:i.getBegin().getX(),y:i.getEnd().getY(),scale:t.applyZoomScale(1),visible:0!==o.length,name:"label"});l.add(a),l.add(new(ba().Tag)({fill:t.getLineColour(),opacity:t.getTagOpacity()}));const c=new(ba().Group);return c.name(this.getGroupName()),c.add(l),c.add(r),c.visible(!0),c}getAnchors(e,t){const n=e.x(),i=e.y(),r=e.width(),a=e.height(),o=[];return o.push(Tx(n,i,"topLeft",t)),o.push(Tx(n+r,i,"topRight",t)),o.push(Tx(n+r,i+a,"bottomRight",t)),o.push(Tx(n,i+a,"bottomLeft",t)),o}update(e,t,n){const i=e.getParent(),r=i.getChildren((function(e){return"shape"===e.name()}))[0],a=i.getChildren((function(e){return"label"===e.name()}))[0],o=i.getChildren((function(e){return"topLeft"===e.id()}))[0],s=i.getChildren((function(e){return"topRight"===e.id()}))[0],l=i.getChildren((function(e){return"bottomRight"===e.id()}))[0],c=i.getChildren((function(e){return"bottomLeft"===e.id()}))[0];let u;switch(e.id()){case"topLeft":o.x(e.x()),o.y(e.y()),s.y(e.y()),c.x(e.x());break;case"topRight":s.x(e.x()),s.y(e.y()),o.y(e.y()),l.x(e.x());break;case"bottomRight":l.x(e.x()),l.y(e.y()),c.y(e.y()),s.x(e.x());break;case"bottomLeft":c.x(e.x()),c.y(e.y()),l.y(e.y()),o.x(e.x());break;default:Y.error("Unhandled anchor id: "+e.id())}r.position(o.position());const h=s.x()-o.x(),d=c.y()-o.y();h&&d&&r.size({width:h,height:d});const S=new hn(i.x()+o.x(),i.y()+o.y()),x=new hn(i.x()+l.x(),i.y()+l.y()),g=new bm(S,x);const p={x:g.getBegin().getX()-i.x(),y:g.getEnd().getY()-i.y()};a.position(p),Am(this,Om,Em).call(this,i,n)}updateQuantification(e,t){Am(this,Om,Em).call(this,e,t)}},RoiFactory:kg,RulerFactory:class{getGroupName(){return"ruler-group"}getNPoints(){return 2}getTimeout(){return 0}isFactoryGroup(e){return this.getGroupName()===e.name()}create(e,t,n){const i=new _S(e[0],e[1]),r=new(ba().Line)({points:[i.getBegin().getX(),i.getBegin().getY(),i.getEnd().getX(),i.getEnd().getY()],stroke:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"}),a=t.scale(10),o=ZS(i,e[0],a),s=new(ba().Line)({points:[o.getBegin().getX(),o.getBegin().getY(),o.getEnd().getX(),o.getEnd().getY()],stroke:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape-tick0"}),l=ZS(i,e[1],a),c=new(ba().Line)({points:[l.getBegin().getX(),l.getBegin().getY(),l.getEnd().getX(),l.getEnd().getY()],stroke:t.getLineColour(),strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape-tick1"});r.hitFunc((function(e){e.beginPath(),e.moveTo(o.getBegin().getX(),o.getBegin().getY()),e.lineTo(o.getEnd().getX(),o.getEnd().getY()),e.lineTo(l.getEnd().getX(),l.getEnd().getY()),e.lineTo(l.getBegin().getX(),l.getBegin().getY()),e.closePath(),e.fillStrokeShape(this)}));const u=new(ba().Text)({fontSize:t.getFontSize(),fontFamily:t.getFontFamily(),fill:t.getLineColour(),padding:t.getTextPadding(),shadowColor:t.getShadowLineColour(),shadowOffset:t.getShadowOffset(),name:"text"});let h="";h="{length}";const d=i.quantify(n,va(h));u.setText(wa(h,d)),u.meta={textExpr:h,quantification:d};const S=i.getBegin().getX()>i.getEnd().getX()?0:-1,x=i.getBegin().getY()>i.getEnd().getY()?-1:0,g=new(ba().Label)({x:i.getEnd().getX()+S*u.width(),y:i.getEnd().getY()+x*t.applyZoomScale(15).y,scale:t.applyZoomScale(1),visible:0!==h.length,name:"label"});g.add(u),g.add(new(ba().Tag)({fill:t.getLineColour(),opacity:t.getTagOpacity()}));const p=new(ba().Group);return p.name(this.getGroupName()),p.add(g),p.add(s),p.add(c),p.add(r),p.visible(!0),p}getAnchors(e,t){const n=e.points(),i=[];return i.push(Tx(n[0]+e.x(),n[1]+e.y(),"begin",t)),i.push(Tx(n[2]+e.x(),n[3]+e.y(),"end",t)),i}update(e,t,n){const i=e.getParent(),r=i.getChildren((function(e){return"shape"===e.name()}))[0],a=i.getChildren((function(e){return"shape-tick0"===e.name()}))[0],o=i.getChildren((function(e){return"shape-tick1"===e.name()}))[0],s=i.getChildren((function(e){return"label"===e.name()}))[0],l=i.getChildren((function(e){return"begin"===e.id()}))[0],c=i.getChildren((function(e){return"end"===e.id()}))[0];switch(e.id()){case"begin":l.x(e.x()),l.y(e.y());break;case"end":c.x(e.x()),c.y(e.y())}const u=l.x()-r.x(),h=l.y()-r.y(),d=c.x()-r.x(),S=c.y()-r.y();r.points([u,h,d,S]);const x=new hn(l.x(),l.y()),g=new hn(c.x(),c.y()),p=new _S(x,g),m=new hn(u,h),f=new hn(d,S),y=ZS(p,m,t.scale(10));a.points([y.getBegin().getX(),y.getBegin().getY(),y.getEnd().getX(),y.getEnd().getY()]);const D=ZS(p,f,t.scale(10));o.points([D.getBegin().getX(),D.getBegin().getY(),D.getEnd().getX(),D.getEnd().getY()]),r.hitFunc((function(e){e.beginPath(),e.moveTo(y.getBegin().getX(),y.getBegin().getY()),e.lineTo(y.getEnd().getX(),y.getEnd().getY()),e.lineTo(D.getEnd().getX(),D.getEnd().getY()),e.lineTo(D.getBegin().getX(),D.getBegin().getY()),e.closePath(),e.fillStrokeShape(this)}));const v=s.getText(),w=p.quantify(n,va(v.meta.textExpr));v.setText(wa(v.meta.textExpr,w)),v.meta.quantification=w;const C=p.getBegin().getX()>p.getEnd().getX()?0:-1,T=p.getBegin().getY()>p.getEnd().getY()?-1:0,I={x:p.getEnd().getX()+C*v.width(),y:p.getEnd().getY()+T*t.applyZoomScale(15).y};s.position(I)}}},filter:{Threshold:class{constructor(e){Hm(this,_m,{writable:!0,value:void 0}),Hm(this,Km,{writable:!0,value:!0}),Hm(this,Zm,{writable:!0,value:new Tn}),Hm(this,Jm,{writable:!0,value:e=>{jm(this,Zm).fireEvent(e)}}),Xm(this,_m,e)}activate(e){e&&Xm(this,Km,!0)}init(){}run(e){const t=new Nm;t.setMin(e.min),t.setMax(e.max),jm(this,Km)&&(t.setOriginalImage(jm(this,_m).getLastImage()),Xm(this,Km,!1));const n=new lf(t,jm(this,_m));n.onExecute=jm(this,Jm),n.onUndo=jm(this,Jm),n.execute(),jm(this,_m).addToUndoStack(n)}addEventListener(e,t){jm(this,Zm).add(e,t)}removeEventListener(e,t){jm(this,Zm).remove(e,t)}},Sobel:class{constructor(e){Hm(this,nf,{writable:!0,value:void 0}),Hm(this,rf,{writable:!0,value:new Tn}),Hm(this,af,{writable:!0,value:e=>{jm(this,rf).fireEvent(e)}}),Xm(this,nf,e)}activate(e){}init(){}run(e){const t=new zm;t.setOriginalImage(jm(this,nf).getLastImage());const n=new lf(t,jm(this,nf));n.onExecute=jm(this,af),n.onUndo=jm(this,af),n.execute(),jm(this,nf).addToUndoStack(n)}addEventListener(e,t){jm(this,rf).add(e,t)}removeEventListener(e,t){jm(this,rf).remove(e,t)}},Sharpen:class{constructor(e){Hm(this,$m,{writable:!0,value:void 0}),Hm(this,ef,{writable:!0,value:new Tn}),Hm(this,tf,{writable:!0,value:e=>{jm(this,ef).fireEvent(e)}}),Xm(this,$m,e)}activate(e){}init(){}run(e){const t=new Vm;t.setOriginalImage(jm(this,$m).getLastImage());const n=new lf(t,jm(this,$m));n.onExecute=jm(this,tf),n.onUndo=jm(this,tf),n.execute(),jm(this,$m).addToUndoStack(n)}addEventListener(e,t){jm(this,ef).add(e,t)}removeEventListener(e,t){jm(this,ef).remove(e,t)}}}};function hf(e,t){xf(e,t),t.add(e)}function df(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Sf(e,t,n){xf(e,t),t.set(e,n)}function xf(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function gf(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function pf(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,ff(e,t,"set"),n),n}function mf(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,ff(e,t,"get"))}function ff(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var yf=new WeakMap,Df=new WeakMap,vf=new WeakMap,wf=new WeakMap,Cf=new WeakMap,Tf=new WeakMap,If=new WeakMap,Lf=new WeakMap,bf=new WeakSet,Pf=new WeakSet,Af=new WeakMap,Of=new WeakMap,Ff=new WeakMap,Ef=new WeakMap,Rf=new WeakMap,Mf=new WeakMap,qf=new WeakMap,Uf=new WeakMap,Qf=new WeakSet,kf=new WeakSet,Bf=new WeakSet;class Nf{constructor(){hf(this,Bf),hf(this,kf),hf(this,Qf),hf(this,Pf),hf(this,bf),Sf(this,yf,{writable:!0,value:null}),Sf(this,Df,{writable:!0,value:null}),Sf(this,vf,{writable:!0,value:null}),Sf(this,wf,{writable:!0,value:null}),Sf(this,Cf,{writable:!0,value:null}),Sf(this,Tf,{writable:!0,value:null}),Sf(this,If,{writable:!0,value:new Js}),Sf(this,Lf,{writable:!0,value:new Tn}),df(this,"addToUndoStack",(e=>{null!==mf(this,Tf)&&mf(this,Tf).add(e)})),df(this,"loadFiles",(e=>{0!==e.length?mf(this,wf).loadFiles(e):Y.warn("Ignoring empty input file list.")})),df(this,"loadURLs",((e,t)=>{0!==e.length?mf(this,wf).loadURLs(e,t):Y.warn("Ignoring empty input url list.")})),df(this,"loadImageObject",(e=>{mf(this,wf).loadImageObject(e)})),df(this,"onResize",(e=>{this.fitToContainer()})),df(this,"onKeydown",(e=>{mf(this,Af).call(this,e)})),df(this,"defaultOnKeydown",(e=>{if(e.ctrlKey)if(e.shiftKey){const t=mf(this,Cf).getActiveLayerGroup().getActiveViewLayer().getViewController(),n=t.getImageSize();"ArrowLeft"===e.key?n.moreThanOne(3)&&t.decrementIndex(3):"ArrowUp"===e.key?t.canScroll()&&t.incrementScrollIndex():"ArrowRight"===e.key?n.moreThanOne(3)&&t.incrementIndex(3):"ArrowDown"===e.key&&t.canScroll()&&t.decrementScrollIndex()}else if("y"===e.key)mf(this,Tf).redo();else if("z"===e.key)mf(this,Tf).undo();else if(" "===e.key)for(let e=0;e<mf(this,Cf).getNumberOfLayerGroups();++e)mf(this,Cf).getLayerGroup(e).setShowCrosshair(!mf(this,Cf).getLayerGroup(e).getShowCrosshair())})),Sf(this,Af,{writable:!0,value:e=>{mf(this,Lf).fireEvent(e)}}),Sf(this,Of,{writable:!0,value:e=>{e.type="loadstart",mf(this,Af).call(this,e)}}),Sf(this,Ff,{writable:!0,value:e=>{e.type="loadprogress",mf(this,Af).call(this,e)}}),Sf(this,Ef,{writable:!0,value:e=>{void 0===e.data&&Y.error("Missing loaditem event data."),void 0===e.loadtype&&Y.error("Missing loaditem event load type.");const t=e.isfirstitem;let n=null;if("image"===e.loadtype)t?mf(this,Df).addNew(e.loadid,e.data.image,e.data.info):mf(this,Df).update(e.loadid,e.data.image,e.data.info),n=e.data.info;else if("state"===e.loadtype){const t=new ol;t.apply(this,t.fromJSON(e.data)),n="state"}mf(this,Af).call(this,{type:"loaditem",data:n,source:e.source,loadtype:e.loadtype,loadid:e.loadid,isfirstitem:e.isfirstitem}),"image"===e.loadtype&&0!==gf(this,bf,Wf).call(this,e.loadid).length&&t&&mf(this,yf).viewOnFirstLoadItem&&this.render(e.loadid)}}),Sf(this,Rf,{writable:!0,value:e=>{e.type="load",mf(this,Af).call(this,e)}}),Sf(this,Mf,{writable:!0,value:e=>{e.type="loadend",mf(this,Af).call(this,e)}}),Sf(this,qf,{writable:!0,value:e=>{e.type="loaderror",mf(this,Af).call(this,e)}}),Sf(this,Uf,{writable:!0,value:e=>{e.type="loadabort",mf(this,Af).call(this,e)}})}getImage(e){return mf(this,Df).get(e).image}getLastImage(){return mf(this,Df).get(mf(this,Df).length()-1).image}setImage(e,t){mf(this,Df).setImage(e,t)}setLastImage(e){mf(this,Df).setImage(mf(this,Df).length()-1,e)}addNewImage(e,t){const n=mf(this,Df).length();return mf(this,Af).call(this,{type:"loadstart",loadtype:"image",source:"internal",loadid:n}),mf(this,Df).addNew(n,e,t),mf(this,Af).call(this,{type:"loaditem",loadtype:"image",data:t,source:"internal",loadid:n,isfirstitem:!0}),mf(this,yf).viewOnFirstLoadItem&&this.render(n),mf(this,Af).call(this,{type:"load",loadtype:"image",source:"internal",loadid:n}),mf(this,Af).call(this,{type:"loadend",loadtype:"image",source:"internal",loadid:n}),n}getMetaData(e){return mf(this,Df).get(e).meta}getNumberOfLoadedData(){return mf(this,Df).length()}canScroll(){return mf(this,Cf).getActiveLayerGroup().getActiveViewLayer().getViewController().canScroll()}canWindowLevel(){return mf(this,Cf).getActiveLayerGroup().getActiveViewLayer().getViewController().canWindowLevel()}getAddedScale(){return mf(this,Cf).getActiveLayerGroup().getAddedScale()}getBaseScale(){return mf(this,Cf).getActiveLayerGroup().getBaseScale()}getOffset(){return mf(this,Cf).getActiveLayerGroup().getOffset()}getToolboxController(){return mf(this,vf)}getActiveLayerGroup(){return mf(this,Cf).getActiveLayerGroup()}getViewLayersByDataIndex(e){return mf(this,Cf).getViewLayersByDataIndex(e)}getDrawLayersByDataIndex(e){return mf(this,Cf).getDrawLayersByDataIndex(e)}getLayerGroupByDivId(e){return mf(this,Cf).getLayerGroupByDivId(e)}getNumberOfLayerGroups(){return mf(this,Cf).getNumberOfLayerGroups()}getStyle(){return mf(this,If)}init(e){if(pf(this,yf,e),void 0===mf(this,yf).viewOnFirstLoadItem&&(mf(this,yf).viewOnFirstLoadItem=!0),pf(this,Tf,new Tl),mf(this,Tf).addEventListener("undoadd",mf(this,Af)),mf(this,Tf).addEventListener("undo",mf(this,Af)),mf(this,Tf).addEventListener("redo",mf(this,Af)),mf(this,yf).tools&&0!==mf(this,yf).tools.length){const e={},t=Object.keys(mf(this,yf).tools);for(let n=0;n<t.length;++n){const i=t[n];if(void 0!==cf[i]){if(e[i]=new cf[i](this),void 0!==e[i].addEventListener){const t=e[i].getEventNames();for(let n=0;n<t.length;++n)e[i].addEventListener(t[n],mf(this,Af))}const t=mf(this,yf).tools[i];if(void 0!==t.options){let n="raw";void 0!==e[i].getOptionsType&&(n=e[i].getOptionsType());let r=t.options;if("instance"===n||"factory"===n){r={};for(let e=0;e<t.options.length;++e){const a=t.options[e];let o=a;"factory"===n&&(o+="Factory");const s=i.charAt(0).toLowerCase()+i.slice(1);void 0!==uf[s][o]?r[a]=uf[s][o]:Y.warn("Could not find option class for: "+a)}}e[i].setOptions(r)}}else Y.warn("Could not initialise unknown tool: "+i)}pf(this,vf,new kl(e))}pf(this,wf,new Wd(mf(this,yf).defaultCharacterSet)),mf(this,wf).onloadstart=mf(this,Of),mf(this,wf).onprogress=mf(this,Ff),mf(this,wf).onloaditem=mf(this,Ef),mf(this,wf).onload=mf(this,Rf),mf(this,wf).onloadend=mf(this,Mf),mf(this,wf).onerror=mf(this,qf),mf(this,wf).onabort=mf(this,Uf),pf(this,Df,new sS),pf(this,Cf,new Ms),void 0!==mf(this,yf).binders&&mf(this,Cf).setBinders(mf(this,yf).binders)}getElement(e){return null}reset(){mf(this,Df).reset(),mf(this,Cf).empty(),mf(this,Tf)&&(pf(this,Tf,new Tl),mf(this,Tf).addEventListener("undoadd",mf(this,Af)),mf(this,Tf).addEventListener("undo",mf(this,Af)),mf(this,Tf).addEventListener("redo",mf(this,Af)))}resetLayout(){mf(this,Cf).reset(),mf(this,Cf).draw()}addEventListener(e,t){mf(this,Lf).add(e,t)}removeEventListener(e,t){mf(this,Lf).remove(e,t)}abortLoad(){mf(this,wf).abort()}fitToContainer(){mf(this,Cf).syncLayerGroupScale()}initWLDisplay(){mf(this,Cf).getActiveLayerGroup().getActiveViewLayer().getViewController().initialise()}getDataViewConfig(){return mf(this,yf).dataViewConfigs}setDataViewConfig(e){mf(this,Cf).empty(),mf(this,yf).dataViewConfigs=e,gf(this,Pf,Vf).call(this,e)}setLayerGroupsBinders(e){const t=[];for(let n=0;n<e.length;++n)void 0!==Ls[e[n]]&&t.push(new Ls[e[n]]);mf(this,Cf).setBinders(t)}render(e){if(null==e)throw new Error("Cannot render without data index");0===mf(this,Cf).getNumberOfLayerGroups()&&gf(this,Pf,Vf).call(this,mf(this,yf).dataViewConfigs);const t=gf(this,bf,Wf).call(this,e);if(0!==t.length)for(let n=0;n<t.length;++n){const i=t[n],r=mf(this,Cf).getLayerGroupByDivId(i.divId);if(!r)throw new Error("No layer group for "+i.divId);0===r.getViewLayersByDataIndex(e).length&&(0===r.getNumberOfLayers()?gf(this,kf,zf).call(this,e,i):gf(this,Bf,Hf).call(this,e,i)),r.draw()}else Y.info("Not rendering data: "+e+" (no data view config)")}zoom(e,t,n){const i=mf(this,Cf).getActiveLayerGroup(),r=i.getActiveViewLayer().getViewController().getCurrentScrollPosition(),a=new gn(t,n,r);i.addScale(e,a),i.draw()}translate(e,t){const n=mf(this,Cf).getActiveLayerGroup();n.addTranslation({x:e,y:t}),n.draw()}setOpacity(e){const t=mf(this,Cf).getActiveLayerGroup().getActiveViewLayer();t.setOpacity(e),t.draw()}setDrawings(e,t){const n=mf(this,Cf).getActiveLayerGroup(),i=n.getActiveViewLayer().getViewController(),r=n.getActiveDrawLayer().getDrawController();r.setDrawings(e,t,mf(this,Af),this.addToUndoStack),r.activateDrawLayer(i.getCurrentOrientedIndex(),i.getScrollIndex())}getState(){return(new ol).toJSON(this)}resetDisplay(){this.resetLayout(),this.initWLDisplay()}resetZoom(){this.resetLayout()}setColourMap(e){mf(this,Cf).getActiveLayerGroup().getActiveViewLayer().getViewController().setColourMapFromName(e)}setWindowLevelPreset(e){mf(this,Cf).getActiveLayerGroup().getActiveViewLayer().getViewController().setWindowLevelPreset(e)}setTool(e){for(let t=0;t<mf(this,Cf).getNumberOfLayerGroups();++t){const n=mf(this,Cf).getLayerGroup(t);let i=null;i="Draw"===e||"Livewire"===e||"Floodfill"===e?n.getActiveDrawLayer():n.getActiveViewLayer(),i&&mf(this,vf).bindLayer(i,n.getDivId())}mf(this,vf).setSelectedTool(e)}setToolFeatures(e){mf(this,vf).setToolFeatures(e)}undo(){mf(this,Tf).undo()}redo(){mf(this,Tf).redo()}getStackSize(){return mf(this,Tf).getStackSize()}getCurrentStackIndex(){return mf(this,Tf).getCurrentStackIndex()}}function Wf(e){if(null===mf(this,yf).dataViewConfigs||void 0===mf(this,yf).dataViewConfigs)throw new Error("No available data view configuration");let t=[];return void 0!==mf(this,yf).dataViewConfigs["*"]?t=mf(this,yf).dataViewConfigs["*"]:void 0!==mf(this,yf).dataViewConfigs[e]&&(t=mf(this,yf).dataViewConfigs[e]),t}function Vf(e){const t=Object.keys(e),n=[];for(let i=0;i<t.length;++i){const r=e[t[i]];for(let e=0;e<r.length;++e){const t=r[e];if(!n.includes(t.divId)){const e=document.getElementById(t.divId),i=mf(this,Cf).addLayerGroup(e);gf(this,Qf,Gf).call(this,i),void 0!==t.orientation&&i.setTargetOrientation(rn(t.orientation)),n.push(t.divId)}}}}function Gf(e){e.addEventListener("zoomchange",mf(this,Af)),e.addEventListener("offsetchange",mf(this,Af)),e.addEventListener("renderstart",mf(this,Af)),e.addEventListener("renderend",mf(this,Af));for(let t=0;t<An.length;++t)e.addEventListener(An[t],mf(this,Af));mf(this,vf)&&mf(this,vf).hasTool("Draw")&&(e.addEventListener("drawcreate",mf(this,Af)),e.addEventListener("drawdelete",mf(this,Af)))}function zf(e,t){gf(this,Bf,Hf).call(this,e,t),mf(this,vf)&&mf(this,vf).init()}function Hf(e,t){const n=mf(this,Df).get(e);if(!n)throw new Error("Cannot initialise layer with data id: "+e);const i=mf(this,Cf).getLayerGroupByDivId(t.divId);if(!i)throw new Error("Cannot initialise layer with group id: "+t.divId);const r=n.image.getGeometry();mf(this,Cf).unbindLayerGroups();const a=(new Vn).create(n.meta,n.image),o=function(e,t){let n=tn();return void 0!==t&&(n=e.asOneAndZeros().getInverse().multiply(t)),n.getAbs()}(r.getOrientation(),i.getTargetOrientation());a.setOrientation(o),"SEG"===n.image.getMeta().Modality&&a.setAlphaFunction((function(e){return 0===e[0]&&0===e[1]&&0===e[2]?0:255})),void 0!==t.colourMap&&a.setColourMap(t.colourMap);const s=0===i.getNumberOfLayers();let l=1;s||(l=.5,void 0===t.colourMap&&a.setColourMap(gt.rainbow));const c=i.addViewLayer();c.setView(a,e);const u=r.getSize(o).get2D(),h=r.getSpacing(o).get2D();c.initialise(u,h,l);const d=c.getViewController();let S;"SEG"===n.image.getMeta().Modality&&(d.addEventListener("masksegmentdelete",mf(this,Af)),d.addEventListener("masksegmentredraw",mf(this,Af))),mf(this,Df).addEventListener("imageset",c.onimageset),mf(this,Df).addEventListener("imagechange",(e=>{c.onimagechange(e),this.render(e.dataid)})),mf(this,Cf).bindLayerGroups(),mf(this,vf)&&mf(this,vf).bindLayer(c,i.getDivId()),mf(this,vf)&&mf(this,vf).hasTool("Draw")&&(S=i.addDrawLayer(),S.initialise(u,h,e),S.setPlaneHelper(c.getViewController().getPlaneHelper()));const x=[d.getCurrentIndex().getValues(),d.getCurrentPosition().getValues()];i.updateLayersToPositionChange({value:x,srclayerid:c.getId()}),mf(this,Cf).syncLayerGroupScale();const g=r.getOrientation().getThirdColMajorDirection();c.setOffset(i.getOffset()),void 0!==t.orientation&&(2===g?"axial"!==t.orientation&&(c.addFlipOffsetY(),void 0!==S&&S.addFlipOffsetY()):0===g&&"sagittal"!==t.orientation&&(c.addFlipOffsetX(),void 0!==S&&S.addFlipOffsetX())),s?void 0!==t.orientation?0===g||2===g?i.flipScaleZ():(c.setScale(i.getScale()),void 0!==S&&S.setScale(i.getScale())):0===g?i.flipScaleZ():(c.setScale(i.getScale()),void 0!==S&&S.setScale(i.getScale())):(c.setScale(i.getScale()),void 0!==S&&S.setScale(i.getScale()))}const jf={getUID:Ee,getElementsFromJSONTags:function e(t){const n=Object.keys(t),i={};for(let r=0,a=n.length;r<a;++r){const a=w(n[r]);if(!a)continue;const o=a.getVrFromDictionary();let s,l=!1;const c=t[n[r]];if("SQ"===o){const t=[];if(void 0!==c.undefinedLength&&(l=c.undefinedLength),void 0!==c.value&&null!==c.value)for(let n=0;n<c.value.length;++n)t.push(e(c.value[n]));else Y.trace("Undefined or null jsonTag SQ value.");s=t}else s=Array.isArray(c)?c:[c];const u={tag:a,vr:o,value:s};l&&(u.undefinedLength=l),i[a.getKey()]=u}return i},getTypedArray:Se,getPixelDataTag:D,dictionary:e,DicomParser:ye,DicomWriter:class{constructor(){var e,t,n;be(this,Qe,{writable:!0,value:!1}),be(this,ke,{writable:!0,value:{copy:function(e){return e},remove:function(){return null},clear:function(e){return e.value=[],e},replace:function(e,t){return e.value=[t],e}}}),be(this,Be,{writable:!0,value:{default:{action:"copy",value:null}}}),be(this,Ne,{writable:!0,value:Pe(this,Be)}),be(this,We,{writable:!0,value:new Ue}),be(this,Ve,{writable:!0,value:Pe(this,We)}),e=this,n={default:{action:"remove",value:null},PatientName:{action:"replace",value:"Anonymized"},"Meta Element":{action:"copy",value:null},Acquisition:{action:"copy",value:null},"Image Presentation":{action:"copy",value:null},Procedure:{action:"copy",value:null},"Pixel Data":{action:"copy",value:null}},(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t="anonymisationRules"))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}setUseUnVrForPrivateSq(e){Ae(this,Qe,e)}setRules(e){Ae(this,Ne,e)}encodeString(e){return Pe(this,We).encode(e)}encodeSpecialString(e){return Pe(this,Ve).encode(e)}useSpecialTextEncoder(){Ae(this,Ve,new TextEncoder)}getElementToWrite(e){const t=e.tag.getGroupName(),n=e.tag.getNameFromDictionary();let i;return i=void 0!==Pe(this,Ne)[e.tag.getKey()]?Pe(this,Ne)[e.tag.getKey()]:null!==n&&void 0!==Pe(this,Ne)[n]?Pe(this,Ne)[n]:void 0!==Pe(this,Ne)[t]?Pe(this,Ne)[t]:Pe(this,Ne).default,Pe(this,ke)[i.action](e,i.value)}writeDataElementItems(e,t,n,i){let r=null;for(let a=0;a<n.length;++a){r=n[a];const o=Object.keys(r);if(0===o.length)continue;let s=!1;void 0!==r.xFFFEE000.undefinedLength&&(s=r.xFFFEE000.undefinedLength);const l={tag:x(),vr:"NONE",vl:s?4294967295:r.xFFFEE000.vl,value:[]};t=this.writeDataElement(e,l,t,i);for(let n=0;n<o.length;++n)"xFFFEE000"!==o[n]&&"xFFFEE00D"!==o[n]&&(t=this.writeDataElement(e,r[o[n]],t,i));if(s){const n={tag:p(),vr:"NONE",vl:0,value:[]};t=this.writeDataElement(e,n,t,i)}}return t}writeDataElementValue(e,t,n,i,a){const o=n;if("NONE"===t.vr);else if(i instanceof Uint8Array)n=i.length===8*t.vl?e.writeBinaryArray(n,i):e.writeUint8Array(n,i);else if(i instanceof Int8Array)n=e.writeInt8Array(n,i);else if(i instanceof Uint16Array)n=e.writeUint16Array(n,i);else if(i instanceof Int16Array)n=e.writeInt16Array(n,i);else if(i instanceof Uint32Array)n=e.writeUint32Array(n,i);else if(i instanceof Int32Array)n=e.writeInt32Array(n,i);else if(i instanceof BigUint64Array)n=e.writeUint64Array(n,i);else if(i instanceof BigInt64Array)n=e.writeInt64Array(n,i);else{const o=r[t.vr];if(void 0!==o)if("Uint8"===o)n=e.writeUint8Array(n,i);else if("Uint16"===o)n=e.writeUint16Array(n,i);else if("Int16"===o)n=e.writeInt16Array(n,i);else if("Uint32"===o)n=e.writeUint32Array(n,i);else if("Int32"===o)n=e.writeInt32Array(n,i);else if("Uint64"===o)n=e.writeUint64Array(n,i);else if("Int64"===o)n=e.writeInt64Array(n,i);else if("Float32"===o)n=e.writeFloat32Array(n,i);else if("Float64"===o)n=e.writeFloat64Array(n,i);else{if("string"!==o)throw Error("Unknown VR type: "+o);n=e.writeUint8Array(n,i)}else if("SQ"===t.vr)n=this.writeDataElementItems(e,n,i,a);else if("AT"===t.vr)for(let t=0;t<i.length;++t){const r=i[t]+"",a=r.substring(1,5),o=r.substring(6,10),s=parseInt(a,16),l=parseInt(o,16),c=new Uint16Array([s,l]);n=e.writeUint16Array(n,c)}else Y.warn("Unknown VR: "+t.vr)}if("SQ"!==t.vr&&"NONE"!==t.vr){const e=n-o;e!==t.vl&&Y.warn("Offset difference and VL are not equal: "+e+" != "+t.vl+", vr:"+t.vr)}return n}writePixelDataElementValue(e,t,n,i,r){let a=!1;if(void 0!==t.undefinedLength&&(a=t.undefinedLength),a){const a={};a.xFFFEE000={tag:x(),vr:"NONE",vl:0,value:[]};for(let e=0;e<i.length;++e)a[e]={tag:x(),vr:t.vr,vl:i[e].length,value:i[e]};n=this.writeDataElementItems(e,n,[a],r)}else{let a=i[0];i.length>1&&(a=function(e){const t=e.length,n=e[0].length;if(void 0===n)return e;const i=t*n,r=new e[0].constructor(i);for(let i=0;i<t;i++){const t=i*n;r.set(e[i],t)}return r}(i)),n=this.writeDataElementValue(e,t,n,a,r)}return n}writeDataElement(e,t,n,i){const r=t.tag.isWithVR(),a=!(!i&&r)||xe(t.vr);n=e.writeHex(n,t.tag.getGroup()),n=e.writeHex(n,t.tag.getElement());let o=t.vr;Pe(this,Qe)&&t.tag.isPrivate()&&"SQ"===o&&(Y.warn("Write element using VR=UN for private sequence."),o="UN"),r&&!i&&(n=e.writeUint8Array(n,this.encodeString(o)),a&&(n+=2));let s=!1;("SQ"===t.vr||v(t.tag))&&void 0!==t.undefinedLength&&(s=t.undefinedLength);let l=!1;g(t.tag)&&void 0!==t.undefinedLength&&(l=t.undefinedLength);let c=t.vl;(s||l)&&(c=4294967295),n=a?e.writeUint32(n,c):e.writeUint16(n,c);let u=t.value;if(void 0===u&&(u=[]),n=v(t.tag)?this.writePixelDataElementValue(e,t,n,u,i):this.writeDataElementValue(e,t,n,u,i),s){const t={tag:f(),vr:"NONE",vl:0,value:[]};n=this.writeDataElement(e,t,n,i)}return n}getBuffer(e){const t=re(e.x00020010.value[0]),n=oe(t),i=se(t);if(void 0!==e.x00080005){const t=re(e.x00080005.value[0]);void 0!==t&&"ISO-IR 6"!==t&&(Y.debug("Change charset to UTF, was: "+t),this.useSpecialTextEncoder(),e.x00080005.value=["ISO_IR 192"])}let r;void 0!==e.x00280100&&(r=e.x00280100.value[0]);let a=132,o=0;const s=[],l=[];let c,u,h=0;const d=new S("0x0002","0x0000"),x=new S("0x0002","0x0001"),g=new S("0x0002","0x0012"),p=new S("0x0002","0x0013"),m=Object.keys(e);for(let t=0,i=m.length;t<i;++t)c=this.getElementToWrite(e[m[t]]),null===c||d.equals(c.tag)||x.equals(c.tag)||g.equals(c.tag)||p.equals(c.tag)||(o=0,Ge(c),this.setElementValue(c,c.value,n,r),u=c.tag.getGroupName(),o+=ge(c.vr,"Meta Element"!==u&&n),o+=c.vl,"Meta Element"===u?(s.push(c),h+=o):l.push(c),a+=o);const f=ze("FileMetaInformationVersion");let y=ge(f.vr,!1);y+=this.setElementValue(f,[0,1],!1),s.push(f),h+=y,a+=y;const D=ze("ImplementationClassUID");let v=ge(D.vr,!1);v+=this.setElementValue(D,[Ee("ImplementationClassUID")],!1),s.push(D),h+=v,a+=v;const w=ze("ImplementationVersionName");let C=ge(w.vr,!1);C+=this.setElementValue(w,["DWV_0.32.0-beta.0"],!1),s.push(w),h+=C,a+=C;const T=function(e,t){return function(e,t){let n=parseInt(e.getGroup())-parseInt(t.getGroup());return 0===n&&(n=parseInt(e.getElement())-parseInt(t.getElement())),n}(e.tag,t.tag)};s.sort(T),l.sort(T);const I=ze("FileMetaInformationGroupLength");let L=ge(I.vr,!1);L+=this.setElementValue(I,new Uint32Array([h]),!1),a+=L;const b=new ArrayBuffer(a),P=new Le(b),A=new Le(b,!i);let O=128;O=P.writeUint8Array(O,this.encodeString("DICM")),O=this.writeDataElement(P,I,O,!1);for(let e=0,t=s.length;e<t;++e)O=this.writeDataElement(P,s[e],O,!1);const F=132+L+h;O!==F&&Y.warn("Bad size calculation... meta offset: "+O+", calculated size:"+F+" (diff:"+(O-F)+")");for(let e=0,t=l.length;e<t;++e)O=this.writeDataElement(A,l[e],O,n);return O!==a&&Y.warn("Bad size calculation... final offset: "+O+", calculated size:"+a+" (diff:"+(O-a)+")"),b}setElementValue(e,t,n,a){let o=0;if("SQ"===e.vr){if(null!==t&&0!==t){const i=[];let r,s=!1;void 0!==e.undefinedLength&&(s=e.undefinedLength,delete e.undefinedLength);for(let e=0;e<t.length;++e){const l=t[e],c={};let u=0;if(null===l||0===l)continue;const h=Object.keys(l);for(let e=0,t=h.length;e<t;++e){const t=h[e],i=l[t];g(i.tag)||(u+=this.setElementValue(i,i.value,n,a),c[t]=i,u+=ge(i.vr,n))}const d={tag:x(),vr:"NONE",vl:u,value:[]};s&&(d.undefinedLength=s),r=d.tag.getKey(),c[r]=d,u+=ge(d.vr,n),s&&(u+=ge("NONE",n)),o+=u,i.push(c)}s&&(o+=ge("NONE",n)),e.value=i,e.vl=o,s&&(e.undefinedLength=s)}}else{if(Me(s=e.vr)||"OB"===s){let n=function(e){let t=0;return Me(e)&&(t="UI"===e?"\0":" "),t}(e.vr);Me(e.vr)?(i.includes(e.vr)?(t=this.encodeSpecialString(t.join("\\")),n=this.encodeSpecialString(n)):(t=this.encodeString(t.join("\\")),n=this.encodeString(n)),Re(t.length)||(t=qe(t,n))):"OB"===e.vr&&(t=function(e){if(null==e||void 0===e.length)throw new Error("Cannot pad undefined or null OB value.");if(0!==e.length&&void 0!==e[0].length){let t=0;for(let n=0;n<e.length;++n)t+=e[n].length;Re(t)||(e[e.length-1]=qe(e[e.length-1],0))}else Re(e.length)||(e=qe(e,0));return e}(t))}if(o=0,"AT"===e.vr)o=4*t.length;else if("xs"===e.vr)o=t.length*Uint16Array.BYTES_PER_ELEMENT;else if(function(e){const t=r[e];return void 0!==t&&"string"!==t}(e.vr)||"ox"===e.vr){if(v(e.tag)&&Array.isArray(t)){o=0;for(let e=0;e<t.length;++e)o+=t[e].length}else o=t.length;const i=r[e.vr];if(v(e.tag)||"ox"===e.vr)if(e.undefinedLength){const e=ge("NONE",n);o+=e,o+=e*t.length,o+=e}else void 0!==a&&(1===a?o/=8:16===a&&(o*=Uint16Array.BYTES_PER_ELEMENT));else{if(void 0===i)throw Error("Unsupported element: "+e.vr);{const e=function(e){let t;return"Uint8"===e?t=Uint8Array.BYTES_PER_ELEMENT:"Uint16"===e?t=Uint16Array.BYTES_PER_ELEMENT:"Int16"===e?t=Int16Array.BYTES_PER_ELEMENT:"Uint32"===e?t=Uint32Array.BYTES_PER_ELEMENT:"Int32"===e?t=Int32Array.BYTES_PER_ELEMENT:"Float32"===e?t=Float32Array.BYTES_PER_ELEMENT:"Float64"===e?t=Float64Array.BYTES_PER_ELEMENT:"Uint64"===e?t=BigUint64Array.BYTES_PER_ELEMENT:"Int64"===e&&(t=BigInt64Array.BYTES_PER_ELEMENT),t}(i);if(void 0===e)throw Error("Unknown bytes per element for VR type: "+i);o*=e}}}else o=t.length;e.value=t,e.vl=o}var s;return o}}},Xf={customUI:Or},Yf={decoderScripts:du,lut:gt},_f={Point:mn},Kf={defaultPresets:wt},Zf={loadFromUri:function(e,t,n){const i=function(e){const t=ic(e);return 0===Object.keys(t).length?null:t.query}(e);i&&void 0!==i.input&&function(e,t,n){(function(e,t,n){e.type&&"manifest"===e.type?function(e,t){let n="";"/"===e.input[0]&&(n=window.location.protocol+"//"+window.location.host),n+=e.input;const i=new XMLHttpRequest;i.open("GET",decodeURIComponent(n),!0),i.responseType="document",i.onload=function(){t(function(e,t){const n=[],i=e.getElementsByTagName("wado_query")[0].getAttribute("wadoURL")+"?requestType=WADO&contentType=application/dicom&",r=e.getElementsByTagName("Patient");r.length>1&&Y.warn("More than one patient, loading first one.");const a=r[0].getElementsByTagName("Study");a.length>1&&Y.warn("More than one study, loading first one.");const o=a[0].getAttribute("StudyInstanceUID"),s=a[0].getElementsByTagName("Series");s.length>1&&Y.warn("More than one series, loading first one.");const l=s[0].getAttribute("SeriesInstanceUID"),c=s[0].getElementsByTagName("Instance");let u=c.length;t<u&&(u=t);for(let e=0;e<u;++e){const t=i+"&studyUID="+o+"&seriesUID="+l+"&objectUID="+c[e].getAttribute("SOPInstanceUID");n.push(t)}return n}(this.responseXML,e.nslices))},i.onerror=function(){Y.warn("RequestError while receiving manifest: "+this.status)},i.send(null)}(e,t):t(function(e,t){const n=[];let i="key";t&&(i=t);const r=decodeURIComponent(e),a=ic(r);if(0===Object.keys(a).length)n.push(r);else{const e=Object.keys(a.query);let t=null;for(let n=0;n<e.length;++n)if(a.query[e[n]]instanceof Array){t=e[n];break}if(t){const r=a.query[t];let o=a.base;""!==o&&"file"!==t&&(o+="?");let s,l=!1;for(let n=0;n<e.length;++n)e[n]!==t&&(l&&(o+="&"),o+=e[n]+"="+a.query[e[n]],l=!0);for(let e=0;e<r.length;++e)s=o,l&&(s+="&"),"key"===i&&(s+=t+"="),s+=r[e],n.push(s)}else n.push(r)}return n}(e.input,e.dwvReplaceMode),n)})(e,t.loadURLs,n),void 0!==e.state&&t.addEventListener("loadend",(function n(){t.removeEventListener("loadend",n),t.loadURLs([e.state])}))}(i,t,n)},precisionRound:Ia,buildMultipart:function(e,t){const n="\r\n";let i=0;const r=[];for(let a=0;a<e.length;++a){let o="";0!==a&&(o+=n),o+="--"+t+n;const s=Object.keys(e[a]);for(let t=0;t<s.length;++t){const i=s[t];"data"!==i&&(o+=i+": "+e[a][i]+n)}o+=n;const l=Ta(o);r.push(l),i+=l.byteLength+e[a].data.byteLength}const a=Ta("\r\n--"+t+"--"+n),o=new Uint8Array(i+a.byteLength);let s=0;for(let t=0;t<e.length;++t)o.set(r[t],s),s+=r[t].byteLength,o.set(new Uint8Array(e[t].data),s),s+=e[t].data.byteLength;return o.set(a,s),o}}}(),o}()}));
//# sourceMappingURL=dwv.min.js.map